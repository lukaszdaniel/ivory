# Russian translations for R
# Русский перевод для R
#
# Copyright (C) 2007 The R Foundation
# This file is distributed under the same license as the R package.
# Alexey Shipunov <dactylorhiza@gmail.com> 2009
#
msgid ""
msgstr ""
"Project-Id-Version: R 2.10.0\n"
"Report-Msgid-Bugs-To: bugs@r-project.org\n"
"POT-Creation-Date: 2015-02-13 16:25\n"
"PO-Revision-Date: 2015-01-17 16:02+0100\n"
"Last-Translator: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language-Team: Russian\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"X-Generator: Poedit 1.5.4\n"
"X-Poedit-SourceCharset: UTF-8\n"

#. R/bootfuns.q: gettextf("%s distribution not supported: using normal instead", sQuote(qdist))
#: R/bootfuns.q:0
#, fuzzy
msgid "%s distribution not supported: using normal instead"
msgstr "распределение не поддерживается, использую нормальное"

#. R/bootfuns.q: stop("'F.surv' is required but missing")
#: R/bootfuns.q:0
msgid "'F.surv' is required but missing"
msgstr "'F.surv' требуется, но пропущен"

#. R/bootfuns.q: stop("'G.surv' is required but missing")
#: R/bootfuns.q:0
msgid "'G.surv' is required but missing"
msgstr "'G.surv' требуется, но пропущен"

#. R/bootfuns.q: gettextf("'K' has been set to %f", K)
#: R/bootfuns.q:0
msgid "'K' has been set to %f"
msgstr "'K' установлен в %f"

#. R/bootfuns.q: stop("'K' outside allowable range")
#: R/bootfuns.q:0
msgid "'K' outside allowable range"
msgstr "'K' вне допустимого промежутка"

#. R/bootfuns.q: stop("'R' and 'alpha' have incompatible lengths")
#: R/bootfuns.q:0
msgid "'R' and 'alpha' have incompatible lengths"
msgstr "'R' и 'alpha' должны иметь совместимые длины"

#. R/bootfuns.q: stop("'R' and 'theta' have incompatible lengths")
#: R/bootfuns.q:0
msgid "'R' and 'theta' have incompatible lengths"
msgstr "у 'R' и 'theta' -- несовместимые длины"

#. R/bootfuns.q: stop("'R' must be positive")
#: R/bootfuns.q:0
msgid "'R' must be positive"
msgstr "'R' должен быть положительным"

#. R/bootfuns.q: warning("'alpha' ignored; R[1L] = 0")
#: R/bootfuns.q:0
#, fuzzy
msgid "'alpha' ignored; R[1L] = 0"
msgstr "'alpha' пропущен; R[1L]=0"

#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")
#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")
#: R/bootfuns.q:0
#, fuzzy
msgid "'data' must be a matrix with at least 2 columns"
msgstr "данные должны быть матрицей по меньшей мере из 2 колонок"

#. R/bootfuns.q: stop("'index' must contain 2 elements")
#: R/bootfuns.q:0
#, fuzzy
msgid "'index' must contain 2 elements"
msgstr "индекс должен содержать 2 элемента"

#. R/bootfuns.q: warning("'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so ignored")
#: R/bootfuns.q:0
msgid ""
"'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so "
"ignored"
msgstr ""
"'simple=TRUE' правильно только для 'sim=\"ordinary\", stype=\"i\", n=0, "
"поэтому пропускается"

#. R/bootfuns.q: stop("'strata' of wrong length")
#: R/bootfuns.q:0
msgid "'strata' of wrong length"
msgstr "'strata' неправильной длины"

#. R/bootfuns.q: stop("'stype' must be \"w\" for type=\"inf\"")
#: R/bootfuns.q:0
msgid "'stype' must be \"w\" for type=\"inf\""
msgstr "'stype' должен быть \"w\" для type=\"inf\""

#. R/bootfuns.q: stop("'t' and 't0' must be supplied together")
#: R/bootfuns.q:0
msgid "'t' and 't0' must be supplied together"
msgstr "'t' и 't0' должны быть указаны вместе"

#. R/bootfuns.q: gettextf("'t' must of length %d", boot.out$R)
#: R/bootfuns.q:0
msgid "'t' must of length %d"
msgstr "'t' должен быть длиной %d"

#. R/bootfuns.q: stop("'theta' must be supplied if R[1L] = 0")
#: R/bootfuns.q:0
#, fuzzy
msgid "'theta' must be supplied if R[1L] = 0"
msgstr "надо указать 'theta', если R[1L] = 0"

#. R/bootfuns.q: stop("'theta' or 'lambda' required")
#: R/bootfuns.q:0
msgid "'theta' or 'lambda' required"
msgstr "требуется 'theta' или 'lambda'"

#. R/bootfuns.q: stop("'u' must be a function")
#: R/bootfuns.q:0
msgid "'u' must be a function"
msgstr "'u' должна быть функцией"

#. R/bootfuns.q: stop("0 elements not allowed in 'q'")
#: R/bootfuns.q:0
msgid "0 elements not allowed in 'q'"
msgstr "0 элементов в 'q' не разрешено"

#. R/bootfuns.q: gettext("0 will terminate the function", domain = "R-boot")
#: R/bootfuns.q:0
msgid "0 will terminate the function"
msgstr ""

#. R/bootfuns.q: gettext("5, 10, 16, 50, 84, 90, 95 percentiles of (T*-t)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "5, 10, 16, 50, 84, 90, 95 percentiles of (T*-t)"
msgstr ""

#. R/bootfuns.q: gettext("ANTITHETIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "ANTITHETIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettextf("All values of t are equal to %s", mean(t, na.rm = TRUE), domain = "R-boot")
#: R/bootfuns.q:0
msgid "All values of t are equal to %s"
msgstr ""

#. R/bootfuns.q: gettextf("All values of t* are equal to %s", mean(t, na.rm = TRUE))
#: R/bootfuns.q:0
msgid "All values of t* are equal to %s"
msgstr ""

#. R/bootfuns.q: gettextf("Average Block Length of %s", boot.out$l, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Average Block Length of %s"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED TILTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED TILTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("      BCa          ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BCa"
msgstr ""

#. R/bootfuns.q: warning("BCa intervals not defined for time series bootstraps")
#: R/bootfuns.q:0
#, fuzzy
msgid "BCa intervals not defined for time series bootstraps"
msgstr "BCa интервалы не определены для бутстрепа временных рядов."

#. R/bootfuns.q: gettext("BLOCK BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BLOCK BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS"
msgstr ""

#. R/bootfuns.q: gettextf("Based on %d bootstrap replicates", R, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Based on %d bootstrap replicates"
msgstr ""

#. R/bootfuns.q: gettext("     Basic         ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Basic"
msgstr ""

#. R/bootfuns.q: gettext("Bootstrap Statistics:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Bootstrap Statistics:"
msgstr ""

#. R/bootfuns.q: gettext("CALL:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CALL:"
msgstr ""

#. R/bootfuns.q: gettext("CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("CONDITIONAL BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CONDITIONAL BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("Calculations and Intervals on Original Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations and Intervals on Original Scale"
msgstr ""

#. R/bootfuns.q: gettext("Calculations and Intervals on Transformed Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations and Intervals on Transformed Scale"
msgstr ""

#. R/bootfuns.q: gettext("Calculations on Original Scale but Intervals Transformed", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations on Original Scale but Intervals Transformed"
msgstr ""

#. R/bootfuns.q: gettext("Calculations on Transformed Scale; Intervals on Original Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations on Transformed Scale; Intervals on Original Scale"
msgstr ""

#. R/bootfuns.q: gettext("Call:", domain = "R-boot")
#. R/bootfuns.q: gettext("Call: ", domain = "R-boot")
#. R/bootfuns.q: gettext("Call:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Call:"
msgstr ""

#. R/bootfuns.q: gettext("Cannot calculate confidence intervals", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Cannot calculate confidence intervals"
msgstr ""

#. R/bootfuns.q: gettext("Case", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Case"
msgstr ""

#. R/bootfuns.q: gettext("Cook statistic", domain = "R-boot")
#. R/bootfuns.q: gettext("Cook statistic", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Cook statistic"
msgstr ""

#. R/bootfuns.q: gettext("DATA PERMUTATION", domain = "R-boot")
#: R/bootfuns.q:0
msgid "DATA PERMUTATION"
msgstr ""

#. R/bootfuns.q: gettext("Exponential tilting used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Exponential tilting used"
msgstr ""

#. R/bootfuns.q: gettextf("Fixed Block Length of %s", boot.out$l, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Fixed Block Length of %s"
msgstr ""

#. R/bootfuns.q: gettext("Frequency Smoothing used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Frequency Smoothing used"
msgstr ""

#. R/bootfuns.q: gettextf("Interactive Identification for screen %d", num, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Interactive Identification for screen %d"
msgstr ""

#. R/bootfuns.q: gettext("Intervals:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Intervals:"
msgstr ""

#. R/bootfuns.q: gettext("Iteration limit exceeded without finding solution", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Iteration limit exceeded without finding solution"
msgstr ""

#. R/bootfuns.q: gettext("Level", domain = "R-boot")
#. R/bootfuns.q: gettext("Level", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Level"
msgstr ""

#. R/bootfuns.q: gettext("Linear Programming Results", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Linear Programming Results"
msgstr ""

#. R/bootfuns.q: gettext("Linear predictor", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Linear predictor"
msgstr ""

#. R/bootfuns.q: gettext("Lugananni-Rice approximations used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Lugananni-Rice approximations used"
msgstr ""

#. R/bootfuns.q: gettext("MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("MODEL BASED BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "MODEL BASED BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("Maximization Problem with Objective Function Coefficients", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Maximization Problem with Objective Function Coefficients"
msgstr ""

#. R/bootfuns.q: gettext("Minimization Problem with Objective Function Coefficients", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Minimization Problem with Objective Function Coefficients"
msgstr ""

#. R/bootfuns.q: gettext("No feasible solution could be found", domain = "R-boot")
#: R/bootfuns.q:0
msgid "No feasible solution could be found"
msgstr ""

#. R/bootfuns.q: gettext("     Normal        ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Normal"
msgstr ""

#. R/bootfuns.q: gettext("Normal margins used.", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Normal margins used."
msgstr ""

#. R/bootfuns.q: gettext("ORDINARY NONPARAMETRIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "ORDINARY NONPARAMETRIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("Observed margins used.", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Observed margins used."
msgstr ""

#. R/bootfuns.q: gettext("Optimal solution has the following values", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Optimal solution has the following values"
msgstr ""

#. R/bootfuns.q: gettext("Ordered deviance residuals")
#: R/bootfuns.q:0
msgid "Ordered deviance residuals"
msgstr ""

#. R/bootfuns.q: gettext("PARAMETRIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "PARAMETRIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("PHASE SCRAMBLED BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "PHASE SCRAMBLED BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("POST-BLACKENED BLOCK BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "POST-BLACKENED BLOCK BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("POST-BLACKENED STATIONARY BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "POST-BLACKENED STATIONARY BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("    Percentile     ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Percentile"
msgstr ""

#. R/bootfuns.q: gettext("Percentiles of (T*-t)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Percentiles of (T*-t)"
msgstr ""

#. R/bootfuns.q: gettext("Please Input a screen number (1,2,3 or 4)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Please Input a screen number (1,2,3 or 4)"
msgstr ""

#. R/bootfuns.q: gettextf("Quantiles of Chi-squared(%d)", df)
#: R/bootfuns.q:0
msgid "Quantiles of Chi-squared(%d)"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of Standard Normal")
#: R/bootfuns.q:0
msgid "Quantiles of Standard Normal"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of standard normal")
#: R/bootfuns.q:0
msgid "Quantiles of standard normal"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of the Distribution", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Quantiles of the Distribution"
msgstr ""

#. R/bootfuns.q: stop("R[1L] must be positive for frequency smoothing")
#: R/bootfuns.q:0
msgid "R[1L] must be positive for frequency smoothing"
msgstr "R[1L] должен быть положительным для частотного сглаживания"

#. R/bootfuns.q: gettext("Residuals", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Residuals"
msgstr ""

#. R/bootfuns.q: gettext("STATIONARY BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STATIONARY BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED ANTITHETIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED ANTITHETIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CONDITIONAL BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CONDITIONAL BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED DATA PERMUTATION", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED DATA PERMUTATION"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIGHTED BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIGHTED BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIRD BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIRD BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("Saddlepoint Distribution Approximations", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Saddlepoint Distribution Approximations"
msgstr ""

#. R/bootfuns.q: gettextf("Smoothing spline used %d points in the range %s to %s.", nrow(sad.d$points),     rg[1L], rg[2L], domain = "R-boot")
#: R/bootfuns.q:0
msgid "Smoothing spline used %d points in the range %s to %s."
msgstr ""

#. R/bootfuns.q: gettext("Some BCa intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some BCa intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some basic intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some basic intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some percentile intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some percentile intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some studentized intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some studentized intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("   Studentized     ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Studentized"
msgstr ""

#. R/bootfuns.q: gettext("TILTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "TILTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("TIME SERIES BOOTSTRAP USING SUPPLIED INDICES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "TIME SERIES BOOTSTRAP USING SUPPLIED INDICES"
msgstr ""

#. R/bootfuns.q: gettext("The coefficient values at termination were", domain = "R-boot")
#: R/bootfuns.q:0
msgid "The coefficient values at termination were"
msgstr ""

#. R/bootfuns.q: gettextf("The objective function value was %s.", simp.out$value, domain = "R-boot")
#: R/bootfuns.q:0
msgid "The objective function value was %s."
msgstr ""

#. R/bootfuns.q: gettextf("The optimal value of the objective function is %s.", simp.out$value, domain = "R-boot")
#: R/bootfuns.q:0
msgid "The optimal value of the objective function is %s."
msgstr ""

#. R/bootfuns.q: gettextf("WARNING: All values of %s are NA", paste("t", j, "*", sep = ""), domain = "R-boot")
#: R/bootfuns.q:0
msgid "WARNING: All values of %s are NA"
msgstr ""

#. R/bootfuns.q: gettext("WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("WEIRD BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "WEIRD BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("Warning: BCa Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: BCa Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Basic Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Basic Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Percentile Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Percentile Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Studentized Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Studentized Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: stop("arguments are not all the same type of \"boot\" object")
#: R/bootfuns.q:0
msgid "arguments are not all the same type of \"boot\" object"
msgstr "не все аргументы объекта \"boot\" одного типа"

#. R/bootfuns.q: stop("array cannot be found for parametric bootstrap")
#: R/bootfuns.q:0
msgid "array cannot be found for parametric bootstrap"
msgstr "не могу найти матрицу для параметрического бутстрепа"

#. R/bootfuns.q: gettext(" bias  ", domain = "R-boot")
#. R/bootfuns.q: gettext(" bias  ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "bias"
msgstr ""

#. R/bootfuns.q: stop("boot.array not implemented for this object")
#: R/bootfuns.q:0
msgid "boot.array not implemented for this object"
msgstr "'boot.array' для этого объекта не разработан"

#. R/bootfuns.q: stop("bootstrap object needed for type=\"reg\"")
#: R/bootfuns.q:0
msgid "bootstrap object needed for type=\"reg\""
msgstr "для type=\"reg\" нужен бутстреп-объект"

#. R/bootfuns.q: stop("bootstrap output matrix missing")
#: R/bootfuns.q:0
msgid "bootstrap output matrix missing"
msgstr "пропущена матрица бутстреп-вывода"

#. R/bootfuns.q: stop("bootstrap output object or 't0' required")
#: R/bootfuns.q:0
msgid "bootstrap output object or 't0' required"
msgstr "требуется объект вывода бутстрепа либо 't0'"

#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#: R/bootfuns.q:0
msgid "bootstrap replicates must be supplied"
msgstr "надо указать бутстреп-репликаты"

#. R/bootfuns.q: warning("bootstrap variances needed for studentized intervals")
#: R/bootfuns.q:0
msgid "bootstrap variances needed for studentized intervals"
msgstr "бутстреп-вариансы нужны для интервалов Стьюдент-типа"

#. R/bootfuns.q: stop("control methods undefined when 'boot.out' has weights")
#: R/bootfuns.q:0
msgid "control methods undefined when 'boot.out' has weights"
msgstr "методы контроля не определены в то время как у 'boot.out' есть веса"

#. R/bootfuns.q: stop("dimensions of 'R' and 'weights' do not match")
#: R/bootfuns.q:0
msgid "dimensions of 'R' and 'weights' do not match"
msgstr "измерения 'R' и 'weights' не соответствуют"

#. R/bootfuns.q: stop("either 'A' and 'u' or 'K.adj' and 'K2' must be supplied")
#: R/bootfuns.q:0
msgid "either 'A' and 'u' or 'K.adj' and 'K2' must be supplied"
msgstr "надо указать либо 'A' и 'u', либо 'K.adj' и 'K2'"

#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#: R/bootfuns.q:0
msgid "either 'boot.out' or 'w' must be specified."
msgstr "надо указать либо 'boot.out', либо 'w'."

#. R/bootfuns.q: stop("estimated adjustment 'a' is NA")
#: R/bootfuns.q:0
msgid "estimated adjustment 'a' is NA"
msgstr "предполагаемая корректировка 'a' -- это NA"

#. R/bootfuns.q: stop("estimated adjustment 'w' is infinite")
#: R/bootfuns.q:0
msgid "estimated adjustment 'w' is infinite"
msgstr "предполагаемая корректировка 'w' -- infinite"

#. R/bootfuns.q: warning("extreme order statistics used as endpoints")
#: R/bootfuns.q:0
msgid "extreme order statistics used as endpoints"
msgstr "'extreme order statistics' использована в конечных точках"

#. R/bootfuns.q: warning("extreme values used for quantiles")
#: R/bootfuns.q:0
msgid "extreme values used for quantiles"
msgstr "экстремальные значения использованы для квантилей"

#. R/bootfuns.q: stop("function 'u' missing")
#: R/bootfuns.q:0
msgid "function 'u' missing"
msgstr "функция 'u' пропущена"

#. R/bootfuns.q: stop("index array not defined for model-based resampling")
#: R/bootfuns.q:0
msgid "index array not defined for model-based resampling"
msgstr "для основанного на модели ресэмплинга не определена матрица индексов"

#. R/bootfuns.q: warning("index out of bounds; minimum index only used.")
#: R/bootfuns.q:0
msgid "index out of bounds; minimum index only used."
msgstr "индекс вне границ; использован лишь минимальный индекс."

#. R/bootfuns.q: stop("indices are incompatible with 'ncol(data)'")
#: R/bootfuns.q:0
#, fuzzy
msgid "indices are incompatible with 'ncol(data)'"
msgstr "индексы несовместимы с ncol(data)"

#. R/bootfuns.q: gettext("infinitesimal jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "infinitesimal jackknife value"
msgstr ""

#. R/bootfuns.q: stop("influence values cannot be found from a parametric bootstrap")
#: R/bootfuns.q:0
msgid "influence values cannot be found from a parametric bootstrap"
msgstr "значения влияния нельзя найти при помощи параметрического бутстрепа"

#. R/bootfuns.q: warning("input 't' ignored; type=\"inf\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"inf\""
msgstr "ввод 't' пропущен; type=\"inf\""

#. R/bootfuns.q: warning("input 't' ignored; type=\"jack\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"jack\""
msgstr "ввод 't' пропущен; type=\"jack\""

#. R/bootfuns.q: warning("input 't' ignored; type=\"pos\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"pos\""
msgstr "ввод 't' пропущен; type=\"pos\""

#. R/bootfuns.q: warning("input 't0' ignored: neither 't' nor 'L' supplied")
#: R/bootfuns.q:0
msgid "input 't0' ignored: neither 't' nor 'L' supplied"
msgstr "ввод 't0' пропущен: не указано ни 't', ни 'L'"

#. R/bootfuns.q: stop("invalid value of 'l'")
#: R/bootfuns.q:0
msgid "invalid value of 'l'"
msgstr "неправильное значение 'l'"

#. R/bootfuns.q: stop("invalid value of 'sim' supplied")
#: R/bootfuns.q:0
msgid "invalid value of 'sim' supplied"
msgstr "указано неправильное значение 'sim'"

#. R/bootfuns.q: gettext("jackknife value")
#. R/bootfuns.q: gettext("jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("left button = Identify, center button = Exit", domain = "R-boot")
#: R/bootfuns.q:0
msgid "left button = Identify, center button = Exit"
msgstr ""

#. R/bootfuns.q: stop("length of 'm' incompatible with 'strata'")
#: R/bootfuns.q:0
msgid "length of 'm' incompatible with 'strata'"
msgstr "длина 'm' несовместима со 'strata'"

#. R/bootpracs.q: gettextf("likelihood exceeds %f at only one point", lim)
#: R/bootpracs.q:0
msgid "likelihood exceeds %f at only one point"
msgstr "правдоподобие превышает %f только в одной точке"

#. R/bootpracs.q: gettextf("likelihood never exceeds %f", lim)
#: R/bootpracs.q:0
msgid "likelihood never exceeds %f"
msgstr "правдоподобие никогда не превышает %f"

#. R/bootfuns.q: gettext("mean")
#: R/bootfuns.q:0
msgid "mean"
msgstr ""

#. R/bootfuns.q: gettext(" mean(t*)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "mean(t*)"
msgstr ""

#. R/bootfuns.q: stop("missing values not allowed in 'data'")
#: R/bootfuns.q:0
#, fuzzy
msgid "missing values not allowed in 'data'"
msgstr "пропущенные значения в данных не разрешены"

#. R/bootfuns.q: stop("multivariate time series not allowed")
#: R/bootfuns.q:0
msgid "multivariate time series not allowed"
msgstr "многомерные временные ряды не разрешены"

#. R/bootfuns.q: stop("negative value of 'm' supplied")
#: R/bootfuns.q:0
msgid "negative value of 'm' supplied"
msgstr "указано отрицательное значение 'm'"

#. R/bootfuns.q: stop("neither 'data' nor bootstrap object specified")
#: R/bootfuns.q:0
#, fuzzy
msgid "neither 'data' nor bootstrap object specified"
msgstr "нет данных или указан бутстреп-объект"

#. R/bootfuns.q: stop("neither 'statistic' nor bootstrap object specified")
#: R/bootfuns.q:0
msgid "neither 'statistic' nor bootstrap object specified"
msgstr "нет 'statistic' или указан бутстреп-объект"

#. R/bootfuns.q: warning("no coefficients in Cox model -- model ignored")
#: R/bootfuns.q:0
msgid "no coefficients in Cox model -- model ignored"
msgstr "в модели 'Cox' нет коэффициентов -- модель пропущена"

#. R/bootfuns.q: stop("no data in call to 'boot'")
#: R/bootfuns.q:0
msgid "no data in call to 'boot'"
msgstr "нет данных в вызове 'boot'"

#. R/bootfuns.q: gettextf("number of columns of 'A' (%d) not equal to length of 'u' (%d)", d, length(u))
#: R/bootfuns.q:0
#, fuzzy
msgid "number of columns of 'A' (%d) not equal to length of 'u' (%d)"
msgstr ") не равно длине u ("

#. R/bootfuns.q: stop("one of 't' or 't0' required")
#: R/bootfuns.q:0
msgid "one of 't' or 't0' required"
msgstr "требуется одно 't' или 't0'"

#. R/bootfuns.q: gettextf("only columns %s and %s of 'data' used", index[1L], index[2L])
#: R/bootfuns.q:0
#, fuzzy
msgid "only columns %s and %s of 'data' used"
msgstr "использована только первая колонка t"

#. R/bootfuns.q: warning("only first 2 elements of 'index' used")
#: R/bootfuns.q:0
#, fuzzy
msgid "only first 2 elements of 'index' used"
msgstr "лишь первые 2 элемента индекса использованы"

#. R/bootfuns.q: warning("only first column of 't' used")
#: R/bootfuns.q:0
msgid "only first column of 't' used"
msgstr "использована только первая колонка 't'"

#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#: R/bootfuns.q:0
#, fuzzy
msgid "only first element of 'index' used"
msgstr "использован лишь первый элемент индекса"

#. R/bootfuns.q: warning("only first element of 'index' used in 'abc.ci'")
#: R/bootfuns.q:0
#, fuzzy
msgid "only first element of 'index' used in 'abc.ci'"
msgstr "лишь первый элемент индекса использован в abc.ci"

#. R/bootfuns.q: gettext("original", domain = "R-boot")
#. R/bootfuns.q: gettext("original", domain = "R-boot")
#: R/bootfuns.q:0
msgid "original"
msgstr ""

#. R/bootfuns.q: gettext("regression jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "regression jackknife value"
msgstr ""

#. R/bootfuns.q: stop("sim = \"weird\" cannot be used with a \"coxph\" object")
#: R/bootfuns.q:0
#, fuzzy
msgid "sim = \"weird\" cannot be used with a \"coxph\" object"
msgstr "sim=\"weird\" не может быть использован для объекта coxph"

#. R/bootfuns.q: gettext("standardized infinitesimal jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized infinitesimal jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("standardized jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("standardized regression jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized regression jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("std. error")
#. R/bootfuns.q: gettext(" std. error", domain = "R-boot")
#. R/bootfuns.q: gettext(" std. error", domain = "R-boot")
#: R/bootfuns.q:0
msgid "std. error"
msgstr ""

#. R/bootfuns.q: stop("this type not implemented for Binary")
#: R/bootfuns.q:0
msgid "this type not implemented for Binary"
msgstr "этот тип не разработан для бинарного распределения"

#. R/bootfuns.q: stop("this type not implemented for Poisson")
#: R/bootfuns.q:0
msgid "this type not implemented for Poisson"
msgstr "этот тип не разработан для распределения Пуассона"

#. R/bootfuns.q: warning("unable to achieve requested overall error rate")
#: R/bootfuns.q:0
#, fuzzy
msgid "unable to achieve requested overall error rate"
msgstr "не могу достичь требуемого общего соотношения ошибок."

#. R/bootfuns.q: stop("unable to calculate 'var.t0'")
#: R/bootfuns.q:0
msgid "unable to calculate 'var.t0'"
msgstr "не могу посчитать 'var.t0'"

#. R/bootfuns.q: gettextf("unable to find multiplier for %f", theta[i])
#: R/bootfuns.q:0
#, fuzzy
msgid "unable to find multiplier for %f"
msgstr "не могу найти множитель для"

#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#: R/bootfuns.q:0
msgid "unable to find range"
msgstr "не могу найти размах"

#. R/bootfuns.q: stop("unknown value of 'sim'")
#: R/bootfuns.q:0
msgid "unknown value of 'sim'"
msgstr "неизвестное значение 'sim'"

#. R/bootfuns.q: stop("unrecognized value of 'sim'")
#: R/bootfuns.q:0
msgid "unrecognized value of 'sim'"
msgstr "нераспознанное значение 'sim'"

#. R/bootfuns.q: stop("use 'boot.ci' for scalar parameters")
#: R/bootfuns.q:0
msgid "use 'boot.ci' for scalar parameters"
msgstr "использую 'boot.ci' для скалярных параметров"

#. R/bootfuns.q: warning("variance required for studentized intervals")
#: R/bootfuns.q:0
#, fuzzy
msgid "variance required for studentized intervals"
msgstr "для CI Стьюдент-типа нужна варианса"

#. R/bootfuns.q: ngettext(R[2L], "First %d replicate tilted to %s", "First %d replicates tilted to %s")
#: R/bootfuns.q:0
msgid "First %d replicate tilted to %s"
msgid_plural "First %d replicates tilted to %s"
msgstr[0] ""
msgstr[1] ""
msgstr[2] ""

#. R/bootfuns.q: ngettext(R[1L], "First %d replicate untilted", "First %d replicates untilted")
#: R/bootfuns.q:0
msgid "First %d replicate untilted"
msgid_plural "First %d replicates untilted"
msgstr[0] ""
msgstr[1] ""
msgstr[2] ""

#. R/bootfuns.q: ngettext(R[j + 1L], "Next %d replicate tilted to %s", "Next %d replicates tilted to %s")
#: R/bootfuns.q:0
msgid "Next %d replicate tilted to %s"
msgid_plural "Next %d replicates tilted to %s"
msgstr[0] ""
msgstr[1] ""
msgstr[2] ""

#~ msgid "only columns"
#~ msgstr "только колонки"

#~ msgid "and"
#~ msgstr "и"

#~ msgid "of data used"
#~ msgstr "данных использованы"

#~ msgid "number of columns of A ("
#~ msgstr "количество колонок A ("

#~ msgid ")"
#~ msgstr ")"

#~ msgid "at only one point"
#~ msgstr "только в одной точке"

#~ msgid "invalid proportions input"
#~ msgstr "неправильный ввод пропорций"

#~ msgid "irregular time series not allowed"
#~ msgstr "нерегулярные временные ряды не разрешены"
