msgid ""
msgstr ""
"Project-Id-Version: Matrix 1.0-9\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2015-01-18 21:31\n"
"PO-Revision-Date: 2014-06-28 13:56+0100\n"
"Last-Translator: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language-Team: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language: pl_PL\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2);\n"
"X-Poedit-SourceCharset: iso-8859-1\n"
"X-Generator: Poedit 1.5.4\n"

#. R/sparseMatrix.R: gettextf("%3g duplicated (i,j) pairs", m)
#: R/sparseMatrix.R:0
msgid "%3g duplicated (i,j) pairs"
msgstr ""

#. R/Auxiliaries.R: gettextf("%d x %d Matrix of class \"%s\"", d[1], d[2], cl, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "%d x %d Matrix of class \"%s\""
msgstr "macierz %d x %d klasy \"%s\""

#. R/Auxiliaries.R: gettextf("%d x %d Matrix of class \"%s\" (unitriangular)", d[1],     d[2], cl, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "%d x %d Matrix of class \"%s\" (unitriangular)"
msgstr "macierz %d x %d klasy \"%s\" (unitriangularna)"

#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s", d[1], d[2], dQuote(cl),     domain = "R-Matrix")
#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s", d[1], d[2], dQuote(class(object)),     domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "%d x %d diagonal matrix of class %s"
msgstr "macierz diagonalna %d x %d klasy %s"

#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s, with diagonal entries",     d[1], d[2], dQuote(cl), domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "%d x %d diagonal matrix of class %s, with diagonal entries"
msgstr "macierz diagonalna %d x %d klasy %s, z diagonalnymi wpisami"

#. R/Ops.R: gettext("%s %s <Matrix> is undefined", domain = "R-Matrix")
#: R/Ops.R:0
msgid "%s %s <Matrix> is undefined"
msgstr "%s %s <Matrix> nie jest określone"

#. R/diagMatrix.R: gettextf("%s kind not yet implemented", sQuote(kind))
#: R/diagMatrix.R:0
msgid "%s kind not yet implemented"
msgstr "rodzaj %s nie jest jeszcze zaimplementowany"

#. R/HBMM.R: gettext("'%s()' is not yet implemented for element type '%s'",     domain = "R-Matrix")
#: R/HBMM.R:0
msgid "'%s()' is not yet implemented for element type '%s'"
msgstr "'%s()' nie jest jeszcze zaimplementowany dla typu '%s' elementu"

#. R/HBMM.R: gettext("'%s()' is not yet implemented for representation '%s'",     domain = "R-Matrix")
#: R/HBMM.R:0
msgid "'%s()' is not yet implemented for representation '%s'"
msgstr "'%s()' nie jest jeszcze zaimplementowane dla reprezentacji '%s'"

#. R/condest.R: stop("'A' must be a square matrix")
#. R/condest.R: stop("'A' must be a square matrix")
#: R/condest.R:0
msgid "'A' must be a square matrix"
msgstr "'A' musi być macierzą kwadratową"

#. R/MatrixFactorization.R: gettext("'Bunch-Kaufman' factorization of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "'Bunch-Kaufman' factorization of:"
msgstr "Faktoryzacja 'Buncha-Kaufmana':"

#. R/AllClass.R: gettext("'Dim' slot is not (n,n)", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'Dim' slot is not (n,n)"
msgstr "Gniazdo 'Dim' nie jest (n,n)"

#. R/AllClass.R: gettext("'Dimnames' slot must be list of length 2", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'Dimnames' slot must be list of length 2"
msgstr "gniazdo 'Dimnames' musi być listą o długości 2"

#. R/AllClass.R: gettext("'EValues' is not of correct length", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'EValues' is not of correct length"
msgstr "'EValues' nie ma poprawnej długości"

#. R/MatrixFactorization.R: gettext("'MatrixFactorization' of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "'MatrixFactorization' of:"
msgstr "Faktoryzacja 'MatrixFactorization':"

#. R/Tsparse.R: stop("'NA' indices are not (yet?) supported for sparse Matrices")
#: R/Tsparse.R:0
msgid "'NA' indices are not (yet?) supported for sparse Matrices"
msgstr "indeksy 'NA' nie są (jeszcze?) wspierane dla rzadkich macierzy"

#. R/sparseMatrix.R: stop("'V' is not a *square* matrix")
#: R/sparseMatrix.R:0
msgid "'V' is not a *square* matrix"
msgstr "'V' nie jest macierzą *kwadratową*"

#. R/Matrix.R: stop("'V' is not a square matrix")
#: R/Matrix.R:0
msgid "'V' is not a square matrix"
msgstr "'V' nie jest macierzą kwadratową"

#. R/abIndex.R: stop("'by' argument is much too small")
#: R/abIndex.R:0
msgid "'by' argument is much too small"
msgstr "argument 'by' jest znacznie za mały"

#. R/bandSparse.R: gettextf("'diagonals' must have the same length (%d) as 'k'",     len.k)
#: R/bandSparse.R:0
msgid "'diagonals' must have the same length (%d) as 'k'"
msgstr "'diagonals' musi mieć tę samą długość (%d) co 'k'"

#. R/AllClass.R: gettext("'dim(Q)' is incorrect", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'dim(Q)' is incorrect"
msgstr "'dim(Q)' jest niepoprawne"

#. R/AllClass.R: gettext("'dim(T)' is incorrect", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'dim(T)' is incorrect"
msgstr "'dim(T)' jest niepoprawne"

#. R/HBMM.R: stop("'file' must be a character string or connection")
#. R/HBMM.R: stop("'file' must be a character string or connection")
#: R/HBMM.R:0
msgid "'file' must be a character string or connection"
msgstr "'file' musi być łańcuchem tekstowym lub połączeniem"

#. R/AllClass.R: gettext("'first' must be of length one", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'first' must be of length one"
msgstr "'first' musi mieć długość 1"

#. R/abIndex.R: stop("'force' must be (coercable to) TRUE or FALSE")
#: R/abIndex.R:0
msgid "'force' must be (coercable to) TRUE or FALSE"
msgstr "'force' musi być (przekształcalne do) TRUE lub FALSE"

#. R/AllClass.R: gettext("'i' and 'x' differ in length", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' and 'x' differ in length"
msgstr "'i' oraz 'x' różnią się długością"

#. R/AllClass.R: gettext("'i' must be >= 1", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'i' must be >= 1"
msgstr "'ncol' musi być >= 0"

#. R/AllClass.R: gettext("'i' must be empty when the object length is zero", domain = "R-matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'i' must be empty when the object length is zero"
msgstr "gniazdo 'x' musi być puste, gdy rodzaj to 'rleDiff'"

#. R/AllClass.R: gettextf("'i' must be in 1:%d", n, domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' must be in 1:%d"
msgstr "'i' musi być w przedziale 1:%d"

#. R/AllClass.R: gettext("'i' must be sorted strictly increasingly", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' must be sorted strictly increasingly"
msgstr "'i' musi być posortowane ściśle rosnąco"

#. R/AllClass.R: gettext("'i' slot has NA values", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'i' slot has NA values"
msgstr "gniazdo 'i' nie jest w całości skończone"

#. R/AllClass.R: gettext("'i' slot is not all finite", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' slot is not all finite"
msgstr "gniazdo 'i' nie jest w całości skończone"

#. R/AllClass.R: gettext("'kind' must be one of (\"int32\", \"double\", \"rleDiff\")",     domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'kind' must be one of (\"int32\", \"double\", \"rleDiff\")"
msgstr "'kind' musi być jednym z (\"int32\", \"double\", \"rleDiff\")"

#. R/Matrix.R: stop("'lag' and 'differences' must be integers >= 1")
#: R/Matrix.R:0
msgid "'lag' and 'differences' must be integers >= 1"
msgstr "'lag' oraz 'differences' muszą być liczbami całkowitymi >= 1"

#. R/AllClass.R: gettext("'lengths' and 'values' differ in length", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'lengths' and 'values' differ in length"
msgstr "'lengths' oraz 'values' różnią się długością"

#. R/AllClass.R: gettext("'lengths' must be positive", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'lengths' must be positive"
msgstr "'lengths' musi być dodatnie"

#. R/dgTMatrix.R: stop("'lwd' must be NULL or non-negative numeric")
#: R/dgTMatrix.R:0
msgid "'lwd' must be NULL or non-negative numeric"
msgstr "'lwd' musi mieć wartość NULL lub być nieujemną liczbą"

#. R/sparseVector.R: warning("'ncol' is not a factor of length(x)")
#: R/sparseVector.R:0
msgid "'ncol' is not a factor of length(x)"
msgstr "'ncol' nie jest czynnikiem długości 'length(x)'"

#. R/sparseVector.R: stop("'ncol' must be >= 0")
#: R/sparseVector.R:0
msgid "'ncol' must be >= 0"
msgstr "'ncol' musi być >= 0"

#. R/nearPD.R: gettextf("'nearPD()' did not converge in %d iterations", iter)
#: R/nearPD.R:0
msgid "'nearPD()' did not converge in %d iterations"
msgstr "'nearPD()' nie uzbieżnił się w %d iteracjach"

#. R/sparseVector.R: stop("'nrow' and 'ncol' must be the same when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "'nrow' and 'ncol' must be the same when 'symmetric' is true"
msgstr ""
"'nrow' oraz 'ncol' muszą mieć tę samą wartość gdy 'symmetric' ma wartość TRUE"

#. R/sparseVector.R: warning("'nrow' is not a factor of length(x)")
#: R/sparseVector.R:0
msgid "'nrow' is not a factor of length(x)"
msgstr "'nrow' nie jest czynnikiem długości 'length(x)'"

#. R/sparseVector.R: stop("'nrow' must be >= 0")
#: R/sparseVector.R:0
msgid "'nrow' must be >= 0"
msgstr "'nrow' musi być >= 0"

#. R/Matrix.R: warning("'nrow', 'ncol', etc, are disregarded for matrix 'data'")
#: R/Matrix.R:0
msgid "'nrow', 'ncol', etc, are disregarded for matrix 'data'"
msgstr "'nrow', 'ncol', itd., są nieuwzględniane dla 'data' typu macierzowego"

#. R/Matrix.R: warning("'nrow', 'ncol', etc, are disregarded when 'data' is \"Matrix\" already")
#: R/Matrix.R:0
msgid "'nrow', 'ncol', etc, are disregarded when 'data' is \"Matrix\" already"
msgstr ""
"'nrow', 'ncol', itd., nie są uwzględniane gdy 'data' ma już typ 'Matrix'"

#. R/AllClass.R: gettext("'object' argument is not a 3 x n matrix", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'object' argument is not a 3 x n matrix"
msgstr "argument 'object' nie jest macierzą 3 x n"

#. R/AllClass.R: gettext("'object' argument is not numeric", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'object' argument is not numeric"
msgstr "argument 'object' nie jest liczbą"

#. R/sparseMatrix.R: stop("'p' must be a non-decreasing vector (0, ...)")
#: R/sparseMatrix.R:0
msgid "'p' must be a non-decreasing vector (0, ...)"
msgstr "'p' musi być niemalejącym wektorem (0, ...)"

#. R/AllClass.R: gettext("'perm' slot is not a valid permutation", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'perm' slot is not a valid permutation"
msgstr "gniazdo 'perm' nie jest poprawną permutacją"

#. R/AllClass.R: gettext("'rle' must be a list (lengths = *, values = *)", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'rle' must be a list (lengths = *, values = *)"
msgstr "'rle' musti być listą (lengths = *, values = *)"

#. R/AllClass.R: gettext("'sd' slot has negative entries", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot has negative entries"
msgstr "gniazdo 'sd' posiada ujemne wpisy"

#. R/AllClass.R: gettext("'sd' slot has non-finite entries", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot has non-finite entries"
msgstr "gniazdo 'sd' posiada nieskończone wpisy"

#. R/AllClass.R: gettext("'sd' slot must be of length 'dim(.)[1]'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot must be of length 'dim(.)[1]'"
msgstr "gniazdo 'sd' musi mieć długość 'dim(.)[1]'"

#. R/Tsparse.R: gettextf("'sub-optimal sparse 'x[i] <- v' assignment: Coercing class %s to %s",     dQuote(cl), dQuote(class(x)), domain = "R-Matrix")
#: R/Tsparse.R:0
msgid "'sub-optimal sparse 'x[i] <- v' assignment: Coercing class %s to %s"
msgstr ""
"optymalne rzadkie przypisanie 'x[i] <- v': Przekształcanie klasy %s w %s"

#. R/sparseVector.R: stop("'times >= 0' is required")
#: R/sparseVector.R:0
msgid "'times >= 0' is required"
msgstr "wymagane jest 'times >= 0'"

#. R/CHMfactor.R: stop("'update' must be logical or '+' or '-'; 'C' a matrix, and 'L' a \"CHMfactor\"")
#: R/CHMfactor.R:0
msgid ""
"'update' must be logical or '+' or '-'; 'C' a matrix, and 'L' a \"CHMfactor\""
msgstr ""
"'update' musi być wartością logiczną lub '+' lub '-'; 'C' musi być macierzą, "
"oraz 'L' musi być obiektem klasy 'CHMfactor'"

#. R/diagMatrix.R: stop("'x' has invalid data type")
#: R/diagMatrix.R:0
msgid "'x' has invalid data type"
msgstr "'x' posiada niepoprawny typ danych"

#. R/Auxiliaries.R: stop("'x' is not positive definite -- chol() undefined.")
#. R/dsparseMatrix.R: stop("'x' is not positive definite -- chol() undefined.")
#: R/Auxiliaries.R:0 R/dsparseMatrix.R:0
msgid "'x' is not positive definite -- chol() undefined."
msgstr "'x' nie jest dodatnio określone -- nieokreślony 'chol()'."

#. R/symmetricMatrix.R: stop("'x' is not symmetric nor triangular")
#: R/symmetricMatrix.R:0
msgid "'x' is not symmetric nor triangular"
msgstr "'x' nie jest macierzą symetryczną ani trójkątną"

#. R/Auxiliaries.R: gettext("'x' must be \"sparseMatrix\"")
#: R/Auxiliaries.R:0
msgid "'x' must be \"sparseMatrix\""
msgstr "'x' musi być klasy \"sparseMatrix\""

#. R/sparseVector.R: stop("'x' must have length nrow^2 when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "'x' must have length nrow^2 when 'symmetric' is true"
msgstr "'x' musi mieć długość równą 'nrow'^2 gdy 'symmetric' ma wartość TRUE"

#. R/sparseVector.R: stop("'x' must inherit from \"sparseVector\"")
#: R/sparseVector.R:0
msgid "'x' must inherit from \"sparseVector\""
msgstr "'x' musi dziedziczyć z klasy 'sparseVector'"

#. R/AllClass.R: gettext("'x' slot must be double when kind is 'double'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be double when kind is 'double'"
msgstr "gniazdo 'x' musi być puste, gdy rodzaj to 'double'"

#. R/AllClass.R: gettext("'x' slot must be empty when kind is 'rleDiff'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be empty when kind is 'rleDiff'"
msgstr "gniazdo 'x' musi być puste, gdy rodzaj to 'rleDiff'"

#. R/AllClass.R: gettext("'x' slot must be integer when kind is 'int32'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be integer when kind is 'int32'"
msgstr "gniazdo 'x' musi być puste, gdy rodzaj to 'int32'"

#. R/symmetricMatrix.R: sprintf("(un)packing only applies to dense matrices, class(x)='%s'",     cx)
#. R/symmetricMatrix.R: sprintf("(un)packing only applies to dense matrices, class(x)='%s'",     class(x))
#: R/symmetricMatrix.R:0
msgid "(un)packing only applies to dense matrices, class(x)='%s'"
msgstr "(roz)pakowanie stosuje się jedynie do gęstych macierzy, class(x)='%s'"

#. R/Matrix.R: stop(".M.repl.i.2col(): 'i' has no integer column number;\n should never happen; please report")
#: R/Matrix.R:0
msgid ""
".M.repl.i.2col(): 'i' has no integer column number;\n"
" should never happen; please report"
msgstr ""
".M.repl.i.2col(): 'i' posiada niecałkowitą liczbę kolumn;\n"
"to nie powinno się nigdy wydarzyć; proszę zgłosić raport"

#. R/Matrix.R: message(".M.repl.i.2col(): drop 'matrix' case ...")
#: R/Matrix.R:0
msgid ".M.repl.i.2col(): drop 'matrix' case ..."
msgstr ".M.repl.i.2col(): zrzuć przypadek 'matrix' ..."

#. R/Matrix.R: stop(".M.sub.i.2col(): 'i' has no integer column number;\n should never happen; please report")
#: R/Matrix.R:0
msgid ""
".M.sub.i.2col(): 'i' has no integer column number;\n"
" should never happen; please report"
msgstr ""
".M.sub.i.2col(): 'i' posiada niecałkowitą liczbę kolumn;\n"
"to nie powinno się nigdy wydarzyć; proszę zgłosić raport"

#. R/Tsparse.R: gettext(".TM.repl.i.mat(): \"lMatrix\" case ...", domain = "R-Matrix")
#: R/Tsparse.R:0
msgid ".TM.repl.i.mat(): \"lMatrix\" case ..."
msgstr ".TM.repl.i.mat(): przypadek 'lMatrix' ..."

#. R/Tsparse.R: gettext(".TM.repl.i.mat(): drop 'matrix' case ...", domain = "R-Matrix")
#: R/Tsparse.R:0
msgid ".TM.repl.i.mat(): drop 'matrix' case ..."
msgstr ".TM.repl.i.mat(): zrzuć przypadek 'matrix' ..."

#. R/Ops.R: gettext("<Matrix> %s %s is undefined", domain = "R-Matrix")
#. R/Ops.R: gettext("<Matrix> %s %s is undefined", domain = "R-Matrix")
#. R/Ops.R: gettext("<Matrix> %s %s is undefined", domain = "R-Matrix")
#: R/Ops.R:0
msgid "<Matrix> %s %s is undefined"
msgstr "<Matrix> %s %s nie jest określone"

#. R/abIndex.R: stop("<abIndex>  -->  <seqMat> is not yet implemented")
#: R/abIndex.R:0
msgid "<abIndex>  -->  <seqMat> is not yet implemented"
msgstr "<abIndex>  -->  <seqMat> nie jest jeszcze zaimplementowane"

#. R/abIndex.R: stop("<abIndex>[i] is not yet implemented")
#: R/abIndex.R:0
msgid "<abIndex>[i] is not yet implemented"
msgstr "'<abIndex>[i]'  nie jest jeszcze zaimplementowane"

#. R/abIndex.R: stop("<seqMat>  -->  <abIndex> is not yet implemented")
#: R/abIndex.R:0
msgid "<seqMat>  -->  <abIndex> is not yet implemented"
msgstr "<seqMat>  -->  <abIndex> nie jest jeszcze zaimplementowane"

#. R/Matrix.R: message("<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient")
#: R/Matrix.R:0
msgid "<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient"
msgstr "<sparse>[ <logic> ] : '.M.sub.i.logical()' może być niewydajne"

#. R/abIndex.R: gettextf("Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n and \"x\" slot",     length(object), knd, domain = "R-Matrix")
#: R/abIndex.R:0
msgid ""
"Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n"
" and \"x\" slot"
msgstr ""
"Abstrakcyjny indeks wektora (klasa \"abIndex\") długości %.0f, rodzaj \"%s"
"\"\n"
" oraz gniazdo \"x\""

#. R/abIndex.R: gettextf("Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n and slot \"rleD\":",     length(object), knd, domain = "R-Matrix")
#: R/abIndex.R:0
msgid ""
"Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n"
" and slot \"rleD\":"
msgstr ""
"Abstrakcyjny indeks wektora (klasa \"abIndex\") długości %.0f, rodzaj \"%s"
"\"\n"
" oraz gniazdo \"rleD\":"

#. R/Csparse.R: stop("Cholesky(<nsparse...>) -> *symbolic* factorization -- not yet implemented")
#: R/Csparse.R:0
msgid ""
"Cholesky(<nsparse...>) -> *symbolic* factorization -- not yet implemented"
msgstr ""
"Cholesky(<nsparse...>) -> *symboliczna* faktoryzacja -- jeszcze "
"niezaimplementowana"

#. R/Matrix.R: gettextf("Cholesky(A) called for 'A' of class \"%s\";\n\t it is currently defined for sparseMatrix only; consider using chol() instead",     class(A))
#: R/Matrix.R:0
msgid ""
"Cholesky(A) called for 'A' of class \"%s\";\n"
"\t it is currently defined for sparseMatrix only; consider using chol() "
"instead"
msgstr ""
"metoda 'Cholesky(A)' poprosiła o  'A' klasy '%s';\n"
"\t aktualnie jest ona zdefiniowana jedynie dla klasy 'sparseMatrix'; rozważ "
"w zamian użycie 'metodychol()'"

#. R/sparseVector.R: gettextf("Class %s is not yet implemented", dQuote(cNam))
#: R/sparseVector.R:0
msgid "Class %s is not yet implemented"
msgstr "Klasa %s nie jest jeszcze zaimplementowana"

#. R/Ops.R: stop("Cmp.Mat.atomic() should not be called for diagonalMatrix")
#: R/Ops.R:0
msgid "Cmp.Mat.atomic() should not be called for diagonalMatrix"
msgstr "'Cmp.Mat.atomic()' nie powinien być wywołany dla 'diagonalMatrix'"

#. R/dgTMatrix.R: gettext("Column")
#: R/dgTMatrix.R:0
msgid "Column"
msgstr "Kolumna"

#. R/Ops.R: gettextf("Compare <Csparse> -- \"%s\" %s \"%s\" :\n", cD1@className,     .Generic, cD2@className, domain = "R-Matrix")
#: R/Ops.R:0
msgid "Compare <Csparse> -- \"%s\" %s \"%s\" :"
msgstr "Porównaj <Csparse> -- \"%s\" %s \"%s\" :"

#. R/AllClass.R: gettext("Dim slot must be of length 2", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "Dim slot must be of length 2"
msgstr "gniazdo wymiaru muszą być długości 2"

#. R/AllClass.R: gettext("Dim slot must contain non-negative values", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "Dim slot must contain non-negative values"
msgstr "gniazdo wymiaru musi posiadać nieujemne wartości"

#. R/dgTMatrix.R: gettextf("Dimensions: %d x %d", di[1], di[2])
#: R/dgTMatrix.R:0
msgid "Dimensions: %d x %d"
msgstr "Wymiary: %d x %d"

#. R/Tsparse.R: stop("FIXME: NOT YET FINISHED IMPLEMENTATION")
#: R/Tsparse.R:0
msgid "FIXME: NOT YET FINISHED IMPLEMENTATION"
msgstr "FIXME: JESZCZE NIEZAKOŃCZONA IMPLEMENTACJA"

#. R/diagMatrix.R: gettextf("Internal bug: nargs()=%d; please report", na)
#: R/diagMatrix.R:0
msgid "Internal bug: nargs()=%d; please report"
msgstr "Błąd wewnętrzny: nargs()=%d; proszę zgłosić raport"

#. R/HBMM.R: gettextf("Invalid assembled indicator: %s", t3)
#: R/HBMM.R:0
msgid "Invalid assembled indicator: %s"
msgstr "Niepoprawnie złożony wskaźnik: %s"

#. R/HBMM.R: gettextf("Invalid storage format: %s", t2)
#: R/HBMM.R:0
msgid "Invalid storage format: %s"
msgstr "Niepoprawny format przechowywania: %s"

#. R/HBMM.R: gettextf("Invalid storage type: %s", t1)
#: R/HBMM.R:0
msgid "Invalid storage type: %s"
msgstr "Niepoprawny typ przechowywania: %s"

#. R/dgCMatrix.R: gettextf("LU computationally singular: ratio of extreme entries in |diag(U)| = %9.4g",     rU[1]/rU[2])
#: R/dgCMatrix.R:0
msgid ""
"LU computationally singular: ratio of extreme entries in |diag(U)| = %9.4g"
msgstr ""
"dekompozycja LU jest obliczeniowo osobliwa: stosunek ekstremalnych wpisów w |"
"diag(U)| wynosi %9.4g"

#. R/Ops.R: stop("Logic.Mat.atomic() should not be called for diagonalMatrix")
#: R/Ops.R:0
msgid "Logic.Mat.atomic() should not be called for diagonalMatrix"
msgstr "'Logic.Mat.atomic()' nie powinien być wywołany dla 'diagonalMatrix'"

#. R/Auxiliaries.R: gettextf("Matrices must have same dimensions in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "Matrices must have same dimensions in %s"
msgstr "Macierze muszą mieć te same wymiary w %s"

#. R/Auxiliaries.R: gettextf("Matrices must have same number of columns in %s", deparse(sys.call(sys.parent())))
#. R/bind2.R: gettextf("Matrices must have same number of columns in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0 R/bind2.R:0
msgid "Matrices must have same number of columns in %s"
msgstr "Macierze muszą mieć tę samą liczbę kolumn w %s"

#. R/Ops.R: stop("Matrices must have same number of rows for arithmetic")
#: R/Ops.R:0
msgid "Matrices must have same number of rows for arithmetic"
msgstr ""
"Macierze muszą mieć tę samą liczbę wierszy jeśli mają być przeprowadzane "
"działania arytmetyczne"

#. R/Auxiliaries.R: gettextf("Matrices must have same number of rows in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "Matrices must have same number of rows in %s"
msgstr "Macierze muszą mieć tę samą liczbę wierszy w %s"

#. R/nearPD.R: stop("Matrix seems negative semi-definite")
#: R/nearPD.R:0
msgid "Matrix seems negative semi-definite"
msgstr "Macierz wydaje się być ujemnie określona"

#. R/Csparse.R: stop("Matrix-internal error in <CsparseM>[i,,d]; please report")
#: R/Csparse.R:0
msgid "Matrix-internal error in <CsparseM>[i,,d]; please report"
msgstr ""
"błąd wewnętrzny w pakiecie 'Matrix' w '<CsparseM>[i,,d]'; proszę zgłosić "
"raport"

#. R/Tsparse.R: stop("Matrix-internal error in <TsparseM>[i,,d]; please report")
#: R/Tsparse.R:0
msgid "Matrix-internal error in <TsparseM>[i,,d]; please report"
msgstr ""
"błąd wewnętrzny pakiecie 'Matrix' w '<TsparseM>[i,,d]'; proszę zgłosić raport"

#. R/sparseMatrix.R: stop("Matrix-internal error in <sparseM>[i,,d]; please report")
#: R/sparseMatrix.R:0
msgid "Matrix-internal error in <sparseM>[i,,d]; please report"
msgstr ""
"błąd wewnętrzny pakietu 'Matrix' w '<sparseM>[i,,d]'; proszę zgłosić raport"

#. R/sparseVector.R: stop("Must specify 'nrow' when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "Must specify 'nrow' when 'symmetric' is true"
msgstr "Potrzeba określić 'nrow' gdy 'symmetric' ma wartość TRUE"

#. R/sparseMatrix.R: stop("NA's in (i,j) are not allowed")
#: R/sparseMatrix.R:0
msgid "NA's in (i,j) are not allowed"
msgstr "wartości NA w (i,j) nie są dozwolone"

#. R/Matrix.R: stop("NAs are not allowed in subscripted assignments")
#. R/Tsparse.R: stop("NAs are not allowed in subscripted assignments")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "NAs are not allowed in subscripted assignments"
msgstr "wartości NA nie są dozwolone w indeksowanych przypisaniach"

#. R/HBMM.R: stop("Not a valid format")
#: R/HBMM.R:0
msgid "Not a valid format"
msgstr "Niepoprawny format"

#. R/HBMM.R: stop("Only numeric sparse matrices allowed")
#: R/HBMM.R:0
msgid "Only numeric sparse matrices allowed"
msgstr "Dozwolone są jedynie liczbowe rzadkie macierze"

#. R/CHMfactor.R: gettext("Quadratic matrix '%s' (=: A) is not formally symmetric. Will be treated as A A'",     domain = "R-Matrix")
#: R/CHMfactor.R:0
msgid ""
"Quadratic matrix '%s' (=: A) is not formally symmetric. Will be treated as A "
"A'"
msgstr ""
"Macierz kwadratowa '%s' (=: A) nie jest formalnie symetryczna.  Będzie "
"traktowana jako A A'"

#. R/dgCMatrix.R: gettextf("RHS 'b' has wrong length %d", length(b))
#: R/dgCMatrix.R:0
msgid "RHS 'b' has wrong length %d"
msgstr ""

#. R/dgCMatrix.R: gettextf("RHS 'b' has wrong number of rows: %d", nrow(b))
#: R/dgCMatrix.R:0
msgid "RHS 'b' has wrong number of rows: %d"
msgstr ""

#. R/Matrix.R: gettextf("RHS 'value' (class %s) matches 'ANY', but must match matrix class %s",     class(value), class(x))
#: R/Matrix.R:0
msgid "RHS 'value' (class %s) matches 'ANY', but must match matrix class %s"
msgstr ""
"prawa strona 'value' (klasa %s) pasuje do 'ANY', a musi pasować do klasy "
"macierzy '%s'"

#. R/abIndex.R: gettextf(" RLE difference (class 'rleDiff'): first = %s, \"rle\":%s",     format(object@first), if (length(rl <- object@rle)) "\n" else " ",     domain = "R-Matrix")
#: R/abIndex.R:0
msgid "RLE difference (class 'rleDiff'): first = %s, \"rle\":%s"
msgstr "Różnica RLE (klasa \"rleDiff\"): pierwsza = %s, \"rle\":%s"

#. R/dgTMatrix.R: gettext("Row")
#: R/dgTMatrix.R:0
msgid "Row"
msgstr "Wiersz"

#. R/Tsparse.R: stop("[ <character> ] indexing not allowed: forgot a \",\" ?")
#: R/Tsparse.R:0
msgid "[ <character> ] indexing not allowed: forgot a \",\" ?"
msgstr "indeksowanie [ <tekst> ] nie jest dozwolone: zapomniałeś ',' ?"

#. R/Auxiliaries.R: gettext("   [[ suppressing %d column names %s ... ]]", domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "[[ suppressing %d column names %s ... ]]"
msgstr "[[ zmniejszanie %d nazw kolumn %s ... ]]"

#. R/Auxiliaries.R: gettext("   [[ suppressing %d column names %s ]]", domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "[[ suppressing %d column names %s ]]"
msgstr "[[ zmniejszanie %d nazw kolumn %s ]]"

#. R/abIndex.R: gettextf("abIndex: lengths (%d, %d) differ", lt, lc, domain = "R-Matrix")
#: R/abIndex.R:0
msgid "abIndex: lengths (%d, %d) differ"
msgstr "abIndex: długości (%d, %d) różnią się"

#. R/abIndex.R: stop("all(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "all(<abIndex>) is not yet implemented"
msgstr "'all(<abIndex>)' nie jest jeszcze zaimplementowane"

#. R/dsCMatrix.R: warning("as(.,\"dsCMatrix\") is deprecated (since 2008); do use as(., \"symmetricMatrix\")")
#: R/dsCMatrix.R:0
msgid ""
"as(.,\"dsCMatrix\") is deprecated (since 2008); do use as(., "
"\"symmetricMatrix\")"
msgstr ""
"'as(.,\"dsCMatrix\")' jest przestarzałe (0d 2008); używaj 'as(., "
"\"symmetricMatrix\")'"

#. R/abIndex.R: warning("c(<abIndex>,..) of different kinds, coercing all to 'rleDiff'")
#: R/abIndex.R:0
msgid "c(<abIndex>,..) of different kinds, coercing all to 'rleDiff'"
msgstr ""
"'c(<abIndex>,..)' różnych rodzajów, przekształcanie wszystkich do 'rleDiff'"

#. R/ngTMatrix.R: stop("cannot coerce 'NA's to \"nsparseMatrix\"")
#: R/ngTMatrix.R:0
msgid "cannot coerce 'NA's to \"nsparseMatrix\""
msgstr "nie można przekształcić wartości 'NA' na 'nsparseMatrix'"

#. R/sparseVector.R: stop("cannot coerce 'NA's to \"nsparseVector\"")
#: R/sparseVector.R:0
msgid "cannot coerce 'NA's to \"nsparseVector\""
msgstr "nie można przekształcić wartości 'NA' na 'nsparseVector'"

#. R/dgTMatrix.R: stop("cannot coerce non-symmetric \"dgTMatrix\" to \"dsCMatrix\" class")
#: R/dgTMatrix.R:0
msgid "cannot coerce non-symmetric \"dgTMatrix\" to \"dsCMatrix\" class"
msgstr ""
"nie można przekształcić niesymetrycznej macierzy klasy \"dgTMatrix\" na "
"klasę \"dsCMatrix\""

#. R/diagMatrix.R: stop("chol() is undefined for diagonal matrix with negative entries")
#: R/diagMatrix.R:0
msgid "chol() is undefined for diagonal matrix with negative entries"
msgstr ""
"'chol()' jest nieokreślona dla macierzy diagonalnych z ujemnymi wpisami"

#. R/Auxiliaries.R: gettextf("class(target) is %s, current is %s", c1, c2, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "class(target) is %s, current is %s"
msgstr "klasa celu to %s, bieżąca klasa to %s"

#. R/indMatrix.R: stop("coercion from list(i1,...,ik, d) to \"indMatrix\" failed.\n All entries must be integer valued and the number of columns, d, not smaller\n than the maximal index i*.")
#: R/indMatrix.R:0
msgid ""
"coercion from list(i1,...,ik, d) to \"indMatrix\" failed.\n"
" All entries must be integer valued and the number of columns, d, not "
"smaller\n"
" than the maximal index i*."
msgstr ""
"przekształcenie z 'list(i1,...,ik, d)' do obiekty klasy \"indMatrix\" nie "
"powiodło się.\n"
"Wszystkie wpisy muszą być wartościami całkowitymi, a liczba kolumn (d) nie "
"mniejsza niż maksymalny indeks i*."

#. R/indMatrix.R: stop("coercion to \"indMatrix\" only works from integer numeric")
#: R/indMatrix.R:0
msgid "coercion to \"indMatrix\" only works from integer numeric"
msgstr "przekształcenie na \"indMatrix\" działa jedynie dla liczb całkowitych"

#. R/pMatrix.R: stop("coercion to \"pMatrix\" only works from integer numeric")
#: R/pMatrix.R:0
msgid "coercion to \"pMatrix\" only works from integer numeric"
msgstr "przekształcenie na \"pMatrix\" działa jedynie dla liczb całkowitych"

#. R/Tsparse.R: gettextf("column indices must be <= ncol(.) which is %d", nc)
#: R/Tsparse.R:0
msgid "column indices must be <= ncol(.) which is %d"
msgstr "indeksy kolumn muszą być <= 'ncol(.)' który wynosi %d"

#. R/Matrix.R: stop("complex matrices not yet implemented in Matrix package")
#: R/Matrix.R:0
msgid "complex matrices not yet implemented in Matrix package"
msgstr "macierze zespolone nie są jeszcze zaimplementowane w pakiecie 'Matrix'"

#. R/AllClass.R: gettext("diag = \"U\" (identity matrix) requires empty 'x' slot",     domain = "R-Matrix")
#: R/AllClass.R:0
msgid "diag = \"U\" (identity matrix) requires empty 'x' slot"
msgstr "diag = \"U\" (macierz identycznościowa) wymaga pustego gniazda 'x'"

#. R/Matrix.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#. R/sparseMatrix.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#: R/Matrix.R:0 R/sparseMatrix.R:0
msgid "diag(.) had 0 or NA entries; non-finite result is doubtful"
msgstr "'diag(.)' posiadało wpisy 0 lub NA; nieskończony wynik jest wątpliwy"

#. R/Tsparse.R: gettext("diagnosing replTmat(x,i,j,v): nargs()= 3; ", domain = "R-Matrix")
#: R/Tsparse.R:0
msgid "diagnosing replTmat(x,i,j,v): nargs()= 3;"
msgstr "diagnozowanie funkcji 'replTmat(x,i,j,v)': liczba argumentów = 3;"

#. R/AllClass.R: gettext("diagonal matrix 'diag' slot must be \"U\" or \"N\"",     domain = "R-Matrix")
#: R/AllClass.R:0
msgid "diagonal matrix 'diag' slot must be \"U\" or \"N\""
msgstr "gniazdo 'diag' diagonalnej macierzy  musi być \"U\" lub \"N\""

#. R/AllClass.R: gettext("diagonal matrix has 'x' slot of length != 'n'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "diagonal matrix has 'x' slot of length != 'n'"
msgstr "macierz 'diagonals' ma gniazdo 'x' o długości != 'n'"

#. R/denseMatrix.R: stop("diagonalMatrix in .dense2C() -- should never happen, please report!")
#: R/denseMatrix.R:0
msgid "diagonalMatrix in .dense2C() -- should never happen, please report!"
msgstr ""
"'diagonalMatrix' w '.dense2C()' -- nie powinno nigdy się wydarzyć, proszę "
"zgłosić raport!"

#. R/Ops.R: sprintf("dim [product %d] do not match the length of object [%d]",     n1, n2)
#. R/Ops.R: sprintf("dim [product %d] do not match the length of object [%d]",     n2, n1)
#: R/Ops.R:0
msgid "dim [product %d] do not match the length of object [%d]"
msgstr "wymiar [produkt %d] nie zgadza się z długością obiektu [%d]"

#. R/denseMatrix.R: stop("dim(.) value must be numeric of length 2")
#. R/sparseMatrix.R: stop("dim(.) value must be numeric of length 2")
#. R/sparseVector.R: stop("dim(.) value must be numeric of length 2")
#: R/denseMatrix.R:0 R/sparseMatrix.R:0 R/sparseVector.R:0
msgid "dim(.) value must be numeric of length 2"
msgstr "wartości 'dim(.)' muszą być liczbami o długości 2"

#. R/denseMatrix.R: stop("dimensions don't match the number of cells")
#. R/sparseMatrix.R: stop("dimensions don't match the number of cells")
#. R/sparseVector.R: stop("dimensions don't match the number of cells")
#: R/denseMatrix.R:0 R/sparseMatrix.R:0 R/sparseVector.R:0
msgid "dimensions don't match the number of cells"
msgstr "wymiary nie zgadzają się z liczbą komórek"

#. R/Auxiliaries.R: gettextf("dimnames [%d] mismatch in %s", j, deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "dimnames [%d] mismatch in %s"
msgstr "niezgodność nazw wymiarów [%d] w %s"

#. R/Matrix.R: message("dimnames(.) <- NULL:  translated to \ndimnames(.) <- list(NULL,NULL)  <==>  unname(.)")
#: R/Matrix.R:0
msgid ""
"dimnames(.) <- NULL:  translated to \n"
"dimnames(.) <- list(NULL,NULL)  <==>  unname(.)"
msgstr ""
"dimnames(.) <- NULL: przetłumaczono na\n"
"dimnames(.) <- list(NULL,NULL)  <==>  unname(.)"

#. R/HBMM.R: gettextf("element type '%s' not recognized", elt)
#: R/HBMM.R:0
msgid "element type '%s' not recognized"
msgstr "element typu '%s' nie został rozpoznany"

#. R/HBMM.R: stop("element type 'complex' not yet implemented")
#: R/HBMM.R:0
msgid "element type 'complex' not yet implemented"
msgstr "typ elementu 'complex' nie jest jeszcze zaimplementowany"

#. R/sparseMatrix.R: stop("exactly one of 'i', 'j', or 'p' must be missing from call")
#: R/sparseMatrix.R:0
msgid "exactly one of 'i', 'j', or 'p' must be missing from call"
msgstr "dokłanie jeden z 'i', 'j', lub 'p' musi być nieobecny w wywołaniu"

#. R/diagMatrix.R: gettext("exploding <diag> o <diag> into dense matrix", domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "exploding <diag> o <diag> into dense matrix"
msgstr "wybuchająca operacja '<diag> o <diag> w gęstej macierzy"

#. R/HBMM.R: stop("file is not a MatrixMarket file")
#: R/HBMM.R:0
msgid "file is not a MatrixMarket file"
msgstr "plik nie jest plikiem typu 'MatrixMarket'"

#. R/bandSparse.R: stop("for symmetric band matrix, only specify upper or lower triangle\n hence, all k must have the same sign")
#: R/bandSparse.R:0
msgid ""
"for symmetric band matrix, only specify upper or lower triangle\n"
" hence, all k must have the same sign"
msgstr ""
"dla symetrycznej macierzy wstęgowej, określ jedynie górny oraz dolny "
"trójkąt\n"
"tak więc, wszystkie k muszą mieć ten sam znak"

#. R/nsCMatrix.R: stop("function is temporarily disabled")
#: R/nsCMatrix.R:0
msgid "function is temporarily disabled"
msgstr "funkcja jest tymczasowo niedostępna"

#. R/Auxiliaries.R: gettextf("general Matrix class not yet implemented for %s", dQuote(class(x)))
#: R/Auxiliaries.R:0
msgid "general Matrix class not yet implemented for %s"
msgstr "ogólna klasa 'Matrix' jeszcze nie jest zaimplementowana dla %s"

#. R/condest.R: message("hit a cycle (1) -- stop iterations")
#: R/condest.R:0
msgid "hit a cycle (1) -- stop iterations"
msgstr "natrafiona na cykl (1) -- zatrzymywanie iteracji"

#. R/condest.R: message("hit a cycle (2) -- stop iterations")
#: R/condest.R:0
msgid "hit a cycle (2) -- stop iterations"
msgstr "natrafiona na cykl (2) -- zatrzymywanie iteracji"

#. R/Csparse.R: warning("i1[1] == 0 ==> C-level verbosity will not happen!")
#: R/Csparse.R:0
msgid "i1[1] == 0 ==> C-level verbosity will not happen!"
msgstr "i1[1] == 0 ==> tryb 'verbose' poziomu C nie zostanie wykonany!"

#. R/Summary.R: gettextf("in Summary(<ANY>, .): %s(<%s>, <%s>)\n", .Generic,     class(x), class(a[[1]]))
#: R/Summary.R:0
msgid "in Summary(<ANY>, .): %s(<%s>, <%s>)"
msgstr "w 'Summary(<ANY>, .)': %s(<%s>, <%s>,...)"

#. R/Summary.R: gettextf("in Summary(<ANY>, .): %s(<%s>, <%s>,...)\n", .Generic,     class(x), class(a[[1]]))
#: R/Summary.R:0
msgid "in Summary(<ANY>, .): %s(<%s>, <%s>,...)"
msgstr "w 'Summary(<ANY>, .)': %s(<%s>, <%s>,...)"

#. R/diagMatrix.R: stop("incompatible matrix dimensions")
#: R/diagMatrix.R:0
msgid "incompatible matrix dimensions"
msgstr "niezgodne wymiary macierzy"

#. R/Tsparse.R: gettextf("index larger than maximal %d", n)
#. R/Tsparse.R: gettextf("index larger than maximal %d", n)
#: R/Tsparse.R:0
msgid "index larger than maximal %d"
msgstr "indeks dłuższy niż maksymalny możliwy %d"

#. R/sparseVector.R: stop("index must be numeric, logical or sparseVector for indexing sparseVectors")
#: R/sparseVector.R:0
msgid ""
"index must be numeric, logical or sparseVector for indexing sparseVectors"
msgstr ""
"indeks musi być typem liczbowym, logicznym lub obiektem klasy 'sparseVector' "
"na potrzeby indeksowania obiektów klasy 'sparseVector'"

#. R/dtpMatrix.R: warning("inefficient coercion (lost triangularity); please report")
#: R/dtpMatrix.R:0
msgid "inefficient coercion (lost triangularity); please report"
msgstr ""
"nieefektywne przekształcenie (utracono trójkątność); proszę zgłosić raport"

#. R/Ops.R: warning("inefficient method used for \"- e1\"")
#: R/Ops.R:0
msgid "inefficient method used for \"- e1\""
msgstr "nieefektywna metoda użyta dla '- e1'"

#. R/diagMatrix.R: gettextf("intermediate 'r' is of type %s", typeof(r))
#: R/diagMatrix.R:0
msgid "intermediate 'r' is of type %s"
msgstr "pośrednie 'r' jest typu %s"

#. R/Ops.R: stop("internal bug in \"Compare\" method (Cmp.Mat.atomic); please report")
#: R/Ops.R:0
msgid "internal bug in \"Compare\" method (Cmp.Mat.atomic); please report"
msgstr ""
"błąd wewnętrzny w metodzie 'Compare' (Cmp.Mat.atomic); proszę zgłosić raport"

#. R/Ops.R: stop("internal bug in \"Logic\" method (Logic.Mat.atomic); please report")
#: R/Ops.R:0
msgid "internal bug in \"Logic\" method (Logic.Mat.atomic); please report"
msgstr ""
"błąd wewnętrzny w metodzie 'Logic' (.Logic.Mat.atomic); proszę zgłosić raport"

#. R/Tsparse.R: stop("internal bug: matrix 'i' in replTmat(): please report")
#: R/Tsparse.R:0
msgid "internal bug: matrix 'i' in replTmat(): please report"
msgstr "wewnętrzny błąd: macierz 'i' w 'replTmat()': proszę zgłosić raport"

#. R/Tsparse.R: stop("internal bug: missing 'i' in replTmat(): please report")
#: R/Tsparse.R:0
msgid "internal bug: missing 'i' in replTmat(): please report"
msgstr "błąd wewnętrzny: brakuje 'i' w 'replTmat()': proszę zgłosić raport"

#. R/sparseMatrix.R: gettextf("invalid 'col.names' string: %s", cn)
#: R/sparseMatrix.R:0
msgid "invalid 'col.names' string: %s"
msgstr "niepoprawny łańcuch 'col.names': %s"

#. R/spModels.R: stop("invalid 'contrasts.arg' argument")
#: R/spModels.R:0
msgid "invalid 'contrasts.arg' argument"
msgstr "niepoprawny argument 'contrasts.arg'"

#. R/Matrix.R: stop("invalid 'data'")
#: R/Matrix.R:0
msgid "invalid 'data'"
msgstr "niepoprawne 'data'"

#. R/Auxiliaries.R: gettextf("invalid 'mod': %s", mod)
#. R/Auxiliaries.R: gettextf("invalid 'mod': %s", mod)
#: R/Auxiliaries.R:0
msgid "invalid 'mod': %s"
msgstr "niepoprawne 'mod': %s"

#. R/sparseMatrix.R: stop("invalid 'type'")
#: R/sparseMatrix.R:0
msgid "invalid 'type'"
msgstr "niepoprawny 'type'"

#. R/abIndex.R: stop("invalid (to - from)/by in 'seq(.)'")
#: R/abIndex.R:0
msgid "invalid (to - from)/by in 'seq(.)'"
msgstr "niepoprawne '(to - from)/by' w 'seq(.)'"

#. R/Tsparse.R: stop("invalid character indexing")
#: R/Tsparse.R:0
msgid "invalid character indexing"
msgstr "niepoprawne tekstowe indeksowanie"

#. R/Rsparse.R: gettextf("invalid class: %s", dQuote(cl))
#. R/Rsparse.R: gettextf("invalid class: %s", dQuote(cl))
#: R/Rsparse.R:0
msgid "invalid class: %s"
msgstr "niepoprawna klasa: %s"

#. R/Matrix.R: gettextf("invalid dimnames given for %s object", dQuote(class(x)))
#: R/Matrix.R:0
msgid "invalid dimnames given for %s object"
msgstr "podano niepoprawne nazwy wymiarów dla obiektu %s"

#. R/denseMatrix.R: gettextf("invalid nargs()= %d", na)
#. R/denseMatrix.R: gettextf("invalid nargs()= %d", na)
#: R/denseMatrix.R:0
msgid "invalid nargs()= %d"
msgstr "niepoprawne nargs()=%d"

#. R/Matrix.R: stop("invalid or not-yet-implemented 'Matrix' subsetting")
#: R/Matrix.R:0
msgid "invalid or not-yet-implemented 'Matrix' subsetting"
msgstr "niepoprawne lub jeszcze niezaimplementowane podstawienie 'Matrix'"

#. R/indMatrix.R: stop("kronecker method must use default 'FUN'")
#. R/kronecker.R: stop("kronecker method must use default 'FUN'")
#. R/kronecker.R: stop("kronecker method must use default 'FUN'")
#: R/indMatrix.R:0 R/kronecker.R:0
msgid "kronecker method must use default 'FUN'"
msgstr "metoda kroneckera musi użyć domyślnej 'FUN'"

#. R/abIndex.R: stop("length must be non-negative number")
#: R/abIndex.R:0
msgid "length must be non-negative number"
msgstr "długość musi być nieujemną liczbą"

#. R/AllClass.R: gettextf("length of 'perm' slot must be %d", n)
#: R/AllClass.R:0
msgid "length of 'perm' slot must be %d"
msgstr "długość gniazda 'perm' musi być równa %d"

#. R/AllClass.R: gettextf("length of 'perm' slot must be %s", n, domain = "R-Matrix")
#: R/AllClass.R:0
msgid "length of 'perm' slot must be %s"
msgstr "długość gniazda 'perm' musi być równa %s"

#. R/Ops.R: stop("length of 1st arg does not match dimension of 2nd")
#. R/Ops.R: stop("length of 1st arg does not match dimension of 2nd")
#: R/Ops.R:0
msgid "length of 1st arg does not match dimension of 2nd"
msgstr "długość pierwszego argumentu nie zgadza się z wymiarem drugiego"

#. R/Ops.R: stop("length of 2nd arg does not match dimension of first")
#. R/Ops.R: stop("length of 2nd arg does not match dimension of first")
#: R/Ops.R:0
msgid "length of 2nd arg does not match dimension of first"
msgstr "długość drugiego argumentu nie zgadza się z wymiarem pierwszego"

#. R/AllClass.R: gettext("length(Dimnames[[1]])' must match Dim[1]", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "length(Dimnames[[1]])' must match Dim[1]"
msgstr "'length(Dimnames[[1]])' musi zgadzać się z Dim[1]"

#. R/AllClass.R: gettext("length(Dimnames[[2]])' must match Dim[2]", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "length(Dimnames[[2]])' must match Dim[2]"
msgstr "'length(Dimnames[[2]])' musi zgadzać się z Dim[2]"

#. R/sparseMatrix.R: warning("length(i) is not a multiple of length(x)")
#: R/sparseMatrix.R:0
msgid "length(i) is not a multiple of length(x)"
msgstr "'length(i)' nie jest wielokrotnością 'length(x)'"

#. R/diagMatrix.R: stop("length(x) must be either 1 or #{cols}")
#: R/diagMatrix.R:0
msgid "length(x) must be either 1 or #{cols}"
msgstr "'length(x)' musi wynosić 1 lub #{kolumn}"

#. R/sparseMatrix.R: stop("logic programming error in printSpMatrix2(), please report")
#: R/sparseMatrix.R:0
msgid "logic programming error in printSpMatrix2(), please report"
msgstr "błąd logiczny programu w 'printSpMatrix2()', proszę zgłosić raport"

#. R/Tsparse.R: gettextf("logical subscript too long (%d, should be %d)", length(i),     n)
#: R/Tsparse.R:0
msgid "logical subscript too long (%d, should be %d)"
msgstr "indeks logiczny jest zbyt długi (%d, powinien być %d)"

#. R/Ops.R: warning("longer object length\n\tis not a multiple of shorter object length")
#: R/Ops.R:0
msgid ""
"longer object length\n"
"\tis not a multiple of shorter object length"
msgstr ""
"długość dłuższego obiektu\n"
"\tnie jest wielokrotnością długości krótszego obiektu"

#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/abIndex.R: warning("longer object length is not a multiple of shorter object length")
#: R/Ops.R:0 R/abIndex.R:0
msgid "longer object length is not a multiple of shorter object length"
msgstr ""
"długość dłuższego obiektu nie jest wielokrotnością długości krótszego obiektu"

#. R/Matrix.R: message("m[ <ij-matrix> ] <- v: inefficiently treating single elements")
#: R/Matrix.R:0
msgid "m[ <ij-matrix> ] <- v: inefficiently treating single elements"
msgstr "m[ <ij-matrix> ] <- v: nieefektywne traktowanie pojedynczych elementów"

#. R/Matrix.R: message("m[ <ij-matrix> ]: inefficiently indexing single elements")
#: R/Matrix.R:0
msgid "m[ <ij-matrix> ]: inefficiently indexing single elements"
msgstr "m[ <ij-matrix> ]: nieefektywne indeksowanie pojedynczych elementów"

#. R/diagMatrix.R: stop("matrix is not diagonal")
#: R/diagMatrix.R:0
msgid "matrix is not diagonal"
msgstr "macierz nie jest diagonalna"

#. R/AllClass.R: gettext("matrix is not square")
#: R/AllClass.R:0
msgid "matrix is not square"
msgstr "macierz nie jest kwadratowa"

#. R/diagMatrix.R: stop("matrix with non-zero off-diagonals cannot be coerced to \"diagonalMatrix\"")
#: R/diagMatrix.R:0
msgid ""
"matrix with non-zero off-diagonals cannot be coerced to \"diagonalMatrix\""
msgstr ""
"macierz z niezerowaymi wartościami pozadiagonalnymi nie może zostać "
"przekształcona w na obiekt klasy \"diagonalMatrix\""

#. R/Csparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#. R/Tsparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#. R/Tsparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#: R/Csparse.R:0 R/Tsparse.R:0
msgid "missing (i,j) = (%d,%d)"
msgstr "brakujące (i,j) = (%d,%d)"

#. R/spModels.R: stop("model frame and formula mismatch in model.matrix()")
#: R/spModels.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr "niezgodność ramki modelu oraz formuły w 'model.matrix()'"

#. R/spModels.R: gettextf("model.spmatrix(t, data, ..) with 't' equal to:", domain = "R-Matrix")
#: R/spModels.R:0
msgid "model.spmatrix(t, data, ..) with 't' equal to:"
msgstr "'model.spmatrix(t, data, ..)' z 't' równym:"

#. R/condest.R: stop("must either specify 'A' or the functions 'A.x' and 'At.x'")
#: R/condest.R:0
msgid "must either specify 'A' or the functions 'A.x' and 'At.x'"
msgstr "potrzeba określić 'A' lub funkcje 'A.x' oraz 'At.x'"

#. R/indMatrix.R: stop("must have exactly one non-zero entry per row")
#. R/pMatrix.R: stop("must have exactly one non-zero entry per row")
#: R/indMatrix.R:0 R/pMatrix.R:0
msgid "must have exactly one non-zero entry per row"
msgstr "potrzeba mieć dokładnie jeden niezerowy wpis na wiersz"

#. R/Auxiliaries.R: stop("names(dimnames(<matrix>)) must be NULL or of length two")
#: R/Auxiliaries.R:0
msgid "names(dimnames(<matrix>)) must be NULL or of length two"
msgstr ""

#. R/Tsparse.R: gettextf("nargs() = %d should never happen; please report.",     nA)
#: R/Tsparse.R:0
msgid "nargs() = %d should never happen; please report."
msgstr "'nargs() = %d' nie powinno się wydarzyć; proszę zgłosić raport."

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.2col)?",     nA)
#: R/Matrix.R:0
msgid "nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.2col)?"
msgstr "nargs() = %d.  Obce nielegalne argumenty wewnątrz '[ .. ]' (i.2col)?"

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.logical)?",     nA)
#: R/Matrix.R:0
msgid ""
"nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.logical)?"
msgstr ""
"nargs() = %d.  Obce nielegalne argumenty wewnątrz '[ .. ]' (i.logical)?"

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' ?",     nA)
#: R/Matrix.R:0
msgid "nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' ?"
msgstr "nargs() = %d.  Obce nielegalne argumenty wewnątrz '[ .. ]' ?"

#. R/Matrix.R: stop("negative values are not allowed in a matrix subscript")
#. R/Tsparse.R: stop("negative values are not allowed in a matrix subscript")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "negative values are not allowed in a matrix subscript"
msgstr "ujemne wartości nie są dozwolone w indeksach macierzy"

#. R/Tsparse.R: stop("no 'dimnames[[.]]': cannot use character indexing")
#: R/Tsparse.R:0
msgid "no 'dimnames[[.]]': cannot use character indexing"
msgstr "brak 'dimnames[[.]]': nie można używać indeksowania tekstowego"

#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#: R/products.R:0
#, fuzzy
msgid "non-conformable arguments"
msgstr "niezgodne wymiary macierzy w %s"

#. R/Auxiliaries.R: gettextf("non-conformable matrix dimensions in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "non-conformable matrix dimensions in %s"
msgstr "niezgodne wymiary macierzy w %s"

#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#: R/diagMatrix.R:0
msgid "non-matching dimensions"
msgstr "niezgodne wymiary"

#. R/diagMatrix.R: stop("non-square matrix")
#. R/diagMatrix.R: stop("non-square matrix")
#: R/diagMatrix.R:0
msgid "non-square matrix"
msgstr "niekwadratowa macierz"

#. R/dppMatrix.R: stop("not a positive definite matrix")
#. R/dsyMatrix.R: stop("not a positive definite matrix")
#: R/dppMatrix.R:0 R/dsyMatrix.R:0
msgid "not a positive definite matrix"
msgstr "to nie jest dodatnio określona macierz"

#. R/indMatrix.R: stop("not a skinny matrix")
#: R/indMatrix.R:0
msgid "not a skinny matrix"
msgstr "to nie jest chuda macierz"

#. R/pMatrix.R: stop("not a square matrix")
#: R/pMatrix.R:0
msgid "not a square matrix"
msgstr "to nie jest macierz kwadratowa"

#. R/Auxiliaries.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/Csparse.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/dsyMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/dsyMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/ldenseMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/ndenseMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#: R/Auxiliaries.R:0 R/Csparse.R:0 R/dsyMatrix.R:0 R/ldenseMatrix.R:0
#: R/ndenseMatrix.R:0
msgid "not a symmetric matrix; consider forceSymmetric() or symmpart()"
msgstr ""
"to nie jest macierz symetryczna; rozważ 'forceSymmetric()' lub 'symmpart()'"

#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/ldenseMatrix.R: stop("not a triangular matrix")
#. R/ndenseMatrix.R: stop("not a triangular matrix")
#: R/Auxiliaries.R:0 R/ldenseMatrix.R:0 R/ndenseMatrix.R:0
msgid "not a triangular matrix"
msgstr "to nie jest macierz trójkątną"

#. R/condest.R: gettextf("not converged in %d iterations", iter.max)
#: R/condest.R:0
msgid "not converged in %d iterations"
msgstr "nie uzbieżnił się w %d iteracjach"

#. R/condest.R: message("not enough new vecs -- stop iterations")
#: R/condest.R:0
msgid "not enough new vecs -- stop iterations"
msgstr "zbyt mało nowych wektorów -- zatrzymywanie iteracji"

#. R/abIndex.R: stop("not yet implemented")
#. R/sparseMatrix.R: stop("not yet implemented")
#: R/abIndex.R:0 R/sparseMatrix.R:0
msgid "not yet implemented"
msgstr "jeszcze niezaimplementowane"

#. R/diagMatrix.R: stop("not yet implemented .. please report")
#: R/diagMatrix.R:0
msgid "not yet implemented .. please report"
msgstr "jeszcze niezaimplementowane .. proszę zgłosić raport"

#. R/Auxiliaries.R: gettextf(" not yet implemented for %s", clx@className)
#. R/Auxiliaries.R: gettextf(" not yet implemented for %s", clx@className)
#: R/Auxiliaries.R:0
msgid "not yet implemented for %s"
msgstr "jeszcze nie jest zaimplementowana dla %s"

#. R/Auxiliaries.R: gettextf("not yet implemented for class %s", dQuote(class.x))
#: R/Auxiliaries.R:0
msgid "not yet implemented for class %s"
msgstr "jeszcze niezaimplementowane dla klasy %s"

#. R/Auxiliaries.R: gettextf("not yet implemented for matrix with typeof %s", typeof(x))
#. R/Auxiliaries.R: gettextf("not yet implemented for matrix with typeof %s", typeof(x))
#: R/Auxiliaries.R:0
msgid "not yet implemented for matrix with typeof %s"
msgstr "jeszcze niezaimplementowana dla macierzy z typem %s"

#. R/Matrix.R: stop("not-yet-implemented 'Matrix[<-' method")
#: R/Matrix.R:0
msgid "not-yet-implemented 'Matrix[<-' method"
msgstr "jeszcze niezaimplementowana metoda 'Matrix[<-'"

#. R/Tsparse.R: stop("not-yet-implemented coercion to \"TsparseMatrix\"")
#: R/Tsparse.R:0
msgid "not-yet-implemented coercion to \"TsparseMatrix\""
msgstr "jeszcze niezaimplementowane przekształcenie na 'TsparseMatrix'"

#. R/Auxiliaries.R: gettextf("not-yet-implemented method for %s(<%s>).\n ->>  Ask the package authors to implement the missing feature.",     fun, cl)
#: R/Auxiliaries.R:0
msgid ""
"not-yet-implemented method for %s(<%s>).\n"
" ->>  Ask the package authors to implement the missing feature."
msgstr ""
"metoda jeszcze niezaimplementowana dla %s(<%s>).\n"
" ->>  Poproś autorów pakietu o zaimplementowanie brakującej funkcjonalności."

#. R/Auxiliaries.R: gettextf("not-yet-implemented method for %s(<%s>, <%s>).\n ->>  Ask the package authors to implement the missing feature.",     fun, cl1, cl2)
#: R/Auxiliaries.R:0
msgid ""
"not-yet-implemented method for %s(<%s>, <%s>).\n"
" ->>  Ask the package authors to implement the missing feature."
msgstr ""
"metoda jeszcze niezaimplementowana dla %s(<%s>, <%s>).\n"
" ->>  Poproś autorów pakietu o zaimplementowanie brakującej funkcjonalności."

#. R/products.R: gettextf("not-yet-implemented method for <%s> %%*%% <%s>", class(x),     class(y))
#: R/products.R:0
msgid "not-yet-implemented method for <%s> %%*%% <%s>"
msgstr "jeszcze niezaimplementowana metoda dla <%s> %%*%% <%s>"

#. R/Csparse.R: stop("nothing to replace with")
#. R/Tsparse.R: stop("nothing to replace with")
#. R/Tsparse.R: stop("nothing to replace with")
#. R/sparseVector.R: stop("nothing to replace with")
#: R/Csparse.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "nothing to replace with"
msgstr "nic do zastąpienia"

#. R/Csparse.R: stop("number of items to replace is not a multiple of replacement length")
#. R/Matrix.R: warning("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: warning("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: stop("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: warning("number of items to replace is not a multiple of replacement length")
#. R/sparseVector.R: stop("number of items to replace is not a multiple of replacement length")
#: R/Csparse.R:0 R/Matrix.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "number of items to replace is not a multiple of replacement length"
msgstr ""
"liczba pozycji do zastąpienia nie jest wielokrotnością długości elementu "
"zastępującego"

#. R/sparseMatrix.R: warning("number of non zeros is smaller than 'nnz' because of duplicated (i,j)s")
#: R/sparseMatrix.R:0
msgid "number of non zeros is smaller than 'nnz' because of duplicated (i,j)s"
msgstr ""

#. R/Ops.R: gettextf("number of rows are not compatible for %s", .Generic)
#: R/Ops.R:0
msgid "number of rows are not compatible for %s"
msgstr "liczba wierszy nie jest zgodna dla %s"

#. R/dMatrix.R: gettextf("object of class %s with NA values cannot be coerced to an object of class %s",     dQuote("dMatrix"), dQuote("nMatrix"))
#. R/lMatrix.R: gettextf("object of class %s with NA values cannot be coerced to an object of class %s",     dQuote("lMatrix"), dQuote("nMatrix"))
#: R/dMatrix.R:0 R/lMatrix.R:0
#, fuzzy
msgid ""
"object of class %s with NA values cannot be coerced to an object of class %s"
msgstr ""
"obiekt klasy \"dMatrix\" z wartościami NA nie może zostać przekształcony w "
"obiekt klasy \"nMatrix\""

#. R/sparseMatrix.R: stop("only 2-dimensional tables can be directly coerced to sparse matrices")
#: R/sparseMatrix.R:0
msgid "only 2-dimensional tables can be directly coerced to sparse matrices"
msgstr ""
"jedynie 2-wymiarowe tablice mogą zostać bezpośrednio przekształcone w "
"rzadkie macierze"

#. R/sparseMatrix.R: stop("only square matrices can be used as incidence matrices for graphs")
#: R/sparseMatrix.R:0
msgid "only square matrices can be used as incidence matrices for graphs"
msgstr ""
"jedynie kwadratowe macierze mogą zostać użyte jako macierz incydencji dla "
"grafów"

#. R/AllClass.R: gettext("pMatrix must be square", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "pMatrix must be square"
msgstr "pMatrix musi być kwadratowa"

#. R/MatrixFactorization.R: gettext("packed 'Bunch-Kaufman' factorization of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "packed 'Bunch-Kaufman' factorization of:"
msgstr "Spakowana faktoryzacja 'Buncha-Kaufmana':"

#. R/products.R: gettextf("potentially suboptimal crossprod(\"%s\", <%s>[=<ANY>]) as t(.) %s y",     class(x), class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal crossprod(\"%s\", <%s>[=<ANY>]) as t(.) %s y"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal crossprod(\"%s\",\"%s\") as t(.) %s y",     class(x), class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal crossprod(\"%s\",\"%s\") as t(.) %s y"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal crossprod(<", class(x), ">) as t(.) %*% . ")
#. R/products.R: gettextf("potentially suboptimal crossprod(<", class(x), ">) as  . %*% t(.)")
#: R/products.R:0
msgid "potentially suboptimal crossprod(<"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal tcrossprod(\"%s\",\"%s\") as  x %s t(y)",     class(x), class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal tcrossprod(\"%s\",\"%s\") as  x %s t(y)"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal tcrossprod(<%s>[=<ANY>], \"%s\") as  x %s t(y)",     class(x), class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal tcrossprod(<%s>[=<ANY>], \"%s\") as  x %s t(y)"
msgstr ""

#. R/abIndex.R: stop("prod(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "prod(<abIndex>) is not yet implemented"
msgstr "'prod(<abIndex>)' nie jest jeszcze zaimplementowane"

#. R/Summary.R: stop("programming error: min() should have dispatched w/ 1st arg much earlier")
#: R/Summary.R:0
msgid "programming error: min() should have dispatched w/ 1st arg much earlier"
msgstr ""
"błąd programistyczny: 'min()' powinno zostać wysłane z pierwszym argumentem "
"znacznie wcześniej"

#. R/sparseQR.R: warning("qr.R(<sparse>) may differ from qr.R(<dense>) because of permutations.  Possibly use our qrR() instead")
#: R/sparseQR.R:0
msgid ""
"qr.R(<sparse>) may differ from qr.R(<dense>) because of permutations.  "
"Possibly use our qrR() instead"
msgstr ""
"'qr.R(<rzadkie>)' może różnić się od 'qr.R(<gęste>)' z powodu permutacji. "
"Być może użyj metody qrR() w zamian"

#. R/rankMatrix.R: gettextf("rankMatrix(<large sparse Matrix>, method = '%s') coerces to dense matrix. Probably should rather use method = 'qr' !?",     method)
#: R/rankMatrix.R:0
msgid ""
"rankMatrix(<large sparse Matrix>, method = '%s') coerces to dense matrix. "
"Probably should rather use method = 'qr' !?"
msgstr ""
"polecenie 'rankMatrix(<duża rzadka macierz>, method = '%s')' wykonuje "
"przekształcenie na gęstą macierz. Prawdopodobnie powinieneś użyć metody "
"'qr' !?"

#. R/rankMatrix.R: gettextf("rankMatrix(x, method='qr'): computing t(x) as nrow(x) < ncol(x)")
#: R/rankMatrix.R:0
msgid "rankMatrix(x, method='qr'): computing t(x) as nrow(x) < ncol(x)"
msgstr "rankMatrix(x, method='qr'): obliczanie t(x) jako nrow(x) < ncol(x)"

#. R/sparseMatrix.R: warning("rcond(.) via sparse -> dense coercion")
#: R/sparseMatrix.R:0
msgid "rcond(.) via sparse -> dense coercion"
msgstr "'rcond(.)' poprzez przekształcenie rzadkie -> gęste"

#. R/HBMM.R: stop("readMM(): column values 'j' are not in 1:nc", call. = FALSE)
#: R/HBMM.R:0
msgid "readMM(): column values 'j' are not in 1:nc"
msgstr "readMM(): wartości kolumny 'j' nie są w przedziale 1:nc"

#. R/HBMM.R: stop("readMM(): row\t values 'i' are not in 1:nr", call. = FALSE)
#: R/HBMM.R:0
msgid "readMM(): row\t values 'i' are not in 1:nr"
msgstr "readMM(): wartości wiersza 'i' nie są w przedziale 1:nr"

#. R/dgTMatrix.R: gettextf("rectangle size %s [pixels];  --> lwd :%s", paste(round(pSize,     1), collapse = " x "), formatC(lwd), domain = "R-Matrix")
#: R/dgTMatrix.R:0
msgid "rectangle size %s [pixels];  --> lwd :%s"
msgstr "rozmiar prostokąta %s [pikseli];  --> lwd :%s"

#. R/indMatrix.R: stop("replacing \"indMatrix\" entries is not allowed, as rarely sensible")
#: R/indMatrix.R:0
msgid "replacing \"indMatrix\" entries is not allowed, as rarely sensible"
msgstr ""
"zastępowanie wpisów \"indMatrix\" jest niedozwolone, ponieważ jest to rzadko "
"sensowne"

#. R/HBMM.R: gettextf("representation '%s' not recognized", repr)
#: R/HBMM.R:0
msgid "representation '%s' not recognized"
msgstr "reprezentacja '%s' nie została rozpoznana"

#. R/Tsparse.R: gettextf("row indices must be <= nrow(.) which is %d", nr)
#: R/Tsparse.R:0
msgid "row indices must be <= nrow(.) which is %d"
msgstr "indeksy wiersza muszą być <= 'nrow(.)' który wynosi %d"

#. R/dsCMatrix.R: gettext("solve.dsC.dC(): Cholmod factorization unsuccessful --> using LU(<dgC>)",     domain = "R-Matrix")
#: R/dsCMatrix.R:0
msgid "solve.dsC.dC(): Cholmod factorization unsuccessful --> using LU(<dgC>)"
msgstr ""
"solve.dsC.dC(): Faktoryzacja 'cholmod' nie powiodła się --> używanie "
"'LU(<dgC>)'"

#. R/dsCMatrix.R: gettext("solve.dsC.mat(): Cholmod factorization unsuccessful --> using LU(<dgC>)",     domain = "R-Matrix")
#: R/dsCMatrix.R:0
msgid "solve.dsC.mat(): Cholmod factorization unsuccessful --> using LU(<dgC>)"
msgstr ""
"solve.dsC.mat(): Faktoryzacja 'cholmod' nie powiodła się --> używanie "
"'LU(<dgC>)'"

#. R/diagMatrix.R: stop("some arguments are not matrices")
#: R/diagMatrix.R:0
msgid "some arguments are not matrices"
msgstr "niektóre argumenty nie są macierzami"

#. R/AllClass.R: gettext("some entries are not integer valued", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "some entries are not integer valued"
msgstr ""
"niektóre argumenty nie posiadają wartości będącymi liczbami całkowitymi"

#. R/Ops.R: gettextf("sparse to dense (%s) coercion in '%s' -> %s", lClass,     .Generic, "Cmp.Mat.atomic", domain = "R-Matrix")
#. R/Ops.R: gettextf("sparse to dense (%s) coercion in '%s' -> %s", lClass,     .Generic, "Logic.Mat.atomic", domain = "R-Matrix")
#: R/Ops.R:0
msgid "sparse to dense (%s) coercion in '%s' -> %s"
msgstr "przekształcenie macierzy rzadkiej w gęstą (%s) w '%s' -> %s"

#. R/Ops.R: gettext("suboptimal 'Arith' implementation of  'dsC*  o  dsC*'",     domain = "R-Matrix")
#: R/Ops.R:0
msgid "suboptimal 'Arith' implementation of  'dsC*  o  dsC*'"
msgstr "optymalna implementacja 'Arith'  'dsC*  o  dsC*'"

#. R/Matrix.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Matrix.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Tsparse.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Tsparse.R: stop("such indexing must be by logical or 2-column numeric matrix")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "such indexing must be by logical or 2-column numeric matrix"
msgstr ""
"takie indeksowanie musi być wykonane poprzez macierz logiczną lub 2-"
"kolumnową macierz liczbową"

#. R/abIndex.R: stop("sum(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "sum(<abIndex>) is not yet implemented"
msgstr "'sum(<abIndex>)' nie jest jeszcze zaimplementowane"

#. R/sparseMatrix.R: stop("symmetric matrix must be square")
#: R/sparseMatrix.R:0
msgid "symmetric matrix must be square"
msgstr "macierz symetryczna musi być kwadratowa"

#. R/HBMM.R: gettextf("symmetry form '%s' is not yet implemented", sym)
#. R/HBMM.R: gettextf("symmetry form '%s' is not yet implemented", sym)
#: R/HBMM.R:0
msgid "symmetry form '%s' is not yet implemented"
msgstr "forma symetryczna '%s' nie jest jeszcze zaimplementowana"

#. R/HBMM.R: gettextf("symmetry form '%s' not recognized", sym)
#: R/HBMM.R:0
msgid "symmetry form '%s' not recognized"
msgstr "forma symetryczna '%s' nie została rozpoznana"

#. R/HBMM.R: stop("symmetry form 'hermitian' not yet implemented for reading")
#. R/HBMM.R: stop("symmetry form 'hermitian' not yet implemented for reading")
#: R/HBMM.R:0
msgid "symmetry form 'hermitian' not yet implemented for reading"
msgstr ""
"forma symetryczna 'hermitian' nie jest jeszcze zaimplementowana na potrzeby "
"odczytu"

#. R/HBMM.R: stop("symmetry form 'skew-symmetric' not yet implemented for reading")
#. R/HBMM.R: stop("symmetry form 'skew-symmetric' not yet implemented for reading")
#: R/HBMM.R:0
msgid "symmetry form 'skew-symmetric' not yet implemented for reading"
msgstr ""
"forma symetryczna 'skew-symmetric' nie jest jeszcze zaimplementowana na "
"potrzeby odczytu"

#. R/abIndex.R: gettextf("target is %s, current is %s", data.class(target), data.class(current),     domain = "R-Matrix")
#: R/abIndex.R:0
msgid "target is %s, current is %s"
msgstr "cel to %s, bieżący to %s"

#. R/bandSparse.R: gettextf("the %d-th (sub)-diagonal (k = %d) is too short; filling with NA's",     s, kk)
#: R/bandSparse.R:0
msgid "the %d-th (sub)-diagonal (k = %d) is too short; filling with NA's"
msgstr ""
"(pod)-diagonala %d (k = %d) jest zbyt krótkal wypełnianie wartościami NA"

#. R/dgTMatrix.R: stop("the matrix is not triangular")
#: R/dgTMatrix.R:0
msgid "the matrix is not triangular"
msgstr "macierz nie jest trójkątna"

#. R/indMatrix.R: stop("the number of non-zero entries differs from nrow(.)")
#. R/pMatrix.R: stop("the number of non-zero entries differs from nrow(.)")
#: R/indMatrix.R:0 R/pMatrix.R:0
msgid "the number of non-zero entries differs from nrow(.)"
msgstr "liczba niezerowych wpisów różni się od 'nrow(.)'"

#. R/abIndex.R: stop("too many arguments")
#: R/abIndex.R:0
msgid "too many arguments"
msgstr "zbyt wiele argumentów"

#. R/Csparse.R: stop("too many replacement values")
#. R/Tsparse.R: stop("too many replacement values")
#. R/sparseVector.R: stop("too many replacement values")
#: R/Csparse.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "too many replacement values"
msgstr "zbyt dużo wartości zamieniających"

#. R/Matrix.R: warning("trimmed mean of 'sparseVector' -- suboptimally using as.numeric(.)")
#: R/Matrix.R:0
msgid "trimmed mean of 'sparseVector' -- suboptimally using as.numeric(.)"
msgstr ""
"przycięta średnia 'sparseVector' -- optymalnie używając 'as.numeric(.)'"

#. R/HBMM.R: gettextf("type '%s' not recognized", typ)
#: R/HBMM.R:0
msgid "type '%s' not recognized"
msgstr "typ '%s' nie został rozpoznany"

#. R/denseMatrix.R: gettextf("undefined method for class %s", dQuote(cl))
#: R/denseMatrix.R:0
msgid "undefined method for class %s"
msgstr "niezdefiniowana metoda dla klasy %s"

#. R/CHMfactor.R: stop("update must be TRUE/FALSE or '+' or '-'")
#: R/CHMfactor.R:0
msgid "update must be TRUE/FALSE or '+' or '-'"
msgstr "'update' musi wynosić TRUE/FALSE lub '+' lub '-'"

#. R/Csparse.R: stop("using\t\"old code\" part in  Csparse subassignment")
#: R/Csparse.R:0
msgid "using\t\"old code\" part in  Csparse subassignment"
msgstr "używanie\t części 'old code' w przypisaniu w 'Csparse'"

#. R/Matrix.R: warning("using slow kronecker() method")
#. R/Matrix.R: warning("using slow kronecker() method")
#: R/Matrix.R:0
msgid "using slow kronecker() method"
msgstr "używanie powolnej metody 'kronecker()'"

#. R/Csparse.R: warning("using\"old code\" part in  Csparse subassignment\n >>> please report to Matrix-authors@r-project.org",     immediate. = TRUE, domain = "R-Matrix")
#: R/Csparse.R:0
msgid ""
"using\"old code\" part in  Csparse subassignment\n"
" >>> please report to Matrix-authors@r-project.org"
msgstr ""
"używanie\t części 'old code' w przypisaniu w 'Csparse'\n"
">>> proszę zgłosić raport na adres Matrix-authors@r-project.org"

#. R/spModels.R: gettextf("variable '%s' converted to a factor", i)
#: R/spModels.R:0
msgid "variable '%s' converted to a factor"
msgstr "zmienna '%s' została zamieniona na czynnik"

#. R/spModels.R: gettextf("variable '%s' is absent, its contrast will be ignored",     nn)
#: R/spModels.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "zmienna '%s' jest nieobecna, jej kontrast zostanie zignorowany"

#. R/Ops.R: stop("vector too long in Matrix - vector operation")
#: R/Ops.R:0
msgid "vector too long in Matrix - vector operation"
msgstr "wektor jest zbyt długi w operacji macierz-wektor"

#. R/Csparse.R: gettext("wasteful C -> T -> C in replCmat(x,i,j,v) for <sparse>[i,j] <- v",     domain = "R-Matrix")
#: R/Csparse.R:0
msgid "wasteful C -> T -> C in replCmat(x,i,j,v) for <sparse>[i,j] <- v"
msgstr ""
"niepotrzebne przejście C -> T -> C w funkcji 'replCmat(x,i,j,v)' dla "
"'<sparse>[i,j] <- v'"

#. R/condest.R: warning("when 'A' is specified, 'A.x' and 'At.x' are disregarded")
#: R/condest.R:0
msgid "when 'A' is specified, 'A.x' and 'At.x' are disregarded"
msgstr "gdy 'A' jest określone, 'A.x' oraz 'At.x' są odrzucane"

#. R/abIndex.R: stop("wrong sign in 'by' argument")
#: R/abIndex.R:0
msgid "wrong sign in 'by' argument"
msgstr "niepoprawny znak w argumencie 'by'"

#. R/abIndex.R: warning("x / 0 for an <abIndex> x with sign-change\nno longer representable as 'rleDiff'")
#: R/abIndex.R:0
msgid ""
"x / 0 for an <abIndex> x with sign-change\n"
"no longer representable as 'rleDiff'"
msgstr ""
"x / 0 dla '<abIndex> x' ze zmianą znaku\n"
"nie jest dłużej reprezentowalne jako 'rleDiff'"

#. R/Tsparse.R: gettextf("x[.,.] <- val : x being coerced from Tsparse* to CsparseMatrix")
#: R/Tsparse.R:0
msgid "x[.,.] <- val : x being coerced from Tsparse* to CsparseMatrix"
msgstr ""
"x[.,.] <- wartość : 'x' zostaje przekształcone z 'Tsparse*' na "
"'CsparseMatrix'"

#. R/Tsparse.R: gettextf("x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced NA |--> TRUE.",     dQuote(clx))
#: R/Tsparse.R:0
msgid ""
"x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced NA |--> TRUE."
msgstr ""
"x[.,.] <- wartość: 'x' to %s, wartość nie w zakresie {TRUE, FALSE} zostaje "
"przekształcona NA |--> TRUE."

#. R/Tsparse.R: gettextf("x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced.",     dQuote(clx))
#: R/Tsparse.R:0
msgid "x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced."
msgstr ""
"x[.,.] <- wartość: 'x' to %s, wartość nie w zakresie {TRUE, FALSE} zostaje "
"przekształcona."

#. R/Tsparse.R: gettextf("x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced.",     dQuote(clx))
#: R/Tsparse.R:0
msgid "x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced."
msgstr ""
"x[.] <- wartość: 'x' to %s, wartość nie w zakresie {TRUE, FALSE} zostaje "
"przekształcona."

#. R/Tsparse.R: gettextf("x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced; NA |--> TRUE.",     dQuote(clx))
#: R/Tsparse.R:0
msgid ""
"x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced; NA |--> TRUE."
msgstr ""
"x[.] <- wartość: 'x' to %s, wartość nie w zakresie {TRUE, FALSE} zostaje "
"przekształcona; NA |--> TRUE."

#. R/Tsparse.R: stop("you cannot mix negative and positive indices")
#. R/Tsparse.R: stop("you cannot mix negative and positive indices")
#. R/sparseVector.R: stop("you cannot mix negative and positive indices")
#: R/Tsparse.R:0 R/sparseVector.R:0
msgid "you cannot mix negative and positive indices"
msgstr "nie można mieszać ujemnych oraz dodatnich indeksów"

#. R/bandSparse.R: ngettext(len.k, "'diagonals' matrix must have %d column (= length(k) )",     "'diagonals' matrix must have %d columns (= length(k) )",     domain = "R-Matrix")
#: R/bandSparse.R:0
#, fuzzy
msgid "'diagonals' matrix must have %d column (= length(k) )"
msgid_plural "'diagonals' matrix must have %d columns (= length(k) )"
msgstr[0] "'diagonals' musi mieć tę samą długość (%d) co 'k'"
msgstr[1] "'diagonals' musi mieć tę samą długość (%d) co 'k'"
msgstr[2] "'diagonals' musi mieć tę samą długość (%d) co 'k'"

#. R/Auxiliaries.R: ngettext(nx, "extra argument %s will be disregarded in\n %s",     "extra arguments %s will be disregarded in\n %s", domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid ""
"extra argument %s will be disregarded in\n"
" %s"
msgid_plural ""
"extra arguments %s will be disregarded in\n"
" %s"
msgstr[0] ""
"argumenty %s zostały odrzucone w\n"
" %s"
msgstr[1] ""
"argumenty %s zostały odrzucone w\n"
" %s"
msgstr[2] ""
"argumenty %s zostały odrzucone w\n"
" %s"

#~ msgid "\"lMatrix\" object with NAs cannot be coerced to \"nMatrix\""
#~ msgstr ""
#~ "obiekt klasy \"lMatrix\" z wartościami NA nie może zostać przekształcony "
#~ "na obiekt klasy \"nMatrix\""
