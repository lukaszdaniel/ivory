msgid ""
msgstr ""
"Project-Id-Version: survival 2.37-2\n"
"POT-Creation-Date: 2015-02-13 16:25\n"
"PO-Revision-Date: 2014-07-05 13:15+0100\n"
"Last-Translator: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language-Team: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language: pl_PL\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2);\n"
"X-Poedit-SourceCharset: iso-8859-1\n"
"X-Generator: Poedit 1.5.4\n"

#. R/print.aareg.S: gettextf("%d out of %d unique event times used", summ$n[2], x$n[3], domain = "R-survival")
#: R/print.aareg.S:0
msgid "%d out of %d unique event times used"
msgstr "użyto %d z liczby %d unikalnych zdarzeń czasowych"

#. R/survreg.S: gettextf("%s distribution has a fixed scale, user specified value ignored", sQuote(dlist$name))
#: R/survreg.S:0
msgid "%s distribution has a fixed scale, user specified value ignored"
msgstr ""
"rozkład %s posiada ustaloną skalę, wartość określona przez użytkownika "
"została zignorowana"

#. R/survreg.S: gettextf("%s distribution has no optional parameters", sQuote(dlist$name))
#: R/survreg.S:0
msgid "%s distribution has no optional parameters"
msgstr "rozkład %s nie ma opcjonalnych parametrów"

#. R/dsurvreg.S: gettextf("%s distribution was not found", sQuote(distribution))
#. R/dsurvreg.S: gettextf("%s distribution was not found", sQuote(distribution))
#. R/dsurvreg.S: gettextf("%s distribution was not found", sQuote(distribution))
#. R/survreg.S: gettextf("%s distribution was not found", sQuote(dist))
#: R/dsurvreg.S:0 R/survreg.S:0
msgid "%s distribution was not found"
msgstr "rozkład %s nie został znaleziony"

#. R/anova.survreg.S: gettextf("%s distribution with %s link", sQuote(family.obj[1]), sQuote(family.obj[2]))
#: R/anova.survreg.S:0
msgid "%s distribution with %s link"
msgstr "rozkład %s z łączeniem %s"

#. R/summary.ratetable.S: gettextf("%s has levels of: %s", att$dimid[i], paste(att$dimnames[[i]], collapse = " "),     domain = "R-survival")
#. R/summary.ratetable.S: gettextf("%s has levels of: %s", att$dimid[i], paste(att$dimnames[[i]], collapse = " "),     domain = "R-survival")
#: R/summary.ratetable.S:0
msgid "%s has levels of: %s"
msgstr "%s ma poziomy: %s"

#. R/coxpenal.fit.R: gettextf("%s not matched", (cargs[[i]])[is.na(temp)])
#: R/coxpenal.fit.R:0
msgid "%s not matched"
msgstr "%s nie zostało dopasowane"

#. R/summary.ratetable.S: gettextf("%s ranges from %s to %s; with %d categories\n", att$dimid[i], format(min(att$cutpoints[[i]])),     format(max(att$cutpoints[[i]])), att$dim[i], domain = "R-survival")
#. R/summary.ratetable.S: gettextf("%s ranges from %s to %s; with %d categories\n", att$dimid[i], format(as.Date(min(att$cutpoints[[i]]),     origin = "1960/01/01")), format(as.Date(max(att$cutpoints[[i]]), origin = "1960/01/01")),     att$dim[i], domain = "R-survival")
#. R/summary.ratetable.S: gettextf("%s ranges from %s to %s; with %d categories\n", att$dimid[i], format(min(att$cutpoints[[i]])),     format(max(att$cutpoints[[i]])), att$dim[i], domain = "R-survival")
#: R/summary.ratetable.S:0
msgid "%s ranges from %s to %s; with %d categories"
msgstr "%s zmienia się w zakresie od %s do %s; z %d kategoriami"

#. R/summary.ratetable.S: gettextf("%s ranges from %s to %s; with %d categories linearly interpolated in %d steps per division\n",     att$dimid[i], format(min(att$cutpoints[[i]])), format(max(att$cutpoints[[i]])),     att$dim[i], att$factor[i], domain = "R-survival")
#: R/summary.ratetable.S:0
msgid ""
"%s ranges from %s to %s; with %d categories linearly interpolated in %d "
"steps per division"
msgstr ""
"%s zmienia się w zakresie od %s do %s; z %d kategoriami liniowo "
"interpolowanych w %d krokach na podział"

#. R/survpenal.fit.S: gettextf("%s was not matched", sQuote(cargs[[i]][is.na(temp)]))
#: R/survpenal.fit.S:0
msgid "%s was not matched"
msgstr "%s nie zostało dopasowane"

#. R/tcut.S: gettextf("%s+ thru %s", format(breaks[-length(breaks)]), format(breaks[-1]))
#: R/tcut.S:0
msgid "%s+ thru %s"
msgstr "%s+ aż do %s"

#. R/Surv.S: gettextf("'%s' and '%s' arguments are of different lengths", "time", "event")
#. R/Surv.S: gettextf("'%s' and '%s' arguments are of different lengths", "time", "time2")
#. R/Surv.S: gettextf("'%s' and '%s' arguments are of different lengths", "time", "event")
#. R/Surv.S: gettextf("'%s' and '%s' arguments are of different lengths", "time", "time2")
#. R/coxph.wtest.S: gettextf("'%s' and '%s' arguments are of different lengths", "var", "b")
#. R/coxph.wtest.S: gettextf("'%s' and '%s' arguments are of different lengths", "var", "b")
#. R/coxph.wtest.S: gettextf("'%s' and '%s' arguments are of different lengths", "var", "b")
#. R/frailty.brent.S: gettextf("'%s' and '%s' arguments are of different lengths", "x", "y")
#: R/Surv.S:0 R/coxph.wtest.S:0 R/frailty.brent.S:0
msgid "'%s' and '%s' arguments are of different lengths"
msgstr "argumenty '%s' oraz '%s' mają różną długość"

#. R/aareg.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("aareg"))
#. R/anova.coxph.S: gettextf("'%s' argument is not an object of class %s", "object", dQuote("coxph"))
#. R/attrassign.R: gettextf("'%s' argument is not an object of class %s", "tt", dQuote("terms"))
#. R/basehaz.S: gettextf("'%s' argument is not an object of class %s", "fit", dQuote("coxph"))
#. R/cox.zph.S: gettextf("'%s' argument is not an object of class %s", "fit", dQuote("coxph"))
#. R/coxph.rvar.S: gettextf("'%s' argument is not an object of class %s", "fit", dQuote("coxph"))
#. R/is.ratetable.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("ratetable"))
#. R/lines.aareg.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("aareg"))
#. R/plot.aareg.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("aareg"))
#. R/predict.coxph.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("coxph"))
#. R/print.aareg.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("aareg"))
#. R/print.coxph.penal.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("coxph.penal"))
#. R/print.survdiff.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("survdiff"))
#. R/print.survexp.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("survexp"))
#. R/print.survreg.penal.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("servreg.penal"))
#. R/pspline.S: gettextf("'%s' argument is not an object of class %s", "x", dQuote("pspline"))
#. R/quantile.survfit.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("survfit"))
#. R/summary.aareg.S: gettextf("'%s' argument is not an object of class %s", "object", dQuote("aareg"))
#. R/summary.ratetable.S: gettextf("'%s' argument is not an object of class %s", "object", dQuote("ratetable"))
#. R/summary.survexp.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("survexp"))
#. R/survexp.R: gettextf("'%s' argument is not an object of class %s", "ratetable", dQuote("ratetable"))
#. R/survfitKM.S: gettextf("'%s' argument is not an object of class %s", "y", dQuote("Surv"))
#. R/survfitTurnbull.S: gettextf("'%s' argument is not an object of class %s", "y", dQuote("Surv"))
#. R/survfitms.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("survfit"))
#. R/survfitms.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("survfitms"))
#: R/aareg.S:0 R/anova.coxph.S:0 R/attrassign.R:0 R/basehaz.S:0 R/cox.zph.S:0
#: R/coxph.rvar.S:0 R/is.ratetable.S:0 R/lines.aareg.S:0 R/plot.aareg.S:0
#: R/predict.coxph.R:0 R/print.aareg.S:0 R/print.coxph.penal.S:0
#: R/print.survdiff.S:0 R/print.survexp.S:0 R/print.survreg.penal.S:0
#: R/pspline.S:0 R/quantile.survfit.R:0 R/summary.aareg.S:0
#: R/summary.ratetable.S:0 R/summary.survexp.R:0 R/survexp.R:0 R/survfitKM.S:0
#: R/survfitTurnbull.S:0 R/survfitms.R:0
msgid "'%s' argument is not an object of class %s"
msgstr "argument '%s' nie jest obiektem klasy %s"

#. R/coxpenal.fit.R: gettextf("'%s' argument is of length 0", "x")
#: R/coxpenal.fit.R:0
msgid "'%s' argument is of length 0"
msgstr "argument '%s' jest długości 0"

#. R/survfitKM.S: gettextf("'%s' argument must be a factor", "x")
#. R/survfitTurnbull.S: gettextf("'%s' argument must be a factor", "x")
#: R/survfitKM.S:0 R/survfitTurnbull.S:0
msgid "'%s' argument must be a factor"
msgstr "argument '%s' musi być czynnikiem"

#. R/Surv.S: gettextf("'%s' argument must be numeric", "time")
#. R/Surv.S: gettextf("'%s' argument must be numeric", "time")
#. R/Surv.S: gettextf("'%s' argument must be numeric", "time")
#. R/Surv.S: gettextf("'%s' argument must be numeric", "time2")
#. R/Surv.S: gettextf("'%s' argument must be numeric", "time2")
#: R/Surv.S:0
msgid "'%s' argument must be numeric"
msgstr "argument '%s' musi być liczbą"

#. R/match.ratetable.S: gettextf("'%s' argument needed by the ratetable was not found in the data", dimid[is.na(ord)])
#: R/match.ratetable.S:0
msgid "'%s' argument needed by the ratetable was not found in the data"
msgstr ""
"argument '%s' wymagany przez tabelę proporcji nie został znaleziony w danych"

#. R/is.ratetable.S: gettextf("'%s' component is not a list", "dimnames")
#. R/is.ratetable.S: gettextf("'%s' component is not a list", "cutpoints")
#: R/is.ratetable.S:0
msgid "'%s' component is not a list"
msgstr "komponent '%s' nie jest listą"

#. R/frailty.gamma.S: gettextf("'%s' option is set but '%s' argument is specified", "method != df", "df")
#. R/frailty.gamma.S: gettextf("'%s' option is set but '%s' argument is specified", "method != fixed",     "theta")
#. R/frailty.gaussian.S: gettextf("'%s' option is set but '%s' argument is specified", "method != fixed",     "theta")
#. R/frailty.t.S: gettextf("'%s' option is set but '%s' argument is specified", "method != fixed",     "theta")
#: R/frailty.gamma.S:0 R/frailty.gaussian.S:0 R/frailty.t.S:0
msgid "'%s' option is set but '%s' argument is specified"
msgstr "wybrano opcję '%s', ale został określony argument '%s'"

#. R/frailty.gamma.S: gettextf("'%s' option is set but no '%s' argument", "method = df", "df")
#. R/frailty.gamma.S: gettextf("'%s' option is set but no '%s' argument", "method = fixed", "theta")
#. R/frailty.gaussian.S: gettextf("'%s' option is set but no '%s' argument", "method = df", "df")
#. R/frailty.gaussian.S: gettextf("'%s' option is set but no '%s' argument", "method = fixed", "theta")
#. R/frailty.t.S: gettextf("'%s' option is set but no '%s' argument", "method = df", "df")
#. R/frailty.t.S: gettextf("'%s' option is set but no '%s' argument", "method = fixed", "theta")
#: R/frailty.gamma.S:0 R/frailty.gaussian.S:0 R/frailty.t.S:0
msgid "'%s' option is set but no '%s' argument"
msgstr "wybrano opcję '%s', ale brak argumentu '%s'"

#. R/residuals.coxph.S: gettextf("'%s' residuals are not available for the exact method", type)
#: R/residuals.coxph.S:0
#, fuzzy
msgid "'%s' residuals are not available for the exact method"
msgstr "reszty %s nie są dostępne dla ścisłej metody"

#. R/residuals.coxph.null.S: gettextf("'%s' residuals are not defined for a null model", type)
#: R/residuals.coxph.null.S:0
msgid "'%s' residuals are not defined for a null model"
msgstr "reszty '%s' nie są określone dla pustego modelu"

#. R/tcut.S: stop("'breaks' argument must specify at least one interval")
#: R/tcut.S:0
msgid "'breaks' argument must specify at least one interval"
msgstr "argument 'breaks' musi określać przynajmniej jeden interwał"

#. R/cch.R: stop("'cohort.size' and 'stratum' levels lengths do not match")
#: R/cch.R:0
msgid "'cohort.size' and 'stratum' levels lengths do not match"
msgstr "długości poziomów 'cohort.size' oraz 'stratum' nie zgadzają się"

#. R/survregDtest.S: gettext("'dtrans()' component must be a 1-1 function")
#: R/survregDtest.S:0
msgid "'dtrans()' component must be a 1-1 function"
msgstr "komponent 'dtrans()' musi być funkcją 1-1"

#. R/survfit.R: stop("'etype' argument incompatable with survival type")
#. R/survfit.formula.S: stop("'etype' argument incompatable with survival type")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "'etype' argument incompatable with survival type"
msgstr "argument 'etype' nie jest zgodny z typem 'survival'"

#. R/survdiff.S: stop("'formula' argument is not a formula")
#: R/survdiff.S:0
msgid "'formula' argument is not a formula"
msgstr "argument 'formula' nie jest formułą"

#. R/clogit.R: stop("'formula' argument is required")
#. R/coxph.R: stop("'formula' argument is required")
#. R/survobrien.S: stop("'formula' argument is required")
#. R/survreg.S: stop("'formula' argument is required")
#: R/clogit.R:0 R/coxph.R:0 R/survobrien.S:0 R/survreg.S:0
msgid "'formula' argument is required"
msgstr "argument 'formula' jest wymagany"

#. R/survfitCI.R: stop("'id' argument is required for start:stop data")
#: R/survfitCI.R:0
msgid "'id' argument is required for start:stop data"
msgstr "argument 'id' jest wymagany dla danych start:stop"

#. R/survfit.coxph.R: stop("'individual=TRUE' is only valid for counting process data")
#: R/survfit.coxph.R:0
msgid "'individual=TRUE' is only valid for counting process data"
msgstr ""

#. R/survfitCI.R: stop("'istate' argument should be a vector of integers or a factor")
#: R/survfitCI.R:0
msgid "'istate' argument should be a vector of integers or a factor"
msgstr ""
"argument 'istate' powinien być wektorem liczb całkowitych lub czynnikiem"

#. R/survfit.coxph.R: stop("'newdata' argument cannot be used when a model has frailty terms")
#: R/survfit.coxph.R:0
#, fuzzy
msgid "'newdata' argument cannot be used when a model has frailty terms"
msgstr "argument 'newdata' musi być ramką danych"

#. R/survfit.coxph.R: stop("'newdata' argument must be a data frame")
#. R/survfit.coxph.R: stop("'newdata' argument must be a data frame")
#: R/survfit.coxph.R:0
msgid "'newdata' argument must be a data frame"
msgstr "argument 'newdata' musi być ramką danych"

#. R/survfit.coxph.R: stop("'newdata' argument must be present when 'individual=TRUE'")
#: R/survfit.coxph.R:0
msgid "'newdata' argument must be present when 'individual=TRUE'"
msgstr "argument 'newdata' musi być obecny, gdy 'individual=TRUE'"

#. R/pspline.S: gettextf("'nterm' argument is too small for df=%s", df)
#: R/pspline.S:0
msgid "'nterm' argument is too small for df=%s"
msgstr "argument 'nterm' jest zbyt mały dla stopni swobody=%s"

#. R/anova.coxphlist.S: stop("'object' argument is not a list")
#: R/anova.coxphlist.S:0
msgid "'object' argument is not a list"
msgstr "argument 'object' nie jest listą"

#. R/anova.coxmelist.R: stop("'object' argument must be a list of objects of class \"coxme\" or \"coxph\"")
#: R/anova.coxmelist.R:0
msgid ""
"'object' argument must be a list of objects of class \"coxme\" or \"coxph\""
msgstr ""
"argument 'object' musi być listą obiektów klasy \"coxme\" lub \"coxph\""

#. R/anova.coxphlist.S: stop("'object' argument must be a list of objects of class \"coxph\"")
#: R/anova.coxphlist.S:0
msgid "'object' argument must be a list of objects of class \"coxph\""
msgstr "argument 'object' musi być listą obiektów klasy \"coxph\""

#. R/coxpenal.fit.R: stop("'pcols' and 'assign' arguments disagree")
#. R/survcallback.S: stop("'pcols' and 'assign' arguments disagree")
#. R/survpenal.fit.S: stop("'pcols' and 'assign' arguments disagree")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "'pcols' and 'assign' arguments disagree"
msgstr "argumenty 'pcols' oraz 'assign' nie zgadzają się"

#. R/pyears.R: stop("'pyears()' cannot handle stratified Cox models")
#: R/pyears.R:0
msgid "'pyears()' cannot handle stratified Cox models"
msgstr "funkcja 'pyears()' nie może obsługiwać warstowych modeli Cox'a"

#. R/pyears.R: stop("'pyears()' cannot have interaction terms")
#: R/pyears.R:0
msgid "'pyears()' cannot have interaction terms"
msgstr "funkcja 'pyears()' nie może mieć członów interakcji"

#. R/match.ratetable.S: stop("'ratetable' argument appears twice in the data")
#: R/match.ratetable.S:0
msgid "'ratetable' argument appears twice in the data"
msgstr "argument 'ratetable' pojawia się dwukrotnie w danych"

#. R/pyears.R: stop("'ratetable()' call in a formula is deprecated")
#. R/survexp.R: stop("'ratetable()' call in a formula is deprecated")
#: R/pyears.R:0 R/survexp.R:0
msgid "'ratetable()' call in a formula is deprecated"
msgstr "Wywołanie 'ratetable()' w formule jest przestarzałe"

#. R/cch.R: gettextf("'robust' argument ignored for method (%s)", method)
#: R/cch.R:0
msgid "'robust' argument ignored for method (%s)"
msgstr "argument 'robust' został zignorowany dla metody (%s)"

#. R/cch.R: warning("'robust' argument is not implemented for stratified analysis")
#: R/cch.R:0
msgid "'robust' argument is not implemented for stratified analysis"
msgstr "argument 'robust' nie jest zaimplementowany dla warstwowej analizy"

#. R/cch.R: gettextf("'stratum' argument ignored for method (%s)", method)
#: R/cch.R:0
msgid "'stratum' argument ignored for method (%s)"
msgstr "argument 'stratum' został zignorowany dla metody (%s)"

#. R/survexp.R: stop("'survexp()' cannot have interaction terms")
#: R/survexp.R:0
msgid "'survexp()' cannot have interaction terms"
msgstr "'survexp()' nie obsługuje członów interakcji"

#. R/survfitTurnbull.S: stop("'survfitTurnbull()' is not appropriate for counting process data")
#: R/survfitTurnbull.S:0
msgid "'survfitTurnbull()' is not appropriate for counting process data"
msgstr ""

#. R/Surv.S: stop("'time' (start time) and 'event' arguments are of different lengths")
#: R/Surv.S:0
msgid "'time' (start time) and 'event' arguments are of different lengths"
msgstr "argumenty 'time' (czas startu) oraz 'event' mają różną długość"

#. R/Surv.S: stop("'time' and 'time2' arguments (start and stop time) are of different lengths")
#: R/Surv.S:0
msgid ""
"'time' and 'time2' arguments (start and stop time) are of different lengths"
msgstr "argumenty 'time' oraz 'time2' (czas startu i stopu) mają różną długość"

#. R/Surv.S: gettextf("'time' argument (start time) must be numeric", "time")
#: R/Surv.S:0
msgid "'time' argument (start time) must be numeric"
msgstr "argument 'time' (czas startu) musi być liczbą"

#. R/Surv.S: stop("'time' argument is required")
#: R/Surv.S:0
msgid "'time' argument is required"
msgstr "argument 'time' jest wymagany"

#. R/Surv.S: gettextf("'time2' argument (stop time) must be numeric", "time2")
#: R/Surv.S:0
msgid "'time2' argument (stop time) must be numeric"
msgstr "argument 'time2' (czas stopu) musi być liczbą"

#. R/coxph.control.S: stop("'toler.inf' argument must be >0")
#: R/coxph.control.S:0
msgid "'toler.inf' argument must be >0"
msgstr "argument 'toler.inf' musi być  >0"

#. R/survregDtest.S: gettext("'trans' and 'itrans' components must be inverses of each other")
#: R/survregDtest.S:0
msgid "'trans' and 'itrans' components must be inverses of each other"
msgstr "komponent 'dtrans' musi być odwrotnością komponentu 'itrans'"

#. R/survobrien.S: stop("'transform' function must be 1 to 1")
#: R/survobrien.S:0
msgid "'transform' function must be 1 to 1"
msgstr "funkcja 'transform' musi być 1 do 1"

#. R/coxph.R: stop("'tt' argument must contain a function or list of functions")
#. R/coxph.R: stop("'tt' argument must contain a function or list of functions")
#. R/model.matrix.coxph.R: stop("'tt' argument must contain a function or list of functions")
#. R/model.matrix.coxph.R: stop("'tt' argument must contain a function or list of functions")
#: R/coxph.R:0 R/model.matrix.coxph.R:0
msgid "'tt' argument must contain a function or list of functions"
msgstr "argument 'tt' musi zawierać funkcję lub listę funkcji"

#. R/is.ratetable.S: gettext("'type' attribute must be 1, 2, 3, or 4")
#: R/is.ratetable.S:0
msgid "'type' attribute must be 1, 2, 3, or 4"
msgstr "atrybut 'type' musi mieć wartość 1, 2, 3 lub 4"

#. R/coxph.wtest.S: stop("'var' argument is not a square matrix")
#: R/coxph.wtest.S:0
msgid "'var' argument is not a square matrix"
msgstr "argument 'var' nie jest macierzą kwadratową"

#. R/agexact.fit.S: stop("'x' argument is not a matrix")
#. R/coxexact.fit.R: stop("'x' argument is not a matrix")
#. R/survexp.fit.S: stop("'x' argument is not a matrix")
#. R/survpenal.fit.S: stop("'x' argument is not a matrix")
#. R/survreg.fit.S: stop("'x' argument is not a matrix")
#: R/agexact.fit.S:0 R/coxexact.fit.R:0 R/survexp.fit.S:0 R/survpenal.fit.S:0
#: R/survreg.fit.S:0
msgid "'x' argument is not a matrix"
msgstr "argument 'x' nie jest macierzą"

#. R/survexp.fit.S: stop("'x' matrix does not match the rate table")
#: R/survexp.fit.S:0
msgid "'x' matrix does not match the rate table"
msgstr "macierz 'x' nie zgadza sę z tablicą częstości"

#. R/print.summary.survreg.S: gettext("(Loglikelihood assumes independent observations)", domain = "R-survival")
#: R/print.summary.survreg.S:0
msgid "(Loglikelihood assumes independent observations)"
msgstr "(Logarytmiczna funkcja wiarygodności zakłada niezależne obserwacje)"

#. R/print.summary.coxph.S: gettext("  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).",     domain = "R-survival")
#: R/print.summary.coxph.S:0
msgid ""
"(Note: the likelihood ratio and score tests assume independence of\n"
"     observations within a cluster, the Wald and robust score tests do not)."
msgstr ""

#. R/print.survfit.S: gettextf("    * restricted mean with upper limit = %s", format(temp$end.time[1]),     domain = "R-survival")
#: R/print.survfit.S:0
msgid "* restricted mean with upper limit = %s"
msgstr ""

#. R/print.survfit.S: gettext("   * restricted mean with variable upper limit\n", domain = "R-survival")
#: R/print.survfit.S:0
msgid "* restricted mean with variable upper limit"
msgstr ""

#. R/aareg.S: gettextf("Aalen model doesn't support \"%s\" survival data", type)
#: R/aareg.S:0
msgid "Aalen model doesn't support \"%s\" survival data"
msgstr "model Aalena nie wspiera danych przeżycia \"%s\""

#. R/ratetable.S: gettextf("Aguments do not all have the same length (arg %d)", i)
#: R/ratetable.S:0
msgid "Aguments do not all have the same length (arg %d)"
msgstr "Nie wszystkie argumenty mają tę samą długość (argument %d)"

#. R/anova.coxmelist.R: gettext("Analysis of Deviance Table")
#. R/anova.coxph.S: gettext("Analysis of Deviance Table")
#. R/anova.coxphlist.S: gettext("Analysis of Deviance Table")
#. R/anova.survreg.S: gettext("Analysis of Deviance Table")
#. R/anova.survreglist.S: gettext("Analysis of Deviance Table")
#: R/anova.coxmelist.R:0 R/anova.coxph.S:0 R/anova.coxphlist.S:0
#: R/anova.survreg.S:0 R/anova.survreglist.S:0
msgid "Analysis of Deviance Table"
msgstr "Analiza Tabeli Wariancji"

#. R/plot.cox.zph.S: gettextf("Beta(t) for %s", dimnames(yy)[[2]])
#: R/plot.cox.zph.S:0
msgid "Beta(t) for %s"
msgstr "Beta(t) dla %s"

#. R/cch.R: gettext("Call: ", domain = "R-survival")
#. R/cch.R: gettext("Call: ", domain = "R-survival")
#. R/print.aareg.S: gettext("Call:", domain = "R-survival")
#. R/print.coxph.S: gettext("Call:", domain = "R-survival")
#. R/print.coxph.null.S: gettext("Call: ", domain = "R-survival")
#. R/print.coxph.penal.S: gettext("Call:", domain = "R-survival")
#. R/print.summary.coxph.S: gettext("Call:", domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettext("Call:", domain = "R-survival")
#. R/print.summary.survexp.R: gettext("Call: ", domain = "R-survival")
#. R/print.summary.survfit.S: gettext("Call: ", domain = "R-survival")
#. R/print.summary.survfitms.S: gettext("Call: ", domain = "R-survival")
#. R/print.summary.survreg.S: gettext("Call:", domain = "R-survival")
#. R/print.summary.survreg.S: gettext("Call:", domain = "R-survival")
#. R/print.survdiff.S: gettext("Call:", domain = "R-survival")
#. R/print.survexp.S: gettext("Call:", domain = "R-survival")
#. R/print.survfit.S: gettext("Call: ", domain = "R-survival")
#. R/print.survreg.S: gettext("Call:", domain = "R-survival")
#. R/print.survreg.penal.S: gettext("Call:", domain = "R-survival")
#. R/summary.pyears.S: gettext("Call:", domain = "R-survival")
#. R/survConcordance.R: gettext("Call:", domain = "R-survival")
#: R/cch.R:0 R/print.aareg.S:0 R/print.coxph.S:0 R/print.coxph.null.S:0
#: R/print.coxph.penal.S:0 R/print.summary.coxph.S:0
#: R/print.summary.coxph.penal.S:0 R/print.summary.survexp.R:0
#: R/print.summary.survfit.S:0 R/print.summary.survfitms.S:0
#: R/print.summary.survreg.S:0 R/print.survdiff.S:0 R/print.survexp.S:0
#: R/print.survfit.S:0 R/print.survreg.S:0 R/print.survreg.penal.S:0
#: R/summary.pyears.S:0 R/survConcordance.R:0
msgid "Call:"
msgstr "Wywołanie:"

#. R/cch.R: gettextf("Case-cohort analysis, x$method, %s with subcohort of %s from cohort of %s",     x$method, x$subcohort.size, x$cohort.size, domain = "R-survival")
#. R/cch.R: gettextf("Case-cohort analysis, x$method, %s with subcohort of %s from cohort of %s",     x$method, x$subcohort.size, x$cohort.size, domain = "R-survival")
#: R/cch.R:0
msgid ""
"Case-cohort analysis, x$method, %s with subcohort of %s from cohort of %s"
msgstr ""

#. R/print.summary.survreg.S: gettextf("Chisq= %s on %d degrees of freedom, p= %s", format(round(x$chi, 2)), round(df,     1), format(signif(1 - pchisq(x$chi, df), 2)), domain = "R-survival")
#. R/print.survdiff.S: gettext("Chisq= %s on %d degrees of freedom, p= %s", domain = "R-survival")
#. R/print.survreg.S: gettextf("Chisq= %s on %d degrees of freedom, p= %s", format(round(chi, 2)), round(df,     1), format(signif(1 - pchisq(chi, df), 2)), domain = "R-survival")
#: R/print.summary.survreg.S:0 R/print.survdiff.S:0 R/print.survreg.S:0
msgid "Chisq= %s on %d degrees of freedom, p= %s"
msgstr "Chi-kwadrat=%s dla %d stopni swobody, p=%s"

#. R/print.aareg.S: gettext("Chisq= %s on %d df, p=%s; test weights= %s", domain = "R-survival")
#. R/summary.aareg.S: gettextf("Chisq= %s on %d df, p=%s; test weights= %s", format(round(chi, 2)), df,     signif(1 - pchisq(chi, df), 2), x$test, domain = "R-survival")
#: R/print.aareg.S:0 R/summary.aareg.S:0
msgid "Chisq= %s on %d df, p=%s; test weights= %s"
msgstr "Chisq= %s dla %d st. sw., p=%s; wagi testowe= %s"

#. R/cch.R: gettext("Coefficients:", domain = "R-survival")
#. R/cch.R: gettext("Coefficients:", domain = "R-survival")
#. R/print.survreg.S: gettext("Coefficients:", domain = "R-survival")
#: R/cch.R:0 R/print.survreg.S:0
msgid "Coefficients:"
msgstr "Współczynniki:"

#. R/predict.coxph.R: stop("Collapse vector is the wrong length")
#. R/predict.coxph.penal.S: stop("Collapse vector is the wrong length")
#: R/predict.coxph.R:0 R/predict.coxph.penal.S:0
msgid "Collapse vector is the wrong length"
msgstr "Wektor zapaści jest niepoprawnej długości"

#. R/print.summary.coxph.S: gettextf("Concordance= %s (se = %s)", format(round(x$concordance[1], 3)), format(round(x$concordance[2],     3)), domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Concordance= %s (se = %s)", format(round(x$concordance[1], 3)), format(round(x$concordance[2],     3)), domain = "R-survival")
#. R/survConcordance.R: gettextf("Concordance= %s (se = %s)", format(x$concordance), format(x$std.err), domain = "R-survival")
#: R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
#: R/survConcordance.R:0
msgid "Concordance= %s (se = %s)"
msgstr "Zgodność= %s (se = %s)"

#. R/print.summary.survreg.S: gettext("Correlation of Coefficients:", domain = "R-survival")
#: R/print.summary.survreg.S:0
msgid "Correlation of Coefficients:"
msgstr "Korelacja współczynników:"

#. R/survfit.coxph.R: stop("Could not reconstruct the y vector")
#: R/survfit.coxph.R:0
msgid "Could not reconstruct the y vector"
msgstr "Nie można było zrekonstruować wektora 'y'"

#. R/coxph.R: gettextf("Cox model doesn't support \"%s\" survival data", type)
#: R/coxph.R:0
msgid "Cox model doesn't support \"%s\" survival data"
msgstr ""

#. R/anova.coxmelist.R: gettextf("Cox model: response is %s", responses[1])
#. R/anova.coxph.S: gettextf("Cox model: response is %s", deparse(object$terms[[2]]), domain = "R-survival")
#. R/anova.coxphlist.S: gettextf("Cox model: response is %s", responses[1])
#: R/anova.coxmelist.R:0 R/anova.coxph.S:0 R/anova.coxphlist.S:0
msgid "Cox model: response is %s"
msgstr "Model Coxa: zmienna zależna to %s"

#. R/print.coxph.S: gettext(" Coxph failed. ", domain = "R-survival")
#. R/print.coxph.penal.S: gettext(" Coxph failed. ", domain = "R-survival")
#: R/print.coxph.S:0 R/print.coxph.penal.S:0
msgid "Coxph failed."
msgstr "Coxph nie powiódł się."

#. R/print.summary.coxph.S: gettext(" Coxreg failed. ", domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettext(" Coxreg failed. ", domain = "R-survival")
#: R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
msgid "Coxreg failed."
msgstr "Coxreg nie powiódł się."

#. R/predict.coxph.R: stop("Data is not the same size as it was in the original fit")
#: R/predict.coxph.R:0
msgid "Data is not the same size as it was in the original fit"
msgstr ""

#. R/print.coxph.penal.S: gettextf("Degrees of freedom for terms= %s", paste(format(round(x$df, 1)), collapse = " "),     domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Degrees of freedom for terms= %s", paste(format(round(x$df, 1)), collapse = " "),     domain = "R-survival")
#. R/print.survreg.penal.S: gettextf("Degrees of freedom for terms= %s", paste(format(round(x$df, 1)), collapse = " "),     domain = "R-survival")
#: R/print.coxph.penal.S:0 R/print.summary.coxph.penal.S:0
#: R/print.survreg.penal.S:0
msgid "Degrees of freedom for terms= %s"
msgstr "Stopnie swobody dla członów= %s"

#. R/print.survdiff.S: gettext("Expected")
#. R/print.survdiff.S: gettext("Expected")
#: R/print.survdiff.S:0
msgid "Expected"
msgstr "Oczekiwane"

#. R/cch.R: gettextf("Exposure-stratified case-cohort analysis, %s method.", x$method, domain = "R-survival")
#. R/cch.R: gettextf("Exposure-stratified case-cohort analysis, %s method.", x$method, domain = "R-survival")
#: R/cch.R:0
msgid "Exposure-stratified case-cohort analysis, %s method."
msgstr ""

#. R/survfit.coxph.R: stop("Failed to reconstruct the original data set")
#: R/survfit.coxph.R:0
msgid "Failed to reconstruct the original data set"
msgstr "Nie udało się zrekonstruować oryginalnego zbioru danych"

#. R/anova.coxmelist.R: stop("First argument must be a list")
#: R/anova.coxmelist.R:0
msgid "First argument must be a list"
msgstr "Pierwszy argument musi być listą"

#. R/match.ratetable.S: gettextf("In 'ratetable()', %s must be a continuous variable", dimid[i])
#: R/match.ratetable.S:0
msgid "In 'ratetable()', %s must be a continuous variable"
msgstr ""

#. R/survfit.coxph.R: stop("Individual survival but no variables")
#: R/survfit.coxph.R:0
msgid "Individual survival but no variables"
msgstr ""

#. R/survfit.R: stop("Interaction terms are not valid for this function")
#. R/survfit.formula.S: stop("Interaction terms are not valid for this function")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "Interaction terms are not valid for this function"
msgstr ""

#. R/survConcordance.fit.R: stop("Invalid survival type for concordance")
#: R/survConcordance.fit.R:0
msgid "Invalid survival type for concordance"
msgstr ""

#. R/print.survfit.S: stop("Invalid value for rmean option")
#: R/print.survfit.S:0
msgid "Invalid value for rmean option"
msgstr "Niepoprawna wartość w opcji 'rmean'"

#. R/plot.cox.zph.S: stop("Invalid variable requested")
#: R/plot.cox.zph.S:0
msgid "Invalid variable requested"
msgstr "Zażądano niepoprawnej zmiennej"

#. R/survfitTurnbull.S: gettextf("Iteration = %d", iter, domain = "R-survival")
#: R/survfitTurnbull.S:0
msgid "Iteration = %d"
msgstr "Iteracja = %d"

#. R/print.coxph.penal.S: gettextf("Iterations: %d outer, %d Newton-Raphson", x$iter[1], x$iter[2], domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Iterations: %d outer, %d Newton-Raphson", x$iter[1], x$iter[2], domain = "R-survival")
#. R/print.survreg.penal.S: gettextf("Iterations: %d outer, %d Newton-Raphson", x$iter[1], x$iter[2], domain = "R-survival")
#: R/print.coxph.penal.S:0 R/print.summary.coxph.penal.S:0
#: R/print.survreg.penal.S:0
msgid "Iterations: %d outer, %d Newton-Raphson"
msgstr "Iteracje: %d zewnętrzna, %d Newtona-Raphsona"

#. R/print.coxph.S: gettextf("Likelihood ratio test = %s on %s df, p=%s", format(round(logtest, 2)),     df, format(1 - pchisq(logtest, df)), domain = "R-survival")
#. R/print.summary.coxph.S: gettextf("Likelihood ratio test = %s on %s df, p=%s", format(round(x$logtest["test"],     2)), x$logtest["df"], format(x$logtest["pvalue"]), domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Likelihood ratio test = %s on %s df, p=%s", format(round(logtest, 2)),     df, format(1 - pchisq(logtest, df)), domain = "R-survival")
#. R/print.survreg.penal.S: gettextf("Likelihood ratio test = %s on %s df, p=%s", format(round(logtest, 2)),     round(df, 1), format(1 - pchisq(logtest, df)), domain = "R-survival")
#: R/print.coxph.S:0 R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
#: R/print.survreg.penal.S:0
msgid "Likelihood ratio test = %s on %s df, p=%s"
msgstr "Test stosunku funkcji wiarygodności=%s dla %s stopni swobody, p=%s"

#. R/print.coxph.penal.S: gettextf("Likelihood ratio test=%s on %s df, p=%s n=%d", format(round(logtest, 2)),     format(round(df, 2)), format(1 - pchisq(logtest, df)), x$n, domain = "R-survival")
#. R/print.coxph.penal.S: gettextf("Likelihood ratio test=%s on %s df, p=%s n=%d", format(round(logtest, 2)),     format(round(df, 2)), format(1 - pchisq(logtest, df)), x$n, domain = "R-survival")
#: R/print.coxph.penal.S:0
msgid "Likelihood ratio test=%s on %s df, p=%s n=%d"
msgstr ""
"Test stosunku funkcji wiarygodności=%s dla %s stopni swobody, p=%s  n=%d"

#. R/agexact.fit.S: gettext("Loglik converged before variable %s; beta may be infinite.", domain = "R-survival")
#. R/agreg.fit.R: gettextf("Loglik converged before variable %s; beta may be infinite.", tmp_n)
#. R/coxexact.fit.R: gettextf("Loglik converged before variable %s; beta may be infinite.", tmp_n)
#. R/coxph.fit.S: gettext("Loglik converged before variable %s; beta may be infinite.", domain = "R-survival")
#: R/agexact.fit.S:0 R/agreg.fit.R:0 R/coxexact.fit.R:0 R/coxph.fit.S:0
msgid "Loglik converged before variable %s; beta may be infinite."
msgstr ""

#. R/print.summary.survreg.S: gettextf("Loglik(model)= %s   Loglik(intercept only)= %s", format(round(x$loglik[2],     1)), format(round(x$loglik[1], 1)), domain = "R-survival")
#. R/print.survreg.S: gettextf("Loglik(model)= %s   Loglik(intercept only)= %s", format(round(x$loglik[2],     1)), format(round(x$loglik[1], 1)), domain = "R-survival")
#: R/print.summary.survreg.S:0 R/print.survreg.S:0
msgid "Loglik(model)= %s   Loglik(intercept only)= %s"
msgstr ""

#. R/summary.pyears.S: gettextf("Matches to the chosen rate table:\n  %s", object$summary)
#: R/summary.pyears.S:0
msgid ""
"Matches to the chosen rate table:\n"
"  %s"
msgstr ""
"Dopasowania do wybranej tabeli szybkości:\n"
"  %s"

#. R/anova.coxmelist.R: gettextf(" Model %s:", format(seq_len(nmodels)))
#. R/anova.coxphlist.S: gettextf(" Model %s:", format(seq_len(nmodels)))
#: R/anova.coxmelist.R:0 R/anova.coxphlist.S:0
msgid "Model %s:"
msgstr "Model %s:"

#. R/survfit.coxph.R: stop("Models with strata by covariate interaction terms require newdata")
#: R/survfit.coxph.R:0
msgid "Models with strata by covariate interaction terms require newdata"
msgstr ""

#. R/predict.coxph.R: stop("New data has a different survival type than the model")
#: R/predict.coxph.R:0
msgid "New data has a different survival type than the model"
msgstr "Nowe dane mają inny typ przeżycia niż model"

#. R/predict.coxph.R: stop("New data has a strata not found in the original model")
#: R/predict.coxph.R:0
msgid "New data has a strata not found in the original model"
msgstr "Nowe dane mają warstwę nieobecną w oryginalnym modelu"

#. R/survfit.coxph.R: stop("New data set has strata levels not found in the original")
#: R/survfit.coxph.R:0
msgid "New data set has strata levels not found in the original"
msgstr "Nowy zbiór danych ma poziomy warstwy nieobecne w oryginalnym modelu"

#. R/pyears.R: stop("No rate table specified")
#: R/pyears.R:0
msgid "No rate table specified"
msgstr "Nie określono tabeli szybkości"

#. R/summary.survreg.S: gettext("   No summary provided\n")
#: R/summary.survreg.S:0
msgid "No summary provided"
msgstr "Nie dostarczono podsumowania"

#. R/print.coxph.null.S: gettext("Null model", domain = "R-survival")
#. R/print.summary.coxph.S: gettext("Null model", domain = "R-survival")
#: R/print.coxph.null.S:0 R/print.summary.coxph.S:0
msgid "Null model"
msgstr "Pusty model"

#. R/print.summary.survreg.S: gettext("Number of Newton-Raphson Iterations: ", domain = "R-survival")
#: R/print.summary.survreg.S:0
msgid "Number of Newton-Raphson Iterations:"
msgstr "Liczba iteracji Newtona-Raphsona:"

#. R/print.survdiff.S: gettext("Observed")
#. R/print.survdiff.S: gettext("Observed")
#: R/print.survdiff.S:0
msgid "Observed"
msgstr "Zaobserwowane"

#. R/print.coxph.penal.S: stop("Penalized print function can't be used for a null model")
#: R/print.coxph.penal.S:0
msgid "Penalized print function can't be used for a null model"
msgstr ""

#. R/predict.survreg.penal.S: stop("Predictions are not available for sparse models")
#: R/predict.survreg.penal.S:0
msgid "Predictions are not available for sparse models"
msgstr "Predykcje nie są dostępne dla rzadkich modeli"

#. R/agexact.fit.S: warning("Ran out of iterations and did not converge")
#. R/agreg.fit.R: warning("Ran out of iterations and did not converge")
#. R/coxexact.fit.R: warning("Ran out of iterations and did not converge")
#. R/coxph.fit.S: warning("Ran out of iterations and did not converge")
#. R/survreg.fit.S: warning("Ran out of iterations and did not converge")
#: R/agexact.fit.S:0 R/agreg.fit.R:0 R/coxexact.fit.R:0 R/coxph.fit.S:0
#: R/survreg.fit.S:0
msgid "Ran out of iterations and did not converge"
msgstr "Wyczerpano limit iteracji, a algorytm nie uzbieżnił się"

#. R/summary.ratetable.S: gettextf(" Rate table with %d dimensions:\n", ncat, domain = "R-survival")
#: R/summary.ratetable.S:0
msgid "Rate table with %d dimensions:"
msgstr "Tabela szybkości z %d wymiarami:"

#. R/survexp.fit.S: stop("Ratetable does not have expected shape")
#: R/survexp.fit.S:0
msgid "Ratetable does not have expected shape"
msgstr ""

#. R/residuals.survreg.penal.S: stop("Residuals are not available for sparse models")
#: R/residuals.survreg.penal.S:0
msgid "Residuals are not available for sparse models"
msgstr "Reszty nie są dostępne dla rzadkich modeli"

#. R/anova.survreg.S: gettext("Response: ")
#. R/anova.survreglist.S: gettext("Response: ")
#: R/anova.survreg.S:0 R/anova.survreglist.S:0
msgid "Response:"
msgstr "Zmienna zależna:"

#. R/print.summary.coxph.S: gettextf("Robust = %s p=%s", format(round(x$robscore["test"], 2)), format(x$robscore["pvalue"]),     domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Robust = %s p=%s", format(round(x$rscore, 2)), format(1 - pchisq(x$rscore,     df)), domain = "R-survival")
#: R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
msgid "Robust = %s p=%s"
msgstr "Statystyka odpornościowa = %s p=%s"

#. R/print.summary.coxph.S: gettextf("Rsquare= %s  (max possible=%s)", format(round(x$rsq["rsq"], 3)), format(round(x$rsq["maxrsq"],     3)), domain = "R-survival")
#: R/print.summary.coxph.S:0
msgid "Rsquare= %s  (max possible=%s)"
msgstr "R-kwadrat= %s  (maksymalna możliwa=%s)"

#. R/anova.survreg.S: gettextf("Scale fixed at %s", format(object$scale, digits = getOption("digits")))
#. R/print.summary.survreg.S: gettextf("Scale fixed at %s", format(x$scale, digits = digits), domain = "R-survival")
#. R/print.survreg.S: gettextf("Scale fixed at %s", format(x$scale), domain = "R-survival")
#. R/print.survreg.penal.S: gettextf("Scale fixed at %s", format(x$scale), domain = "R-survival")
#: R/anova.survreg.S:0 R/print.summary.survreg.S:0 R/print.survreg.S:0
#: R/print.survreg.penal.S:0
msgid "Scale fixed at %s"
msgstr "Skala została ustalona w %s"

#. R/print.survreg.S: gettext("Scale:", domain = "R-survival")
#. R/print.survreg.penal.S: gettext("Scale:", domain = "R-survival")
#: R/print.survreg.S:0 R/print.survreg.penal.S:0
msgid "Scale:"
msgstr "Skala:"

#. R/print.summary.survreg.S: gettextf("Scale= %s", format(x$scale, digits = digits), domain = "R-survival")
#. R/print.survreg.S: gettextf("Scale= %s", format(x$scale), domain = "R-survival")
#. R/print.survreg.penal.S: gettextf("Scale= %s", format(x$scale), domain = "R-survival")
#: R/print.summary.survreg.S:0 R/print.survreg.S:0 R/print.survreg.penal.S:0
msgid "Scale= %s"
msgstr "Skala = %s"

#. R/print.summary.coxph.S: gettextf("Score (logrank) test = %s on %s df, p=%s", format(round(x$sctest["test"],     2)), x$sctest["df"], format(x$sctest["pvalue"]), domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Score (logrank) test = %s on %s df, p=%s", format(round(sctest, 2)), df,     format(1 - pchisq(sctest, df)), domain = "R-survival")
#: R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
msgid "Score (logrank) test = %s on %s df, p=%s"
msgstr "Test punktów (logarytm rang) = %s dla %s stopni swobody, p=%s"

#. R/plot.cox.zph.S: stop("Spline fit is singular, try a smaller degrees of freedom")
#: R/plot.cox.zph.S:0
msgid "Spline fit is singular, try a smaller degrees of freedom"
msgstr ""
"Dopasowanie splajnu jest osobliwe, spróbuj mniejszej liczby stopni swobody"

#. R/aareg.S: stop("Subsripting impossible, coefficient component not a matrix")
#: R/aareg.S:0
msgid "Subsripting impossible, coefficient component not a matrix"
msgstr ""

#. R/survfit.R: warning("Survfit object has only a single survival curve")
#. R/survfitms.R: warning("Survfit object has only a single survival curve")
#: R/survfit.R:0 R/survfitms.R:0
msgid "Survfit object has only a single survival curve"
msgstr ""

#. R/print.survexp.S: gettextf(" Survival at time %s", x$time, domain = "R-survival")
#: R/print.survexp.S:0
msgid "Survival at time %s"
msgstr "Przeżycie w punkcie czasowym %s"

#. R/survfit.coxph.R: stop("Survival type of 'newdata' argument does not match the fitted model")
#: R/survfit.coxph.R:0
msgid "Survival type of 'newdata' argument does not match the fitted model"
msgstr ""

#. R/print.survreg.S: gettext(" Survreg failed. ", domain = "R-survival")
#. R/print.survreg.penal.S: gettext(" Survreg failed. ", domain = "R-survival")
#. R/summary.survreg.S: gettext(" Survreg failed.")
#: R/print.survreg.S:0 R/print.survreg.penal.S:0 R/summary.survreg.S:0
msgid "Survreg failed."
msgstr "Survreg nie powiódł się."

#. R/anova.coxph.S: gettext("Terms added sequentially (first to last)")
#. R/anova.survreg.S: gettext("Terms added sequentially (first to last)")
#: R/anova.coxph.S:0 R/anova.survreg.S:0
msgid "Terms added sequentially (first to last)"
msgstr "Człony dodawane sekwencyjnie (od pierwszego do ostatniego)"

#. R/model.frame.survreg.R: stop("The coxph call is missing a formula!")
#. R/model.matrix.coxph.R: stop("The coxph call is missing a formula!")
#: R/model.frame.survreg.R:0 R/model.matrix.coxph.R:0
msgid "The coxph call is missing a formula!"
msgstr "Brakuje wywołania 'coxph' w formule!"

#. R/anova.survreglist.S: stop("The first model has a different response from the rest")
#: R/anova.survreglist.S:0
msgid "The first model has a different response from the rest"
msgstr "Pierwszy model ma inną zmienną zależną od reszty"

#. R/plot.survfit.R: stop("The graphical argument 'type' is not allowed")
#: R/plot.survfit.R:0
msgid "The graphical argument 'type' is not allowed"
msgstr "argument graficzny 'type' nie jest dozwolony"

#. R/survfit.coxph.R: stop("The survfit function can not yet process coxph models with a tt term")
#: R/survfit.coxph.R:0
msgid "The survfit function can not yet process coxph models with a tt term"
msgstr ""

#. R/aareg.S: stop("The threshold 'nmin' is too high, no model can be fit")
#: R/aareg.S:0
msgid "The threshold 'nmin' is too high, no model can be fit"
msgstr "Próg 'nmin' jest zbyt wysoki, żaden model nie może zostać dopasowany"

#. R/print.summary.survfit.S: stop("There are no events to print. Please use the option censored=TRUE with the summary function to see the censored observations.")
#. R/print.summary.survfitms.S: stop("There are no events to print. Please use the option censored=TRUE with the summary function to see the censored observations.")
#: R/print.summary.survfit.S:0 R/print.summary.survfitms.S:0
msgid ""
"There are no events to print. Please use the option censored=TRUE with the "
"summary function to see the censored observations."
msgstr ""
"Brak wydarzeń do wyświetlenia. Proszę użyć opcji \"censored = TRUE\" wraz z "
"funkcją podsumowania, aby zobaczyć cenzorowane obserwacje."

#. R/summary.survreg.S: warning("This model has zero rank --- no summary is provided")
#: R/summary.survreg.S:0
msgid "This model has zero rank --- no summary is provided"
msgstr "Ten model ma rangę zerową --- brak podsumowania"

#. R/ratetable.S: stop("This should never be called!")
#: R/ratetable.S:0
msgid "This should never be called!"
msgstr "To nie powinno być nigdy wywoływane!"

#. R/frailty.brent.S: stop("Ties for 'max(y)', I surrender")
#: R/frailty.brent.S:0
msgid "Ties for 'max(y)', I surrender"
msgstr "Powtórzone wartości dla 'max(y)', poddaję się"

#. R/lines.aareg.S: gettext("Time")
#. R/plot.aareg.S: gettext("Time")
#. R/plot.aareg.S: gettext("Time")
#. R/plot.aareg.S: gettext("Time")
#. R/plot.cox.zph.S: gettext("Time")
#. R/plot.cox.zph.S: gettext("Time")
#. R/plot.cox.zph.S: gettext("Time")
#: R/lines.aareg.S:0 R/plot.aareg.S:0 R/plot.cox.zph.S:0
msgid "Time"
msgstr "Czas"

#. R/coxph.R: stop("Time transform + model frame: code incomplete")
#: R/coxph.R:0
msgid "Time transform + model frame: code incomplete"
msgstr ""

#. R/summary.pyears.S: gettextf("Total number of person-years tabulated: %s\nTotal number of person-years off table: %s",     format(sum(object$data$pyears)), format(object$offtable), domain = "R-survival")
#: R/summary.pyears.S:0
msgid ""
"Total number of person-years tabulated: %s\n"
"Total number of person-years off table: %s"
msgstr ""

#. R/print.survfit.S: stop("Truncation point for the mean is < smallest survival")
#. R/print.survfit.S: stop("Truncation point for the mean is < smallest survival")
#: R/print.survfit.S:0
msgid "Truncation point for the mean is < smallest survival"
msgstr ""

#. R/survexp.fit.S: stop("Two columns marked for special handling as a US rate table")
#: R/survexp.fit.S:0
msgid "Two columns marked for special handling as a US rate table"
msgstr ""

#. R/survexp.R: stop("Variable not found in the ratetable:", (names(rcall))[is.na(temp)])
#: R/survexp.R:0
msgid "Variable not found in the ratetable:"
msgstr ""

#. R/print.summary.coxph.S: gettextf("Wald test = %s on %s df, p=%s", format(round(x$waldtest["test"], 2)), x$waldtest["df"],     format(x$waldtest["pvalue"]), domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("Wald test = %s on %s df, p=%s", format(round(x$wald.test, 2)), df, format(1 -     pchisq(x$wald.test, df)), domain = "R-survival")
#: R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
msgid "Wald test = %s on %s df, p=%s"
msgstr "Test Walda = %s dla %s stopni swobody, p=%s"

#. R/agreg.fit.R: stop("Wrong length for inital values")
#: R/agreg.fit.R:0
msgid "Wrong length for inital values"
msgstr "Niepoprawna długość wartości początkowych"

#. R/coxph.R: gettextf("X matrix deemed to be singular; variable %s", paste(vars, collapse = " "))
#: R/coxph.R:0
msgid "X matrix deemed to be singular; variable %s"
msgstr "Macierz X uważa się za osobliwą; zmienna %s"

#. R/pyears.R: stop("Y has too many columns")
#: R/pyears.R:0
msgid "Y has too many columns"
msgstr "Y ma zbyt dużo kolumn"

#. R/survexp.R: stop("a 'response' is required in the formula unless method='ederer'")
#: R/survexp.R:0
msgid "a 'response' is required in the formula unless method='ederer'"
msgstr ""

#. R/survfit.R: stop("a formula argument is required")
#: R/survfit.R:0
msgid "a formula argument is required"
msgstr "wymagany jest argument formuły"

#. R/predict.coxph.R: stop("a name given in the terms argument was not found in the model")
#: R/predict.coxph.R:0
msgid "a name given in the terms argument was not found in the model"
msgstr ""

#. R/anova.coxph.S: stop("all arguments must be an objects of class \"coxph\" or \"coxme\"")
#: R/anova.coxph.S:0
msgid "all arguments must be an objects of class \"coxph\" or \"coxme\""
msgstr "wszystkie argumenty muszą być obiektami klasy \"coxph\" lub \"coxme\""

#. R/survfitCI.R: warning("an observation transitions to it's starting state, transition ignored")
#: R/survfitCI.R:0
msgid "an observation transitions to it's starting state, transition ignored"
msgstr ""

#. R/coxph.R: gettextf("argument %s not matched", names(extraArgs)[indx == 0L])
#: R/coxph.R:0
msgid "argument %s not matched"
msgstr "argument %s nie został dopasowany"

#. R/attrassign.R: stop("argument is not really a model matrix")
#: R/attrassign.R:0
msgid "argument is not really a model matrix"
msgstr "argument nie jest tak naprawdę macierzą modelu"

#. R/frailty.controldf.S: gettextf("bisect:new theta= %s", format(mean(x[b1 + 0:1])), domain = "R-survival")
#: R/frailty.controldf.S:0
msgid "bisect:new theta= %s"
msgstr "bisekcja: nowa wartość theta= %s"

#. R/tcut.S: stop("breaks must be given in ascending order and contain no NA's")
#: R/tcut.S:0
msgid "breaks must be given in ascending order and contain no NA's"
msgstr ""
"przerwy muszą być podane w rosnącym porządku oraz nie mogą zawierać wartości "
"NA"

#. R/pyears.R: stop("can have only 1 'ratetable()' call in a formula")
#. R/survexp.R: stop("can have only 1 'ratetable()' call in a formula")
#: R/pyears.R:0 R/survexp.R:0
msgid "can have only 1 'ratetable()' call in a formula"
msgstr "można mieć tylko jedno wywołanie 'ratetable()' w formule"

#. R/survobrien.S: stop("can have only 1 cluster term")
#: R/survobrien.S:0
msgid "can have only 1 cluster term"
msgstr "można mieć tylko jeden człon grupy"

#. R/survfit.R: stop("can not have two cluster terms")
#. R/survfit.formula.S: stop("can not have two cluster terms")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "can not have two cluster terms"
msgstr "nie można mieć dwóch członów grupujących"

#. R/survfitKM.S: stop("can only handle right censored or counting data")
#: R/survfitKM.S:0
msgid "can only handle right censored or counting data"
msgstr ""

#. R/pyears.R: stop("cannot deal with models that contain an offset")
#: R/pyears.R:0
msgid "cannot deal with models that contain an offset"
msgstr ""

#. R/anova.coxph.S: stop("cannot do anova tables with robust variances")
#. R/anova.coxphlist.S: stop("cannot do anova tables with robust variances")
#: R/anova.coxph.S:0 R/anova.coxphlist.S:0
msgid "cannot do anova tables with robust variances"
msgstr ""

#. R/pyears.R: stop("cannot find an appropriate date class")
#. R/survexp.fit.S: stop("cannot find an appropriate date class")
#: R/pyears.R:0 R/survexp.fit.S:0
msgid "cannot find an appropriate date class"
msgstr "nie można znaleźć odpowiedniej klasy danych"

#. R/agreg.fit.R: stop("cannot fit a Cox model with 0 failures")
#: R/agreg.fit.R:0
msgid "cannot fit a Cox model with 0 failures"
msgstr "nie można dopasować modelu Coxa z zeroma porażkami"

#. R/survcallback.S: stop("cannot fit a model with no coefficients other than sparse ones")
#. R/survpenal.fit.S: stop("cannot fit a model with no coefficients other than sparse ones")
#: R/survcallback.S:0 R/survpenal.fit.S:0
msgid "cannot fit a model with no coefficients other than sparse ones"
msgstr ""

#. R/frailty.gamma.S: stop("cannot give both a 'df' and 'theta' argument")
#. R/frailty.gaussian.S: stop("cannot give both a 'df' and 'theta' argument")
#. R/frailty.gaussian.S: stop("cannot give both a 'df' and 'theta' argument")
#. R/frailty.t.S: stop("cannot give both a 'df' and 'theta' argument")
#: R/frailty.gamma.S:0 R/frailty.gaussian.S:0 R/frailty.t.S:0
msgid "cannot give both a 'df' and 'theta' argument"
msgstr "nie można podać jednocześnie argumentu 'df' oraz 'theta'"

#. R/survfit.coxph.R: gettextf("cannot handle \"%s\" type survival data", type)
#: R/survfit.coxph.R:0
msgid "cannot handle \"%s\" type survival data"
msgstr "nie można obsłużyć typu \"%s\" danych przeżycia"

#. R/agexact.fit.S: stop("cannot handle a null model + exact calculation (yet)")
#. R/coxexact.fit.R: stop("cannot handle a null model + exact calculation (yet)")
#: R/agexact.fit.S:0 R/coxexact.fit.R:0
msgid "cannot handle a null model + exact calculation (yet)"
msgstr ""

#. R/survfit.R: stop("cannot have both a cluster term and an id variable")
#. R/survfit.formula.S: stop("cannot have both a cluster term and an id variable")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "cannot have both a cluster term and an id variable"
msgstr ""
"nie można mieć jednocześnie członu grupującego oraz identyfikatora zmiennej"

#. R/survpenal.fit.S: stop("cannot have both a fixed scale and strata")
#. R/survreg.fit.S: stop("cannot have both a fixed scale and strata")
#: R/survpenal.fit.S:0 R/survreg.fit.S:0
msgid "cannot have both a fixed scale and strata"
msgstr "nie można mieć jednocześnie ustalonej skali oraz warstwy"

#. R/survdiff.S: stop("cannot have both an offset and groups")
#: R/survdiff.S:0
msgid "cannot have both an offset and groups"
msgstr "nie można mieć jednocześnie 'offset' oraz 'groups'"

#. R/frailty.t.S: stop("cannot have df <3 for the t-frailty")
#: R/frailty.t.S:0
msgid "cannot have df <3 for the t-frailty"
msgstr "nie można mieć mniej niż 3 stopnie swobody dla 't-frailty'"

#. R/survfitCI.R: stop("cannot have duplicate 'id' values with (time, status) data")
#: R/survfitCI.R:0
msgid "cannot have duplicate 'id' values with (time, status) data"
msgstr ""

#. R/survfitCI.R: stop("cannot have start time == stop time")
#: R/survfitCI.R:0
msgid "cannot have start time == stop time"
msgstr "nie można mieć czasu startu == czas stopu"

#. R/survfit.R: stop("cannot use both the 'etype' and 'istate' arguments")
#. R/survfit.formula.S: stop("cannot use both the 'etype' and 'istate' arguments")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "cannot use both the 'etype' and 'istate' arguments"
msgstr "nie można użyć obu argumentów 'etype' oraz 'istate'"

#. R/survfit.R: stop("cannot use both the 'etype' argument and 'mstate' survival type")
#: R/survfit.R:0
#, fuzzy
msgid "cannot use both the 'etype' argument and 'mstate' survival type"
msgstr "nie można użyć obu argumentów 'etype' oraz 'istate'"

#. R/survfit.formula.S: stop("cannot use both the 'etype' argument and mstate survival type")
#: R/survfit.formula.S:0
#, fuzzy
msgid "cannot use both the 'etype' argument and mstate survival type"
msgstr "nie można użyć obu argumentów 'etype' oraz 'istate'"

#. R/survexp.R: stop("cannot use tcut variables in expected survival")
#: R/survexp.R:0
msgid "cannot use tcut variables in expected survival"
msgstr ""

#. R/agexact.fit.S: stop("case weights are not supported for the exact method")
#. R/coxexact.fit.R: stop("case weights are not supported for the exact method")
#: R/agexact.fit.S:0 R/coxexact.fit.R:0
msgid "case weights are not supported for the exact method"
msgstr "wagi przypadków nie są wspierane w dokładnym modelu"

#. R/aareg.S: stop("cluster can not be used in an interaction")
#. R/coxph.R: stop("cluster can not be used in an interaction")
#. R/survreg.S: stop("cluster can not be used in an interaction")
#: R/aareg.S:0 R/coxph.R:0 R/survreg.S:0
msgid "cluster can not be used in an interaction"
msgstr "grupa nie może być użyta w interakcji"

#. R/cch.R: stop("cohort size must be a scalar for unstratified analysis")
#: R/cch.R:0
msgid "cohort size must be a scalar for unstratified analysis"
msgstr ""

#. R/cch.R: gettextf("cox model doesn't support \"%s\" survival data", type)
#: R/cch.R:0
msgid "cox model doesn't support \"%s\" survival data"
msgstr "model Cox'a nie wspiera danych przeżycia \"%s\""

#. R/survfitCI.R: gettextf("cumulative incidence computation doesn't support \"%s\" survival data",     type)
#: R/survfitCI.R:0
#, fuzzy
msgid "cumulative incidence computation doesn't support \"%s\" survival data"
msgstr "model Aalena nie wspiera danych przeżycia \"%s\""

#. R/match.ratetable.S: gettextf("data has a date type variable, but the reference ratetable is not a date for variable %s",     dimid[indx])
#: R/match.ratetable.S:0
msgid ""
"data has a date type variable, but the reference ratetable is not a date for "
"variable %s"
msgstr ""

#. R/survdiff.fit.S: stop("data length mismatch")
#. R/survdiff.fit.S: stop("data length mismatch")
#: R/survdiff.fit.S:0
msgid "data length mismatch"
msgstr "niezgodność długości danych"

#. R/pyears.R: stop("data set has 0 observations")
#: R/pyears.R:0
msgid "data set has 0 observations"
msgstr "zbiór danych ma 0 obserwacji"

#. R/survexp.R: stop("data set has 0 rows")
#: R/survexp.R:0
msgid "data set has 0 rows"
msgstr "zbiór danych ma zero wierszy"

#. R/survreg.S: stop("default parameters must be a numeric vector")
#: R/survreg.S:0
msgid "default parameters must be a numeric vector"
msgstr "parametry domyślne muszą być wektorem liczbowym"

#. R/survregDtest.S: gettext("density function must return a 5 column matrix")
#: R/survregDtest.S:0
msgid "density function must return a 5 column matrix"
msgstr "funkcja gęstości musi zwrócić pięciokolumnową macierz"

#. R/survpenal.fit.S: stop("density function returned an invalid matrix")
#. R/survreg.fit.S: stop("density function returned an invalid matrix")
#: R/survpenal.fit.S:0 R/survreg.fit.S:0
msgid "density function returned an invalid matrix"
msgstr "funkcja gęstości zwróciła niepoprawną macierz"

#. R/coxph.detail.S: gettextf("detailed output is not available for the %s method", method)
#: R/coxph.detail.S:0
#, fuzzy
msgid "detailed output is not available for the %s method"
msgstr "reszty %s nie są dostępne dla ścisłej metody"

#. R/is.ratetable.S: gettextf("dimname %d is the wrong length", i)
#: R/is.ratetable.S:0
msgid "dimname %d is the wrong length"
msgstr "nazwa wymiaru %d ma niepoprawną długość"

#. R/survexp.R: stop("either a 'times' argument or a 'response' is needed")
#: R/survexp.R:0
msgid "either a 'times' argument or a 'response' is needed"
msgstr ""

#. R/pyears.R: stop("follow-up time must appear in the formula")
#: R/pyears.R:0
msgid "follow-up time must appear in the formula"
msgstr ""

#. R/survexp.R: stop("for individual survival an observation time must be given")
#: R/survexp.R:0
msgid "for individual survival an observation time must be given"
msgstr ""

#. R/coxph.control.S: warning("for numerical accuracy, tolerance should be < eps")
#: R/coxph.control.S:0
msgid "for numerical accuracy, tolerance should be < eps"
msgstr ""
"dla numerycznej precyzyjności, wartość argumentu 'tolerance' powinna być "
"mniejsza niż argumentu 'eps'"

#. R/frailty.S: gettextf("function %s was not found", sQuote(temp))
#: R/frailty.S:0
msgid "function %s was not found"
msgstr "nie znaleziono funkcji %s"

#. R/survfitCI.R: gettextf("gap in follow-up, id %s", (id[indx1])[who])
#: R/survfitCI.R:0
msgid "gap in follow-up, id %s"
msgstr ""

#. R/survfit.coxph.R: stop("id=NULL is an invalid argument")
#: R/survfit.coxph.R:0
msgid "id=NULL is an invalid argument"
msgstr "id=NULL jest niepoprawnym argumentem"

#. R/is.ratetable.S: gettext("illegal 'factor' attribute of <0")
#: R/is.ratetable.S:0
msgid "illegal 'factor' attribute of <0"
msgstr "nieprawidłowy atrybut 'factor' mniejszy od zera"

#. R/is.ratetable.S: gettext("illegal 'factor' level of NA")
#: R/is.ratetable.S:0
msgid "illegal 'factor' level of NA"
msgstr "niepoprawna wartość NA poziomu czynnika"

#. R/survexp.R: stop("illegal response value")
#: R/survexp.R:0
msgid "illegal response value"
msgstr "niepoprawna wartość zmiennej zależnej"

#. R/coxpenal.fit.R: stop("incorrect length in 'coxlist1' object")
#. R/survcallback.S: stop("incorrect length in 'coxlist1' object")
#. R/survpenal.fit.S: stop("incorrect length in 'coxlist1' object")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "incorrect length in 'coxlist1' object"
msgstr "niepoprawna długość w obiekcie klasy \"coxlist1\""

#. R/coxpenal.fit.R: gettextf("inner loop failed to coverge for iterations %s", paste(iterfail, collapse = " "))
#. R/survpenal.fit.S: gettextf("inner loop failed to coverge for iterations %s", paste(sQuote(iterfail),     collapse = ", "))
#: R/coxpenal.fit.R:0 R/survpenal.fit.S:0
msgid "inner loop failed to coverge for iterations %s"
msgstr ""

#. R/print.coxph.S: stop("input is not valid")
#. R/summary.coxph.S: stop("input is not valid")
#. R/summary.coxph.penal.S: stop("input is not valid")
#: R/print.coxph.S:0 R/summary.coxph.S:0 R/summary.coxph.penal.S:0
msgid "input is not valid"
msgstr "wejście nie jest poprawne"

#. R/aareg.taper.S: gettextf("invalid '%s' argument", "taper")
#. R/lines.survfit.coxph.S: gettextf("invalid '%s' argument", "mark.time")
#. R/plot.survfit.R: gettextf("invalid '%s' argument", "fun")
#. R/plot.survfit.R: gettextf("invalid '%s' argument", "conf.int")
#. R/plot.survfit.R: gettextf("invalid '%s' argument", "fun")
#. R/plot.survfit.R: gettextf("invalid '%s' argument", "conf.int")
#. R/plot.survfit.R: gettextf("invalid '%s' argument", "fun")
#. R/predict.coxph.R: gettextf("invalid '%s' argument", "terms")
#. R/pspline.S: gettextf("invalid '%s' argument", "theta")
#. R/pspline.S: gettextf("invalid '%s' argument", "Boundary.knots")
#. R/pyears.R: gettextf("invalid '%s' argument", "rmap")
#. R/survexp.R: gettextf("invalid '%s' argument", "rmap")
#. R/survexp.fit.S: gettextf("invalid '%s' argument", "death")
#. R/survpenal.fit.S: gettextf("invalid '%s' argument", "scale")
#. R/survreg.fit.S: gettextf("invalid '%s' argument", "scale")
#. R/survreg.fit.S: gettextf("invalid '%s' argument", "strata")
#: R/aareg.taper.S:0 R/lines.survfit.coxph.S:0 R/plot.survfit.R:0
#: R/predict.coxph.R:0 R/pspline.S:0 R/pyears.R:0 R/survexp.R:0
#: R/survexp.fit.S:0 R/survpenal.fit.S:0 R/survreg.fit.S:0
msgid "invalid '%s' argument"
msgstr "niepoprawny argument '%s'"

#. R/coxpenal.fit.R: gettextf("invalid '%s' or '%s' argument", "pcols", "pattr")
#. R/survcallback.S: gettextf("invalid '%s' or '%s' argument", "pcols", "pattr")
#. R/survpenal.fit.S: gettextf("invalid '%s' or '%s' argument", "strata", "nstrat")
#. R/survpenal.fit.S: gettextf("invalid '%s' or '%s' argument", "pcols", "pattr")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "invalid '%s' or '%s' argument"
msgstr "niepoprawny argument '%s' lub '%s'"

#. R/survcallback.S: stop("invalid 'coxlist1' object")
#. R/survpenal.fit.S: stop("invalid 'coxlist1' object")
#: R/survcallback.S:0 R/survpenal.fit.S:0
msgid "invalid 'coxlist1' object"
msgstr "niepoprawny obiekt klasy \"coxlist1\""

#. R/survpenal.fit.S: stop("invalid 'weights' argument, must be >0")
#. R/survreg.fit.S: stop("invalid 'weights' argument, must be >0")
#: R/survpenal.fit.S:0 R/survreg.fit.S:0
msgid "invalid 'weights' argument, must be >0"
msgstr "niepoprawny argument 'weights', musi być > 0"

#. R/survdiff.fit.S: stop("invalid 'y' matrix")
#: R/survdiff.fit.S:0
msgid "invalid 'y' matrix"
msgstr "niepoprawna macierz 'y'"

#. R/coxph.control.S: stop("invalid convergence criteria")
#: R/coxph.control.S:0
msgid "invalid convergence criteria"
msgstr "niepoprawne kryteria zbieżności"

#. R/survregDtest.S: gettext("invalid distribution name")
#: R/survregDtest.S:0
msgid "invalid distribution name"
msgstr "niepoprawna nazwa rozkładu"

#. R/survreg.S: stop("invalid distribution object")
#. R/survreg.S: stop("invalid distribution object")
#: R/survreg.S:0
msgid "invalid distribution object"
msgstr "niepoprawny obiekt rozkładu"

#. R/Surv.S: warning("invalid interval: start > stop, NA created")
#. R/Surv.S: warning("invalid interval: start > stop, NA created")
#: R/Surv.S:0
msgid "invalid interval: start > stop, NA created"
msgstr "niepoprawny interwał: start > stop, utworzono wartość NA"

#. R/Surv.S: stop("invalid operation on a survival time")
#. R/Surv.S: stop("invalid operation on a survival time")
#. R/Surv.S: stop("invalid operation on a survival time")
#: R/Surv.S:0
msgid "invalid operation on a survival time"
msgstr "niepoprawna operacja na czasie przeżycia"

#. R/survreg.S: stop("invalid parameter names")
#: R/survreg.S:0
msgid "invalid parameter names"
msgstr "niepoprawne nazwy parametru"

#. R/quantile.survfit.R: stop("invalid probability")
#. R/quantile.survfit.R: stop("invalid probability")
#. R/quantile.survfit.R: stop("invalid probability")
#. R/quantile.survfit.R: stop("invalid probability")
#: R/quantile.survfit.R:0
msgid "invalid probability"
msgstr "niepoprawne prawdopodobieństwo"

#. R/match.ratetable.S: stop("invalid rate table")
#. R/pyears.R: stop("invalid rate table")
#. R/pyears.R: stop("invalid rate table")
#. R/survexp.R: stop("invalid rate table")
#: R/match.ratetable.S:0 R/pyears.R:0 R/survexp.R:0
msgid "invalid rate table"
msgstr "niepoprawna tabela częstości"

#. R/survreg.S: stop("invalid scale value")
#: R/survreg.S:0
msgid "invalid scale value"
msgstr "niepoprawna wartość skali"

#. R/Surv.S: stop("invalid status value")
#: R/Surv.S:0
msgid "invalid status value"
msgstr "niepoprawna wartość statusu"

#. R/Surv.S: warning("invalid status value, converted to NA")
#. R/Surv.S: warning("invalid status value, converted to NA")
#: R/Surv.S:0
msgid "invalid status value, converted to NA"
msgstr "niepoprawna wartość statusu, zamieniono na wartość NA"

#. R/Surv.S: stop("invalid status value, must be logical or numeric")
#. R/Surv.S: stop("invalid status value, must be logical or numeric")
#: R/Surv.S:0
msgid "invalid status value, must be logical or numeric"
msgstr "niepoprawna wartość statusu, musi być wartością logiczną lub liczbą"

#. R/survreg.S: stop("invalid survival times for this distribution")
#: R/survreg.S:0
msgid "invalid survival times for this distribution"
msgstr "niepoprawne czasy przeżycia dla tego rozkładu"

#. R/survreg.S: stop("invalid survival type")
#: R/survreg.S:0
msgid "invalid survival type"
msgstr "niepoprawny typ przeżycia"

#. R/coxph.getdata.S: stop("invalid terms component of fit")
#: R/coxph.getdata.S:0
msgid "invalid terms component of fit"
msgstr "niepoprawne komponenty członów dopasowania"

#. R/coxph.detail.S: stop("invalid terms component of object")
#. R/predict.survreg.S: stop("invalid terms component of object")
#. R/residuals.coxph.S: stop("invalid terms component of object")
#. R/residuals.survreg.S: stop("invalid terms component of object")
#: R/coxph.detail.S:0 R/predict.survreg.S:0 R/residuals.coxph.S:0
#: R/residuals.survreg.S:0
msgid "invalid terms component of object"
msgstr "niepoprawne komponenty członów obiektu"

#. R/survexp.R: stop("invalid time point requested")
#: R/survexp.R:0
msgid "invalid time point requested"
msgstr "zażądano niepoprawnego punktu czasowego"

#. R/coxph.control.S: stop("invalid value for iterations")
#: R/coxph.control.S:0
msgid "invalid value for iterations"
msgstr "niepoprawna wartość iteracji"

#. R/agreg.fit.R: stop("invalid weights, must be >0")
#. R/coxpenal.fit.R: stop("invalid weights, must be >0")
#. R/coxph.fit.S: stop("invalid weights, must be >0")
#: R/agreg.fit.R:0 R/coxpenal.fit.R:0 R/coxph.fit.S:0
msgid "invalid weights, must be >0"
msgstr "niepoprawne wagi, muszą być > 0"

#. R/survConcordance.R: gettextf("left hand side of the formula must be a numeric vector or an object of class %s",     dQuote("Surv"))
#: R/survConcordance.R:0
msgid ""
"left hand side of the formula must be a numeric vector or an object of class "
"%s"
msgstr "lewa strona wzoru musi być wektorem liczbowym lub obiektem klasy %s"

#. R/coxpenal.fit.R: stop("length error in 'coxlist2' object")
#. R/survcallback.S: stop("length error in 'coxlist2' object")
#. R/survpenal.fit.S: stop("length error in 'coxlist2' object")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "length error in 'coxlist2' object"
msgstr "błąd długości w obiekcie 'coxlist2'"

#. R/is.ratetable.S: gettext("length of the data does not match 'prod(dim)'")
#: R/is.ratetable.S:0
msgid "length of the data does not match 'prod(dim)'"
msgstr "długość danych nie zgadza się z 'prod(dim)'"

#. R/match.ratetable.S: gettextf("levels do not match for 'ratetable()' variable %s", dimid[i])
#: R/match.ratetable.S:0
msgid "levels do not match for 'ratetable()' variable %s"
msgstr ""

#. R/print.coxph.null.S: gettextf("log likelihood=%s", format(x$loglik), domain = "R-survival")
#: R/print.coxph.null.S:0
msgid "log likelihood=%s"
msgstr "logarytm funkcji wiarygodności=%s"

#. R/cch.R: gettextf("method (%s) requires 'stratum'", method)
#: R/cch.R:0
msgid "method (%s) requires 'stratum'"
msgstr "metoda (%s) wymaga argumentu 'stratum'"

#. R/survregDtest.S: gettext("missing a distribution name")
#: R/survregDtest.S:0
msgid "missing a distribution name"
msgstr "brakuje nazwy rozkładu"

#. R/is.ratetable.S: gettext("missing attribute:")
#: R/is.ratetable.S:0
msgid "missing attribute:"
msgstr "brakujący atrybut:"

#. R/survreg.fit.S: stop("missing density function in the definition of the distribution")
#: R/survreg.fit.S:0
msgid "missing density function in the definition of the distribution"
msgstr ""

#. R/survregDtest.S: gettextf("missing or invalid '%s' component", "trans")
#. R/survregDtest.S: gettextf("missing or invalid '%s' component", "itrans")
#. R/survregDtest.S: gettextf("missing or invalid '%s' component", "dtrans")
#: R/survregDtest.S:0
msgid "missing or invalid '%s' component"
msgstr "brakujący lub niepoprawny komponent '%s'"

#. R/survregDtest.S: gettextf("missing or invalid '%s' function", "init")
#. R/survregDtest.S: gettextf("missing or invalid '%s' function", "deviance")
#. R/survregDtest.S: gettextf("missing or invalid '%s' function", "density")
#. R/survregDtest.S: gettextf("missing or invalid '%s' function", "quantile")
#: R/survregDtest.S:0
msgid "missing or invalid '%s' function"
msgstr "brakująca lub błędna funkcja '%s'"

#. R/is.ratetable.S: gettext("missing the 'type' attribute")
#: R/is.ratetable.S:0
msgid "missing the 'type' attribute"
msgstr "brakuje atrybutu 'type'"

#. R/anova.coxmelist.R: stop("models do not have the same number of events")
#: R/anova.coxmelist.R:0
msgid "models do not have the same number of events"
msgstr "modele nie mają tej samej liczby zdarzeń"

#. R/anova.coxmelist.R: stop("models do not have the same size of dataset")
#: R/anova.coxmelist.R:0
msgid "models do not have the same size of dataset"
msgstr "modele nie mają tego samego rozmiaru zbioru danych"

#. R/anova.coxphlist.S: stop("models were not all fitted to the same size of dataset")
#: R/anova.coxphlist.S:0
msgid "models were not all fitted to the same size of dataset"
msgstr ""
"nie wszystkie modele zostały dopasowane do tego samego rozmiaru zbioru danych"

#. R/anova.coxmelist.R: gettextf("models with response %s removed because response differs from model 1",     deparse(responses[!sameresp]))
#. R/anova.coxphlist.S: gettextf("models with response %s removed because response differs from model 1",     deparse(responses[!sameresp]))
#: R/anova.coxmelist.R:0 R/anova.coxphlist.S:0
msgid "models with response %s removed because response differs from model 1"
msgstr ""
"modele ze zmienną zależną %s zostały usunięte ponieważ zmienna zależna różni "
"się od tej z modelu 1"

#. R/cch.R: stop("multiple records per id not allowed")
#: R/cch.R:0
msgid "multiple records per id not allowed"
msgstr "wiele rekordów na id nie jest dozwolonych"

#. R/pyears.R: stop("negative follow up time")
#. R/survexp.R: stop("negative follow up time")
#: R/pyears.R:0 R/survexp.R:0
msgid "negative follow up time"
msgstr "ujemny czas przeżycia"

#. R/pyears.R: stop("negative survival time")
#: R/pyears.R:0
msgid "negative survival time"
msgstr "ujemny czas przeżycia"

#. R/survexp.fit.S: stop("negative time point requested")
#: R/survexp.fit.S:0
msgid "negative time point requested"
msgstr "zażądano ujemnego punktu czasowego"

#. R/frailty.controlaic.S: gettextf("new theta= %s", format(newtheta), domain = "R-survival")
#. R/frailty.controldf.S: gettextf("new theta= %s", format(x[b1] + exp(newx)), domain = "R-survival")
#. R/frailty.controlgam.S: gettextf("new theta= %s", theta, domain = "R-survival")
#. R/frailty.controlgam.S: gettextf("new theta= %s", format(newtheta), domain = "R-survival")
#. R/frailty.controlgauss.S: gettextf("new theta= %s", theta, domain = "R-survival")
#. R/frailty.controlgauss.S: gettextf("new theta= %s", format(newtheta), domain = "R-survival")
#: R/frailty.controlaic.S:0 R/frailty.controldf.S:0 R/frailty.controlgam.S:0
#: R/frailty.controlgauss.S:0
msgid "new theta= %s"
msgstr "nowa theta= %s"

#. R/coxph.R: stop("no (non-missing) observations")
#. R/survobrien.S: stop("no (non-missing) observations")
#: R/coxph.R:0 R/survobrien.S:0
msgid "no (non-missing) observations"
msgstr "brak (niebrakujących) obserwacji"

#. R/survobrien.S: stop("no continuous variables to modify")
#: R/survobrien.S:0
msgid "no continuous variables to modify"
msgstr "brak ciągłej zmiennej do modyfikacji"

#. R/survdiff.S: stop("no groups to test")
#: R/survdiff.S:0
msgid "no groups to test"
msgstr "brak grup do testowania"

#. R/print.summary.survfit.S: gettextf("no information available using start.time = %s.", x$start.time)
#. R/print.summary.survfitms.S: gettextf("no information available using start.time = %s.", x$start.time)
#: R/print.summary.survfit.S:0 R/print.summary.survfitms.S:0
msgid "no information available using start.time = %s."
msgstr "brak dostępnej informacji używając 'start.time = %s'."

#. R/Surv.S: stop("no time variable!")
#: R/Surv.S:0
msgid "no time variable!"
msgstr "brak zmiennej czasowej!"

#. R/match.ratetable.S: gettextf("non-unique ratetable match for variable %s", dimid[i])
#: R/match.ratetable.S:0
msgid "non-unique ratetable match for variable %s"
msgstr ""

#. R/survreg.distributions.S: stop("number of degrees of freedom must be >=3")
#: R/survreg.distributions.S:0
msgid "number of degrees of freedom must be >=3"
msgstr "liczba stopni swobody musi być większa niż 3"

#. R/print.coxph.S: gettextf("number of events= %d", x$nevent, domain = "R-survival")
#. R/print.summary.coxph.S: gettextf("number of events= %d", x$nevent, domain = "R-survival")
#. R/print.summary.coxph.penal.S: gettextf("number of events= %d", x$nevent, domain = "R-survival")
#: R/print.coxph.S:0 R/print.summary.coxph.S:0 R/print.summary.coxph.penal.S:0
msgid "number of events= %d"
msgstr "liczba zdarzeń= %d"

#. R/tcut.S: stop("number of labels must be 1 less than number of break points")
#: R/tcut.S:0
msgid "number of labels must be 1 less than number of break points"
msgstr "liczba etykiet musi być o jeden mniejsza niż liczba przerw."

#. R/tcut.S: stop("number of labels must equal number of intervals")
#: R/tcut.S:0
msgid "number of labels must equal number of intervals"
msgstr "liczba etykiet musi równać się liczbie interwałów"

#. R/cch.R: stop("number of records greater than cohort size")
#: R/cch.R:0
msgid "number of records greater than cohort size"
msgstr "liczba rekordów jest większa niż rozmiar kohorty"

#. R/survfit.R: warning("offset term ignored")
#. R/survfit.formula.S: warning("offset term ignored")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "offset term ignored"
msgstr "człon przesunięcia został zignorowany"

#. R/survConcordance.R: stop("offset terms not allowed")
#: R/survConcordance.R:0
msgid "offset terms not allowed"
msgstr "człony przesunięcia nie są dozwolone"

#. R/ridge.S: stop("only one of 'df' or 'theta' arguments can be specified")
#: R/ridge.S:0
msgid "only one of 'df' or 'theta' arguments can be specified"
msgstr "tylko jeden argumentów 'df' lub 'theta' może być określony"

#. R/survConcordance.R: stop("only one predictor variable allowed")
#: R/survConcordance.R:0
msgid "only one predictor variable allowed"
msgstr ""

#. R/coxpenal.fit.R: stop("only one sparse penalty term allowed")
#. R/survcallback.S: stop("only one sparse penalty term allowed")
#. R/survpenal.fit.S: stop("only one sparse penalty term allowed")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "only one sparse penalty term allowed"
msgstr ""

#. R/pyears.R: stop("only right-censored and counting process survival types are supported")
#: R/pyears.R:0
msgid "only right-censored and counting process survival types are supported"
msgstr ""

#. R/is.ratetable.S: gettext("only the last dimension can be interpolated")
#: R/is.ratetable.S:0
msgid "only the last dimension can be interpolated"
msgstr ""

#. R/print.survreg.penal.S: stop("penalized fits must have an intercept!")
#: R/print.survreg.penal.S:0
msgid "penalized fits must have an intercept!"
msgstr ""

#. R/summary.coxph.penal.S: stop("penalized summary function can't be used for a null model")
#: R/summary.coxph.penal.S:0
msgid "penalized summary function can't be used for a null model"
msgstr ""

#. R/coxph.R: stop("penalty terms cannot be in an interaction")
#. R/survreg.S: stop("penalty terms cannot be in an interaction")
#: R/coxph.R:0 R/survreg.S:0
msgid "penalty terms cannot be in an interaction"
msgstr "człony kary nie mogą być użyte w interakcji"

#. R/cch.R: stop("permissible values for subcohort indicator are 0/1 or TRUE/FALSE")
#: R/cch.R:0
msgid "permissible values for subcohort indicator are 0/1 or TRUE/FALSE"
msgstr "Dopuszczalne wartości dla wskaźnika podkohorty to 0/1 lub TRUE/FALSE"

#. R/cch.R: stop("population smaller than sample in some strata")
#: R/cch.R:0
msgid "population smaller than sample in some strata"
msgstr "populacja mniejsza niż próbka w niektórych warstwach"

#. R/pyears.R: stop("ratetable does not have expected shape")
#: R/pyears.R:0
msgid "ratetable does not have expected shape"
msgstr ""

#. R/survregDtest.S: gettext("reference distribution was not found")
#: R/survregDtest.S:0
msgid "reference distribution was not found"
msgstr "rozkład referencyjny nie został znaleziony"

#. R/aareg.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/anova.survreg.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/cch.R: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/coxph.R: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survdiff.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survfit.R: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survfit.R: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survfit.formula.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survfit.formula.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survobrien.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#. R/survreg.S: gettextf("response is not an object of class %s", dQuote("Surv"))
#: R/aareg.S:0 R/anova.survreg.S:0 R/cch.R:0 R/coxph.R:0 R/survdiff.S:0
#: R/survfit.R:0 R/survfit.formula.S:0 R/survobrien.S:0 R/survreg.S:0
msgid "response is not an object of class %s"
msgstr "zmienna zależna nie jest obiektem klasy %s"

#. R/survobrien.S: stop("response must be right censored or (start, stop] data")
#: R/survobrien.S:0
msgid "response must be right censored or (start, stop] data"
msgstr ""
"zmienna zależna musi być cenzurowana od prawej lub być danymi o przedziale "
"(start, stop]"

#. R/survdiff.S: stop("right censored data only")
#: R/survdiff.S:0
msgid "right censored data only"
msgstr "tylko dane cenzorowane w prawo"

#. R/survexp.R: warning("se.fit value ignored")
#: R/survexp.R:0
msgid "se.fit value ignored"
msgstr "zignorowano wartość 'se.fit'"

#. R/anova.survreglist.S: warning("some fit objects deleted because response differs from the first model")
#: R/anova.survreglist.S:0
msgid "some fit objects deleted because response differs from the first model"
msgstr ""
"niektóre obiekty dopasowań zostały usunięte ponieważ zmienna zależna różni "
"się od tej z pierwszego modelu"

#. R/coxpenal.fit.R: stop("sparse term must be single column")
#. R/survcallback.S: stop("sparse term must be single column")
#. R/survpenal.fit.S: stop("sparse term must be single column")
#: R/coxpenal.fit.R:0 R/survcallback.S:0 R/survpenal.fit.S:0
msgid "sparse term must be single column"
msgstr "człon 'sparse' musi być pojedynczą kolumną"

#. R/survfitKM.S: gettextf("start.time = %s is greater than all time points.", start.time)
#. R/survfitTurnbull.S: gettextf("start.time = %s is greater than all time points.", start.time)
#: R/survfitKM.S:0 R/survfitTurnbull.S:0
msgid "start.time = %s is greater than all time points."
msgstr "czas startu = %s jest większy niż wszystkie punkty czasowe."

#. R/Surv.S: warning("status must be 0, 1, 2 or 3; converted to NA")
#: R/Surv.S:0
msgid "status must be 0, 1, 2 or 3; converted to NA"
msgstr "status musi mieć wartość 0, 1, 2 lub 3; zmieniono na NA"

#. R/pyears.R: stop("stop time must be > start time")
#: R/pyears.R:0
msgid "stop time must be > start time"
msgstr "czas stopu musi być > czas startu"

#. R/Surv.S: warning("stop time must be > start time, NA created")
#: R/Surv.S:0
msgid "stop time must be > start time, NA created"
msgstr "czas stopu musi być > od czasu startu, utworzono wartość NA"

#. R/survfit.R: gettextf("strata %s not matched", paste(i[is.na(indx)], collapse = " "), domain = "R-survival")
#. R/survfitms.R: gettextf("strata %s not matched", paste(i[is.na(indx)], collapse = " "))
#: R/survfit.R:0 R/survfitms.R:0
msgid "strata %s not matched"
msgstr "warstwa %s nie została dopasowana"

#. R/aareg.S: stop("strata terms not allowed")
#: R/aareg.S:0
msgid "strata terms not allowed"
msgstr "człony warstwy nie są dozwolone"

#. R/cch.R: warning("stratum levels and names(cohort.size) do not agree")
#: R/cch.R:0
msgid "stratum levels and names(cohort.size) do not agree"
msgstr ""

#. R/survfitCI.R: gettextf("subject changes case weights, id %s", (id[indx1])[who])
#: R/survfitCI.R:0
msgid "subject changes case weights, id %s"
msgstr "obiekt zmienia wagi przypadku, id %s"

#. R/survfitCI.R: gettextf("subject changes to the same state, id %s", (id[indx1])[who])
#: R/survfitCI.R:0
msgid "subject changes to the same state, id %s"
msgstr "obiekt zmienia się do tego samego stanu, id %s"

#. R/survfitCI.R: gettextf("subject is in two different groups, id %s", (id[indx1])[who])
#: R/survfitCI.R:0
msgid "subject is in two different groups, id %s"
msgstr "przedmiot jest w dwóch różnych grupach, id %s"

#. R/survfit.R: stop("survfit object does not have 2 dimensions")
#: R/survfit.R:0
msgid "survfit object does not have 2 dimensions"
msgstr "obiekt klasy \"survfit\" nie ma 2 wymiarów"

#. R/cox.zph.S: stop("the are no score residuals for a Null model")
#: R/cox.zph.S:0
msgid "the are no score residuals for a Null model"
msgstr "brak reszt punktacji dla pustego modelu"

#. R/anova.coxph.S: gettextf("the following arguments passed to 'anova.coxph()' are invalid and dropped: %s",     tmp_n)
#: R/anova.coxph.S:0
msgid ""
"the following arguments passed to 'anova.coxph()' are invalid and dropped: %s"
msgstr ""
"poniższe argumenty przekazane do 'anova.coxph()' są niepoprawne i zostały "
"odrzucone: %s"

#. R/survfit.coxph.R: stop("the id and/or individual options only make sense with new data")
#: R/survfit.coxph.R:0
msgid "the id and/or individual options only make sense with new data"
msgstr ""

#. R/survfit.coxph.R: stop("the individual option is only valid for start-stop data")
#: R/survfit.coxph.R:0
msgid "the individual option is only valid for start-stop data"
msgstr "argument 'id' jest wymagany dla danych start:stop"

#. R/survdiff.S: stop("the offset must be a survival probability")
#: R/survdiff.S:0
msgid "the offset must be a survival probability"
msgstr "przesunięcie musi być prawdopodobieństwem przeżycia"

#. R/survreg.S: stop("the scale argument is not valid with multiple strata")
#: R/survreg.S:0
msgid "the scale argument is not valid with multiple strata"
msgstr "argument 'scale' nie jest poprawny z wielokrotnymi warstwami"

#. R/match.ratetable.S: gettextf("the variable %s is out of range", dimid[i])
#: R/match.ratetable.S:0
msgid "the variable %s is out of range"
msgstr "zmienna %s jest poza zakresem"

#. R/print.summary.survexp.R: stop("there are no observations to print.")
#: R/print.summary.survexp.R:0
msgid "there are no observations to print."
msgstr "nie ma obserwacji do wyświelenia."

#. R/survdiff.fit.S: stop("there is only 1 group")
#: R/survdiff.fit.S:0
msgid "there is only 1 group"
msgstr "jest tylko jedna grupa"

#. R/survobrien.S: stop("this function cannot deal with iteraction terms")
#: R/survobrien.S:0
msgid "this function cannot deal with iteraction terms"
msgstr "ta funkcja nie obsługuje członów interakcji"

#. R/survexp.R: stop("times must be in increasing order")
#: R/survexp.R:0
msgid "times must be in increasing order"
msgstr "czasy muszą być w porządku rosnącym"

#. R/pspline.S: stop("too few basis functions")
#: R/pspline.S:0
msgid "too few basis functions"
msgstr "zbyt mało funkcji bazowych"

#. R/pspline.S: stop("too few degrees of freedom")
#: R/pspline.S:0
msgid "too few degrees of freedom"
msgstr "zbyt mało stopni swobody"

#. R/is.ratetable.S: gettextf("type[ %d ] is 1; cutpoint should be null", i)
#: R/is.ratetable.S:0
msgid "type[ %d ] is 1; cutpoint should be null"
msgstr ""

#. R/pyears.R: stop("unable to match new data to old formula")
#. R/survexp.R: stop("unable to match new data to old formula")
#: R/pyears.R:0 R/survexp.R:0
msgid "unable to match new data to old formula"
msgstr "nie można dopasować nowych danych do starej formuły"

#. R/coxph.R: gettextf("unknown method %s", method)
#: R/coxph.R:0
msgid "unknown method %s"
msgstr "mieznana metoda %s"

#. R/survfitms.R: gettextf("unmatched subscript %s", j[is.na(indx)])
#. R/survfitms.R: gettextf("unmatched subscript %s", j[indx])
#: R/survfitms.R:0
msgid "unmatched subscript %s"
msgstr "niedopasowany indeks %s"

#. R/plot.survfit.R: stop("unrecognized 'fun' argument")
#. R/plot.survfit.R: stop("unrecognized 'fun' argument")
#. R/plot.survfit.R: stop("unrecognized 'fun' argument")
#: R/plot.survfit.R:0
msgid "unrecognized 'fun' argument"
msgstr "nierozpoznany argument 'fun'"

#. R/survpenal.fit.S: stop("unrecognized distribution")
#. R/survreg.fit.S: stop("unrecognized distribution")
#: R/survpenal.fit.S:0 R/survreg.fit.S:0
msgid "unrecognized distribution"
msgstr "nierozpoznany rozkład"

#. R/survfit.R: stop("unrecognized survival type")
#. R/survfit.formula.S: stop("unrecognized survival type")
#: R/survfit.R:0 R/survfit.formula.S:0
msgid "unrecognized survival type"
msgstr "nierozpoznany typ przeżycia"

#. R/cox.zph.S: stop("unrecognized transform")
#: R/cox.zph.S:0
msgid "unrecognized transform"
msgstr "nierozpoznana transformacja"

#. R/is.ratetable.S: gettextf("unsorted cutpoints for dimension %d", i)
#: R/is.ratetable.S:0
msgid "unsorted cutpoints for dimension %d"
msgstr ""

#. R/pyears.R: stop("variable not found in the ratetable:", (names(rcall))[is.na(temp)])
#: R/pyears.R:0
msgid "variable not found in the ratetable:"
msgstr "zmienna nie została znaleziona w tabeli szybkości:"

#. R/frailty.gaussian.S: gettextf("variance of random effect= %s", format(theta))
#. R/frailty.t.S: gettextf("variance of random effect= %s", format(theta))
#: R/frailty.gaussian.S:0 R/frailty.t.S:0
msgid "variance of random effect= %s"
msgstr "wariancja efektu losowego= %s"

#. R/frailty.gamma.S: gettextf("variance of random effect= %s  I-likelihood = %s", format(theta), format(round(clog,     1), digits = 10))
#: R/frailty.gamma.S:0
msgid "variance of random effect= %s  I-likelihood = %s"
msgstr "wariancja efektu losowego= %s  Iogarytm funkcji wiarygodności = %s"

#. R/clogit.R: warning("weights are ignored in 'clogit()'")
#: R/clogit.R:0
msgid "weights are ignored in 'clogit()'"
msgstr "wagi zostały zignorowane w funkcji 'clogit()'"

#. R/survexp.R: warning("weights ignored")
#: R/survexp.R:0
msgid "weights ignored"
msgstr "wagi zostały zignorowane"

#. R/coxph.R: gettextf("wrong length for '%s' argument", "tt")
#. R/model.matrix.coxph.R: gettextf("wrong length for '%s' argument", "tt")
#. R/residuals.coxph.S: gettextf("wrong length for '%s' argument", "collapse")
#. R/residuals.survreg.S: gettextf("wrong length for '%s' argument", "collapse")
#. R/survfitCI.R: gettextf("wrong length for '%s' argument", "istate")
#: R/coxph.R:0 R/model.matrix.coxph.R:0 R/residuals.coxph.S:0
#: R/residuals.survreg.S:0 R/survfitCI.R:0
msgid "wrong length for '%s' argument"
msgstr "niepoprawna długość argumentu '%s'"

#. R/is.ratetable.S: gettextf("wrong length for '%s' component", "dimnames")
#. R/is.ratetable.S: gettextf("wrong length for '%s' component", "dimid")
#. R/is.ratetable.S: gettextf("wrong length for '%s' component", "cutpoints")
#. R/is.ratetable.S: gettextf("wrong length for '%s' component", "factor")
#: R/is.ratetable.S:0
msgid "wrong length for '%s' component"
msgstr "niepoprawna długość komponentu '%s'"

#. R/is.ratetable.S: gettext("wrong length for 'type' attribute")
#: R/is.ratetable.S:0
msgid "wrong length for 'type' attribute"
msgstr "niepoprawna długość atrybutu 'type'"

#. R/is.ratetable.S: gettextf("wrong length for cutpoints %d", i)
#: R/is.ratetable.S:0
msgid "wrong length for cutpoints %d"
msgstr ""

#. R/agexact.fit.S: stop("wrong length for inital values")
#. R/agreg.fit.R: stop("wrong length for inital values")
#. R/coxexact.fit.R: stop("wrong length for inital values")
#. R/coxpenal.fit.R: stop("wrong length for inital values")
#. R/coxph.fit.S: stop("wrong length for inital values")
#. R/survpenal.fit.S: stop("wrong length for inital values")
#: R/agexact.fit.S:0 R/agreg.fit.R:0 R/coxexact.fit.R:0 R/coxpenal.fit.R:0
#: R/coxph.fit.S:0 R/survpenal.fit.S:0
msgid "wrong length for inital values"
msgstr "niepoprawna długość dla wartości początkowych"

#. R/survreg.fit.S: stop("wrong length for initial parameters")
#: R/survreg.fit.S:0
msgid "wrong length for initial parameters"
msgstr "błędna długość parametrów początkowych"

#. R/Surv.S: stop("wrong number of arguments for this type of survival data")
#. R/Surv.S: stop("wrong number of arguments for this type of survival data")
#: R/Surv.S:0
msgid "wrong number of arguments for this type of survival data"
msgstr "błędna liczba argumentów dla tego typu danych przeżycia"

#. R/cch.R: ngettext(sum(!subcoh & !cens), "%d censored observation not in subcohort", "%d censored observations not in subcohort",     domain = "R-survival")
#: R/cch.R:0
msgid "%d censored observation not in subcohort"
msgid_plural "%d censored observations not in subcohort"
msgstr[0] "%d cenzorowana obserwacja nie w podkohorcie"
msgstr[1] "%d cenzorowane obserwacje nie w podkohorcie"
msgstr[2] "%d cenzorowanych obserwacji nie w podkohorcie"

#. R/pyears.R: ngettext(nzero, "%d observation with an event and 0 follow-up time, any rate calculations are statistically questionable",     "%d observations with an event and 0 follow-up time, any rate calculations are statistically questionable",     domain = "R-survival")
#: R/pyears.R:0
msgid ""
"%d observation with an event and 0 follow-up time, any rate calculations are "
"statistically questionable"
msgid_plural ""
"%d observations with an event and 0 follow-up time, any rate calculations "
"are statistically questionable"
msgstr[0] ""
msgstr[1] ""
msgstr[2] ""

#. R/print.survreg.S: ngettext(sum(nas), "Coefficients: (%d not defined because of singularity)", "Coefficients: (%d not defined because of singularities)",     domain = "R-survival")
#: R/print.survreg.S:0
msgid "Coefficients: (%d not defined because of singularity)"
msgid_plural "Coefficients: (%d not defined because of singularities)"
msgstr[0] ""
msgstr[1] ""
msgstr[2] ""

#. R/print.ratetable.S: ngettext(length(attr(x, "dimid")), "Rate table with dimension: ", "Rate table with dimensions: ",     domain = "R-survival")
#: R/print.ratetable.S:0
msgid "Rate table with dimension: "
msgid_plural "Rate table with dimensions: "
msgstr[0] "Tabela szybkości o wymiarze:"
msgstr[1] "Tabela szybkości o wymiarach:"
msgstr[2] "Tabela szybkości o wymiarach:"

#~ msgid "'%s' option is set, but no '%s' argument"
#~ msgstr "wybrano opcję '%s', ale brak argumentu '%s'"

#~ msgid "'method != fixed', but have a 'theta' argument"
#~ msgstr "'method != fixed', ale obecny jest argument 'theta'"

#~ msgid "'method = df' but no 'df' argument"
#~ msgstr "'method = df', ale brak argumentu 'df'"

#~ msgid "'method = fixed' but no 'theta' argument"
#~ msgstr "'method = fixed', ale brak argumentu 'theta'"

#~ msgid "cannot use both the etype and istate arguments"
#~ msgstr "nie można użyć obu argumentów 'etype' oraz 'istate'"

#~ msgid "etype argument incompatable with survival type"
#~ msgstr "argument 'etype' nie jest zgodny z typem 'survival'"

#~ msgid "'method != df', but have a 'df' argument"
#~ msgstr "'method != df', ale obecny jest argument 'df'"

#~ msgid "'tt' argument must contain function or list of functions"
#~ msgstr "argument 'tt' musi zawierać funkcję lub listę funkcji"

#~ msgid "Argument lengths do not match"
#~ msgstr "Długości argumentów nie zgadzają się"

#~ msgid ""
#~ "Models with response %s removed because response differs from model 1"
#~ msgstr ""
#~ "Modele ze zmienną zależną %s zostały usunięte ponieważ zmienna zależna "
#~ "różni się od tej z modelu 1"

#~ msgid "distribution was not found"
#~ msgstr "rozkład nie został znaleziony"

#~ msgid "must have an X variable"
#~ msgstr "potrzeba mieć zmienną X"

#~ msgid "no information available using start.time =%s."
#~ msgstr "brak dostępnej informacji używając 'start.time = %s'."

#~ msgid "ran out of iterations and did not converge"
#~ msgstr "wyczerpano limit iteracji, a algorytm nie uzbieżnił się"

#~ msgid "x must be a factor"
#~ msgstr "'x' musi być czynnikiem"

#~ msgid "'%s' and '%s' arguments are of different length"
#~ msgstr "argumenty '%s' oraz '%s' mają różną długość"

#~ msgid "Cluster can not be used in an interaction"
#~ msgstr "Grupa nie może być użyta w interakcji"

#~ msgid "Length mismatch for x and y"
#~ msgstr "Niezgodność długości dla x oraz y"

#~ msgid "invalid 'pcols' or 'pattr' argument"
#~ msgstr "niepoprawny argument 'pcols' lub 'pattr'"

#~ msgid "invalid 'strata' or 'nstrat' argument"
#~ msgstr "niepoprawny argument 'strata' lub 'nstrat'"

#~ msgid "invalid 'terms' argument"
#~ msgstr "niepoprawny argument 'terms'"

#~ msgid "invalid value for '%s' argument"
#~ msgstr "niepoprawna wartość dla argumentu '%s'"

#~ msgid "invalid value for 'conf.int' argument"
#~ msgstr "niepoprawna wartość dla argumentu 'conf.int'"

#~ msgid "Invalid interval: start > stop, NA created"
#~ msgstr "niepoprawny interwał: start > stop, utworzono wartość NA"

#~ msgid "the robust option is deprecated"
#~ msgstr "opcja 'robust' jest przestarzała"

#~ msgid "'x' matrix does not match the cox fit"
#~ msgstr "macierz 'x' nie zgadza się z dopasowaniem Coxa"

#~ msgid "Program unfinished"
#~ msgstr "Program nie jest skończony"

#~ msgid "'newstrata' argument must be TRUE/FALSE"
#~ msgstr "argument 'newstrata' musi mieć wartość TRUE/FALSE"

#~ msgid "'newstrata' argument must be TRUE for the individual or id options"
#~ msgstr ""
#~ "argument 'newstrata' musi mieć wartość TRUE dla opcji 'individual' lub "
#~ "'id'"

#~ msgid "'newstrata' argument under construction, value ignored"
#~ msgstr ""
#~ "argument 'newstrata' jest w trakcie implementowania, wartość zignorowano"

#~ msgid "subscript %s not matched"
#~ msgid_plural "subscripts %s not matched"
#~ msgstr[0] "indeks %s nie został dopasowana"
#~ msgstr[1] "indeksy %s nie zostały dopasowane"
#~ msgstr[2] "indeksy %s nie zostały dopasowane"

#~ msgid "The inf.warn setting must be >0"
#~ msgstr "Ustawienie 'inf.warn' musi być > 0"

#~ msgid "First argument must be a fitted Cox model"
#~ msgstr "Pierwszy argument musi być dopasowanym modelem Coxa"

#~ msgid "Distribution not found"
#~ msgstr "Rozkład nie został znaleziony"

#~ msgid "Invalid value for mark.time"
#~ msgstr "Niepoprawna wartość 'matrix.time'"

#~ msgid "invalid value for theta"
#~ msgstr "niepoprawna wartość dla theta"

#, fuzzy
#~ msgid "invalid values for Boundary.knots"
#~ msgstr "niepoprawna wartość dla 'conf.int'"

#~ msgid "Invalid y matrix"
#~ msgstr "Niepoprawna macierz 'y'"

#~ msgid "x must be a matrix"
#~ msgstr "'x' musi być macierzą"

#~ msgid "Invalid value for death indicator"
#~ msgstr "Niepoprawna wartość dla wskaźnika śmierci"

#, fuzzy
#~ msgid "Wrong length for '%s' argument"
#~ msgstr "niepoprawna długość argumentu '%s'"

#~ msgid "Invalid formula for cox fitting function"
#~ msgstr "Niepoprawny wzór dla funkcji dopasowania coxa"

#~ msgid "Invalid rate table"
#~ msgstr "Niepoprawna tabela częstości"

#~ msgid "Chisq=%s on %s df, p=%s; test weights=%s"
#~ msgstr "Chisq=%s dla %s st. sw., p=%s; wagi testowe=%s"

#~ msgid "Chisq=%s on %d degrees of freedom, p=%s"
#~ msgstr "Chi-kwadrat=%s dla %d stopni swobody, p=%s"

#~ msgid "invalid 'rmap' argument"
#~ msgstr "niepoprawny argument 'rmap'"

#~ msgid "invalid ratetable"
#~ msgstr "niepoprawna tabela częstości"

#~ msgid "Wrong length for 'collapse'"
#~ msgstr "Niepoprawna długość 'collapse'"

#~ msgid "Input is not valid"
#~ msgstr "Wejście nie jest poprawne"

#~ msgid "Can't find an appropriate date class"
#~ msgstr "Nie można znaleźć odpowiedniej klasy danych"

#~ msgid "Offset term ignored"
#~ msgstr "Człon przesunięcia został zignorowany"

#~ msgid "wrong length for 'istate' argument"
#~ msgstr "niepoprawna długość argumentu 'istate'"

#~ msgid "y must be a Surv object"
#~ msgstr "y musi być obiektem klasy \"surv\""

#~ msgid "invalid 'coxlist1' list"
#~ msgstr "niepoprawna lista 'coxlist1'"

#~ msgid "incorrect length in 'coxlist1' list"
#~ msgstr "niepoprawna długość w liście 'coxlist1'"

#~ msgid "length error in 'coxlist2' list"
#~ msgstr "błąd długości w liście 'coxlist2'"

#~ msgid "invalid 'taper' argument"
#~ msgstr "niepoprawny argument 'taper'"

#~ msgid "No (non-missing) observations"
#~ msgstr "Brak (niebrakujących) obserwacji"

#~ msgid "Wrong length for tt argument"
#~ msgstr "Niepoprawna długość argumentu tt"

#~ msgid "Invalid 'fun' argument"
#~ msgstr "Niepoprawny argument 'fun'"

#~ msgid "Unable to match new data to old formula"
#~ msgstr "Nie można dopasować nowych danych do starej formuły"

#~ msgid "invalid 'scale' argument"
#~ msgstr "niepoprawny argument 'scale'"

#~ msgid "invalid 'strata' argument"
#~ msgstr "niepoprawny argument 'strata'"

#~ msgid "'time' and 'time2' arguments are of different lengths"
#~ msgstr "argumenty 'time' oraz 'time2' mają różną długość"

#~ msgid "'cutpoints' component is not a list"
#~ msgstr "komponent 'cutpoints' nie jest listą"

#~ msgid "wrong length for 'dimnames' component"
#~ msgstr "niepoprawna długość dla komponentu 'dimnames'"

#~ msgid "wrong length for 'cutpoints' component"
#~ msgstr "niepoprawna długość dla komponentu  'cutpoints'"

#~ msgid "wrong length for 'factor' component"
#~ msgstr "niepoprawna długość dla komponentu 'factor'"

#~ msgid "'x' argument must be a matrix"
#~ msgstr "argument 'x' musi być macierzą"

#, fuzzy
#~ msgid "can have only 1 ratetable() call in a formula"
#~ msgstr "Wywołanie 'ratetable()' w formule jest przestarzałe"

#~ msgid "response must be an object of class \"Surv\""
#~ msgstr "zmienna zależna musi być obiektem klasy \"Surv\""

#~ msgid "response is not an object of class \"survival\""
#~ msgstr "zmienna zależna nie jest obiektem klasy \"survival\""

#~ msgid "Invalid weights, must be >0"
#~ msgstr "niepoprawne wagi, muszą być > 0"

#~ msgid "Invalid terms argument"
#~ msgstr "Niepoprawny argument 'terms'"

#~ msgid "Likelihood ratio test=%s on %s df, p=%s"
#~ msgstr "Test stosunku funkcji wiarygodności=%s dla %s stopni swobody, p=%s"

#~ msgid "Degrees of freedom for terms=%s"
#~ msgstr "Stopnie swodoby dla członów=%s"

#~ msgid "Robust = %s  p=%s"
#~ msgstr "Statystyka odpornościowa = %s  p=%s"

#~ msgid "Scale=%s"
#~ msgstr "Skala = %s"

#~ msgid "Invalid object"
#~ msgstr "Niepoprawny obiekt"

#~ msgid "Likelihood ratio test =%s on %s df, p=%s"
#~ msgstr "Test stosunku funkcji wiarygodności=%s dla %s stopni swobody, p=%s"

#~ msgid "'tt' argument is not an object of class \"terms\""
#~ msgstr "argument 'tt' nie jest obiektem klasy \"terms\""

#~ msgid "A formula argument is required"
#~ msgstr "Argument 'formula' jest wymagany"

#~ msgid "'x' argument is not an object of class \"coxph.penal\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"coxph.penal\""

#~ msgid "'x' argument is not an object of class \"survdiff\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"survdiff\""

#~ msgid "'x' argument is not an object of class \"survexp\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"survexp\""

#~ msgid "'x' argument is not an object of class \"pspline\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"pspline\""

#~ msgid "'object' argument is not an object of class \"ratetable\""
#~ msgstr "argument 'object' nie jest obiektem klasy \"ratetable\""

#~ msgid "'object' argument is not an object of class \"survexp\""
#~ msgstr "argument 'object' nie jest obiektem klasy \"survexp\""

#~ msgid "The 'ratetable()' call in a formula is deprecated"
#~ msgstr "Wywołanie 'ratetable()' w formule jest przestarzałe"

#~ msgid "'ratetable' is not an object of class \"ratetable\""
#~ msgstr "argument 'ratetable' nie jest obiektem klasy \"ratetable\""

#~ msgid "'y' argument is not an object of class \"Surv\""
#~ msgstr "argument 'y' nie jest obiektem klasy \"Surv\""

#~ msgid "'x' argument must be an object of class \"aareg\""
#~ msgstr "argument 'x' musi być obiektem klasy \"aareg\""

#~ msgid "'fit' argument is not an object of class \"coxph\""
#~ msgstr "argument 'fit' nie jest obiektem klasy \"coxph\""

#~ msgid "'x' argument is not an object of class \"survfit\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"survfit\""

#~ msgid "'x' argument is not an object of class \"aareg\""
#~ msgstr "argument 'x' nie jest obiektem klasy \"aareg\""

#~ msgid "'object' argument is not an object of class \"coxph\""
#~ msgstr "argument 'object' nie jest obiektem klasy \"coxph\""

#, fuzzy
#~ msgid "variance of random effect=%s"
#~ msgstr "Wariancja efektu losowego=%s"
