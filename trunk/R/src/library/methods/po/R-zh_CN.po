# Chinese translations for R package
# Copyright (C) 2005 The R Foundation
# This file is distributed under the same license as the PACKAGE package.
# 陈斐 <feic@avaya.com>, 2006.
# 
msgid ""
msgstr ""
"Project-Id-Version: R 2.3.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2014-07-19 18:10\n"
"PO-Revision-Date: 2005-03-15 08:37+0000\n"
"Last-Translator: 陈斐 <FeiChen@FairIsaac.com>\n"
"Language-Team: Chinese\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. R/MethodsList.R: gettext("## Signature:", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "## Signature:"
msgstr "\"，标记是"

#. R/MethodsListClass.R: gettext("%d: target %s: chose %s (others: %s)", domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "%d: target %s: chose %s (others: %s)"
msgstr "%d: 目标\"%s\": 选择\"%s\" (其它：%s)"

#. R/MethodsList.R: gettextf("%f is not a valid generic function: methods list was an object of class %s",     sQuote(f), dQuote(class(mlist)))
#: R/MethodsList.R:0
msgid ""
"%f is not a valid generic function: methods list was an object of class %s"
msgstr "%f不是正确的泛型函数: 方法串列是类别为%s的对象"

#. R/Methods.R: gettextf("%s has no methods defined", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "%s has no methods defined"
msgstr "'%s'没有设定任何方法"

#. R/Methods.R: gettextf("%s is a primitive function;  methods can be defined, but the generic function is implicit, and cannot be changed.",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s is a primitive function;  methods can be defined, but the generic "
"function is implicit, and cannot be changed."
msgstr ""
"%s是基元函数; 能够为其设定方法，但泛型函数是隱含定义的，无法对之进行改动。"

#. R/Methods.R: gettextf("%s is a primitive function; its generic form cannot be redefined", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "%s is a primitive function; its generic form cannot be redefined"
msgstr "\"%s\" 是基元函数；其泛型形式是不能被重新定义的"

#. R/SClasses.R: gettextf("%s is not a defined class", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "%s is not a defined class"
msgstr "\"%s\"不是有定义的类别"

#. R/refClass.R: gettextf("%s is not a defined class in this environment", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a defined class in this environment"
msgstr "\"%s\"在这个环境里没有类别定义"

#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(field), dQuote(thisClass@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(def@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a field in class %s"
msgstr "\"%s\"不是在%s类别里的场"

#. R/refClass.R: gettextf("%s is not a field in this class", sQuote(name))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a field in this class"
msgstr "\"%s\"不是这个类别里的场"

#. R/RMethodUtils.R: gettextf("%s is not a generic function (or not visible here)", sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "%s is not a generic function (or not visible here)"
msgstr "'%s'不是泛型函数(或从这儿看不到)"

#. R/trace.R: gettextf("%s is not a method for reference class %s", sQuote(as.character(if (is.symbol(thisName)) thisName else what)),     dQuote(class(where)))
#: R/trace.R:0
#, fuzzy
msgid "%s is not a method for reference class %s"
msgstr "\"%s\"不是引用类别%s的方法"

#. R/refClass.R: gettextf("%s is not a reference class", dQuote(Class))
#. R/refClass.R: gettextf("%s is not a reference class", dQuote(def@className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a reference class"
msgstr "\"%s\"不是引用类别"

#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#: R/SClasses.R:0
#, fuzzy
msgid "%s is not a slot in class %s"
msgstr "\"%s\"不是在%s类别里的槽"

#. R/refClass.R: gettextf("%s is not a valid field or method name for reference class %s", sQuote(field),     dQuote(thisClass@className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a valid field or method name for reference class %s"
msgstr "\"%s\"场要么无效，要么引用类的方法名%s不对"

#. R/refClass.R: gettextf("%s is not a valid field or method name for this class", sQuote(what))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a valid field or method name for this class"
msgstr "\"%s\"不是个有效的场，出不是这个类别的方法名字"

#. R/Methods.R: gettextf("%s is not an S4 generic function in %s; methods not removed", sQuote(f),     sQuote(getPackageName(where)))
#: R/Methods.R:0
#, fuzzy
msgid "%s is not an S4 generic function in %s; methods not removed"
msgstr "\"%s\"不是在\"%s\"里的泛型函数；因此方法没有被删除掉"

#. R/Methods.R: gettextf("%s is not currently a generic:  define it first to create a non-default implicit form",     sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid ""
"%s is not currently a generic:  define it first to create a non-default "
"implicit form"
msgstr "\"%s\"目前不是泛型函数：请先将之定义以建立一个非较默隐含形式 "

#. R/RClassUtils.R: gettextf("%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)",     dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"%s is not eligible to be the data part of another class (must be a basic "
"class or a virtual class with no slots)"
msgstr ""
"%s\"不可以成为另外一个类别的数据部分(必需是没有槽的基本类别或虛擬类别才可以)"

#. R/addedFunctions.R: gettextf("%s is not one of the element names", sQuote(name))
#: R/addedFunctions.R:0
#, fuzzy
msgid "%s is not one of the element names"
msgstr "'%s'不是單元名字中的一个"

#. R/MethodsList.R: gettextf("%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s",     sQuote("useInherited"), dQuote(class(useInherited)))
#: R/MethodsList.R:0
msgid ""
"%s must be TRUE, FALSE, or a named logical vector of those values; got an "
"object of class %s"
msgstr ""
"%s的值必需为TRUE, FALSE, 或是个带名字的逻辑矢量; 现在得到的却是类别为%s的对象"

#. R/trace.R: gettextf("%s() is not a generic function in the target environment -- methods will not be inserted",     f)
#: R/trace.R:0
#, fuzzy
msgid ""
"%s() is not a generic function in the target environment -- methods will not "
"be inserted"
msgstr "%s()不是在目标环境里的泛型函数；因此方法没有被插入"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is deprecated.",     dQuote(this))
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is "
"deprecated."
msgstr "%s和其他\"MethodsList\"元数据目标对象都已经不推荐使用了"

#. R/Methods.R: gettextf("'%s' is not a known generic function {and 'package' not specified}", f)
#: R/Methods.R:0
msgid "'%s' is not a known generic function {and 'package' not specified}"
msgstr "没有'%s'这样一个泛型函数，{也没有设定'package'}"

#. R/RClassUtils.R: stop("'Class' argument must be a valid class definition or class")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'Class' argument must be a valid class definition or class"
msgstr "'Class'必需是有效的类别名字或类别定义"

#. R/oldClass.R: gettextf("'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s",     dQuote(class(object)))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true "
"of class %s"
msgstr "S3Class只能分配给扩充\"oldClass\"类别的S4目标对象；不适用于类别%s"

#. R/oldClass.R: gettextf("'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s",     dQuote("oldClass"), dQuote(class(object)))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"'S3Class' only defined for extensions of %s or classes with a data part:  "
"not true of class %s"
msgstr ""
"S3Class只能定义于\"oldClass\"的扩充类别或带数据部分的类别不适用于类别 \""

#. R/ClassExtensions.R: gettextf("'S3Part()' method is only defined for classes set up by 'setOldCLass()' method, basic classes or subclasses of these: not true of class %s",     dQuote(class(object)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"'S3Part()' method is only defined for classes set up by 'setOldCLass()' "
"method, basic classes or subclasses of these: not true of class %s"
msgstr ""
"S3Part()只适用于由setOldCLass()，基本类别，或基本类别或这些类别的子类别%s类别"
"不是这种情况"

#. R/as.R: gettext("'as' method should have one argument, or match the arguments of 'coerce()' function: got (%s)",     domain = "R-methods")
#: R/as.R:0
#, fuzzy
msgid ""
"'as' method should have one argument, or match the arguments of 'coerce()' "
"function: got (%s)"
msgstr "'as'方法必需有一个参数，或同coerce()相对应，得到的却是(%s)"

#. R/Methods.R: stop("'callGeneric' must be called from a generic function or method")
#: R/Methods.R:0
msgid "'callGeneric' must be called from a generic function or method"
msgstr "'callGeneric'只能由泛型函数或方法来調用"

#. R/Methods.R: stop("'callGeneric' with a primitive needs explicit arguments (no formal args defined)")
#: R/Methods.R:0
msgid ""
"'callGeneric' with a primitive needs explicit arguments (no formal args "
"defined)"
msgstr "带基元的'callGeneric'需要明确的参数(没有设定正式参数)"

#. R/RClassUtils.R: stop("'class' is a reserved slot name and cannot be redefined")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'class' is a reserved slot name and cannot be redefined"
msgstr "\"class\"是为保留槽名，不可以重新被定义"

#. R/is.R: stop("'class1' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class1' must be the name of a class or a class definition"
msgstr "'class1'必需是类别名字或类别定义"

#. R/is.R: stop("'class2' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class2' must be the name of a class or a class definition"
msgstr "'class2'必需是类别名字或类别定义"

#. R/RClassUtils.R: stop("'externalptr' objects cannot be initialized from function 'new()'")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'externalptr' objects cannot be initialized from function 'new()'"
msgstr "'externalptr'对象无法从new()里来进行初始化"

#. R/Methods.R: stop("'file' must be a character string or a connection")
#. R/Methods.R: stop("'file' must be a character string or a connection")
#: R/Methods.R:0
msgid "'file' must be a character string or a connection"
msgstr "'file'必需是字符串或联结"

#. R/MethodsListClass.R: gettext("'initialize' method returned an object of class %s instead of the required class %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid ""
"'initialize' method returned an object of class %s instead of the required "
"class %s"
msgstr "初始化方法回復了类别为%s的对象而不是所要求的%s这一类别"

#. R/MethodsListClass.R: gettextf("(All objects are from package %s)", unique(sQuote(pkg)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "(All objects are from package %s)"
msgstr "不是程輯包名: %s"

#. R/show.R: gettext("(This generic function excludes non-simple inheritance; see '?setIs')")
#: R/show.R:0
msgid "(This generic function excludes non-simple inheritance; see '?setIs')"
msgstr ""

#. R/RClassUtils.R: gettextf("(class %s)", .dQ(slotDefs[match(pnames[check], slotNames)]))
#. R/RClassUtils.R: gettextf("(class %s)", .dQ(unlist(properties, recursive = FALSE)[undefClasses]))
#: R/RClassUtils.R:0
msgid "(class %s)"
msgstr "(类别%s)"

#. R/methodsTable.R: gettextf("(definition from function %s)", sQuote(m@generic), domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "(definition from function %s)"
msgstr "函数%s没有定义"

#. R/methodsTable.R: gettextf("(inherited from: %s)", sigString(d), domain = "R-methods")
#: R/methodsTable.R:0
msgid "(inherited from: %s)"
msgstr ""

#. R/trace.R: gettext("(to see original from package, look at object@original)", domain = "R-methods")
#: R/trace.R:0
msgid "(to see original from package, look at object@original)"
msgstr ""

#. R/trace.R: gettext("(to see the tracing code, look at body(object))", domain = "R-methods")
#: R/trace.R:0
msgid "(to see the tracing code, look at body(object))"
msgstr ""

#. R/Methods.R: gettextf("* mlist environment with %d potential methods", length(mlist), domain = "R-methods")
#: R/Methods.R:0
msgid "* mlist environment with %d potential methods"
msgstr ""

#. R/methodsTable.R: gettext("** final methods' distances: (%s)", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** final methods' distances: (%s)"
msgstr ""

#. R/methodsTable.R: gettext("** individual arguments' distances:", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** individual arguments' distances:"
msgstr ""

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n", "** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
msgid "** should no longer happen!"
msgstr "不应该产生**!"

#. R/methodsTable.R: gettextf(" .. method %d: length(sig) = %d < nArg = %d\n", i, length(sig), nArg, domain = "R-methods")
#: R/methodsTable.R:0
msgid ".. method %d: length(sig) = %d < nArg = %d"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: about to assign or setMethod", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: about to assign or setMethod"
msgstr ".TraceWithMethods：正要调用assign或setMethod"

#. R/trace.R: message(".TraceWithMethods: after computing what, whereF", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: after computing what, whereF"
msgstr ".TraceWithMethods: 在计算什么后，whereF"

#. R/trace.R: message(".TraceWithMethods: untrace case", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: untrace case"
msgstr ".TraceWithMethods: 删除追踪"

#. R/MethodsList.R: gettext("<Empty Methods List>", domain = "R-methods")
#: R/MethodsList.R:0
msgid "<Empty Methods List>"
msgstr ""

#. R/methodsTable.R: gettext("<No methods>\n\n", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "<No methods>"
msgstr "为方法%s()"

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/promptClass.R:0
#, fuzzy
msgid "A shell of class documentation has been written to the connection %s."
msgstr "方法骨架定于"

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the file %s.\n", sQuote(filename),     domain = "R-methods")
#: R/promptClass.R:0
#, fuzzy
msgid "A shell of class documentation has been written to the file %s."
msgstr "方法骨架定于"

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/MethodsList.R:0
#, fuzzy
msgid "A shell of methods documentation has been written to the connection %s."
msgstr "方法骨架定于"

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the file %s.\n", sQuote(filename))
#: R/MethodsList.R:0
#, fuzzy
msgid "A shell of methods documentation has been written to the file %s."
msgstr "方法骨架定于"

#. R/SClasses.R: gettext("All %s names must be distinct in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be distinct in:\n"
"(%s)"
msgstr ""

#. R/SClasses.R: gettext("All %s names must be nonempty in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be nonempty in:\n"
"(%s)"
msgstr ""

#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(cl), domain = "R-methods")
#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", cl, domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", dQuote(class(object)))
#. R/trace.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0 R/trace.R:0
#, fuzzy
msgid "An object of class %s"
msgstr "对象为类别"

#. R/trace.R: gettextf("An object of class %s, from source:", dQuote(class(object)), domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "An object of class %s, from source:"
msgstr "对象为类别"

#. R/MethodsListClass.R: gettextf("An object of class %s:", dQuote(class(object)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "An object of class %s:"
msgstr "对象为类别"

#. R/trace.R: gettextf("An object with tracing code, class %s\nOriginal definition:\n", dQuote(class(object)),     domain = "R-methods")
#: R/trace.R:0
msgid ""
"An object with tracing code, class %s\n"
"Original definition:"
msgstr ""

#. R/SClasses.R: stop("Argument 'representation' cannot be used if argument 'slots' is supplied")
#: R/SClasses.R:0
msgid ""
"Argument 'representation' cannot be used if argument 'slots' is supplied"
msgstr ""

#. R/RClassUtils.R: gettextf("Calling function 'new()' on an undefined and non-basic class (\"%s\")",     Class)
#: R/RClassUtils.R:0
msgid "Calling function 'new()' on an undefined and non-basic class (\"%s\")"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s"
msgstr "(类别%s)"

#. R/show.R: gettextf("Class %s (from package %s)", dQuote(className), sQuote(packageName))
#: R/show.R:0
#, fuzzy
msgid "Class %s (from package %s)"
msgstr "不是程輯包名: %s"

#. R/show.R: gettextf("Class %s (from the global environment)", dQuote(className))
#: R/show.R:0
msgid "Class %s (from the global environment)"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s [in %s]"
msgstr "类别：%s, %s"

#. R/RClassUtils.R: gettextf("Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s [package in %s]"
msgstr "不是程輯包名: %s"

#. R/RClassUtils.R: gettextf("Class %s consists of following classes: ", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s consists of following classes:"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s", dQuote(class(object)),     dQuote(object@generic), sQuote(object@package), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Class %s for generic %s defined from package %s"
msgstr "程辑包\"%2$s\"里用于\"%1$s\"这一类的类生成函数"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s"
msgstr "在%3$s程序包中，程序包%2$s里的泛型%1$s没有方法列表"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n  defined with value class: %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s\n"
"  defined with value class: %s"
msgstr "在%3$s程序包中，程序包%2$s里的泛型%1$s没有方法列表"

#. R/show.R: gettextf("Class %s for generic %s defined from package %s\n  defined with value class: %s\n",     dQuote(class(object)), dQuote(object@generic), sQuote(object@package), dQuote(object@valueClass),     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  defined with value class: %s"
msgstr "在%3$s程序包中，程序包%2$s里的泛型%1$s没有方法列表"

#. R/SClasses.R: gettextf("Class %s has a sealed class definition and cannot be redefined", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "Class %s has a sealed class definition and cannot be redefined"
msgstr "\"%s\"的类别定义被封闭了，因此无法重新被定义"

#. R/refClass.R: gettextf("Class %s is not a subclass of %s; functional semantics not defined for this class",     dQuote(class(object)), dQuote("envRefClass"))
#: R/refClass.R:0
msgid ""
"Class %s is not a subclass of %s; functional semantics not defined for this "
"class"
msgstr ""

#. R/refClass.R: gettextf("Class %s is not one of the reference super classes for this object", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "Class %s is not one of the reference super classes for this object"
msgstr "\"%s\" 不是该对象的引用超类之一"

#. R/RClassUtils.R: gettextf("Class %s, by class %s", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, by class %s"
msgstr "类别：%s, %s"

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit coerce", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test and coerce", dQuote(what[i]),     tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, directly"
msgstr "类别：%s, %s"

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test and coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, from data part"
msgstr "不是程輯包名: %s"

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test and coerce", dQuote(what[i]),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test and coerce"
msgstr ""

#. R/refClass.R: gettext("Class Methods: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class Methods:"
msgstr "(类别%s)"

#. R/refClass.R: gettext("Class fields:", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class fields:"
msgstr "(类别%s)"

#. R/refClass.R: gettextf("Class method definition (class %s) for method %s", dQuote(cl), sQuote(paste(object@name,     "()", collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition (class %s) for method %s"
msgstr "类别%s的定义不存在"

#. R/refClass.R: gettextf("Class method definition for method %s", sQuote(paste(object@name, "()",     collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition for method %s"
msgstr "'%s'没有设定任何方法"

#. R/ClassUnion.R: gettext("Class must be an empty virtual class with NULL prototype")
#: R/ClassUnion.R:0
msgid "Class must be an empty virtual class with NULL prototype"
msgstr ""

#. R/RClassUtils.R: gettext("Class:", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class:"
msgstr "(类别%s)"

#. R/trace.R: sprintf("Constructing traceable class %s", dQuote(traceClassName))
#: R/trace.R:0
#, fuzzy
msgid "Constructing traceable class %s"
msgstr "建立可追踪的类别"

#. R/Methods.R: gettextf("Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)",     sQuote(f), sQuote(getPackageName(where)), sQuote(getPackageName(gwhere)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"Copying the generic function %s to environment %s, because the previous "
"version was in a sealed namespace (%s)"
msgstr ""
"因为前版本是封閉了的名字空间(%3$s) ，所以将泛型函数%1$s拷贝到%2$s环境里。 "

#. R/refClass.R: stop("Could not find local object in supplied environment")
#: R/refClass.R:0
#, fuzzy
msgid "Could not find local object in supplied environment"
msgstr "\"%s\"在这个环境里没有类别定义"

#. R/packageName.R: gettextf("Created a package name, %s, when none found", sQuote(pkg))
#: R/packageName.R:0
msgid "Created a package name, %s, when none found"
msgstr "建立了程輯包名: %s，因为没有找到其它名字"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in package %s (from the saved implicit definition)",     sQuote(name), sQuote(package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in package %s (from the saved "
"implicit definition)"
msgstr " %3$s里的从%2$s为%1$s建立新的泛型函数(从保存的隐式定义)"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in the global environment (from the saved implicit definition)",     sQuote(name), sQuote(package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in the global environment (from "
"the saved implicit definition)"
msgstr " %3$s里的从%2$s为%1$s建立新的泛型函数(从保存的隐式定义)"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in package %s", sQuote(f),     sQuote(fdef@package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function for %s from package %s in package %s"
msgstr "从%3$s里的程辑包%2$s为%1$s建立新的泛型函数"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in the global environment",     sQuote(f), sQuote(fdef@package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from package %s in the global environment"
msgstr "从%3$s里的程辑包%2$s为%1$s建立新的泛型函数"

#. R/Methods.R: gettextf("Creating a generic function from function %s in package %s", sQuote(f),     sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in package %s"
msgstr "用%s里的函数%s来建立新的泛型函数"

#. R/Methods.R: gettextf("Creating a generic function from function %s in the global environment",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in the global environment"
msgstr "用%s里的函数%s来建立新的泛型函数"

#. R/Methods.R: gettextf("Creating a new generic function for %s in package %s", sQuote(name), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in package %s"
msgstr "为%2$s里的%1$s建立新的泛型函数"

#. R/Methods.R: gettextf("Creating a new generic function for %s in the global environment", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in the global environment"
msgstr "为%2$s里的%1$s建立新的泛型函数"

#. R/RClassUtils.R: stop("Data part ('.Data' slot) is undefined for general S4 object")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Data part ('.Data' slot) is undefined for general S4 object"
msgstr "没有定义一般S4对象的数据部分"

#. R/RMethodUtils.R: message("Empty function name in .getGeneric", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "Empty function name in .getGeneric"
msgstr ".getGeneric里不能有空的函数名字"

#. R/trace.R: gettextf("Environment of class %s is locked; using global environment for new class",     dQuote(className))
#: R/trace.R:0
#, fuzzy
msgid ""
"Environment of class %s is locked; using global environment for new class"
msgstr "\"被锁住了；在新的类别上用全局环境"

#. R/show.R: gettext("Excluded from nextMethod:", domain = "R-methods")
#: R/show.R:0
msgid "Excluded from nextMethod:"
msgstr ""

#. R/show.R: gettextf("Extended class definition (%s)", classLabel(class(object)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Extended class definition (%s)"
msgstr "在%s的定义中不存在这种槽类别: %s"

#. R/refClass.R: gettextf("Field %s:", dQuote(fi), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Field %s:"
msgstr "场 \""

#. R/Methods.R: gettextf("For function %s, signature %s: argument in method definition changed from (%s) to (%s)",     sQuote(f), sQuote(signature), mnames, fnames)
#: R/Methods.R:0
#, fuzzy
msgid ""
"For function %s, signature %s: argument in method definition changed from "
"(%s) to (%s)"
msgstr "%s函数，\"%s\"标记：方法定义中的参数从(%s)改变成(%s)"

#. R/trace.R: gettextf("For package %s", sQuote(object@packageName), domain = "R-methods")
#: R/trace.R:0
msgid "For package %s"
msgstr ""

#. R/trace.R: gettextf("From source file %s", sQuote(object@sourceFile), domain = "R-methods")
#: R/trace.R:0
msgid "From source file %s"
msgstr ""

#. R/Methods.R: gettextf("Function %s is a group generic; do not call it directly", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Function %s is a group generic; do not call it directly"
msgstr "函数%s是群體泛型函数；不能直接調用"

#. R/Methods.R: gettextf("Function %s is already a group generic; no change", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Function %s is already a group generic; no change"
msgstr "函数%s已经是群體泛型函数了；没有变动"

#. R/Methods.R: gettextf("Function %s:\n<not an S4 generic function>", sQuote(f), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Function %s:\n"
"<not an S4 generic function>"
msgstr "不存在%s这一泛型函数"

#. R/methodsTable.R: gettextf("Function: %s (package %s)", func, pkg, domain = "R-methods")
#: R/methodsTable.R:0
msgid "Function: %s (package %s)"
msgstr ""

#. R/refClass.R: gettext("Generator for class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Generator for class"
msgstr "类别%s的定义不存在"

#. R/methodsTable.R: gettext(" Group generics: ", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Group generics:"
msgstr ""

#. R/RMethodUtils.R: gettextf("In method for %s with signature %s: ", sQuote(f), msig, domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "In method for %s with signature %s:"
msgstr "带%s标记的%s的方法："

#. R/SClasses.R: gettextf("In slot '%s' of class \"%s\": %s", slotNames[[i]], class(sloti), errori)
#: R/SClasses.R:0
#, fuzzy
msgid "In slot '%s' of class \"%s\": %s"
msgstr "类别%s的槽的名字不对：%s"

#. R/refClass.R: gettext(" Insert trace debugging for the specified method.  The arguments are the same as for the trace() function in package \"base\".  The first argument should be the name of the method to be traced, quoted or not.\n\n The additional argument classMethod= can be supplied as TRUE (by name only) in order to trace a method in a generator object (e.g., \"new\") rather than in the objects generated from that class.")
#: R/refClass.R:0
msgid ""
"Insert trace debugging for the specified method.  The arguments are the same "
"as for the trace() function in package \"base\".  The first argument should "
"be the name of the method to be traced, quoted or not.\n"
"\n"
" The additional argument classMethod= can be supplied as TRUE (by name only) "
"in order to trace a method in a generator object (e.g., \"new\") rather than "
"in the objects generated from that class."
msgstr ""

#. R/methodsTable.R: stop("Internal error in finding inherited methods; didn't return a unique method",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Internal error in finding inherited methods; didn't return a unique method"
msgstr "在搜索继承方法时出了错；找不到唯一方法"

#. R/RClassUtils.R: gettext("Known Subclasses: ", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Known Subclasses:"
msgstr ""

#. R/refClass.R: gettext("Locked Fields", domain = "R-methods")
#: R/refClass.R:0
msgid "Locked Fields"
msgstr ""

#. R/show.R: gettextf("Method Definition (Class %s):", dQuote(classLabel(cl)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition (Class %s):"
msgstr "类别%s的定义不存在"

#. R/show.R: gettext("Method Definition:", domain = "R-methods")
#: R/show.R:0
msgid "Method Definition:"
msgstr ""

#. R/trace.R: gettext("Methods inserted for function %s(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Methods inserted for function %s(): %s"
msgstr "为函数%s()插入了方法: %s"

#. R/RMethodUtils.R: gettextf("Methods list objects are not maintained in this version of R:  request for function %s may return incorrect information",     sQuote(fdef@generic))
#: R/RMethodUtils.R:0
msgid ""
"Methods list objects are not maintained in this version of R:  request for "
"function %s may return incorrect information"
msgstr "本R版本不维护方法串列对象：调用%s函数可能会返回不正确的信息"

#. R/show.R: gettext("Methods may be defined for arguments: %s\nUse 'showMethods(\"%s\")' for currently available ones.",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Methods may be defined for arguments: %s\n"
"Use 'showMethods(\"%s\")' for currently available ones."
msgstr ""

#. R/refClass.R: gettext("Methods used: ", domain = "R-methods")
#: R/refClass.R:0
msgid "Methods used:"
msgstr ""

#. R/trace.R: gettext("Modified functions inserted through trace(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Modified functions inserted through trace(): %s"
msgstr "用trace()插入修改过的函数: %s"

#. R/RClassUtils.R: gettext("NOTE: arguments in definition %s changed from (%s) to (%s)", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "NOTE: arguments in definition %s changed from (%s) to (%s)"
msgstr "定义%s里的参数从(%s)改为(%s)"

#. R/RClassUtils.R: gettext("Name:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Name:"
msgstr ""

#. R/trace.R: gettext("New functions are not currently inserted (not untraceable): %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "New functions are not currently inserted (not untraceable): %s"
msgstr "目前没有插入新函数（可追溯）: %s"

#. R/SClasses.R: gettextf("No %s names supplied", what)
#: R/SClasses.R:0
msgid "No %s names supplied"
msgstr ""

#. R/refClass.R: gettext("No Class Methods", domain = "R-methods")
#: R/refClass.R:0
msgid "No Class Methods"
msgstr ""

#. R/refClass.R: gettext("No fields defined", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "No fields defined"
msgstr "'%s'没有设定任何方法"

#. R/methodsTable.R: gettextf("No simply inherited methods found for function %s; using non-simple method",     sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid ""
"No simply inherited methods found for function %s; using non-simple method"
msgstr "找不到适用于函数%s的简单方法；用复杂方法"

#. R/RClassUtils.R: gettextf("No slots, prototype of class %s", dQuote(.class1(ClassDef@prototype)),     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "No slots, prototype of class %s"
msgstr "\"，不能是类别"

#. R/trace.R: gettext("Non-function objects are not currently inserted (not traceable): %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "Non-function objects are not currently inserted (not traceable): %s"
msgstr "目前没有插入非函数对象（不可追溯）: %s"

#. R/methodsTable.R: gettext("Note: method with signature %s chosen for function %s,\n target signature %s.\n %s would also be valid",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"Note: method with signature %s chosen for function %s,\n"
" target signature %s.\n"
" %s would also be valid"
msgstr ""
"注意: 为函数\"%2$s\"选择了带\"%1$s\"标签的方法,\n"
" 目标标签为\"%3$s\".\n"
" %4$s应该是有效的"

#. R/RClassUtils.R: gettextf("Note: some superclasses of class %s in package %s have duplicate definitions. This definition is not being treated as equivalent to that from package %s",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: some superclasses of class %s in package %s have duplicate "
"definitions. This definition is not being treated as equivalent to that from "
"package %s"
msgstr ""
"在程序包%2$s中类别%1$s的超类有重复的定义。这个定义不同于程序包%s里的定义"

#. R/RClassUtils.R: gettextf("Note: the specification for S3 class %s in package %s seems equivalent to one from package %s: not turning on duplicate class definitions for this class.",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: the specification for S3 class %s in package %s seems equivalent to "
"one from package %s: not turning on duplicate class definitions for this "
"class."
msgstr ""
"程序包%2$s里的%1$s S3类别定义似乎与程序包%3s里的类别定义相当，因此不打开重复"
"的类别定义"

#. R/RClassUtils.R: gettextf("Note: the specification for class %s in package %s seems equivalent to one from package %s and is not turning on duplicate class definitions for this class",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: the specification for class %s in package %s seems equivalent to one "
"from package %s and is not turning on duplicate class definitions for this "
"class"
msgstr ""
"程序包%2$s里的%1$s类别定义似乎与程序包%3s里的类别定义相当，因此不打开重复的类"
"别定义"

#. R/MethodsListClass.R: gettextf("Notes: %s.", notei, domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Notes: %s."
msgstr "记录：%s。"

#. R/BasicClasses.R: gettextf("OOPS: something wrong with line %d in '.OldClassesPrototypes'", i)
#: R/BasicClasses.R:0
#, fuzzy
msgid "OOPS: something wrong with line %d in '.OldClassesPrototypes'"
msgstr "啊呀：哪里出错了"

#. R/MethodsListClass.R: gettext("Object:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Object:"
msgstr ""

#. R/MethodsListClass.R: gettext("Package:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Package:"
msgstr ""

#. R/trace.R: gettextf("Pretend we inserted class %s", class)
#: R/trace.R:0
#, fuzzy
msgid "Pretend we inserted class %s"
msgstr "假装我们插入了类别"

#. R/methodsTable.R: stop(gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic)),     damain = "R-methods")
#: R/methodsTable.R:0
msgid "R-methods"
msgstr ""

#. R/refClass.R: gettext("Reference Class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Class"
msgstr "非引用类别"

#. R/refClass.R: gettext("Reference Superclasses: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Superclasses:"
msgstr "非引用类别"

#. R/refClass.R: gettextf("Reference class object of class %s", classLabel(class(.self)), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference class object of class %s"
msgstr "对象为类别"

#. R/refClass.R: gettext(" Reference methods used by this method are named as the arguments  either quoted or unquoted.  In the code analysis phase of installing the  the present method, the declared methods will be included.  It is essntial  to declare any methods used in a nonstandard way (e.g., via an apply function). Methods called directly do not need to be declared, but it is harmless to do so. $usingMethods() does nothing at run time.")
#: R/refClass.R:0
msgid ""
"Reference methods used by this method are named as the arguments  either "
"quoted or unquoted.  In the code analysis phase of installing the  the "
"present method, the declared methods will be included.  It is essntial  to "
"declare any methods used in a nonstandard way (e.g., via an apply function). "
"Methods called directly do not need to be declared, but it is harmless to do "
"so. $usingMethods() does nothing at run time."
msgstr ""

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s", message, target)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method %s not defined for signature %s"
msgstr "无法\"%s\"将删除追踪，这一标记没有与之相对应的唯一方法：%s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s, required for signature %s",     message, target, defined)
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Required method %s not defined for signature %s, required for signature %s"
msgstr "无法\"%s\"将删除追踪，这一标记没有与之相对应的唯一方法：%s"

#. R/RClassUtils.R: gettextf("Required method not defined: %s", message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method not defined: %s"
msgstr "没有定义域类别: %s"

#. R/Methods.R: gettextf("Restoring default function definition of %s", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Restoring default function definition of %s"
msgstr "重存'%s'的默認函数定义"

#. R/show.R: gettext("Signatures:", domain = "R-methods")
#: R/show.R:0
msgid "Signatures:"
msgstr ""

#. R/method.skeleton.R: gettextf("Skeleton of method written to %s", sQuote(file))
#: R/method.skeleton.R:0
#, fuzzy
msgid "Skeleton of method written to %s"
msgstr "方法骨架定于"

#. R/method.skeleton.R: message("Skeleton of method written to connection", domain = "R-methods")
#: R/method.skeleton.R:0
#, fuzzy
msgid "Skeleton of method written to connection"
msgstr "方法骨架定于"

#. R/BasicClasses.R: gettextf("Slot %s:", dQuote(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", dQuote(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", dQuote(s), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0
msgid "Slot %s:"
msgstr ""

#. R/RClassUtils.R: gettext("Slots:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Slots:"
msgstr ""

#. R/trace.R: gettextf("Source environment created %s", format(object@dateCreated), domain = "R-methods")
#: R/trace.R:0
msgid "Source environment created %s"
msgstr ""

#. R/refClass.R: gettextf("The definition of class %s follows.", dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "The definition of class %s follows."
msgstr "类别%s的定义不存在"

#. R/trace.R: gettext("Tracing ", domain = "R-methods")
#: R/trace.R:0
msgid "Tracing"
msgstr ""

#. R/refClass.R: gettext("Usage:  $help(topic) where topic is the name of a method (quoted or not)")
#: R/refClass.R:0
msgid ""
"Usage:  $help(topic) where topic is the name of a method (quoted or not)"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Virtual Class %s [in %s]"
msgstr "不是程輯包名: %s"

#. R/RClassUtils.R: gettextf("Virtual Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Virtual Class %s [package in %s]"
msgstr "不是程輯包名: %s"

#. R/trace.R: gettext("Warning: Tracing only in the namespace; to untrace you will need:", domain = "R-methods")
#: R/trace.R:0
msgid "Warning: Tracing only in the namespace; to untrace you will need:"
msgstr ""

#. R/Methods.R: message("Warning: using defunct methods list search", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Warning: using defunct methods list search"
msgstr "警告：你用的串列搜索方法已经不现存了"

#. R/as.R: gettextf("a 'replace' method definition in 'setAs' function must be a function of two arguments, got %d",     length(args))
#: R/as.R:0
#, fuzzy
msgid ""
"a 'replace' method definition in 'setAs' function must be a function of two "
"arguments, got %d"
msgstr "'setAs'中的'replace'方法定义必需是带两个参数的函数，得到的却是%d"

#. R/NextMethod.R: gettextf("a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'",     sQuote(f))
#: R/NextMethod.R:0
#, fuzzy
msgid ""
"a call to callNextMethod() appears in a call to %s, but the call does not "
"seem to come from either a generic function or another 'callNextMethod'"
msgstr ""
"callNextMethod()的调用是在調用'%s'时所要求的，但这一調用既不从泛型函数来，也"
"从另外一个'callNextMethod'中来"

#. R/refClass.R: gettextf("a call to superClass() is in the method %s but there is no superclass definition of this method for class %s",     sQuote(me), dQuote(thisClass@className))
#: R/refClass.R:0
#, fuzzy
msgid ""
"a call to superClass() is in the method %s but there is no superclass "
"definition of this method for class %s"
msgstr "在\"%s\"方法里调用了superClass()，但是%s类别里没有这个方法的超类别定义"

#. R/Methods.R: stop("a function for argument 'f' must be a generic function")
#. R/trace.R: stop("a function for argument 'f' must be a generic function")
#: R/Methods.R:0 R/trace.R:0
#, fuzzy
msgid "a function for argument 'f' must be a generic function"
msgstr "为参数\"f\"提供的函数必需是泛型函数"

#. R/RClassUtils.R: gettextf("a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype@object)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype object was supplied with object slot of class %s, but the class "
"definition requires an object that is class %s"
msgstr "原型对象与类别为%s的对象槽同时被提供，但类别定义要求类别为%s的对象"

#. R/RClassUtils.R: gettextf("a prototype was supplied of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype was supplied of class %s, but the class definition requires an "
"object that is class %s"
msgstr "被提供的原型的类别为%s, 类别定义需要类别为%s的对象"

#. R/refClass.R: gettextf("a single class name is needed for field %s, got a character vector of length %d",     sQuote(thisName), length(thisField))
#: R/refClass.R:0
#, fuzzy
msgid ""
"a single class name is needed for field %s, got a character vector of length "
"%d"
msgstr "\"%s\"场需要单一类别名字，现在得到的是长度为%d的字符串"

#. R/RClassUtils.R: gettextf("a validity method must be a function of one argument, got an object of class %s",     dQuote(class(validity)))
#: R/RClassUtils.R:0
msgid ""
"a validity method must be a function of one argument, got an object of class "
"%s"
msgstr "正确的方法必需的带一个参数的函数，收到的却是类别为%s的对象"

#. R/SClasses.R: gettextf("abnormal type %s is not supported as a superclass of a class definition",     dQuote(type))
#: R/SClasses.R:0
#, fuzzy
msgid "abnormal type %s is not supported as a superclass of a class definition"
msgstr "对不起，不支持作为一个类别定义的超类\"%s\""

#. R/RMethodUtils.R: gettextf("action function %s has no arguments, should have at least 1", sQuote(fname))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "action function %s has no arguments, should have at least 1"
msgstr "特殊函数%s不可以有方法"

#. R/as.R: warning("ambiguous object (length != 1) to coerce to \"name\"")
#: R/as.R:0
#, fuzzy
msgid "ambiguous object (length != 1) to coerce to \"name\""
msgstr "对象不明确(长度!=1) 因此无法强制转换成\"name\""

#. R/Methods.R: sprintf("apparent inconsistency in the methods for function %s; argument %s in the signature corresponds to %s in the methods list object",     sQuote(.genericName(f)), sQuote(argNames[[i]]), sQuote(as.character(mlist@argument)))
#: R/Methods.R:0
msgid ""
"apparent inconsistency in the methods for function %s; argument %s in the "
"signature corresponds to %s in the methods list object"
msgstr "函数%s的方法相互有矛盾；标记里的%s参数与方法串列对象里的%s相对应"

#. R/Methods.R: sprintf("apparent internal error: a generic function was found for \"%s\", but no corresponding object was found searching from \"%s\"",     f, getPackageName(where))
#: R/Methods.R:0
msgid ""
"apparent internal error: a generic function was found for \"%s\", but no "
"corresponding object was found searching from \"%s\""
msgstr ""
"内部出错: 适用于'%s'的泛型函数是有定义了的，但在'%s'里却找不到与之相应的目标"
"对象"

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\nmove the file or remove the class/method")
#: R/zzz.R:0
#, fuzzy
msgid ""
"apparently bad method or class metadata in saved environment;\n"
"move the file or remove the class/method"
msgstr "保存的环境中出现了不良方法或类别元数据；"

#. R/Methods.R: gettextf("argument %s is not S4", deparse(substitute(f1)))
#. R/Methods.R: gettextf("argument %s is not S4", deparse(substitute(f2)))
#: R/Methods.R:0
#, fuzzy
msgid "argument %s is not S4"
msgstr "参数%s不是S4"

#. R/Methods.R: gettextf("argument %s must be a generic function or a single character string; got an object of class %s",     sQuote("f"), dQuote(class(f)))
#: R/Methods.R:0
msgid ""
"argument %s must be a generic function or a single character string; got an "
"object of class %s"
msgstr ""
"参数%s要么是泛型函数要么是单一字符串；现在得到的却是类别为%s的目标对象对象"

#. R/SClasses.R: gettextf("argument %s must be a list or a character vector; got an object of class %s",     dQuote(what), dQuote(class(fields)))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"argument %s must be a list or a character vector; got an object of class %s"
msgstr ""
"参数%s要么是泛型函数要么是单一字符串；现在得到的却是类别为%s的目标对象对象"

#. R/oldClass.R: gettextf("argument 'Classes' must be a vector of two classes; got an argument of length %d",     length(Classes))
#: R/oldClass.R:0
msgid ""
"argument 'Classes' must be a vector of two classes; got an argument of "
"length %d"
msgstr "参数'classes'必需是包含两个类别的矢量；现在得到的是长度为%d的参数"

#. R/oldClass.R: gettextf("argument 'S4Class' must be a class definition: got an object of class %s",     dQuote(class(S4Class)))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"argument 'S4Class' must be a class definition: got an object of class %s"
msgstr "参数S4Class必需是类别定义：现在得到的却是类别为%s的目标对象"

#. R/RClassUtils.R: stop("argument 'abbreviate' must be 0, 1, 2, or 3")
#: R/RClassUtils.R:0
#, fuzzy
msgid "argument 'abbreviate' must be 0, 1, 2, or 3"
msgstr "参数缩写必需为0，1，2，或3 "

#. R/SClasses.R: stop("argument 'classDef' must be a class definition or the name of a class")
#: R/SClasses.R:0
#, fuzzy
msgid "argument 'classDef' must be a class definition or the name of a class"
msgstr "参数classDef必需是类别定义或是类别的名字"

#. R/SClasses.R: gettextf("argument 'classDef' must be a string or a class representation; got an object of class %s",     dQuote(class(classDef)))
#: R/SClasses.R:0
msgid ""
"argument 'classDef' must be a string or a class representation; got an "
"object of class %s"
msgstr ""
"参数'classDef'要么是个字串要么是个类别表现；现在得到的却是类别为%s的目标对象"

#. R/Methods.R: gettextf("argument 'f' must be a generic function or %s", .notSingleString(f))
#: R/Methods.R:0
#, fuzzy
msgid "argument 'f' must be a generic function or %s"
msgstr "参数\"f\"必需是泛型函数，或为%s"

#. R/RMethodUtils.R: stop("argument 'f' must be a string, generic function, or primitive: got an ordinary function")
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"argument 'f' must be a string, generic function, or primitive: got an "
"ordinary function"
msgstr ""
"f参数要么是字符，要么是泛型函数，要么是原始函数：现在得到的却是普通函数"

#. R/RClassUtils.R: stop("argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"argument 'includeSubclasses' must be a logical, either one value or a vector "
"of the same length as argument 'classes'"
msgstr ""
"参数includeSubclasses必需是逻辑值，要么是单一值要么是矢量，其长度应同参数类别"
"相等"

#. R/trace.R: stop("argument 'signature' is not meaningful for tracing reference methods")
#: R/trace.R:0
#, fuzzy
msgid "argument 'signature' is not meaningful for tracing reference methods"
msgstr " signature=参数不能适用于跟踪引用方法"

#. R/Methods.R: warning("argument 'signature' is not meaningful with the current implementation and is ignored \n(extract a subset of the methods list instead)")
#: R/Methods.R:0
#, fuzzy
msgid ""
"argument 'signature' is not meaningful with the current implementation and "
"is ignored \n"
"(extract a subset of the methods list instead)"
msgstr ""
"\"signature\"参数对目前的实现没有意义，因此略过不用\n"
"(抽取方法串列子集)"

#. R/methodsTable.R: stop("argument 'signatures' must be a character matrix whose rows are method signatures")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"argument 'signatures' must be a character matrix whose rows are method "
"signatures"
msgstr "\"signatures\"参数必需为字符矩阵，每行都是方法签字"

#. R/trace.R: stop("argument 'what' should be the name of a function")
#: R/trace.R:0
msgid "argument 'what' should be the name of a function"
msgstr "参数'what'必需是一个函数名字"

#. R/RMethodUtils.R: stop("argument f must be a generic function with signature \"...\"")
#: R/RMethodUtils.R:0
msgid "argument f must be a generic function with signature \"...\""
msgstr "参数f必需是带\"...\"标记的泛型函数"

#. R/as.R: gettextf("argument names in 'replace' method changed to agree with 'coerce<-' generic function:\n%s",     paste(deparse(replace), sep = "\n    "))
#: R/as.R:0
#, fuzzy
msgid ""
"argument names in 'replace' method changed to agree with 'coerce<-' generic "
"function:\n"
"%s"
msgstr ""
"替换时参数名字得到了修改使之与'coerce<-'泛型相符合:\n"
"%s"

#. R/MethodsList.R: stop("arguments 'names' and 'signature' must have the same length")
#: R/MethodsList.R:0
msgid "arguments 'names' and 'signature' must have the same length"
msgstr "'names'和'signature'这两个参数的长度必需相同"

#. R/RMethodUtils.R: gettext("arguments (%s) after '...' in the generic must appear in the method, in the same place at the end of the argument list",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"arguments (%s) after '...' in the generic must appear in the method, in the "
"same place at the end of the argument list"
msgstr ""
"泛型方法里在'...'之后的参数(%s)必需也存在于方法里，在参数串列同一个最后的地方"

#. R/refClass.R: stop("arguments must all be character string names of fields")
#: R/refClass.R:0
#, fuzzy
msgid "arguments must all be character string names of fields"
msgstr "参数必需是场名字的字符串"

#. R/refClass.R: stop("arguments to 'methods()' must be named, or one named list")
#: R/refClass.R:0
#, fuzzy
msgid "arguments to 'methods()' must be named, or one named list"
msgstr "methods()里的参数必需带名字，或者是带名字的串列"

#. R/RClassUtils.R: gettextf("assigning as %s a class representation with internal name %s", dQuote(Class),     dQuote(def@className))
#: R/RClassUtils.R:0
#, fuzzy
msgid "assigning as %s a class representation with internal name %s"
msgstr "无法将内部名字为\"%2$s\"的类别表現指定成\"%1$s\""

#. R/trace.R: gettextf("assigning over the binding of symbol %s in environment/package %s", sQuote(what),     sQuote(pname))
#: R/trace.R:0
msgid "assigning over the binding of symbol %s in environment/package %s"
msgstr "在环境/程輯包 %2$s将符号%1$s的連結重新设定"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"assignment of an object of class %s is not valid for @%s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"不可以在类别为%3$s的对象里的\"%2$s\"槽指定类别为%1$s的对象；is(value, \"%4$s"
"\")的值不是TRUE"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"assignment of an object of class %s is not valid for slot %s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"不可以在类别为%3$s的对象里的\"%2$s\"槽指定类别为%1$s的对象；is(value, \"%4$s"
"\")的值不是TRUE"

#. R/Methods.R: gettextf("bad class specified for element %d (should be a single character string)",     i)
#: R/Methods.R:0
msgid ""
"bad class specified for element %d (should be a single character string)"
msgstr "为單元%d所设定的类别不对(应当是条单字符字串)"

#. R/methodsTable.R: gettextf("bad method object stored in method table, class %s", dQuote(class(current)))
#: R/methodsTable.R:0
msgid "bad method object stored in method table, class %s"
msgstr "作为方法的对象(类别是%s)出错"

#. R/NextMethod.R: gettextf("bad object found as method (class %s)", dQuote(class(method)))
#: R/NextMethod.R:0
msgid "bad object found as method (class %s)"
msgstr "作为方法的对象(类别%s)出了错"

#. R/RMethodUtils.R: stop("botched namespace: failed to find 'base' namespace in its parents", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "botched namespace: failed to find 'base' namespace in its parents"
msgstr "名字空间坏了: 父空间里不存在'base'"

#. R/is.R: gettext("both classes must be defined")
#: R/is.R:0
#, fuzzy
msgid "both classes must be defined"
msgstr "两个类别都得有定义"

#. R/NextMethod.R: stop("call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context")
#: R/NextMethod.R:0
msgid ""
"call to 'callNextMethod' does not appear to be in a 'method' or "
"'callNextMethod' context"
msgstr "調用'callNextMethod'既不在'method'也不在'callNextMethod'的文脈中出现"

#. R/RMethodUtils.R: gettext("called 'doPrimitiveMethod()'", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "called 'doPrimitiveMethod()'"
msgstr ""

#. R/methodsTable.R: gettext(" can eliminate dominated ones,", domain = "R-methods")
#: R/methodsTable.R:0
msgid "can eliminate dominated ones,"
msgstr ""

#. R/is.R: gettextf("cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package",     dQuote(class1), dQuote(class2))
#: R/is.R:0
#, fuzzy
msgid ""
"cannot create a 'setIs' relation when neither of the classes (%s and %s) is "
"local and modifiable in this package"
msgstr ""
"无法建立'setIs'这个关系，因为两个类别(\"%s\"和\"%s\")都不是局部性的，也不能在"
"程輯包进行改动"

#. R/trace.R: gettextf("cannot find an environment corresponding to package name '%s'", package)
#: R/trace.R:0
#, fuzzy
msgid "cannot find an environment corresponding to package name '%s'"
msgstr "找不到于程序包\"%s\"对应的环境"

#. R/BasicClasses.R: stop("cannot have more than one unnamed argument as environment")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot have more than one unnamed argument as environment"
msgstr "不能有超过一个无名参数来用作环境"

#. R/trace.R: gettext("cannot insert methods for these functions (methods table not found in source): %s",     domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid ""
"cannot insert methods for these functions (methods table not found in "
"source): %s"
msgstr "无法为这些函数插入方法（方法在源码表里找不到这方法）:%s"

#. R/trace.R: gettext("cannot insert these (not found in source): %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "cannot insert these (not found in source): %s"
msgstr "这些无法插入（在源码中找不到）：%s"

#. R/Methods.R: gettextf("cannot remove methods for %s in locked environment/package %s", sQuote(f),     sQuote(getPackageName(db)))
#: R/Methods.R:0
msgid "cannot remove methods for %s in locked environment/package %s"
msgstr "无法将锁住了的环境/程輯包%2$s里的%1$s方法删除"

#. R/BasicClasses.R: stop("cannot specify arguments for 'array()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'array()' method when specifying '.Data'"
msgstr "在指定.Data时不能同时指定array()参数"

#. R/BasicClasses.R: stop("cannot specify arguments for 'matrix()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'matrix()' method when specifying '.Data'"
msgstr "在指定.Data时不能同时指定matrix()参数"

#. R/trace.R: gettext("cannot untrace method for %s; no method defined for this signature: %s",     domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "cannot untrace method for %s; no method defined for this signature: %s"
msgstr "无法\"%s\"将删除追踪，这一标记没有与之相对应的唯一方法：%s"

#. R/trace.R: stop("cannot use 'at' argument unless the function body has the form '{ ... }'")
#: R/trace.R:0
msgid ""
"cannot use 'at' argument unless the function body has the form '{ ... }'"
msgstr "不能用'at'这个参数，除非函数的主文有'{ ... }'这样的形式"

#. R/trace.R: stop("cannot use 'at' argument without a trace expression")
#: R/trace.R:0
msgid "cannot use 'at' argument without a trace expression"
msgstr "不能用'at'这个参数，因为没有追踪表式"

#. R/SClasses.R: gettextf("cannot use object of class %s in new(): class %s does not extend that class",     dQuote(Classi), dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"cannot use object of class %s in new(): class %s does not extend that class"
msgstr "无法在new()里用类别为%s的对象；类别%s并不擴充此类别"

#. R/is.R: gettextf("class %s cannot extend class %s", dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid "class %s cannot extend class %s"
msgstr "类别%s无法擴充类别%s"

#. R/RClassUtils.R: gettextf("class %s does not have a data part (a .Data slot) defined", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "class %s does not have a data part (a .Data slot) defined"
msgstr "类别%s没有数据部分(.Data 槽)"

#. R/BasicClasses.R: gettextf("class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent",     dQuote(class(from)))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"class %s does not have an S3 data part, and so is of type \"S4\"; no S3 "
"equivalent"
msgstr "类别%s不包含S3数据部分，因此其种类为\"S4\"；不是S3同变类别"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class (%s)", dQuote(name), dQuote(cl))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class (%s)"
msgstr "类别%s擴充不存在的类别(%s)"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class, %s", dQuote(ClassDef@className), dQuote(what))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class, %s"
msgstr "类别%s不能擴充不存在的类别,%s"

#. R/refClass.R: gettextf("class %s for field %s is not defined", dQuote(thisField), sQuote(thisName))
#: R/refClass.R:0
#, fuzzy
msgid "class %s for field %s is not defined"
msgstr "场\"%2$s\"的类别%1$s还没有定义"

#. R/RClassUtils.R: gettextf("class %s has a locked definition in package %s", dQuote(Class), sQuote(getPackageName(where)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "class %s has a locked definition in package %s"
msgstr "类别%s在程輯包'%s'里的定义被锁住了"

#. R/SClasses.R: gettextf("class %s has multiple definitions visible; only the first removed", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s has multiple definitions visible; only the first removed"
msgstr "类别%s有多个定义；只删除了第一个"

#. R/is.R: gettextf("class %s has no visible definition from package or environment %s", dQuote(class2),     sQuote(getPackageName(where)))
#: R/is.R:0
msgid "class %s has no visible definition from package or environment %s"
msgstr "类别%s在程輯包或环境%s里没有看得见的定义"

#. R/BasicClasses.R: gettextf("class %s is VIRTUAL; not meaningful to create an S4 object from this class",     dQuote(cl))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"class %s is VIRTUAL; not meaningful to create an S4 object from this class"
msgstr "%s是虚拟类别；用这种类别来建立新的S4目标对象是没有意义的"

#. R/as.R: gettextf("class %s is a class union: 'coerce' relations to a class union are not meaningful",     dQuote(to))
#: R/as.R:0
msgid ""
"class %s is a class union: 'coerce' relations to a class union are not "
"meaningful"
msgstr "类别%s是类别併集：类别併集的'coerce'关系在这里没有意义"

#. R/is.R: gettextf("class %s is defined (with package slot %s) but no metadata object found to revise %s information---not exported?  Making a copy in package %s",     .dQ(class), sQuote(classDef@package), purpose, sQuote(getPackageName(where, FALSE)))
#: R/is.R:0
#, fuzzy
msgid ""
"class %s is defined (with package slot %s) but no metadata object found to "
"revise %s information---not exported?  Making a copy in package %s"
msgstr ""
"%s类别已经(在%s程序包槽里)被定义过了，但没有可用于修改%s信息的元数据对象没有"
"被出口？在%s程序包里复制"

#. R/refClass.R: gettextf("class %s is defined but is not a reference class", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "class %s is defined but is not a reference class"
msgstr "类别%s有定义但不是引用类别"

#. R/SClasses.R: gettextf("class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)",     dQuote(Class), sQuote(classDef@package))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"class %s is defined, with package %s, but no corresponding metadata object "
"was found (not exported?)"
msgstr ""
"%s类别已经在%s程序包里被定义过了，但没有与之相对应的元数据对象(有没有被出口"
"过？)"

#. R/RClassUtils.R: gettext("class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"class %s is inheriting an inconsistent superclass structure from class %s, "
"inconsistent with %s"
msgstr "%s类别从%s继承了有矛盾的超类别结构，与%s有矛盾"

#. R/as.R: gettextf("class %s is not defined in this environment", dQuote(to))
#: R/as.R:0
msgid "class %s is not defined in this environment"
msgstr "类别%s在这个环境里没有定义"

#. R/SClasses.R: gettextf("class %s is sealed; 'resetClass' will have no effect", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s is sealed; 'resetClass' will have no effect"
msgstr "类别%s被封闭了；因此'resetClass'没有任何作用"

#. R/is.R: gettextf("class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'",     dQuote(class1))
#: R/is.R:0
msgid ""
"class %s is sealed; new superclasses can not be defined, except by "
"'setClassUnion'"
msgstr "类别%s被封闭了；除了'setClassUnion'之外无法设定新的父类别"

#. R/RClassUtils.R: gettextf("class %s may not contain itself: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not contain itself: it contains class %s, with a circular "
"relation back to %s"
msgstr ""

#. R/RClassUtils.R: gettextf("class %s may not have itself as a subclass: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not have itself as a subclass: it contains class %s, with a "
"circular relation back to %s"
msgstr ""

#. R/SClasses.R: gettextf("class %s not found on %s; 'resetClass' will have no effect", dQuote(Class),     sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "class %s not found on %s; 'resetClass' will have no effect"
msgstr "类别%s不存在于%s中；因此'resetClass'没有任何作用"

#. R/RClassUtils.R: stop("class cannot have both an ordinary and hidden data type")
#: R/RClassUtils.R:0
msgid "class cannot have both an ordinary and hidden data type"
msgstr "类别不能同时具有普通的和暗藏的数据种类"

#. R/SClasses.R: gettext("class definition cannot extend more than one of these data types:", domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "class definition cannot extend more than one of these data types:"
msgstr "类别定义最多只能扩展这些数据种类中的一个: %s"

#. R/SClasses.R: gettextf("class definition for %s not found (no action taken)", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "class definition for %s not found (no action taken)"
msgstr "找不到\"%s\"类别定义(无效果)"

#. R/MethodsListClass.R: gettextf("class generator function for class %s from package %s", dQuote(object@className),     sQuote(object@package), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "class generator function for class %s from package %s"
msgstr "程辑包\"%2$s\"里用于\"%1$s\"这一类的类生成函数"

#. R/refClass.R: gettextf("class must be a reference class representation or a character string; got an object of class %s",     dQuote(class(Class)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"class must be a reference class representation or a character string; got an "
"object of class %s"
msgstr "类别必需是引用类别或字符串；现在得到的却是类别为%s的目标对象"

#. R/refClass.R: gettextf("code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)",     dQuote(Class), sQuote("codetools"))
#: R/refClass.R:0
#, fuzzy
msgid ""
"code for methods in class %s was not checked for suspicious field "
"assignments (recommended package %s not available?)"
msgstr "没有检查%s类别方法代码可能有错的场分配（是不是因为没有推荐程辑包%s？）"

#. R/RClassUtils.R: gettextf("conflicting definition of data part: .Data = %s, superclass implies %s",     dQuote(elNamed(properties, ".Data")), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid "conflicting definition of data part: .Data = %s, superclass implies %s"
msgstr "数据部分的定义相互有矛盾: .Data = \"%s\"，而父类别却意味着\"%s\""

#. R/MethodsList.R: gettextf("default method must be a method definition, a primitive or NULL: got an object of class %s",     dQuote(class(method)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"default method must be a method definition, a primitive or NULL: got an "
"object of class %s"
msgstr "缺省方法必需是方法定义，原始方法或NULL，得到的却是类别为%s的对象"

#. R/refClass.R: stop("direct calls to 'callSuper()' are invalid: should only be called from another method")
#: R/refClass.R:0
#, fuzzy
msgid ""
"direct calls to 'callSuper()' are invalid: should only be called from "
"another method"
msgstr "不能直接调用callSuper()：只能用其它的方法来调用它"

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- value' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- "
"value' instead"
msgstr ""

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' "
"instead"
msgstr ""

#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#: R/RClassUtils.R:0
msgid "distance %d"
msgstr ""

#. R/trace.R: gettextf("does not seem to be a method table for generic %s in tracing environment",     sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid ""
"does not seem to be a method table for generic %s in tracing environment"
msgstr "在追溯环境里找不到\"%s\"泛型函数的方法表"

#. R/zzz.R: gettext(" done", domain = "R-methods")
#: R/zzz.R:0
msgid "done"
msgstr ""

#. R/SClasses.R: gettext("duplicate class names among superclasses: %s", domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicate class names among superclasses: %s"
msgstr "父类别里有重复的类别名: %s"

#. R/MethodsList.R: gettextf("duplicate element names in 'MethodsList' at level %d: %s", level, paste(dQuote(unique(mnames[duplicated(mnames)])),     collapse = ", "), domain = "R-methods")
#: R/MethodsList.R:0
msgid "duplicate element names in 'MethodsList' at level %d: %s"
msgstr "'MethodsList'里%d: %s水平上的單元名字有重复"

#. R/BasicClasses.R: gettextf("duplicated level [%d] in factor", d)
#: R/BasicClasses.R:0
msgid "duplicated level [%d] in factor"
msgstr ""

#. R/MethodsList.R: gettextf("element %d at level %d (class %s) cannot be interpreted as a function or named list",     i, level, dQuote(class(eli)))
#: R/MethodsList.R:0
msgid ""
"element %d at level %d (class %s) cannot be interpreted as a function or "
"named list"
msgstr "水平%2$d上的%1$d單元(%3$s类别)既不是函数也不是命名串列"

#. R/SClasses.R: gettextf("element %d of the representation was not a single character string", i)
#: R/SClasses.R:0
msgid "element %d of the representation was not a single character string"
msgstr "表现的%d單元不是单字符的字串"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to remove definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to remove definition "
"from %s"
msgstr "%2$s类别里包含的子类别(%1$s)不对，但无法将定义从%3$s中删除"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to restore previous definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to restore previous "
"definition from %s"
msgstr "%2$s类别里包含的子类别(%1$s)不对，但无法将%3$s中原来的定义重新储存"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; class definition removed from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; class definition removed from "
"%s"
msgstr "%2$s类别里包含的子类别(%1$s)不对；类别定义从%3$s中被删除"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; previous definition restored to %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; previous definition restored "
"to %s"
msgstr "%2$s类别里包含的子类别(%1$s)不对；原来的定义重新储存到%3$s中"

#. R/RMethodUtils.R: gettextf("error in load action %s for package %s: %s: %s", aname, getPackageName(where),     callString, value$message)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "error in load action %s for package %s: %s: %s"
msgstr "从%3$s里的程辑包%2$s为%1$s建立新的泛型函数"

#. R/Methods.R: gettextf("error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)",     sQuote(f), dQuote(class(fdef)))
#: R/Methods.R:0
msgid ""
"error in updating S4 generic function %s; the function definition is not an "
"S4 generic function (class %s)"
msgstr "更新泛型函数%s时出了错；函数定义不是泛型函数(类别为%s)"

#. R/RMethodUtils.R: gettext("expanding the signature to include omitted arguments in definition: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "expanding the signature to include omitted arguments in definition: %s"
msgstr "在定义里扩展标记来包括进忽略了的参数：%s"

#. R/addedFunctions.R: gettextf("expected a non-empty character string for argument 'name'")
#: R/addedFunctions.R:0
#, fuzzy
msgid "expected a non-empty character string for argument 'name'"
msgstr "参数的名字应该是非空字符串"

#. R/Methods.R: gettextf("expected a non-empty character string for argument name")
#: R/Methods.R:0
msgid "expected a non-empty character string for argument name"
msgstr "参数的名字应该是非空字符串"

#. R/oldClass.R: gettext("explicit coercion of old-style class (%s) is not defined", domain = "R-methods")
#: R/oldClass.R:0
msgid "explicit coercion of old-style class (%s) is not defined"
msgstr "旧式类别(%s)的明确强制转换没有定义"

#. R/oldClass.R: gettextf("explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s",     to, dQuote(class(from)[1L]))
#: R/oldClass.R:0
msgid ""
"explicit replacement not defined for as(x, \"%s\") <- value for old-style "
"class %s"
msgstr "用于旧式类别%2$s的as(x, \"%1$s\") <- value的替换值没有明确的定义"

#. R/BasicClasses.R: gettext("factor levels must be \"character\"")
#: R/BasicClasses.R:0
msgid "factor levels must be \"character\""
msgstr ""

#. R/methodsTable.R: stop("failed to find expected group generic function: ", what)
#: R/methodsTable.R:0
#, fuzzy
msgid "failed to find expected group generic function:"
msgstr "找不到团体泛型函数："

#. R/refClass.R: gettextf("field %s is already locked", sQuote(what))
#: R/refClass.R:0
#, fuzzy
msgid "field %s is already locked"
msgstr "场\"%s\"已经被锁住了"

#. R/refClass.R: gettextf("field %s of class %s has a non-default binding and cannot be locked", sQuote(what),     dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "field %s of class %s has a non-default binding and cannot be locked"
msgstr "%1$s类别的\"%2$s\"场有非默认的约束力，因此不能被锁定"

#. R/refClass.R: gettextf("field %s was supplied as an object of class %s; must be a class name or a binding function",     sQuote(thisName), dQuote(class(thisField)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"field %s was supplied as an object of class %s; must be a class name or a "
"binding function"
msgstr "场\"%s\"被提供了类别%s的对象;但它必须是类别名或绑定函数"

#. R/Methods.R: gettextf("first argument should be the names of one of more generic functions (got object of class %s)",     dQuote(class(f)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"first argument should be the names of one of more generic functions (got "
"object of class %s)"
msgstr "第一个参数应当为泛型函数的名称(现在却是类别为%s的对象)"

#. R/RClassUtils.R: gettextf("for function %s: %s", f, message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "for function %s: %s"
msgstr "找不到%s这一函数"

#. R/RMethodUtils.R: gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature",     bad2)
#: R/RMethodUtils.R:0
msgid ""
"formal arguments (%s) omitted in the method definition cannot be in the "
"signature"
msgstr "方法定义里所忽略的正式参数(%s)不能存在于标记"

#. R/Methods.R: gettext("formal arguments differ (in default values?)")
#: R/Methods.R:0
#, fuzzy
msgid "formal arguments differ (in default values?)"
msgstr "正式参数不相对(缺省值不一样？)"

#. R/Methods.R: gettext("formal arguments differ: (%s), (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "formal arguments differ: (%s), (%s)"
msgstr "正式参数不相对: (%s), (%s)"

#. R/RMethodUtils.R: stop(.renderSignature(f, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#. R/RMethodUtils.R: stop(.renderSignature(generic@generic, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#: R/RMethodUtils.R:0
msgid "formal arguments in method and generic do not appear in the same order"
msgstr "方法正式参数和泛型方法正式参数的顺序不同"

#. R/RMethodUtils.R: gettext(" found on: %s; using the first one", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "found on: %s; using the first one"
msgstr "；用第一个"

#. R/Methods.R: gettextf("function %s appears to be a generic function, but with generic name %s",     sQuote(f), sQuote(gen))
#: R/Methods.R:0
msgid "function %s appears to be a generic function, but with generic name %s"
msgstr "函数%s好象是泛型函数，却有%s的泛型名字"

#. R/Methods.R: stop("function supplied as argument 'f' must be a generic")
#: R/Methods.R:0
#, fuzzy
msgid "function supplied as argument 'f' must be a generic"
msgstr "给参数\"f\"所提供的函数必需是泛型函数"

#. R/Methods.R: gettextf("generic function %s not found for removal", sQuote(f))
#: R/Methods.R:0
msgid "generic function %s not found for removal"
msgstr "没有%s这样的泛型函数，因此不能将之删除"

#. R/Methods.R: gettextf("generic function supplied was not created for %s", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "generic function supplied was not created for %s"
msgstr "为\"%s\"找不到泛型函数"

#. R/Methods.R: gettextf("generic names differ: %s, %s", .dQ(f1@generic), .dQ(f2@generic))
#: R/Methods.R:0
#, fuzzy
msgid "generic names differ: %s, %s"
msgstr "泛型名字不相对：%s, %s"

#. R/RClassUtils.R: gettext("get rid of variables in definition %s (%s); they conflict with the needed change to argument names (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"get rid of variables in definition %s (%s); they conflict with the needed "
"change to argument names (%s)"
msgstr ""

#. R/RMethodUtils.R: stop("got a negative maximum number of frames to look at")
#: R/RMethodUtils.R:0
msgid "got a negative maximum number of frames to look at"
msgstr "框的最大数不能是负值"

#. R/Methods.R: gettextf("groups differ: %s, %s", .dQ(gpString(f1@group)), .dQ(gpString(f2@group)))
#: R/Methods.R:0
#, fuzzy
msgid "groups differ: %s, %s"
msgstr "组不相对: %s, %s"

#. R/methodsTable.R: gettext(" have best ones", domain = "R-methods")
#: R/methodsTable.R:0
msgid "have best ones"
msgstr ""

#. R/Methods.R: gettextf("if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default",     name)
#: R/Methods.R:0
msgid ""
"if the 'def' argument is supplied, it must be a function that calls "
"standardGeneric(\"%s\") or is the default"
msgstr ""
"如果设定了`def'参数的话，它要么是調用standardGeneric(\"%s\")的函数，要么是默"
"认值"

#. R/MethodsList.R: gettextf("in %s: use of \"MethodsList\" metadata objects is deprecated.", deparse(this))
#: R/MethodsList.R:0
#, fuzzy
msgid "in %s: use of \"MethodsList\" metadata objects is deprecated."
msgstr "%s 里\"MethodsList\"元数据目标对象已经不推荐使用了"

#. R/RMethodUtils.R: gettext("in changing formal arguments in %s, some of the old names are not in fact arguments: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"in changing formal arguments in %s, some of the old names are not in fact "
"arguments: %s"
msgstr "在%s中改变正式参数时，一些旧的参数名字其实不是参数: %s"

#. R/RClassUtils.R: gettext("in constructing the prototype for class %s, slots in prototype and not in class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s, slots in prototype and not in "
"class: %s"
msgstr "为类别%s建立原型时出了错, 原型里有槽但类别里却没有: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s",     dQuote(className), dQuote(.class1(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s: prototype has class %s, but the "
"data part specifies class %s"
msgstr "为类别%s建立原型时出了错：原型的类别是%s，但数据部分设定的类别是%s"

#. R/RClassUtils.R: gettextf("in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)",     dQuote(name), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in defining class %s, the supplied data part class, %s is not valid (must be "
"a basic class or a virtual class combining basic classes)"
msgstr ""
"是设定类别%s时，所提供的数据部分类别, %s有错(必需是基本类别或组合多个基本类别"
"的虛擬类别)"

#. R/RClassUtils.R: gettextf("in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")",     dQuote(ClassDef@className), dQuote(what), dQuote(class(exti)))
#: R/RClassUtils.R:0
msgid ""
"in definition of class %s, information for superclass %s is of class %s "
"(expected \"SClassExtension\")"
msgstr ""
"在类别%s的定义中有关于父类别%s的信息的类别是%s (所要求的则是\"SClassExtension"
"\")"

#. R/RClassUtils.R: gettext("in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in making the prototype for class %s elements of the prototype failed to "
"match the corresponding slot class: %s"
msgstr "为类别\"%s\"建立原型时出了错，原型的單元同槽的类别对应不上: %s"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s (maybe mixing old and new classes?)",     dQuote(cl))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"inconsistent old-style class information for %s (maybe mixing old and new "
"classes?)"
msgstr "\"%s\"旧式类别信息有矛盾(会不会是将旧的和新的类别混在了一起用?)"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part",     dQuote(cl), dQuote(prevClass))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"inconsistent old-style class information for %s; the class is defined but "
"does not extend %s and is not valid as the data part"
msgstr ""
"\"%s\"旧式类别信息有矛盾；虽然类别的定义是存在的，但它不扩展\"%s\"而且也不能"
"当作数据来用"

#. R/zzz.R: gettext("initializing class and method definitions ...", domain = "R-methods")
#: R/zzz.R:0
msgid "initializing class and method definitions ..."
msgstr ""

#. R/RClassUtils.R: gettextf("initializing objects from class %s with these arguments is not supported",     dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"initializing objects from class %s with these arguments is not supported"
msgstr "类别为%s的带这些参数的对象无法被初始化"

#. R/MethodsList.R: stop("inserting method corresponding to empty signature")
#: R/MethodsList.R:0
msgid "inserting method corresponding to empty signature"
msgstr "无法插入相对应于空标记的方法"

#. R/MethodsList.R: gettextf("inserting method into non-methods-list object (class %s)", dQuote(.class1(mlist)))
#: R/MethodsList.R:0
msgid "inserting method into non-methods-list object (class %s)"
msgstr "无法将方法插入非方法串列对象(类别为%s)"

#. R/MethodsList.R: gettextf("inserting method with invalid signature matching argument '...' to class %s",     dQuote(signature[[1L]]))
#: R/MethodsList.R:0
msgid ""
"inserting method with invalid signature matching argument '...' to class %s"
msgstr "无法插入标记有错的方法其参数'...'同类别%s相对应"

#. R/RMethodUtils.R: gettextf("internal error: Bad methods list object in fixing methods for primitive function %s",     sQuote(f))
#: R/RMethodUtils.R:0
msgid ""
"internal error: Bad methods list object in fixing methods for primitive "
"function %s"
msgstr "内部出错: 在修正基元函数%s的方法时方法串列对象出错"

#. R/SClasses.R: sprintf("internal error: definition of class %s not properly assigned", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "internal error: definition of class %s not properly assigned"
msgstr "内部错误：类别\"%s\"的定义设得不对"

#. R/Methods.R: sprintf("internal error: did not get a valid generic function object for function %s",     sQuote(f))
#: R/Methods.R:0
msgid ""
"internal error: did not get a valid generic function object for function %s"
msgstr "内部出错: 为函数%s找不到泛型函数对象"

#. R/as.R: sprintf("internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the metadata asserts that the 'is' relation is FALSE",     dQuote(thisClass), Class)
#: R/as.R:0
#, fuzzy
msgid ""
"internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the "
"metadata asserts that the 'is' relation is FALSE"
msgstr ""
"as()出了内部问题: \"%s\" is(object, \"%s\")的值为TRUE，但元数据却反应没"
"有'is'这种的关系，其值为FALSE"

#. R/refClass.R: stop("invalid 'Class' argument:  should be a single string")
#: R/refClass.R:0
#, fuzzy
msgid "invalid 'Class' argument:  should be a single string"
msgstr "类别参数不对：应当是条单字符字串"

#. R/show.R: gettextf("invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s",     dQuote(class(ignore)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid 'ignore' argument; should be a class definition or a character "
"vector, got an object of class %s"
msgstr ""
"ignore=参数不对，它要么是类别定义，要么是字符串；现在得到的却是类别为%s的对象"
"对象"

#. R/MethodsList.R: stop("invalid 'package' slot or attribute, wrong length")
#: R/MethodsList.R:0
#, fuzzy
msgid "invalid 'package' slot or attribute, wrong length"
msgstr "\"package\"槽或属性出了错，长度不对"

#. R/trace.R: gettextf("invalid 'source' argument: expected file names or a connection but got an object of class %s",     dQuote(class(source)[[1L]]))
#: R/trace.R:0
#, fuzzy
msgid ""
"invalid 'source' argument: expected file names or a connection but got an "
"object of class %s"
msgstr "源参数不对：应该是文件名字或连接，现在却是类别为%s的对象"

#. R/oldClass.R: gettext("invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s",     domain = "R-methods")
#: R/oldClass.R:0
msgid ""
"invalid S4 class corresponding to S3 class: slots in  S4 version must extend "
"corresponding slots in S3 version: fails for %s"
msgstr ""
"与S3类别相对应的S4类别不对：S4类别里的槽必需擴充类别S3中相应的槽：%s出了错"

#. R/Methods.R: gettextf("invalid argument 'name': %s", .isSingleName(name))
#: R/Methods.R:0
#, fuzzy
msgid "invalid argument 'name': %s"
msgstr "参数\"name\"无效: %s"

#. R/refClass.R: gettextf("invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)",     sQuote(fieldName), dQuote(fieldClass), dQuote(class(value)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"invalid assignment for reference class field %s, should be from class %s or "
"a subclass (was class %s)"
msgstr "场%s的替换值不对，应当是%s类别或子类（原来是%s类别）"

#. R/RMethodUtils.R: gettextf("invalid call in method dispatch to '%s' (no default method)", name)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid call in method dispatch to '%s' (no default method)"
msgstr "给'%s'进行方法分配时的调用出了错(没有默認方法)"

#. R/show.R: gettextf("invalid call passed to 'classLabel': expected a name or a class definition, got an object of class %s",     classLabel(class(Class)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid call passed to 'classLabel': expected a name or a class definition, "
"got an object of class %s"
msgstr ""
"'classLabel'调用不对：需要的是个名字或类别定义，但得到的却是类别为%s的目标对"
"象"

#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "invalid class %s object:"
msgstr "类别为%s的对象不对:"

#. R/MethodsList.R: gettextf("invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name",     i)
#: R/MethodsList.R:0
msgid ""
"invalid element in a list for \"signature\" argument; element %d is neither "
"a class definition nor a class name"
msgstr ""
"\"signature\"参数里串列元素出了错；第%d个元素不是类别定义出不是类别名字"

#. R/RMethodUtils.R: gettextf("invalid element in the \"groupMembers\" slot (class %s)", dQuote(class(x)))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid element in the \"groupMembers\" slot (class %s)"
msgstr "groupMembers槽里的單元不对(类别为%s)"

#. R/MethodsList.R: stop("invalid first argument: should be the name of the first argument in the dispatch")
#: R/MethodsList.R:0
msgid ""
"invalid first argument: should be the name of the first argument in the "
"dispatch"
msgstr "第一个参数不对: 应该是分配里的第一参数的名字"

#. R/methodsTable.R: gettextf("invalid group generic function in search for inherited method (class %s)",     dQuote(class(gen)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid group generic function in search for inherited method (class %s)"
msgstr "在找继承方法时出现的泛型函数不对"

#. R/languageEl.R: stop("invalid index for function argument")
#: R/languageEl.R:0
msgid "invalid index for function argument"
msgstr "函数参数的索引不对"

#. R/Methods.R: gettextf("invalid method definition: expected a function, got an object of class %s",     dQuote(class(definition)))
#: R/Methods.R:0
msgid ""
"invalid method definition: expected a function, got an object of class %s"
msgstr "方法定义不对：提供的应该是函数，现在却是个类别为%s的对象"

#. R/MethodsList.R: stop("invalid method sublist")
#: R/MethodsList.R:0
msgid "invalid method sublist"
msgstr "方法子串列有错"

#. R/methodsTable.R: stop("invalid methods table request")
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid methods table request"
msgstr "表要求方法出错"

#. R/methodsTable.R: gettextf("invalid mlist element for signature %s at level %d (should be methods list or method, had class %s)",     sQuote(classes[[j]]), i, dQuote(class(el)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid mlist element for signature %s at level %d (should be methods list "
"or method, had class %s)"
msgstr "(应该是list或method方法，但其类别却是\""

#. R/MethodsListClass.R: gettextf("invalid object for formal method definition: type %s", dQuote(typeof(def)))
#: R/MethodsListClass.R:0
#, fuzzy
msgid "invalid object for formal method definition: type %s"
msgstr "正式方法定义的对象不对: \"%s\"种类"

#. R/SClasses.R: gettextf("invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or extend class \"%s\"",     slotNames[[i]], Class, class(sloti), classi)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or "
"extend class \"%s\""
msgstr "槽\"%s\"：类别%s无法擴充类别%s"

#. R/methodsTable.R: gettextf("invalid object in meta table of methods for %s, label %s, had class %s",     sQuote(generic@generic), sQuote(what), dQuote(class(obj)))
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid object in meta table of methods for %s, label %s, had class %s"
msgstr "元方法表里%1$s的对象有问题，\"%2$s\"标签的类别不应该是%3$s"

#. R/methodsTable.R: gettextf("invalid object in methods table (%s), expected a method, got an object of class %s",     sQuote(what), dQuote(class(method)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid object in methods table (%s), expected a method, got an object of "
"class %s"
msgstr "方法定义不对：提供的应该是函数，现在却是个类别为%s的对象"

#. R/methodsTable.R: gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic))
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid or unset methods table in generic function %s"
msgstr "泛型函数的方法表不对，或还没有设制"

#. R/refClass.R: gettextf("invalid replacement: reference class field %s is read-only", sQuote(fieldName))
#: R/refClass.R:0
msgid "invalid replacement: reference class field %s is read-only"
msgstr ""

#. R/RMethodUtils.R: gettextf("invalid value from generic function %s, class %s, expected one of %s",     sQuote(fname), dQuote(class(object)), paste(dQuote(classes), collapse = ", "))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid value from generic function %s, class %s, expected one of %s"
msgstr "类别为%2$s的泛型函数'%1$s'的值不对, 所要求的是%3$s"

#. R/refClass.R: gettextf("local assignment to field name will not change the field:\n    %s\n Did you mean to use \"<<-\"? ( in method %s for class %s)",     paste(unlist(assigned$locals)[localsAreFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
#, fuzzy
msgid ""
"local assignment to field name will not change the field:\n"
"    %s\n"
" Did you mean to use \"<<-\"? ( in method %s for class %s)"
msgstr ""
"场名本地分配不会改变场：\n"
"    %1$s\n"
" 你的意思是不是用\"<<-\"? ( 在类别%3$s的%2$s方法里)"

#. R/RMethodUtils.R: gettextf("making a generic for special function %s", sQuote(f), domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "making a generic for special function %s"
msgstr "为特殊函数 %s制造泛型函数"

#. R/trace.R: warning("making a traced version of a primitive; arguments will be treated as '...'")
#: R/trace.R:0
msgid ""
"making a traced version of a primitive; arguments will be treated as '...'"
msgstr "创造一个被追踪的基元函数版本；其参数将被当作'...'来用"

#. R/refClass.R: sprintf("method %s from class %s was not processed into a class method until being installed.  Possible corruption of the methods in the class.",     me, thisClass@className)
#: R/refClass.R:0
#, fuzzy
msgid ""
"method %s from class %s was not processed into a class method until being "
"installed.  Possible corruption of the methods in the class."
msgstr ""
"在安装之前类别%s里的%s方法无法被处理成类别方法。在类别里有能出现方法损坏"

#. R/RMethodUtils.R: gettextf("methods can add arguments to the generic %s only if '...' is an argument to the generic",     sQuote(generic@generic))
#: R/RMethodUtils.R:0
msgid ""
"methods can add arguments to the generic %s only if '...' is an argument to "
"the generic"
msgstr "只有当'...'是泛型方法参数时方法才能给泛型%s加参数"

#. R/RMethodUtils.R: gettextf("methods cannot be defined for the primitive function %s", sQuote(f))
#: R/RMethodUtils.R:0
msgid "methods cannot be defined for the primitive function %s"
msgstr "无法为基元函数%s定义方法"

#. R/as.R: gettextf("methods currently exist for coercing from %s to %s; they will be replaced.",     dQuote(from), dQuote(to))
#: R/as.R:0
#, fuzzy
msgid ""
"methods currently exist for coercing from %s to %s; they will be replaced."
msgstr "目前存在着強制转换\"%s\"成\"%s\"的方法；这些方法将会被替换掉。"

#. R/refClass.R: gettext("methods declared in usingMethods() but not found: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "methods declared in usingMethods() but not found: %s"
msgstr ""

#. R/BasicFunsList.R: gettextf("methods may not be defined for primitive function %s in this version of R",     sQuote(f))
#: R/BasicFunsList.R:0
msgid ""
"methods may not be defined for primitive function %s in this version of R"
msgstr "此版本的R没有给基元函数%s定义方法"

#. R/RMethodUtils.R: gettextf("missing function for load action: %s", what)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "missing function for load action: %s"
msgstr "函数%s没有定义"

#. R/MethodsListClass.R: gettextf("missing package slot (%s) in object of class %s (package info added)",     packageSlot(co), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
msgid "missing package slot (%s) in object of class %s (package info added)"
msgstr "%2$s类别的对象里缺少程輯包槽(%1$s)(加入了程輯包信息)"

#. R/MethodsList.R: gettextf("more elements in the method signature (%d) than in the generic signature (%d) for function %s",     length(which), length(anames), sQuote(fun@generic))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"more elements in the method signature (%d) than in the generic signature "
"(%d) for function %s"
msgstr "方法标记(%d)里的元素比泛型标记(%d)里的要多"

#. R/RClassUtils.R: gettextf("more than one possible class for the data part: using %s rather than %s",     .dQ(prevDataPartClass), .dQ(value))
#: R/RClassUtils.R:0
msgid "more than one possible class for the data part: using %s rather than %s"
msgstr "数据部分有多种类别：用%s而不用%s"

#. R/SClasses.R: gettext("multiple class definitions for class %s from packages: %s; picking the first",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple class definitions for class %s from packages: %s; picking the first"
msgstr "程序包%2$s里有多个类别%1$s的定义；现在用第一个"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"multiple definitions exist for class %s, but the supplied package (%s) is "
"not one of them (%s)"
msgstr "%s类别存在多个定义，但提供的程辑包（%s）不是其中之一（%s）"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()",     domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"multiple definitions exist for class %s; should specify one of them (%s), e."
"g. by className()"
msgstr "%s类别存在多个定义；应该用className()指定其中的一个"

#. R/promptClass.R: gettextf("multiple definitions of %s found; using the one on %s", dQuote(clName),     whereClass)
#: R/promptClass.R:0
#, fuzzy
msgid "multiple definitions of %s found; using the one on %s"
msgstr "\"%s\"有多个定义；现在用%s这一个"

#. R/RMethodUtils.R: gettextf("multiple direct matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "multiple direct matches: %s; using the first of these"
msgstr "；用第一个"

#. R/RMethodUtils.R: gettextf("multiple equivalent inherited matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "multiple equivalent inherited matches: %s; using the first of these"
msgstr "；用第一个"

#. R/trace.R: gettextf("multiple generics match pattern, using table %s", table)
#: R/trace.R:0
msgid "multiple generics match pattern, using table %s"
msgstr "有多个泛型同模式相匹配，用表%s"

#. R/Methods.R: gettextf("must provide an environment table; got class %s", dQuote(class(what)))
#: R/Methods.R:0
#, fuzzy
msgid "must provide an environment table; got class %s"
msgstr "必需提供环境表；得到的是%s类别"

#. R/Methods.R: gettextf("must supply a function skeleton for %s, explicitly or via an existing function",     sQuote(name))
#: R/Methods.R:0
msgid ""
"must supply a function skeleton for %s, explicitly or via an existing "
"function"
msgstr "必需提供函数%s的骨架，要么是明确地提供，要么通过已存在的函数来提供"

#. R/RMethodUtils.R: gettextf("must supply either a generic function or a function as default for %s",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "must supply either a generic function or a function as default for %s"
msgstr "必需为\"#s\"提供一个作默认用的泛型函数或函数"

#. R/method.skeleton.R: stop("need a definition for the method here")
#: R/method.skeleton.R:0
#, fuzzy
msgid "need a definition for the method here"
msgstr "这里需要方法客店"

#. R/RClassUtils.R: gettextf("needed the supplied labels vector of length %d, got %d", length(nodes),     length(short))
#: R/RClassUtils.R:0
#, fuzzy
msgid "needed the supplied labels vector of length %d, got %d"
msgstr "需要的是长度为%n不是%n的标签矢量"

#. R/RClassUtils.R: gettextf("no '.Data' slot defined for class %s", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "no '.Data' slot defined for class %s"
msgstr "类别%s没有'.Data'这一个槽"

#. R/ClassExtensions.R: gettextf("no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s",     to, dQuote(class(from)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s"
msgstr "不存在%2$s这一类别用于as(x, \"%1$s\") <- value函数的'replace'方法"

#. R/Methods.R: sprintf("no S4 method for function %s and signature %s; consider getS3method() if you wanted the S3 method",     sQuote(.genericName(f)), Classes)
#: R/Methods.R:0
msgid ""
"no S4 method for function %s and signature %s; consider getS3method() if you "
"wanted the S3 method"
msgstr "函数%s和标记%s没有设定S4方法；如果你要用S3方法的话，请用getS3method()"

#. R/Methods.R: gettext("no applicable functions", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no applicable functions"
msgstr "不能同时用于两个函数!"

#. R/trace.R: gettextf("no definition for object %s found in tracing environment", sQuote(what),     source)
#: R/trace.R:0
#, fuzzy
msgid "no definition for object %s found in tracing environment"
msgstr "在追溯环境里找不到\"%s\"对象的定义"

#. R/fixPrevious.R: gettextf("no definition for the class of %s (class %s) found", sQuote(what), dQuote(class))
#: R/fixPrevious.R:0
msgid "no definition for the class of %s (class %s) found"
msgstr "类别为%s的定义不存在(类别%s)"

#. R/RMethodUtils.R: gettextf("no definition found for class %s", dQuote(classi), domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "no definition found for class %s"
msgstr "类别%s的定义不存在"

#. R/refClass.R: gettext("no definition found for inherited class: %s", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "no definition found for inherited class: %s"
msgstr "继承类别的定义不存在: %s"

#. R/SClasses.R: gettextf("no definition of %s to use for %s", dQuote(Class), unique)
#: R/SClasses.R:0
msgid "no definition of %s to use for %s"
msgstr "%s没有定义，不能为%s起作用"

#. R/promptClass.R: gettextf("no definition of class %s found", dQuote(clName))
#: R/promptClass.R:0
msgid "no definition of class %s found"
msgstr "类别%s的定义不存在"

#. R/RClassUtils.R: gettextf("no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s",     .dQ(what), .dQ(def2@className), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"no definition of inheritance from %s to %s, though the relation was implied "
"by the setIs() from %s"
msgstr "不存在从%s到\"%s\"类别的繼承定义，虽然%s的setIs()暗示其存在"

#. R/RClassUtils.R: gettextf("no definition was found for superclass %s in the specification of class %s",     dQuote(cl), dQuote(name))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"no definition was found for superclass %s in the specification of class %s"
msgstr "在定义%2$s里不存在母类别%1$s的定义"

#. R/Methods.R: gettext("  no direct match found to signature (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no direct match found to signature (%s)"
msgstr "标记'%s'里不存在任何方法"

#. R/Methods.R: gettextf("no environment or package corresponding to argument where=%s", deparse(where))
#: R/Methods.R:0
msgid "no environment or package corresponding to argument where=%s"
msgstr "找不到与where=%s参数相配的环境或程辑包"

#. R/Methods.R: gettextf("no existing definition for function %s", sQuote(f))
#: R/Methods.R:0
msgid "no existing definition for function %s"
msgstr "函数%s没有定义"

#. R/addedFunctions.R: gettextf("no function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no function %s found"
msgstr "找不到%s这一函数"

#. R/trace.R: gettextf("no function definition for %s found", sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid "no function definition for %s found"
msgstr "没有'%s'这样一个函数定义"

#. R/method.skeleton.R: gettextf("no function definition found for %s", sQuote(generic))
#: R/method.skeleton.R:0
#, fuzzy
msgid "no function definition found for %s"
msgstr "没有\"%s\"这样一个函数定义"

#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#: R/Methods.R:0
msgid "no generic function %s found"
msgstr "不存在%s这一泛型函数"

#. R/MethodsList.R: gettextf("no generic function found corresponding to %s", sQuote(f))
#: R/MethodsList.R:0
#, fuzzy
msgid "no generic function found corresponding to %s"
msgstr "为\"%s\"找不到泛型函数"

#. R/Methods.R: gettextf("no generic function found for %s", sQuote(f))
#. R/RMethodUtils.R: gettextf("no generic function found for %s", sQuote(f))
#: R/Methods.R:0 R/RMethodUtils.R:0
#, fuzzy
msgid "no generic function found for %s"
msgstr "为'%s'找不到泛型函数"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for package %s",     sQuote(name), sQuote(package), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for package %s"
msgstr ""
"程序包%2$s不允许泛型版本的%1$s；一个新的泛型函数将会同程序包%3$s一起被分配"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for the global environment",     sQuote(name), sQuote(package))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for the global environment"
msgstr ""
"程序包%2$s不允许泛型版本的%1$s；一个新的泛型函数将会同程序包%3$s一起被分配"

#. R/Methods.R: gettextf("no method defined in methods list object for function %s and signature %s",     sQuote(.genericName(f)), Classes)
#: R/Methods.R:0
msgid ""
"no method defined in methods list object for function %s and signature %s"
msgstr "函数%s和标记%s方法串列对象里没有设定方法"

#. R/Methods.R: gettextf("no method for %s matches class %s", sQuote("..."), dQuote(signature))
#: R/Methods.R:0
#, fuzzy
msgid "no method for %s matches class %s"
msgstr "%2$s类别里没有一个匹配%1$s的方法"

#. R/Methods.R: gettext("no method found for function %s and signature %s", domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for function %s and signature %s"
msgstr "找不到对函数%s和标记%s适用的方法"

#. R/Methods.R: gettext("no method found for function '%s' and signature %s", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no method found for function '%s' and signature %s"
msgstr "函数'%s'和标记%s没有方法"

#. R/Methods.R: gettext("no method found for signature %s", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no method found for signature %s"
msgstr "标记'%s'里不存在任何方法"

#. R/trace.R: gettextf("no method in methods table for %s for signature %s", sQuote(what), sQuote(signature))
#: R/trace.R:0
#, fuzzy
msgid "no method in methods table for %s for signature %s"
msgstr "函数\"%s\"标记\"%s\"方法表里没有设定方法"

#. R/as.R: gettextf("no method or default for 'as()' function replacement of %s with class=\"%s\"",     dQuote(thisClass), Class)
#: R/as.R:0
#, fuzzy
msgid ""
"no method or default for 'as()' function replacement of %s with class=\"%s\""
msgstr "没有可用于类别为\"%s\"as()\"%s\"替换值的方法或默認函数"

#. R/RMethodUtils.R: gettextf("no method or default matching the \"...\" arguments in %s", deparse(sys.call(sys.parent()),     nlines = 1))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "no method or default matching the \"...\" arguments in %s"
msgstr "%s里没有同\"...\"参数相配的方法或默认函数"

#. R/as.R: gettextf("no method or default scheme for coercing %s to %s", dQuote(thisClass),     dQuote(Class))
#: R/as.R:0
#, fuzzy
msgid "no method or default scheme for coercing %s to %s"
msgstr "没有可以用来強制转换\"%s\"成\"%s\"的方法或默认函数"

#. R/RMethodUtils.R: gettextf("no methods found for %s; cacheGenericsMetaData() will have no effect",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "no methods found for %s; cacheGenericsMetaData() will have no effect"
msgstr "为'%s'找不到方法；'cacheGenericsMetaData'没有作用"

#. R/methodsTable.R: gettextf("no methods table for generic %s from package %s in package %s", sQuote(generic@generic),     sQuote(generic@package), sQuote(getPackageName(where)))
#: R/methodsTable.R:0
#, fuzzy
msgid "no methods table for generic %s from package %s in package %s"
msgstr "在%3$s程序包中，程序包%2$s里的泛型%1$s没有方法列表"

#. R/addedFunctions.R: gettextf("no non-generic function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no non-generic function %s found"
msgstr "找不到%s这一非泛型函数"

#. R/SClasses.R: gettextf("no package name supplied and no class definition found for class %s", dQuote(className))
#: R/SClasses.R:0
#, fuzzy
msgid "no package name supplied and no class definition found for class %s"
msgstr "%s没有程辑包出没有类别定义"

#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#: R/RMethodUtils.R:0
msgid "no suitable arguments to dispatch methods in this function"
msgstr "此函数里没有合适的参数可用来分配方法"

#. R/RMethodUtils.R: gettext("non-empty string; got \"\"")
#: R/RMethodUtils.R:0
msgid "non-empty string; got \"\""
msgstr ""

#. R/RMethodUtils.R: gettextf("non-function action: %s", sQuote(fname))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "non-function action: %s"
msgstr "没有'%s'这样一个函数定义"

#. R/Methods.R: gettextf("non-generic function '%s' given to findMethods()", f)
#: R/Methods.R:0
msgid "non-generic function '%s' given to findMethods()"
msgstr "findMethods()不适用于非泛型函数'%s'"

#. R/refClass.R: gettextf("non-local assignment to method names is not allowed\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsInMethods], collapse = "; "), methodName,     className)
#: R/refClass.R:0
#, fuzzy
msgid ""
"non-local assignment to method names is not allowed\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"不行允许非本地分配方法名字\n"
"    %1$s\n"
"( 在类别%3$s的%2$s方法里)"

#. R/refClass.R: gettextf("non-local assignment to non-field names (possibly misspelled?)\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsNotFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
#, fuzzy
msgid ""
"non-local assignment to non-field names (possibly misspelled?)\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"非本地分配非场名(是不是你写错了？)\n"
"    %1$s\n"
"( 在类别%3$s的%2$s方法里)"

#. R/trace.R: stop("none of the objects in the source code could be found:  need to attach or specify the package")
#: R/trace.R:0
#, fuzzy
msgid ""
"none of the objects in the source code could be found:  need to attach or "
"specify the package"
msgstr "在源代码中找不到任何对象：需要附加或指定程序包"

#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#: R/refClass.R:0
#, fuzzy
msgid "not a reference class: %s"
msgstr "非引用类别"

#. R/oldClass.R: stop("not allowed to have test==TRUE and an S4Class definition")
#: R/oldClass.R:0
msgid "not allowed to have test==TRUE and an S4Class definition"
msgstr "test==TRUE和S4Class定义不能同时存在"

#. R/Methods.R: gettext("not both functions!")
#: R/Methods.R:0
msgid "not both functions!"
msgstr "不能同时用于两个函数!"

#. R/fixPrevious.R: gettextf("object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)",     sQuote(what))
#: R/fixPrevious.R:0
#, fuzzy
msgid ""
"object %s not changed (it does not appear to be from a version of R earlier "
"than 1.8.0)"
msgstr "对象'%s'没有变动(它不是从R版本1.8.0之前来的)"

#. R/fixPrevious.R: gettextf("object %s not changed (it is not consistent with the current definition of class %s from %s)",     sQuote(what), dQuote(Class), sQuote(ClassDef@package))
#: R/fixPrevious.R:0
#, fuzzy
msgid ""
"object %s not changed (it is not consistent with the current definition of "
"class %s from %s)"
msgstr "对象%1$s没有变动(它与%3$s里类别为%2$s的定义不相符合)"

#. R/fixPrevious.R: gettextf("object %s was not found", sQuote(what))
#: R/fixPrevious.R:0
#, fuzzy
msgid "object %s was not found"
msgstr "找不到'%s'这个对象"

#. R/BasicClasses.R: gettextf("object must be a valid data part for class %s; not true of type %s", dQuote(cl),     dQuote(class(data)))
#: R/BasicClasses.R:0
#, fuzzy
msgid "object must be a valid data part for class %s; not true of type %s"
msgstr "%s类别的目标对象必需包含有效的数据部分；但%s种类不是这样"

#. R/MethodsList.R: gettextf("object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object",     sQuote(fun@generic), length(sigClasses), length(signature))
#: R/MethodsList.R:0
msgid ""
"object to use as a method signature for function %s does not look like a "
"legitimate signature (a vector of single class names): there were %d class "
"names, but %d elements in the signature object"
msgstr ""
"为函数%1$s作为方法标记而用的对象看来不象是合法的标记(单类别名字矢量) ：一共"
"有%2$d类别名字，但标记对象里只有%3$d个元素"

#. R/trace.R: gettext("objects found in multiple packages: using %s and ignoring %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "objects found in multiple packages: using %s and ignoring %s"
msgstr "在多个程序包中找到了对象：用%s而不用%s"

#. R/Methods.R: gettextf("only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)",     inherited)
#: R/Methods.R:0
#, fuzzy
msgid ""
"only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)"
msgstr "用'where'时，FALSE只对于'inherited'有意义，(得到了"

#. R/SClasses.R: stop("only arguments 'Class' and 'where' can be supplied when argument 'representation' is a \"classRepresentation\" object")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only arguments 'Class' and 'where' can be supplied when argument "
"'representation' is a \"classRepresentation\" object"
msgstr ""
"当参数'representation'是'classRepresentation'对象时只能使用'Class'和'where'变"
"元"

#. R/SClasses.R: stop("only one data object (unnamed argument passed to 'prototype()' function) allowed")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only one data object (unnamed argument passed to 'prototype()' function) "
"allowed"
msgstr "只能有一个数据对象(原型的参数没有名字)"

#. R/Methods.R: gettext("original function is prohibited as a generic function")
#: R/Methods.R:0
#, fuzzy
msgid "original function is prohibited as a generic function"
msgstr "原始函数是禁止作为泛型函数来用的"

#. R/trace.R: gettextf("package %s is not attached and no namespace found for it", sQuote(package))
#: R/trace.R:0
#, fuzzy
msgid "package %s is not attached and no namespace found for it"
msgstr "\"%s\"程序包没有被附加，也找不到它的名字空间"

#. R/RMethodUtils.R: gettextf("package %s seems to have out-of-date methods; need to reinstall from source",     sQuote(getPackageName(where[[1L]])))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"package %s seems to have out-of-date methods; need to reinstall from source"
msgstr "程序包\"%s\"的方法好象过时了；请重新安装"

#. R/methodsTable.R: gettext("package slot missing from signature for generic %s\n and classes %s\ncannot use with duplicate class names (the package may need to be re-installed)",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"package slot missing from signature for generic %s\n"
" and classes %s\n"
"cannot use with duplicate class names (the package may need to be re-"
"installed)"
msgstr ""

#. R/Methods.R: gettextf("package slots  differ: %s, %s", .dQ(gpString(f1@package)), .dQ(gpString(f2@package)))
#: R/Methods.R:0
#, fuzzy
msgid "package slots  differ: %s, %s"
msgstr "程辑包槽不相对: %s, %s"

#. R/RClassUtils.R: gettext("potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"potential cycle in class inheritance: %s has duplicates in superclasses and "
"subclasses (%s)"
msgstr "类别继承里有可能有循環: \"%s\"在父类别和子类别(%s)里有重复"

#. R/Methods.R: stop("primitive functions cannot be methods; they must be enclosed in a regular function")
#: R/Methods.R:0
msgid ""
"primitive functions cannot be methods; they must be enclosed in a regular "
"function"
msgstr "基元函数不能是方法函数；它们必需被包含在一个正規函数里"

#. R/RClassUtils.R: warning("prototype is a list with named elements (could be ambiguous): better to use function 'prototype()' to avoid trouble.")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"prototype is a list with named elements (could be ambiguous): better to use "
"function 'prototype()' to avoid trouble."
msgstr "原型是带名字單元的串列(允许有歧义) ：最好用函数prototype()以避免出错。"

#. R/ClassExtensions.R: gettextf("replacement value must be of class %s, got one of class %s", dQuote(CLASS),     dQuote(class(value)[[1L]]))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "replacement value must be of class %s, got one of class %s"
msgstr "替换值必需扩充%s类别，但现在得到的是%s"

#. R/ClassExtensions.R: gettextf("replacement value must extend class %s, got %s", dQuote(needClass), dQuote(S3Class[[1L]]))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "replacement value must extend class %s, got %s"
msgstr "替换值必需扩充%s类别，但现在得到的是%s"

#. R/oldClass.R: gettextf("restoring definition of class %s", dQuote(cl))
#: R/oldClass.R:0
#, fuzzy
msgid "restoring definition of class %s"
msgstr "恢复类别%s的定义"

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n", "** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "selectMethod(): mlist is not an environment or NULL :"
msgstr "selectMethod(): mlist不是环境也不是空的"

#. R/trace.R: gettextf("setting a method over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(getPackageName(where)))
#: R/trace.R:0
msgid ""
"setting a method over the binding of symbol %s in environment/package %s"
msgstr "在环境/程輯包%2$s里将符号%1$s的连结重新进行了方法设定"

#. R/Methods.R: gettext("signatures differ:  (%s), (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "signatures differ:  (%s), (%s)"
msgstr "标记不相对: (%s), (%s)"

#. R/RMethodUtils.R: gettextf("single string; got a character vector of length %d", length(what))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "single string; got a character vector of length %d"
msgstr "\"%s\"场需要单一类别名字，现在得到的是长度为%d的字符串"

#. R/RMethodUtils.R: gettextf("single string; got an object of class %s", dQuote(class(what)[[1L]]))
#: R/RMethodUtils.R:0
msgid "single string; got an object of class %s"
msgstr "单独字符串：不该是类别为%s的对象"

#. R/MethodsList.R: gettext("skipping methods list element %s of unexpected class %s\n\n", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "skipping methods list element %s of unexpected class %s"
msgstr "因为其类别%2$s没有定义，忽略%1$s这一方法串列單元"

#. R/RClassUtils.R: gettextf("slot %s in class %s currently defined (or inherited) as \"%s\", conflicts with an inherited definition in class %s",     sQuote(dup), dQuote(name), elNamed(allProps, dup), dQuote(cl))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"slot %s in class %s currently defined (or inherited) as \"%s\", conflicts "
"with an inherited definition in class %s"
msgstr ""
"类别%s里的槽\"%s\"目前被定义为(或继承于)\"%s\"，这与类别%s里所继承的定义相互"
"有矛盾"

#. R/oldClass.R: gettextf("slot %s: class %s should extend class %s", sQuote(what), dQuote(elNamed(slots1,     what)), dQuote(elNamed(slots2, what)))
#: R/oldClass.R:0
#, fuzzy
msgid "slot %s: class %s should extend class %s"
msgstr "槽\"%s\"：类别%s无法擴充类别%s"

#. R/SClasses.R: gettext("slots in class definition but not in object:")
#: R/SClasses.R:0
msgid "slots in class definition but not in object:"
msgstr ""

#. R/RMethodUtils.R: gettext("some actions are missing: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "some actions are missing: %s"
msgstr ""

#. R/methodsTable.R: gettext("something weird: inconsistent number of args in methods table strings: %s (using the largest value)",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"something weird: inconsistent number of args in methods table strings: %s "
"(using the largest value)"
msgstr "好象有点不对：方法表字符里参数数目有矛盾"

#. R/RMethodUtils.R: gettextf("special function %s has no known argument list; will assume '(x, ...)'",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "special function %s has no known argument list; will assume '(x, ...)'"
msgstr "特殊函数%s没有已知的参数串列；假设用'(x, ...)'"

#. R/RMethodUtils.R: gettextf("special function %s is not permitted to have methods", sQuote(f))
#: R/RMethodUtils.R:0
msgid "special function %s is not permitted to have methods"
msgstr "特殊函数%s不可以有方法"

#. R/RClassUtils.R: gettextf("subclass %s of class %s is not local and cannot be updated for new inheritance information; consider setClassUnion()",     .dQ(what), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"subclass %s of class %s is not local and cannot be updated for new "
"inheritance information; consider setClassUnion()"
msgstr ""
"%2$s类别的%1$s子类别不是局部的，因此无法按新的繼承信息进行更新；考虑用"
"setClassUnion()"

#. R/SClasses.R: gettextf("superclass \"%s\" not defined in the environment of the object's class",     superClass)
#: R/SClasses.R:0
#, fuzzy
msgid "superclass \"%s\" not defined in the environment of the object's class"
msgstr "类别%s在这个环境里没有定义"

#. R/trace.R: gettextf("supplied package, %s, differs from package inferred from source, %s", sQuote(package),     sQuote(envPackage))
#: R/trace.R:0
#, fuzzy
msgid "supplied package, %s, differs from package inferred from source, %s"
msgstr "提供的程序包，%s，与从来源推断出的程序包，%s，不一样"

#. R/methodsTable.R: gettextf("the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s",     dQuote(class(condAction)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"the \"ambiguousMethodSelection\" option should be a function to be called as "
"the condition action; got an object of class %s"
msgstr ""
"\"ambiguousMethodSelection\"这个选项应该是作为条件来调用的函数；现在它却是类"
"别为%s的对象"

#. R/RMethodUtils.R: gettextf("the %s argument must be NULL or a generic function object; got an object of class %s",     sQuote("genericFunction"), dQuote(class(genericFunction)))
#: R/RMethodUtils.R:0
msgid ""
"the %s argument must be NULL or a generic function object; got an object of "
"class %s"
msgstr "%s的参数要么是NULL，要么是泛型函数对象；现在却是类别为%s的对象"

#. R/RClassUtils.R: gettextf("the '%s' list for class %s, includes an undefined class %s", if (superClassCase) "superClass" else "subClass",     dQuote(className), dQuote(.className(by)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "the '%s' list for class %s, includes an undefined class %s"
msgstr "类别为%s的'%s'串列包含不存在的类别%s"

#. R/ClassExtensions.R: gettextf("the 'S3Class' argument must be a superclass of %s: not true of class %s",     dQuote(class(object)), dQuote(S3Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "the 'S3Class' argument must be a superclass of %s: not true of class %s"
msgstr "S3Class参数必需是%s的母类别: %s不是这种情况"

#. R/ClassExtensions.R: gettextf("the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s",     dQuote(class(coerce)))
#: R/ClassExtensions.R:0
msgid ""
"the 'coerce' argument to 'setIs' should be a function of one argument, got "
"an object of class %s"
msgstr "'setIs'的'coerce'参数值必需是单参数函数，而现在它却是类别为%s的对象"

#. R/refClass.R: gettextf("the 'contains' argument should be the names of superclasses:  got an element of class %s",     dQuote(class(what)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the 'contains' argument should be the names of superclasses:  got an element "
"of class %s"
msgstr "contains= 参数应当是超类别的名称(现在却是类别为%s的对象)"

#. R/ClassExtensions.R: gettextf("the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s",     dQuote(class(replace)))
#: R/ClassExtensions.R:0
msgid ""
"the 'replace' argument to setIs() should be a function of 2 or 3 arguments, "
"got an object of class %s"
msgstr ""
"setIs()的'replace'参数必需是个二或三参数的函数，现在得到的却是类别为%s的对象"

#. R/Methods.R: gettextf("the 'where' environment (%s) is a locked namespace; cannot assign methods there",     getPackageName(where))
#: R/Methods.R:0
msgid ""
"the 'where' environment (%s) is a locked namespace; cannot assign methods "
"there"
msgstr "'where'所指的环境(%s)是个锁住了的名字空间；因此无法在其中指定方法"

#. R/oldClass.R: gettextf("the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")",     .class1(prototype), mainClass)
#: R/oldClass.R:0
#, fuzzy
msgid ""
"the S3 class of the prototype, \"%s\", is undefined; only allowed when this "
"is the S3 class being registered (\"%s\")"
msgstr ""
"S3类别的原型, \"%s\", 没有定义；只有在注册这个S3类别时才允许这种情况(\"%s\")"

#. R/RMethodUtils.R: gettextf("the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!",     sQuote(fname), paste(as.character(x[[2L]]), collapse = "\n"))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"the body of the generic function for %s calls 'standardGeneric' to dispatch "
"on a different name (\"%s\")!"
msgstr ""
"'%s'泛型函数的程序部分調用'standardGeneric'来分配给一个不同的名字('%s')!"

#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the class of field %s in the object is not compatible with the desired class "
"%s in the target"
msgstr "\"%s\"对象场类别不符合目标中%s类别的需要"

#. R/ClassExtensions.R: gettextf("the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)\n",     TO, dQuote(FROM), TO, dQuote(class(value)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"the computation: 'as(object,\"%s\") <- value' is valid when object has class "
"%s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)"
msgstr ""
"运算出错：当object的类别是%2$s时，as(object,\"%1$s\") <- value只能在"
"is(value, \"%3$s\")值为TRUE的时候才能用(class(value)的值不能是%4$s)"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the definition of class %s in package %s is locked so fields may not be "
"modified"
msgstr "程辑包%2$s中%1$s类别的定义封闭了，因此无法个性场的定义"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked, methods may not be redefined",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the definition of class %s in package %s is locked, methods may not be "
"redefined"
msgstr "程辑包%2$s中%1$s类别的定义封闭了，因此无法将方法重新定义"

#. R/trace.R: stop("the editing in trace() can only change the body of the function, not the arguments or defaults")
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function, not the "
"arguments or defaults"
msgstr "追踪()里的编辑只能用来改变函数主文，不能用于参数默認值"

#. R/trace.R: gettextf("the editing in trace() can only change the body of the function; got an object of class %s",     dQuote(class(def2)))
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function; got an "
"object of class %s"
msgstr "trace()里的编辑只能用来改变函数主文；现在得到的却是类别为%s的对象"

#. R/Methods.R: gettextf("the environment %s is locked; cannot assign methods for function %s", sQuote(getPackageName(where)),     sQuote(f))
#: R/Methods.R:0
msgid "the environment %s is locked; cannot assign methods for function %s"
msgstr "环境%s被锁住了；无法为函数%s指定方法"

#. R/RMethodUtils.R: gettextf("the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed",     what, sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"the function being used as %s in making a generic function for %s is "
"currently traced; the function used will have tracing removed"
msgstr ""
"在为'%2$s'制造泛型函数时用的%1$s这一个函数现在已经被追踪；因此删除了对所用函"
"数的追踪"

#. R/ClassUnion.R: gettext("the member classes must be defined: not true of %s", domain = "R-methods")
#: R/ClassUnion.R:0
msgid "the member classes must be defined: not true of %s"
msgstr "必需设定成员类别: %s没有这样的设定"

#. R/trace.R: gettextf("the method for %s for this signature was not being traced", sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid "the method for %s for this signature was not being traced"
msgstr "此标记的\"%s\"方法没有被追踪"

#. R/Methods.R: gettextf("the method for function %s and signature %s is sealed and cannot be re-defined",     sQuote(f), .signatureString(fdef, signature))
#: R/Methods.R:0
msgid ""
"the method for function %s and signature %s is sealed and cannot be re-"
"defined"
msgstr "函数%s的方法和%s标记都被封闭了，因此无法将之重新定义"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match %s's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match %s's arguments (%s)"
msgstr "方法(%s)标记里的名字同函数%s参数(%s)不相对应"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match function's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid ""
"the names in signature for method (%s) do not match function's arguments (%s)"
msgstr "方法(%s)标记里的名字同函数%s参数(%s)不相对应"

#. R/refClass.R: gettextf("the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")",     value[[field]], sQuote(field), fieldList[[field]])
#: R/refClass.R:0
#, fuzzy
msgid ""
"the overriding class (\"%s\") of field %s is not a subclass of the existing "
"field definition (\"%s\")"
msgstr "首要类(\"%s\")的域不是存在域定义的子类别(\"%s\")"

#. R/ClassExtensions.R: gettextf("there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error",     to, dQuote(Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"there is no automatic definition for 'as(object, \"%s\") <- value' when "
"object has class %s and no 'replace' argument was supplied; replacement will "
"be an error"
msgstr ""
"当对象的类别为%2$s而'replace'参数不存在的话，没有自动定义的as(object, \"%1$s"
"\") <- value这样一个函数；因此替换时将出错"

#. R/refClass.R: gettextf("topic %s is not a method name in class %s\nThe class definition follows\n",     sQuote(topic), dQuote(className), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid ""
"topic %s is not a method name in class %s\n"
"The class definition follows"
msgstr ""
"\"%s\"主题在%s类别里不是方法名字\n"
"类别定义在下面"

#. R/trace.R: gettextf("tracing the internal function %s is not allowed", sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid "tracing the internal function %s is not allowed"
msgstr "不可以对内部函数%s进行跟踪"

#. R/RClassUtils.R: gettextf("trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object",     dQuote(class(def)), dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"trying to assign an object of class %s as the definition of class %s: must "
"supply a \"classRepresentation\" object"
msgstr ""
"无法将类别为%s的对象指定成类别%s的定义：必需提供\"classRepresentation\"这种对"
"象"

#. R/RClassUtils.R: gettext("trying to change the argument list of %s with %d arguments to have arguments (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"trying to change the argument list of %s with %d arguments to have arguments "
"(%s)"
msgstr ""
"无法在%s中改变正式参数，因为存在的参数数目比新的参数数目要小：(%s)比(%s)"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s in an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"trying to change the formal arguments in %s in an object of class %s; "
"expected a function definition"
msgstr "%s里在类别为%s的对象中是不能改变其正式参数的；所需要的是函数定义"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but getting the new formals "
"from an object of class %s; expected a function definition"
msgstr ""
"无法在%s中改变正式参数，因为从类别为%s的对象里得到的是新的正式参数；所需要的"
"是函数定义"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is greater than the number of new arguments (the extra arguments "
"won't be used): (%s) vs (%s)"
msgstr ""
"无法在%s中改变正式参数，因为存在的参数数目比新的参数数目要大(额外的变无是不能"
"用的): (%s)比(%s)"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is less than the number of new arguments: (%s) vs (%s)"
msgstr ""
"无法在%s中改变正式参数，因为存在的参数数目比新的参数数目要小：(%s)比(%s)"

#. R/methodsTable.R: gettext("trying to check signature length of generic %s, but it is not a generic function: i = %d, funs = %s, gnames = %s",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of generic %s, but it is not a generic "
"function: i = %d, funs = %s, gnames = %s"
msgstr "无法将方法标记同一个不是泛型函数的对象(类别是%s)相对应起来"

#. R/methodsTable.R: gettextf("trying to check signature length of group generic %s, but it is not a group generic",     sQuote(what))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of group generic %s, but it is not a group "
"generic"
msgstr "检查团体泛型的标记长度"

#. R/RMethodUtils.R: warning("trying to execute load actions without 'methods' package")
#: R/RMethodUtils.R:0
msgid "trying to execute load actions without 'methods' package"
msgstr ""

#. R/methodsTable.R: stop("trying to find a methods table in a non-generic function")
#: R/methodsTable.R:0
#, fuzzy
msgid "trying to find a methods table in a non-generic function"
msgstr "在非泛型函数里是找不到方法列表的"

#. R/MethodsList.R: gettextf("trying to match a method signature of class %s; expects a list or a character vector",     dQuote(class(signature)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature of class %s; expects a list or a "
"character vector"
msgstr "无法同类别为%s的方法标记相对应; 必需用串列或字符矢量"

#. R/MethodsList.R: gettextf("trying to match a method signature to an object (of class %s) that is not a generic function",     dQuote(class(fun)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature to an object (of class %s) that is not a "
"generic function"
msgstr "无法将方法标记同一个不是泛型函数的对象(类别是%s)相对应起来"

#. R/as.R: gettextf("trying to set an 'as' relation from %s to itself", dQuote(.class1(from)))
#: R/as.R:0
#, fuzzy
msgid "trying to set an 'as' relation from %s to itself"
msgstr "无法为\"%s\"与自己设立'as'关系"

#. R/ClassUnion.R: gettext("unable to create union class: could not set members %s", domain = "R-methods")
#: R/ClassUnion.R:0
#, fuzzy
msgid "unable to create union class: could not set members %s"
msgstr "无法建立併集类别: 无法设定%s成员"

#. R/RClassUtils.R: gettext("unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"unable to find a consistent ordering of superclasses for class %s: order "
"chosen is inconsistent with the superclasses of %s"
msgstr "无法为类别%s找到相容的超类顺序: 所选择的顺序同%s超类不相容"

#. R/RClassUtils.R: gettextf("unable to find an environment containing class %s", dQuote(Class))
#: R/RClassUtils.R:0
msgid "unable to find an environment containing class %s"
msgstr "找不到包含类别%s的环境"

#. R/methodsTable.R: gettextf("unable to find an inherited method for function %s for signature %s", sQuote(fdef@generic),     sQuote(cnames))
#: R/methodsTable.R:0
#, fuzzy
msgid "unable to find an inherited method for function %s for signature %s"
msgstr "找不到继承方法，函数是"

#. R/RClassUtils.R: gettextf("unable to find required package %s", sQuote(package))
#: R/RClassUtils.R:0
msgid "unable to find required package %s"
msgstr "找不到所需要的程輯包%s"

#. R/as.R: stop("undefined 'coerce' method")
#: R/as.R:0
#, fuzzy
msgid "undefined 'coerce' method"
msgstr "没有这个强制方法"

#. R/SClasses.R: gettextf("undefined class for slot '%s' (\"%s\")", slotNames[[i]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid "undefined class for slot '%s' (\"%s\")"
msgstr "在%s的定义中不存在这种槽类别: %s"

#. R/methodsTable.R: gettext("undefined classes (%s) will be ignored for argument %s", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "undefined classes (%s) will be ignored for argument %s"
msgstr ")略过不用，参数"

#. R/RClassUtils.R: gettext("undefined slot classes in definition of %s: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "undefined slot classes in definition of %s: %s"
msgstr "在%s的定义中不存在这种槽类别: %s"

#. R/RClassUtils.R: gettextf("undefined subclass %s of class %s; definition not updated", .dQ(what),     .dQ(def@className))
#: R/RClassUtils.R:0
msgid "undefined subclass %s of class %s; definition not updated"
msgstr "%2$s类别的子类别%1$s没有定义；因此没有更新"

#. R/zzz.R: message("unloading 'methods' package ...")
#: R/zzz.R:0
msgid "unloading 'methods' package ..."
msgstr ""

#. R/BasicClasses.R: gettextf("unnamed argument must extend either the S3 class or the class of the data part; not true of class %s",     dQuote(Classi))
#: R/BasicClasses.R:0
msgid ""
"unnamed argument must extend either the S3 class or the class of the data "
"part; not true of class %s"
msgstr "没有名字的参数要么扩充S3类别，要么扩充数据类别；%s类别没有做到这一点"

#. R/BasicClasses.R: gettextf("unnamed argument passed to 'initialize()' for S3 class must have a class definition; %s does not",     dQuote(Classi))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'initialize()' for S3 class must have a class "
"definition; %s does not"
msgstr "给S3类别用的initialize()函数中没有名字的参数必需有类别定义；但%s没有"

#. R/BasicClasses.R: stop("unnamed argument passed to 'new()' method must be an environment for the new object")
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'new()' method must be an environment for the new "
"object"
msgstr "为新对象调用new()时中的无名参数必需是环境"

#. R/refClass.R: gettextf("unnamed arguments to $new() must be objects from a reference class; got an object of class %s",     dQuote(class(super)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"unnamed arguments to $new() must be objects from a reference class; got an "
"object of class %s"
msgstr ""
"'genericFunction'的参数要么是NULL，要么是泛型函数对象；现在却是类别为\"%s\"的"
"对象"

#. R/MethodsList.R: gettextf("use %s instead.", dQuote(instead))
#: R/MethodsList.R:0
#, fuzzy
msgid "use %s instead."
msgstr "请用%s。"

#. R/RClassUtils.R: gettextf("validity method for class \"%s\"", Class)
#: R/RClassUtils.R:0
#, fuzzy
msgid "validity method for class \"%s\""
msgstr "%2$s类别里没有一个匹配%1$s的方法"

#. R/SClasses.R: stop("validity method must be NULL or a function of one argument")
#: R/SClasses.R:0
msgid "validity method must be NULL or a function of one argument"
msgstr "正确的方法要么是NULL要么是带一个参数的函数"

#. R/Methods.R: gettextf("value classes differ: %s, %s", .dQ(gpString(f1@valueClass)), .dQ(gpString(f2@valueClass)))
#: R/Methods.R:0
#, fuzzy
msgid "value classes differ: %s, %s"
msgstr "值类别不相对: %s, %s"

#. R/methodsTable.R: ngettext(length(pkgs), "  (%d methods defined for this signature, with different packages)\n",     "  (%d methods defined for this signature, with different packages)\n", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "  (%d methods defined for this signature, with different packages)\n"
msgid_plural ""
"  (%d methods defined for this signature, with different packages)\n"
msgstr[0] "此标记的\"%s\"方法没有被追踪"

#. R/methodsTable.R: ngettext(length(candidates), "Choosing method %s from %d ambiguous possibility",     "Choosing method %s from %d ambiguous possibilities", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "Choosing method %s from %d ambiguous possibility"
msgid_plural "Choosing method %s from %d ambiguous possibilities"
msgstr[0] "从%2$d个歧义可能选择中选%1$s方法"

#. R/MethodsListClass.R: ngettext(nreport, "Reported %d ambiguous selection out of %d for function %s", "Reported %d ambiguous selections out of %d for function %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "Reported %d ambiguous selection out of %d for function %s"
msgid_plural "Reported %d ambiguous selections out of %d for function %s"
msgstr[0] "函数%3$s内%2$d个选择里有%1$d个歧义选择"

#. R/methodsTable.R: ngettext(which2, "Selecting %d method of minimum distance", "Selecting %d methods of minimum distance",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "Selecting %d method of minimum distance"
msgid_plural "Selecting %d methods of minimum distance"
msgstr[0] "选用min. distance的%d方法"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d non-group method", "Selecting %d non-group methods",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "Selecting %d non-group method"
msgid_plural "Selecting %d non-group methods"
msgstr[0] "选用%d非组方法"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d partially exact-matching method", "Selecting %d partially exact-matching methods",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "Selecting %d partially exact-matching method"
msgid_plural "Selecting %d partially exact-matching methods"
msgstr[0] "选用%d部分精密匹配方法"

#. R/is.R: ngettext(sum(is.na(match(n2, n1))), "class %s is missing slot from class %s (%s), and no coerce method was supplied",     "class %s is missing slots from class %s (%s), and no coerce method was supplied",     domain = "R-methods")
#: R/is.R:0
#, fuzzy
msgid ""
"class %s is missing slot from class %s (%s), and no coerce method was "
"supplied"
msgid_plural ""
"class %s is missing slots from class %s (%s), and no coerce method was "
"supplied"
msgstr[0] "类别%s在类别%s(%s)中缺少槽，出没有强制方法"

#. R/SClasses.R: ngettext(length(dslots), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#. R/SClasses.R: ngettext(length(duplicated(snames)), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "duplicated slot name: %s"
msgid_plural "duplicated slot names: %s"
msgstr[0] "重复槽名: %s"

#. R/methodsTable.R: ngettext(length(methods), "found %d equally good next method", "found %d equally good next methods",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "found %d equally good next method"
msgid_plural "found %d equally good next methods"
msgstr[0] "下一个方法一样有效"

#. R/MethodsList.R: ngettext(sum(is.na(which)), "in the method signature for function %s invalid argument name in the signature: %s",     "in the method signature for function %s invalid argument names in the signature: %s",     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"in the method signature for function %s invalid argument name in the "
"signature: %s"
msgid_plural ""
"in the method signature for function %s invalid argument names in the "
"signature: %s"
msgstr[0] "在函数'%s'里的方法标记中标记的参数名字不对: %s"

#. R/SClasses.R: ngettext(sum(is.na(which)), "invalid name for slot of class %s: %s", "invalid names for slots of class %s: %s",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "invalid name for slot of class %s: %s"
msgid_plural "invalid names for slots of class %s: %s"
msgstr[0] "类别%s的槽的名字不对：%s"

#. R/SClasses.R: ngettext(length(pkgs), "multiple definition of class %s visible (%s); using the definition\n   in package %s for %s",     "multiple definitions of class %s visible (%s); using the definition\n   in package %s for %s",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple definition of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgid_plural ""
"multiple definitions of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgstr[0] "%s有多个定义(%s)；现在用程序包%s中%s的定义"

#. R/RClassUtils.R: ngettext(sum(is.na(match(pnames, slots))), "named elements of prototype do not correspond to slot name: %s",     "named elements of prototype do not correspond to slot names: %s", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "named elements of prototype do not correspond to slot name: %s"
msgid_plural "named elements of prototype do not correspond to slot names: %s"
msgstr[0] "原型的單元同槽的类别对应不上: %s"

#. R/MethodsList.R: ngettext(length(unknown), "no definition for class %s", "no definition for classes %s",     domain = "R-methods")
#: R/MethodsList.R:0
msgid "no definition for class %s"
msgid_plural "no definition for classes %s"
msgstr[0] "类别%s的定义不存在"

#. R/promptClass.R: ngettext(length(whereClass), "no definition of class %s in the specified position, %s, definition on : %s",     "no definition of class %s in the specified position, %s, definitions on : %s",     domain = "R-methods")
#: R/promptClass.R:0
#, fuzzy
msgid ""
"no definition of class %s in the specified position, %s, definition on : %s"
msgid_plural ""
"no definition of class %s in the specified position, %s, definitions on : %s"
msgstr[0] "在指定的%2$s这个位置不存在类别%1$s的定义, 定义在: %3$s"

#. R/RMethodUtils.R: ngettext(sum(is.na(match(signature, args))), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s", domain = "R-methods")
#. R/RMethodUtils.R: ngettext(sum(is.na(match(signature, args))), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "non-argument found in the signature: %s"
msgid_plural "non-arguments found in the signature: %s"
msgstr[0] "标记里出现了非参数：%s"

#. R/is.R: ngettext(length(bad), "slot in class %s must extend corresponding slot in class %s: fails for %s",     "slots in class %s must extend corresponding slots in class %s: fails for %s",     domain = "R-methods")
#: R/is.R:0
#, fuzzy
msgid ""
"slot in class %s must extend corresponding slot in class %s: fails for %s"
msgid_plural ""
"slots in class %s must extend corresponding slots in class %s: fails for %s"
msgstr[0] "类别%s里的槽必需擴充类别%s中相应的槽：%s出了错"

#. R/RMethodUtils.R: ngettext(length(fdef), "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)",     "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"the formal argument of the generic function for %s (%s) differs from that of "
"the non-generic to be used as the default (%s)"
msgid_plural ""
"the formal arguments of the generic function for %s (%s) differ from those "
"of the non-generic to be used as the default (%s)"
msgstr[0] ""
"用于'%s'泛型函数(%s)的正式参数与将作为默認值(%s)来用的非泛型的正式参数不相符"
"合"

#~ msgid ""
#~ "could not find superclass %s to clean up when removing subclass "
#~ "references to class %s"
#~ msgstr "在删除类别%2$s之子类别關聯时没有找到%1$s这样一个超类别"

#~ msgid "no class %s found as expected in removing subclass %s"
#~ msgstr "在删除类别%2$s时没有找到类别%1$s"

#, fuzzy
#~ msgid "Object of class %s"
#~ msgstr "对象为类别"

#, fuzzy
#~ msgid "no generic function found for '%s'"
#~ msgstr "找不到\"%s\"泛型函数"

#~ msgid "duplicated slot names: %s"
#~ msgstr "重复槽名: %s"

#~ msgid ","
#~ msgstr ","

#~ msgid "(using the largest value)"
#~ msgstr "(用最大值)"

#~ msgid "\""
#~ msgstr "\""

#, fuzzy
#~ msgid "field %s is read-only"
#~ msgstr "\" 只读"

#~ msgid "replacement value is not a matrix"
#~ msgstr "替换值不是矩阵"

#, fuzzy
#~ msgid "[in \"%s\"]"
#~ msgstr "场 \""

#, fuzzy
#~ msgid "defined with value class: \"%s\""
#~ msgstr "类别%s的定义不存在"

#, fuzzy
#~ msgid "Methods may be defined for arguments:"
#~ msgstr "无法为基元函数%s定义方法"

#, fuzzy
#~ msgid "An object of class \"%s\":"
#~ msgstr "对象为类别"

#~ msgid "move the file or remove the class/method"
#~ msgstr "移动文件或删除类别/方法"

#, fuzzy
#~ msgid ""
#~ "a list argument for 'fields' must have nonempty names for all the fields"
#~ msgstr "场串列参数必需全部都是非空场名"

#, fuzzy
#~ msgid ""
#~ "argument 'fields' must be a list of the field classes or definitions or "
#~ "the names of the fields; got an object of class %s"
#~ msgstr ""
#~ "参数场必须是场类别串列，或定义串列，或场的名字;现在得到是类别的对象%s"

#~ msgid "multiple equivalent inherited matches:"
#~ msgstr "多个等同继承匹配"

#~ msgid ""
#~ "'traceOn' is deprecated: use the function 'trace' in the 'methods' "
#~ "package instead"
#~ msgstr "'追踪On'不再有用：请用'methods'程輯包里的'追踪'这一函数"

#~ msgid ""
#~ "'traceOff' is deprecated: use the function 'untrace' in the 'methods' "
#~ "package instead"
#~ msgstr "'追踪Off'不再有用：请用'methods'程輯包里的'un追踪'这一函数"

#, fuzzy
#~ msgid ""
#~ "The class of field %s in the object is not compatible with the desired "
#~ "class %s in the target"
#~ msgstr "\"%s\"对象场类别不符合目标中%s类别的需要"

#~ msgid "in .OldClassesPrototypes"
#~ msgstr "在.OldClassesPrototypes里"

#~ msgid "multiple direct matches:"
#~ msgstr "多个直接匹配："

#~ msgid "connection"
#~ msgstr "链结"

#~ msgid "\", but it is not a group generic"
#~ msgstr "\",但不是团体泛型"

#~ msgid "Trying to check signature length of generic \""
#~ msgstr "检查泛型的标记长度"

#~ msgid "\", but it is not a  generic function: i ="
#~ msgstr "\",但不是泛型函数：i ="

#~ msgid ", funs ="
#~ msgstr ", funs ="

#~ msgid "; gnames ="
#~ msgstr "; gnames ="

#~ msgid "Undefined classes ("
#~ msgstr "未定义类别"

#~ msgid "= \"missing\""
#~ msgstr "= \"missing\""

#~ msgid "found"
#~ msgstr "找到了"

#~ msgid "Invalid mlist element for signature \""
#~ msgstr "标记的mlist元素不对"

#~ msgid "\" at level"
#~ msgstr "\"在水平"

#~ msgid "\")"
#~ msgstr "\")"

#~ msgid "Invalid object in methods table (\""
#~ msgstr "列表方法的对象出错"

#~ msgid "\"), expected a method, got an object of class \""
#~ msgstr "\"),提供的应该是函数，得到的却是对象"

#~ msgid "Environment of class \""
#~ msgstr "环境有类别"

#~ msgid "Replacement value must be of class \""
#~ msgstr "替换值的类别必需为"

#~ msgid "No method found for function \"%s\" and signature %s"
#~ msgstr "找不到适用于函数'%s'和标记%s的方法"

#~ msgid "the supplied generic function definition for"
#~ msgstr "所提供的泛型函数定义是为"

#~ msgid ""
#~ "does not seem to call 'standardGeneric'; no methods will be dispatched!"
#~ msgstr "好象没有調用'standardGeneric'；因此无法分配任何方法!"

#~ msgid "no generic function \"'%s\" found"
#~ msgstr "不存在'%s'这一泛型函数"

#~ msgid ""
#~ "Restoring the implicit generic function for %s from package %s\n"
#~ "    into package %s; the generic differs from the default conversion (%s)"
#~ msgstr "把隐含泛型函数%s从程辑包%s恢复到%s；泛型函数与缺省转换(%s)不同"

#~ msgid ""
#~ "Creating a generic for %s in package %s\n"
#~ "    (the supplied definition differs from and overrides the implicit "
#~ "generic\n"
#~ "    in package %s: %s)"
#~ msgstr ""
#~ "在程辑包%2$s中为%1$s建立泛型函数\n"
#~ "    (所提供的函数定义与程辑包%3$s中的隐含泛型函数定义不相同，因此将之覆"
#~ "盖：%4$s)"

#~ msgid ""
#~ "\" is not a known action (warn, stop, once, ignore); no action recorded "
#~ "for function \""
#~ msgstr "\"没有这样的作用(警告，停止，一次，忽视) ；函数没有记录作用"

#~ msgid ""
#~ "Value supplied for field \"%s\" (with class \"%s\") is not a subclass of "
#~ "required class \"%s\""
#~ msgstr "为场\"%s\"提供的数值(类别是\"%s\")不是所要求的\"%s\"类别的子类别"

#~ msgid "Some elements of the list (e.g., %d) are not functions"
#~ msgstr "串列中的某些元素(如%d)不是函数"

#~ msgid ""
#~ "Interface class \"%s\"  was an explicitly specified superclass as well"
#~ msgstr "接口类\"%s\"也已是明确定义的超类"

#~ msgid ""
#~ "The fieldReadOnly argument must be the names of the read-only fields; got "
#~ "an object of class \"%s\""
#~ msgstr "fieldReadOnly参数必须是只读字段的名称；现在却是类别为\"%s\"的对象"

#~ msgid "Some fieldReadOnly names are not fields: %s"
#~ msgstr "某些fieldReadOnly名字不是字段：%s"

#~ msgid "Prototypes supplied for non-fields: %s"
#~ msgstr "原型提供了非领域: %s"

#~ msgid "Trying to set a read-only field ("
#~ msgstr "无法为只读域定值("

#~ msgid ")"
#~ msgstr ")"

#, fuzzy
#~ msgid "\"%s\" is not a known reference class"
#~ msgstr "\"%s\"不是有定义的类别"

#, fuzzy
#~ msgid "Invalid accessor function list: %s"
#~ msgstr "函数参数的索引不对"

#~ msgid "Defining type \"%s\" as a superclass via class \"%s\""
#~ msgstr "将种类\"%s\"通过类别\"%s\"定义为超类"

#, fuzzy
#~ msgid ""
#~ "invalid argument 'f', expected a function or its name, got an object of "
#~ "class %s"
#~ msgstr "参数'f'不对，应该是函数或函数的名字，但得到的却是类别为\"%s\"的对象"

#~ msgid ""
#~ "in the method signature for function \"%s\" no definition for class: %s"
#~ msgid_plural ""
#~ "in the method signature for function \"%s\" no definition for classes: %s"
#~ msgstr[0] "函数'%s'的方法标记中没有类别定义：%s"

#, fuzzy
#~ msgid "Some of the superclasses in the definition of class \""
#~ msgstr "在定义\"%2$s\"里不存在母类别\"%1$s\"的定义"

#~ msgid "signature must be a vector of classes or an environment"
#~ msgstr "标记要么是个含类别的矢量，要么是个环境"

#~ msgid "selectMethod(): .SelectMethodOn - old stuff - please report"
#~ msgstr "selectMethod():.SelectMethodOn - 过时了的东西 - 请报告"

#~ msgid "no unique method corresponding to this signature"
#~ msgstr "这一标记没有与之相对应的唯一方法"

#~ msgid "unable to match signature to methods"
#~ msgstr "无法将标记同方法歸併匹配"

#~ msgid "class \"%s\" cannot be used as the data part of another class"
#~ msgstr "无法把类别\"%s\"当作另外一个类别的数据部分来用"

#~ msgid "internal error: bad code for 'setPrimitiveMethods': %s"
#~ msgstr "内部出错: 'setPrimitiveMethods'的编码不对: %s"

#~ msgid "Ambiguous method selection for \"%s\", target \"%s\""
#~ msgstr "\"%s\"的方法选择不明确，目标\"%s\""

#~ msgid ""
#~ "(the first of the signatures shown will be used)\n"
#~ "%s"
#~ msgstr ""
#~ "(使用显示的第一个标记)\n"
#~ "%s"

#~ msgid ""
#~ "Couldn't find methods table for \"%s\", package \"%s\" may be out of date"
#~ msgstr "\"%s\"找不到方法列表，\"%s\"程序包可能过时了"

#~ msgid "The class to be removed  (\""
#~ msgstr "将被删除的类别(\""

#~ msgid "\") has defined subclasses that should also be removed: ("
#~ msgstr "\")带定义了的子类别，这些子类别也应该被删除：("

#~ msgid ""
#~ "'NextMethod' not defined because the current method is not a "
#~ "'MethodDefinition' object"
#~ msgstr "'NextMethod'没有设定，因为目前的方法不是'MethodDefinition'这种对象"

#~ msgid "expected a list of signature objects, got \"%s\""
#~ msgstr "需要的是标记对象串列，得到的却是\"%s\""

#~ msgid ""
#~ "New generic for \"%s\" does not agree with implicit generic from package "
#~ "\"%s\"; a new generic will be assigned with package \"%s\""
#~ msgstr ""
#~ "\"%s\"的新泛型函数与程序包\"%s\"里所隐含的泛型函数不相符合；一个新的泛型函"
#~ "数将会同程序包\"%s\"一起被分配"

#~ msgid "Function \"%s\" may not be used as a generic (implicitly prohibited)"
#~ msgstr "函数\"%s\"不能当作泛型函数来用"

#~ msgid ""
#~ "Implicit generic exists for \"%s\", but will be overriden by explicit "
#~ "call to setGeneric()"
#~ msgstr "\"%s\"有隐含泛型，但明确调用用setGeneric()会将之置換"

#~ msgid ""
#~ "Unable to find package environment for class \"%s\" to revise subclass "
#~ "information"
#~ msgstr "找不到包含类别\"%s\"的环境，因此无法改变信息子类别"

#~ msgid ""
#~ "No generic function found for \"%s\"; no action taken in "
#~ "removeMethodsObject"
#~ msgstr "找不到为\"%s\"设的泛型函数；因此removeMethodsObject没有效果"

#~ msgid ""
#~ "the environment/package \"%s\" is locked; cannot remove methods data for "
#~ "\"%s\""
#~ msgstr "环境/程輯包'%s'被锁住了； 无法为'%s'删除方法信息"

#~ msgid ""
#~ "the methods object name for \"%s\" must include the name of the package "
#~ "that contains the generic function, but no generic function of this name "
#~ "was found"
#~ msgstr ""
#~ "'%s'的方法对象名字必需有包含了泛型函数的程輯包的名字，但有这个名字的泛型函"
#~ "数却不存在"

#~ msgid ""
#~ "no way to associate a generic function with an object of class \"%s\""
#~ msgstr "无法将泛型函数与类别为\"%s\"的对象联系起来"

#~ msgid "Could not find generic function \"%s\" to initialize cached methods"
#~ msgstr "找不到用于初始贮藏方法的泛型函数\"%s\" "

#~ msgid "no methods found for generic \"%s\""
#~ msgstr "泛型'%s'里不存在任何方法"

#~ msgid "\"%s\" is not one of the basic functions"
#~ msgstr "'%s'不是基本函数"

#~ msgid "cannot reset \"%s\", the definition is not a generic function object"
#~ msgstr "无法重置'%s'的定义，其定义不是泛型函数这样的对象"

#~ msgid "No nongeneric version of function \"%s\" exists to be restored"
#~ msgstr "没有非泛型版本的'%s'这一函数，因此不能恢复原状"

#~ msgid "\"%s\" from \"%s\" is a non-generic function; no methods available"
#~ msgstr "'%2$s'里的'%1$s'是非泛型函数；没有可以用的方法"

#~ msgid ""
#~ "invalid 'fdef' for \"%s\" in 'getAllMethods'; expected either a "
#~ "'genericFunction object' or a primitive function, got an object of class "
#~ "\"%s\""
#~ msgstr ""
#~ "'getAllMethods'里为'%s'用的'fdef'不对；需要的是'genericFunction object'或"
#~ "基元函数，现在得到的却是类别为\"%s\"的对象"

#~ msgid "Methods list for generic \""
#~ msgstr "方法串列于泛型"

#~ msgid "\" not found"
#~ msgstr "\"找不到"

#~ msgid ".UsingMethodsTables: 'onOff' is not TRUE or FALSE"
#~ msgstr ".UsingMethodsTables: 'onOff'的值只能是TRUE或FALSE"

#~ msgid "Package \"%s\" is not loaded"
#~ msgstr "没有载入程辑包\"%s\""

#~ msgid ""
#~ "The special case of printTo=FALSE only works when a single generic "
#~ "function is specified"
#~ msgstr "printTo=FALSE是特别的，只能在设定了元素泛型函数以后才有用"

#~ msgid "Undefined member, \"%s\", of union \"%s\" (not added during attach)"
#~ msgstr "成员没有被定义，集\"%2$s\"的\"%s\"，(配属时没有被加上)"

#~ msgid "no generic function '%s' found"
#~ msgstr "不存在'%s'这一泛型函数"

#~ msgid "'%s' is not a function visible from '%s'"
#~ msgstr "'%s'不是可以从'%s'看得见的函数"

#~ msgid "trying to use new() on a virtual class"
#~ msgstr "不能在虛擬类别上用new()这一函数"
