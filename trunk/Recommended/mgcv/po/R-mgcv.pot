msgid ""
msgstr ""
"Project-Id-Version: mgcv 1.8-4\n"
"POT-Creation-Date: 2015-01-18 21:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"



#: R/efam.r: 0
#. R/efam.r: gettextf("\"%s\" link not available for beta regression; available links are  \"logit\", \"probit\", \"cloglog\" and \"cauchit\"",     linktemp)

msgid "\"%s\" link not available for beta regression; available links are  \"logit\", \"probit\", \"cloglog\" and \"cauchit\""
msgstr ""


#: R/coxph.r: 0
#. R/coxph.r: gettextf("\"%s\" link not available for coxph family; available link is \"identity\"",     linktemp)

msgid "\"%s\" link not available for coxph family; available link is \"identity\""
msgstr ""


#: R/gamlss.r: 0
#. R/gamlss.r: gettextf("\"%s\" link not available for mu parameter of gaulss",     link[[1]])

msgid "\"%s\" link not available for mu parameter of gaulss"
msgstr ""


#: R/efam.r: 0
#: R/gam.fit3.r: 0
#. R/efam.r: gettextf("\"%s\" link not available for negative binomial family; available links are \"identity\", \"log\" and \"sqrt\"",     linktemp)
#. R/gam.fit3.r: gettextf("\"%s\" link not available for negative binomial family; available links are \"identity\", \"log\" and \"sqrt\"",     linktemp)

msgid "\"%s\" link not available for negative binomial family; available links are \"identity\", \"log\" and \"sqrt\""
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("\"%s\" link not available for ordered categorical family; available links are \"identity\"",     linktemp)

msgid "\"%s\" link not available for ordered categorical family; available links are \"identity\""
msgstr ""


#: R/gamlss.r: 0
#. R/gamlss.r: gettextf("\"%s\" link not available for parameter of ziplss %s",     param.names[i], link[[i]])

msgid "\"%s\" link not available for parameter of ziplss %s"
msgstr ""


#: R/gamlss.r: 0
#. R/gamlss.r: gettextf("\"%s\" link not available for precision parameter of gaulss",     link[[2]])

msgid "\"%s\" link not available for precision parameter of gaulss"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("\"%s\" link not available for scaled t distribution; available links are \"identity\", \"log\",  and \"inverse\"",     linktemp)

msgid "\"%s\" link not available for scaled t distribution; available links are \"identity\", \"log\",  and \"inverse\""
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("\"%s\" link not available for zero inflated; available link for `lambda' is only  \"loga\"",     linktemp)

msgid "\"%s\" link not available for zero inflated; available link for `lambda' is only  \"loga\""
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("\"fs\" smooth cannot use a multiply penalized basis (wrong basis in xt)")

msgid "\"fs\" smooth cannot use a multiply penalized basis (wrong basis in xt)"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("\"fs\" terms can not be fixed here")

msgid "\"fs\" terms can not be fixed here"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("%s has insufficient unique values to support %d knots: reduce k",     object$term, nk)

msgid "%s has insufficient unique values to support %d knots: reduce k"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("%s not in original fit", paste(levn[!levn %in% levm],     collapse = ", "), domain = "R-mgcv")

msgid "%s not in original fit"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("%s score = %s", sQuote(x$method), x$gcv.ubre, domain = "R-mgcv")

msgid "%s score = %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("'%s' and '%s' arguments should have the same length",     "lambda", "h")

msgid "'%s' and '%s' arguments should have the same length"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("'%s' and '%s' components should have the same length",     "M$S", "M$off")

msgid "'%s' and '%s' components should have the same length"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("'%s' argument has no '%s' attribute", "x", "row")
#. R/smooth.r: gettextf("'%s' argument has no '%s' attribute", "x", "col")

msgid "'%s' argument has no '%s' attribute"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("'%s' argument is faulty", "xt")
#. R/smooth.r: gettextf("'%s' argument is faulty", "xt")

msgid "'%s' argument is faulty"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gamm.r: 0
#: R/gamm.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#: R/plots.r: 0
#: R/plots.r: 0
#. R/gam.fit3.r: gettextf("'%s' argument is not an object of class %s", "fam",     dQuote("family"))
#. R/gam.fit3.r: gettextf("'%s' argument is not an object of class %s", "fam",     dQuote("family"))
#. R/gam.fit3.r: gettextf("'%s' argument is not an object of class %s", "fam",     dQuote("family"))
#. R/gamm.r: gettextf("'%s' argument is not an object of class %s", "b", dQuote("lme"))
#. R/gamm.r: gettextf("'%s' argument is not an object of class %s", "b", dQuote("lme"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "b", dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "b", dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "x", dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "x", dQuote("gam"))
#. R/mgcv.r: gettextf("'%s' argument is not an object of class %s", "x", dQuote("gam"))
#. R/plots.r: gettextf("'%s' argument is not an object of class %s", "fam",     dQuote("family"))
#. R/plots.r: gettextf("'%s' argument is not an object of class %s", "fam",     dQuote("family"))

msgid "'%s' argument is not an object of class %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("'%s' argument is of the wrong length", "min.sp")

msgid "'%s' argument is of the wrong length"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("'%s' argument is of the wrong length and ignored",     "bs")
#. R/smooth.r: gettextf("'%s' argument is of the wrong length and ignored",     "m")
#. R/smooth.r: gettextf("'%s' argument is of the wrong length and ignored",     "bs")
#. R/smooth.r: gettextf("'%s' argument is of the wrong length and ignored",     "m")

msgid "'%s' argument is of the wrong length and ignored"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#. R/gam.fit3.r: gettextf("'%s' argument should be 1 or 2", "deriv")
#. R/gam.fit4.r: gettextf("'%s' argument should be 1 or 2", "deriv")

msgid "'%s' argument should be 1 or 2"
msgstr ""


#: R/gamlss.r: 0
#. R/gamlss.r: gettextf("'%s' function requires 2 links specified as character strings",     "gaulss()")
#. R/gamlss.r: gettextf("'%s' function requires 2 links specified as character strings",     "ziplss()")

msgid "'%s' function requires 2 links specified as character strings"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("'%s', '%s' and '%s' components should have the same length",     "M$sp", "M$S", "M$off")

msgid "'%s', '%s' and '%s' components should have the same length"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("'AR.start' argument must be logical")

msgid "'AR.start' argument must be logical"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'H' argument has wrong dimension")
#. R/gam.fit3.r: stop("'H' argument has wrong dimension")

msgid "'H' argument has wrong dimension"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("'L' argument has inconsistent dimensions")
#. R/gam.fit3.r: stop("'L' argument has inconsistent dimensions")
#. R/gam.fit3.r: stop("'L' argument has inconsistent dimensions")
#. R/mgcv.r: stop("'L' argument has inconsistent dimensions")

msgid "'L' argument has inconsistent dimensions"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("'L' argument must be a matrix")
#. R/gam.fit3.r: stop("'L' argument must be a matrix")
#. R/gam.fit3.r: stop("'L' argument must be a matrix")
#. R/mgcv.r: stop("'L' argument must be a matrix")

msgid "'L' argument must be a matrix"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("'L' argument must have at least as many rows as columns")
#. R/gam.fit3.r: stop("'L' argument must have at least as many rows as columns")
#. R/gam.fit3.r: stop("'L' argument must have at least as many rows as columns")
#. R/mgcv.r: stop("'L' argument must have at least as many rows as columns")

msgid "'L' argument must have at least as many rows as columns"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'L' has wrong dimension in 'paraPen'")

msgid "'L' has wrong dimension in 'paraPen'"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'X' lost dimensions in magic!!")

msgid "'X' lost dimensions in magic!!"
msgstr ""


#: R/misc.r: 0
#. R/misc.r: stop("'a' argument has wrong number of rows")
#. R/misc.r: stop("'a' argument has wrong number of rows")
#. R/misc.r: stop("'a' argument has wrong number of rows")
#. R/misc.r: stop("'a' argument has wrong number of rows")

msgid "'a' argument has wrong number of rows"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'absorb.cons' argument must be TRUE for multi-formula models")

msgid "'absorb.cons' argument must be TRUE for multi-formula models"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'by' variable must be same dimension as smooth arguments")
#. R/smooth.r: stop("'by' variable must be same dimension as smooth arguments")

msgid "'by' variable must be same dimension as smooth arguments"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'by=.' is not allowed")

msgid "'by=.' is not allowed"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'d' can not be negative in call passed to 'null.space.dimension()'")

msgid "'d' can not be negative in call passed to 'null.space.dimension()'"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("'family' argument seems not to be a valid family object")
#. R/bam.r: stop("'family' argument seems not to be a valid family object")

msgid "'family' argument seems not to be a valid family object"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("'gamm()' can only handle random effects defined as named lists")

msgid "'gamm()' can only handle random effects defined as named lists"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'id' linked smooths must have same number of arguments")

msgid "'id' linked smooths must have same number of arguments"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'m' argument  can't be in 're' argument")

msgid "'m' argument  can't be in 're' argument"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'mu' argument must be non negative")

msgid "'mu' argument must be non negative"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("'negbin()' with unknown theta and outer iteration is deprecated - use 'nb()'.")

msgid "'negbin()' with unknown theta and outer iteration is deprecated - use 'nb()'."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'nthreads' argument must be a positive integer")

msgid "'nthreads' argument must be a positive integer"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("'object' argument is not an object of class \"glm\" or \"gam\"")

msgid "'object' argument is not an object of class \"glm\" or \"gam\""
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'p' argument must be in (1,2)")

msgid "'p' argument must be in (1,2)"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'p' argument must be in [1,2]")

msgid "'p' argument must be in [1,2]"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("'p.type != 0' is deprecated, and liable to be removed in future")

msgid "'p.type != 0' is deprecated, and liable to be removed in future"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'paraPen' argument is not supported for multi-formula models")

msgid "'paraPen' argument is not supported for multi-formula models"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'rank' has wrong length in 'paraPen'")

msgid "'rank' has wrong length in 'paraPen'"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'s(.)' function is not yet supported")
#. R/smooth.r: stop("'s(.)' function is not yet supported")

msgid "'s(.)' function is not yet supported"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'sp' dimension wrong in 'paraPen'")

msgid "'sp' dimension wrong in 'paraPen'"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'sp' is too short")

msgid "'sp' is too short"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("'test' argument ignored")

msgid "'test' argument ignored"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'theta' must be specified")

msgid "'theta' must be specified"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'w' argument has different length from 'y' argument!")

msgid "'w' argument has different length from 'y' argument!"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("'x' and 'y' components of 'bnd' argument are not of same length")

msgid "'x' and 'y' components of 'bnd' argument are not of same length"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'x' argument is null")

msgid "'x' argument is null"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("'x' out of range")

msgid "'x' out of range"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'y' argument must be an integer multiple of phi for Tweedie(p=1)")

msgid "'y' argument must be an integer multiple of phi for Tweedie(p=1)"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("'y' argument must be strictly positive for a Gamma density")

msgid "'y' argument must be strictly positive for a Gamma density"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("'y' must be univariate unless binomial")

msgid "'y' must be univariate unless binomial"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("(score %s & scale %s).", b$gcv.ubre, b$sig2, domain = "R-mgcv")

msgid "(score %s & scale %s)."
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettext("**using positive weights", domain = "R-mgcv")

msgid "**using positive weights"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("0s in V(mu)")
#. R/gam.fit3.r: stop("0s in V(mu)")
#. R/mgcv.r: stop("0s in V(mu)")

msgid "0s in V(mu)"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("1<a<b<2 (strict) required")

msgid "1<a<b<2 (strict) required"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("A term has fewer unique covariate combinations than specified maximum degrees of freedom")

msgid "A term has fewer unique covariate combinations than specified maximum degrees of freedom"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("AR1 parameter rho unused with generalized model")

msgid "AR1 parameter rho unused with generalized model"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("AR1 parameter rho unused with sparse fitting")

msgid "AR1 parameter rho unused with sparse fitting"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Additive model + factor", domain = "R-mgcv")

msgid "Additive model + factor"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/bam.r: warning("Algorithm did not converge")
#. R/bam.r: warning("Algorithm did not converge")
#. R/gam.fit3.r: warning("Algorithm did not converge")
#. R/mgcv.r: warning("Algorithm did not converge")

msgid "Algorithm did not converge"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: warning("Algorithm stopped at boundary value")
#. R/mgcv.r: warning("Algorithm stopped at boundary value")

msgid "Algorithm stopped at boundary value"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("All smooth components:", domain = "R-mgcv")

msgid "All smooth components:"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettextf("An object of length %d does not match the required parameter size",     aux)
#. R/gamm.r: gettextf("An object of length %d does not match the required parameter size",     length(val))

msgid "An object of length %d does not match the required parameter size"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("Approximate significance of smooth terms:", domain = "R-mgcv")
#. R/mgcv.r: gettext("Approximate significance of smooth terms:", domain = "R-mgcv")

msgid "Approximate significance of smooth terms:"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("At least three knots required in call passed to 'mono.con()'")

msgid "At least three knots required in call passed to 'mono.con()'"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Basis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k.",     domain = "R-mgcv")

msgid "Basis dimension (k) checking results. Low p-value (k-index<1) may\nindicate that k is too low, especially if edf is close to k."
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Basis only handles 1D smooths")
#. R/smooth.r: stop("Basis only handles 1D smooths")
#. R/smooth.r: stop("Basis only handles 1D smooths")
#. R/smooth.r: stop("Basis only handles 1D smooths")

msgid "Basis only handles 1D smooths"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("Beta regression(%s)", round(theta, 3), domain = "R-mgcv")

msgid "Beta regression(%s)"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Bivariate smoothing example", domain = "R-mgcv")

msgid "Bivariate smoothing example"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Can not convert this smooth class to a random effect")

msgid "Can not convert this smooth class to a random effect"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Can not have more eigenvalues than nrow(A)")

msgid "Can not have more eigenvalues than nrow(A)"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Can only deal with a sphere")

msgid "Can only deal with a sphere"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Can't find by variable")
#. R/smooth.r: stop("Can't find by variable")
#. R/smooth.r: stop("Can't find by variable")

msgid "Can't find by variable"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("Can't find valid starting values: please specify some")
#. R/mgcv.r: stop("Can't find valid starting values: please specify some")

msgid "Can't find valid starting values: please specify some"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Cannot extract the dimensions")

msgid "Cannot extract the dimensions"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Cannot extract the inverse from an uninitialized object")

msgid "Cannot extract the inverse from an uninitialized object"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Cannot extract the matrix from an uninitialized object")

msgid "Cannot extract the matrix from an uninitialized object"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Cannot extract the matrix from an uninitialized pdMat object")
#. R/gamm.r: stop("Cannot extract the matrix from an uninitialized pdMat object")

msgid "Cannot extract the matrix from an uninitialized pdMat object"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: paste("Cannot extract the matrix with uninitialized dimensions")
#. R/gamm.r: stop("Cannot extract the matrix with uninitialized dimensions")

msgid "Cannot extract the matrix with uninitialized dimensions"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Continuous 'by' variable example", domain = "R-mgcv")

msgid "Continuous 'by' variable example"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta2: rdiff = %s cor = %s", paste(range(dd$Deta2 -     Deta2.fd), collapse = " "), cor(dd$Deta2, Deta2.fd), domain = "R-mgcv")

msgid "Deta2: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta2th2[%d]: rdiff = %s cor = %s", i, paste(range(dd$Deta2th2 -     Deta2th2.fd), collapse = " "), cor(dd$Deta2th2, Deta2th2.fd),     domain = "R-mgcv")

msgid "Deta2th2[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta2th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Deta2th -     Deta2th.fd), collapse = " "), cor(dd$Deta2th, Deta2th.fd),     domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Deta2th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Deta2th -     Deta2th.fd), collapse = " "), cor(dd$Deta2th, Deta2th.fd),     domain = "R-mgcv")

msgid "Deta2th[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta3: rdiff = %s cor = %s", paste(range(dd$Deta3 -     Deta3.fd), collapse = " "), cor(dd$Deta3, Deta3.fd), domain = "R-mgcv")

msgid "Deta3: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta3th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Deta3th -     Deta3th.fd), collapse = " "), cor(dd$Deta3th, Deta3th.fd),     domain = "R-mgcv")

msgid "Deta3th[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta4: rdiff = %s cor = %s", paste(range(dd$Deta4 -     Deta4.fd), collapse = " "), cor(dd$Deta4, Deta4.fd), domain = "R-mgcv")

msgid "Deta4: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Deta: rdiff = %s cor = %s", paste(range(dd$Deta - Deta.fd),     collapse = " "), cor(dd$Deta, Deta.fd), domain = "R-mgcv")

msgid "Deta: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Detath[%d]: rdiff = %s cor = %s", i, paste(range(um -     Detath.fd), collapse = " "), cor(um, Detath.fd), domain = "R-mgcv")

msgid "Detath[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/bam.r: gettextf("Deviance = %s Iterations - %d", dev, iter, domain = "R-mgcv")
#. R/bam.r: gettextf("Deviance = %s Iterations - %d", dev, iter, domain = "R-mgcv")
#. R/gam.fit3.r: gettextf("Deviance = %s Iterations - %d", dev, iter, domain = "R-mgcv")
#. R/mgcv.r: gettextf("Deviance = %s Iterations - %d", dev, iter, domain = "R-mgcv")

msgid "Deviance = %s Iterations - %d"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("Deviance explained = %s %%", formatC(x$dev.expl * 100,     digits = 3, width = 4), domain = "R-mgcv")

msgid "Deviance explained = %s %%"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("Deviance...", domain = "R-mgcv")

msgid "Deviance..."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("Discrete Theta search not available with performance iteration")

msgid "Discrete Theta search not available with performance iteration"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu2: rdiff = %s cor = %s", paste(range(dd$Dmu2 - Dmu2.fd),     collapse = " "), cor(dd$Dmu2, Dmu2.fd), domain = "R-mgcv")

msgid "Dmu2: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu2th2[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dmu2th2 -     Dmu2th2.fd), collapse = " "), cor(dd$Dmu2th2, Dmu2th2.fd),     domain = "R-mgcv")

msgid "Dmu2th2[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu2th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dmu2th -     Dmu2th.fd), collapse = " "), cor(dd$Dmu2th, Dmu2th.fd), domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Dmu2th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dmu2th -     Dmu2th.fd), collapse = " "), cor(dd$Dmu2th, Dmu2th.fd), domain = "R-mgcv")

msgid "Dmu2th[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu3: rdiff = %s cor = %s", paste(range(dd$Dmu3 - Dmu3.fd),     collapse = " "), cor(dd$Dmu3, Dmu3.fd), domain = "R-mgcv")

msgid "Dmu3: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu3th[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dmu3th -     Dmu3th.fd), collapse = " "), cor(dd$Dmu3th, Dmu3th.fd), domain = "R-mgcv")

msgid "Dmu3th[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu4: rdiff = %s cor = %s", paste(range(dd$Dmu4 - Dmu4.fd),     collapse = " "), cor(dd$Dmu4, Dmu4.fd), domain = "R-mgcv")

msgid "Dmu4: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmu: rdiff = %s cor = %s", paste(range(dd$Dmu - Dmu.fd),     collapse = " "), cor(dd$Dmu, Dmu.fd), domain = "R-mgcv")

msgid "Dmu: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dmuth[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dmuth -     Dmuth.fd), collapse = " "), cor(dd$Dmuth, Dmuth.fd), domain = "R-mgcv")

msgid "Dmuth[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("Don't know what to do with parametric terms that are not simple numeric or factor variables")

msgid "Don't know what to do with parametric terms that are not simple numeric or factor variables"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dth2[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dth2 -     Dth2.fd), collapse = " "), cor(dd$Dth2, Dth2.fd), domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Dth2[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dth2 -     Dth2.fd), collapse = " "), cor(dd$Dth2, Dth2.fd), domain = "R-mgcv")

msgid "Dth2[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("Dth[%d]: rdiff = %s cor = %s", i, paste(range(um -     Dth.fd), collapse = " "), cor(um, Dth.fd), domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Dth[%d]: rdiff = %s cor = %s", i, paste(range(dd$Dth -     Dth.fd), collapse = " "), cor(dd$Dth, Dth.fd), domain = "R-mgcv")

msgid "Dth[%d]: rdiff = %s cor = %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("Estimated degrees of freedom:", domain = "R-mgcv")

msgid "Estimated degrees of freedom:"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("F is missing from cr smooth - refit model with current mgcv")

msgid "F is missing from cr smooth - refit model with current mgcv"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Factor 'by' variable example", domain = "R-mgcv")

msgid "Factor 'by' variable example"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("First argument is no sort of formula!")

msgid "First argument is no sort of formula!"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: gettext("Fit complete. Finishing gam object.", domain = "R-mgcv")

msgid "Fit complete. Finishing gam object."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Fitted Values", domain = "R-mgcv")

msgid "Fitted Values"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("Formula:", domain = "R-mgcv")
#. R/mgcv.r: gettext("Formula:", domain = "R-mgcv")

msgid "Formula:"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Gaussian quantiles", domain = "R-mgcv")

msgid "Gaussian quantiles"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("Gradient range [%s, %s]", min(boi$grad), max(boi$grad),     domain = "R-mgcv")

msgid "Gradient range [%s, %s]"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Gu & Wahba 4 term additive model", domain = "R-mgcv")

msgid "Gu & Wahba 4 term additive model"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Gu & Wahba 4 term additive model + correlated predictors",     domain = "R-mgcv")

msgid "Gu & Wahba 4 term additive model + correlated predictors"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: gettext("Gu & Wahba 4 term additive model + random effect", domain = "R-mgcv")

msgid "Gu & Wahba 4 term additive model + random effect"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Hessian positive definite, eigenvalue range [%s, %s].",     domain = "R-mgcv")

msgid "Hessian positive definite, eigenvalue range [%s, %s]."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Histogram of residuals", domain = "R-mgcv")

msgid "Histogram of residuals"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("IRLS regularizing parameter must be a non-negative number")

msgid "IRLS regularizing parameter must be a non-negative number"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("Invalid fitted means in empty model")

msgid "Invalid fitted means in empty model"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("Invalid linear predictor values in empty model")

msgid "Invalid linear predictor values in empty model"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Later terms sharing an 'id' can not have more smoothing parameters than the first such term")

msgid "Later terms sharing an 'id' can not have more smoothing parameters than the first such term"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("Length of start should equal %d and correspond to initial coefs",     nvars)

msgid "Length of start should equal %d and correspond to initial coefs"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#. R/gam.fit3.r: gettextf("Length of start should equal %d and correspond to initial coefs for %s",     nvars, deparse(xnames))
#. R/gam.fit4.r: gettextf("Length of start should equal %d and correspond to initial coefs for %s",     nvars, deparse(xnames))

msgid "Length of start should equal %d and correspond to initial coefs for %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("M$S[%d] is too large given M$off[%d]", i, i)

msgid "M$S[%d] is too large given M$off[%d]"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("MRF basis dimension set too high")

msgid "MRF basis dimension set too high"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("Maximum number of PQL iterations: ", domain = "R-mgcv")

msgid "Maximum number of PQL iterations:"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("Method: %s  Optimizer: %s", paste(b$method, collapse = ""),     paste(b$optimizer, collapse = ""), domain = "R-mgcv")

msgid "Method: %s  Optimizer: %s"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("Model can not be updated")

msgid "Model can not be updated"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("Model does not seem to have enough terms to do anything useful")

msgid "Model does not seem to have enough terms to do anything useful"
msgstr ""


#: R/bam.r: 0
#: R/mgcv.r: 0
#. R/bam.r: stop("Model has more coefficients than data")
#. R/mgcv.r: stop("Model has more coefficients than data")

msgid "Model has more coefficients than data"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Model matrix not full column rank")

msgid "Model matrix not full column rank"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("Model rank = %s/%s", b$rank, length(b$coefficients),     domain = "R-mgcv")

msgid "Model rank = %s/%s"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Model required no smoothing parameter selection", domain = "R-mgcv")

msgid "Model required no smoothing parameter selection"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Model seems to contain no terms")

msgid "Model seems to contain no terms"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("Multiple of an Identity", domain = "R-mgcv")

msgid "Multiple of an Identity"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Must give names when initializing pdIdnot from parameter without a formula")

msgid "Must give names when initializing pdIdnot from parameter without a formula"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("Must supply theta or R to ocat")

msgid "Must supply theta or R to ocat"
msgstr ""


#: R/coxph.r: 0
#. R/coxph.r: stop("NA times supplied for cox.ph prediction")

msgid "NA times supplied for cox.ph prediction"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("NA values in 'min.sp' argument")

msgid "NA values in 'min.sp' argument"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("NA values in V(mu)")
#. R/gam.fit3.r: stop("NA values in V(mu)")
#. R/mgcv.r: stop("NA values in V(mu)")

msgid "NA values in V(mu)"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("NA values in d(mu)/d(eta)")
#. R/gam.fit3.r: stop("NA values in d(mu)/d(eta)")
#. R/mgcv.r: stop("NA values in d(mu)/d(eta)")

msgid "NA values in d(mu)/d(eta)"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: warning("NA values in factor of class \"pdTens\"")

msgid "NA values in factor of class \"pdTens\""
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: warning("NA values in matrix of class \"pdTens\"")

msgid "NA values in matrix of class \"pdTens\""
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("NA values in supplied smoothing parameter vector - ignoring")

msgid "NA values in supplied smoothing parameter vector - ignoring"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("NA values not allowed for the scaled t family")

msgid "NA values not allowed for the scaled t family"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("Negative Binomial(%s)", paste(round(object$family$getTheta(TRUE),     3), sep = ", ", collapse = ""), domain = "R-mgcv")

msgid "Negative Binomial(%s)"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Nested smooths must be fully random")

msgid "Nested smooths must be fully random"
msgstr ""


#: R/gamm.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#. R/gamm.r: gettextf("No data supplied to '%s' function", "gamm.setup()")
#. R/mgcv.r: gettextf("No data supplied to '%s' function", "gam.setup()")
#. R/mgcv.r: gettextf("No data supplied to '%s' function", "gam.setup()")

msgid "No data supplied to '%s' function"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: gettextf("No observations informative at iteration %d", iter)
#. R/mgcv.r: gettextf("No observations informative at iteration %d", iter)

msgid "No observations informative at iteration %d"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("No suitable s (i.e. m[2]) try increasing m[1]")

msgid "No suitable s (i.e. m[2]) try increasing m[1]"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("No terms to plot - nothing for plot.gam() to do.")

msgid "No terms to plot - nothing for plot.gam() to do."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("No variance estimates available")

msgid "No variance estimates available"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#. R/bam.r: gettextf("Non-finite coefficients at iteration %d", iter)
#. R/bam.r: gettextf("Non-finite coefficients at iteration %d", iter)
#. R/gam.fit3.r: gettextf("Non-finite coefficients at iteration %d", iter)
#. R/gam.fit4.r: gettextf("Non-finite coefficients at iteration %d", iter)
#. R/mgcv.r: gettextf("Non-finite coefficients at iteration %d", iter)

msgid "Non-finite coefficients at iteration %d"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("Non-finite derivatives. Try decreasing fit tolerance! See 'epsilon' in 'gam.contol'")
#. R/gam.fit3.r: stop("Non-finite derivatives. Try decreasing fit tolerance! See 'epsilon' in 'gam.contol'")
#. R/gam.fit3.r: stop("Non-finite derivatives. Try decreasing fit tolerance! See 'epsilon' in 'gam.contol'")

msgid "Non-finite derivatives. Try decreasing fit tolerance! See 'epsilon' in 'gam.contol'"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("Non-finite deviance")
#. R/bam.r: stop("Non-finite deviance")

msgid "Non-finite deviance"
msgstr ""


#: R/bam.r: 0
#: R/gamm.r: 0
#: R/jagam.r: 0
#: R/mgcv.r: 0
#. R/bam.r: stop("Not enough (non-NA) data to do anything meaningful")
#. R/gamm.r: stop("Not enough (non-NA) data to do anything meaningful")
#. R/jagam.r: stop("Not enough (non-NA) data to do anything meaningful")
#. R/mgcv.r: stop("Not enough (non-NA) data to do anything meaningful")

msgid "Not enough (non-NA) data to do anything meaningful"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("Not enough informative observations")

msgid "Not enough informative observations"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Number of prediction and fit constraints must match")

msgid "Number of prediction and fit constraints must match"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("Only 1<p<=2 supported")

msgid "Only 1<p<=2 supported"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("Ordered Categorical(%s)", paste(round(object$family$getTheta(TRUE),     2), collapse = ","), domain = "R-mgcv")

msgid "Ordered Categorical(%s)"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("Parametric Terms:", domain = "R-mgcv")

msgid "Parametric Terms:"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("Parametric coefficients:", domain = "R-mgcv")

msgid "Parametric coefficients:"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("Partial residuals do not have a natural x-axis location for linear functional terms")

msgid "Partial residuals do not have a natural x-axis location for linear functional terms"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("Pearson Statistic...", domain = "R-mgcv")

msgid "Pearson Statistic..."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("Pearson residuals are not available for this family - returning deviance residuals")

msgid "Pearson residuals are not available for this family - returning deviance residuals"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: warning("Pearson scale estimate maybe unstable. See '?gam.scale'.")

msgid "Pearson scale estimate maybe unstable. See '?gam.scale'."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Penalized model matrix must have no more columns than rows")

msgid "Penalized model matrix must have no more columns than rows"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettextf("Proportion time in C: %s ls: %s gdi: %s", (tc + tg)/at,     tc/at, tg/at, domain = "R-mgcv")

msgid "Proportion time in C: %s ls: %s gdi: %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("R-sq.(adj) = %s", formatC(x$r.sq, digits = 3, width = 5),     domain = "R-mgcv")

msgid "R-sq.(adj) = %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("Rank: %s/%s", x$rank, length(x$coefficients), domain = "R-mgcv")
#. R/mgcv.r: gettextf("Rank: %s/%s", x$rank, x$np, domain = "R-mgcv")
#. R/mgcv.r: gettextf("Rank: %s/%s", rank, ncol(H), domain = "R-mgcv")

msgid "Rank: %s/%s"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Repeated variables as arguments of a smooth are not permitted")
#. R/smooth.r: stop("Repeated variables as arguments of a smooth are not permitted")
#. R/smooth.r: stop("Repeated variables as arguments of a smooth are not permitted")

msgid "Repeated variables as arguments of a smooth are not permitted"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("Reset optimizer to outer/newton")

msgid "Reset optimizer to outer/newton"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Resids vs. linear pred.", domain = "R-mgcv")

msgid "Resids vs. linear pred."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Residuals", domain = "R-mgcv")
#. R/plots.r: gettext("Residuals", domain = "R-mgcv")

msgid "Residuals"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Response", domain = "R-mgcv")

msgid "Response"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("Response vs. Fitted Values", domain = "R-mgcv")

msgid "Response vs. Fitted Values"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("S[[%d]] matrix is not +ve definite", i)

msgid "S[[%d]] matrix is not +ve definite"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("  Scale est. = %s  n = %s", formatC(x$scale, digits = 5,     width = 8, flag = "-"), x$n, domain = "R-mgcv")

msgid "Scale est. = %s  n = %s"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("Scaled t(%s)", paste(round(object$family$getTheta(TRUE),     3), collapse = ","), domain = "R-mgcv")

msgid "Scaled t(%s)"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: gettext("Setup complete. Calling fit", domain = "R-mgcv")

msgid "Setup complete. Calling fit"
msgstr ""


#: R/mgcv.r: 0
#: R/plots.r: 0
#. R/mgcv.r: warning("Smoothness uncertainty corrected covariance not available")
#. R/plots.r: warning("Smoothness uncertainty corrected covariance not available")

msgid "Smoothness uncertainty corrected covariance not available"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Something wrong - matrix probably not +ve semi definite")

msgid "Something wrong - matrix probably not +ve semi definite"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Something wrong with auto- penalty construction")

msgid "Something wrong with auto- penalty construction"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("Something wrong with zlim")
#. R/plots.r: stop("Something wrong with zlim")

msgid "Something wrong with zlim"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("Sorry, tensor products of smooths with multiple penalties are not supported")
#. R/smooth.r: stop("Sorry, tensor products of smooths with multiple penalties are not supported")

msgid "Sorry, tensor products of smooths with multiple penalties are not supported"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("Standard deviations and %s confidence intervals:",     conf.lev, domain = "R-mgcv")

msgid "Standard deviations and %s confidence intervals:"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")
#. R/gam.fit3.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")
#. R/mgcv.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")
#. R/mgcv.r: gettextf("Step halved: new deviance = %g", dev, domain = "R-mgcv")

msgid "Step halved: new deviance = %g"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#. R/gam.fit3.r: gettextf("Step halved: new penalized deviance = %g", pdev, "\n")
#. R/gam.fit4.r: gettextf("Step halved: new penalized deviance = %g", pdev, domain = "R-mgcv")

msgid "Step halved: new penalized deviance = %g"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: warning("Step size truncated due to divergence", call. = FALSE)
#. R/gam.fit4.r: warning("Step size truncated due to divergence", call. = FALSE)
#. R/mgcv.r: warning("Step size truncated due to divergence", call. = FALSE)

msgid "Step size truncated due to divergence"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: warning("Step size truncated: out of bounds", call. = FALSE)
#. R/gam.fit4.r: warning("Step size truncated: out of bounds", call. = FALSE)
#. R/mgcv.r: warning("Step size truncated: out of bounds", call. = FALSE)

msgid "Step size truncated: out of bounds"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("Supplied matrix not symmetric")

msgid "Supplied matrix not symmetric"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("Supplied smoothing parameter vector is too short - ignored")

msgid "Supplied smoothing parameter vector is too short - ignored"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("TEST FAILED: edf.diff = %s", edf.diff, domain = "R-mgcv")

msgid "TEST FAILED: edf.diff = %s"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettextf("TEST FAILED: fit.cor = %s", fit.cor, domain = "R-mgcv")

msgid "TEST FAILED: fit.cor = %s"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("TEST PASSED", domain = "R-mgcv")

msgid "TEST PASSED"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("Tensor product penalty rank appears to be too low: please email Simon.Wood@R-project.org with details.")

msgid "Tensor product penalty rank appears to be too low: please email Simon.Wood@R-project.org with details."
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("Tensor product smooth term", domain = "R-mgcv")

msgid "Tensor product smooth term"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("The Hessian was not positive definite.", domain = "R-mgcv")

msgid "The Hessian was not positive definite."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("The Hessian was positive definite.", domain = "R-mgcv")

msgid "The Hessian was positive definite."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("The RMS %s score gradient at convergence was %s.",     b$method, b$mgcv.conv$rms.grad, domain = "R-mgcv")

msgid "The RMS %s score gradient at convergence was %s."
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("The estimated model rank was %s (maximum possible: %s)",     b$mgcv.conv$rank, b$mgcv.conv$full.rank, domain = "R-mgcv")

msgid "The estimated model rank was %s (maximum possible: %s)"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettext("The following arguments to anova.glm(..) are invalid and dropped: ",     domain = "R-mgcv")

msgid "The following arguments to anova.glm(..) are invalid and dropped:"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("The objective...", domain = "R-mgcv")

msgid "The objective..."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("This is mgcv %s. For overview type 'help(\"mgcv-package\")'",     paste(version, collapse = ""), domain = "R-mgcv")

msgid "This is mgcv %s. For overview type 'help(\"mgcv-package\")'"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf("Total model degrees of freedom %s", sum(x$edf), domain = "R-mgcv")

msgid "Total model degrees of freedom %s"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("Tweedie p must be in interval (a,b)")

msgid "Tweedie p must be in interval (a,b)"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: gettextf("Tweedie(p=%s)", round(object$family$getTheta(TRUE),     3), domain = "R-mgcv")

msgid "Tweedie(p=%s)"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("Unknown type, reset to terms")

msgid "Unknown type, reset to terms"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("View variables must contain more than one value. view = c(%s,%s).",     view[1], view[2])

msgid "View variables must contain more than one value. view = c(%s,%s)."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("You've got no model....")

msgid "You've got no model...."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("a parametric penalty has wrong dimension")

msgid "a parametric penalty has wrong dimension"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("all elements of random list must be named")

msgid "all elements of random list must be named"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("all.terms argument not supported")

msgid "all.terms argument not supported"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("argument 'k' must be positive")

msgid "argument 'k' must be positive"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("argument 'k' of 's()' function should be integer and has been rounded")

msgid "argument 'k' of 's()' function should be integer and has been rounded"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("arguments of smooth not same dimension")
#. R/smooth.r: stop("arguments of smooth not same dimension")
#. R/smooth.r: stop("arguments of smooth not same dimension")
#. R/smooth.r: stop("arguments of smooth not same dimension")
#. R/smooth.r: stop("arguments of smooth not same dimension")

msgid "arguments of smooth not same dimension"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("attempt to select non existent basis function")

msgid "attempt to select non existent basis function"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("attempt to use unsuitable marginal smooth class")
#. R/smooth.r: stop("attempt to use unsuitable marginal smooth class")

msgid "attempt to use unsuitable marginal smooth class"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("basis dimension is larger than number of unique covariates")

msgid "basis dimension is larger than number of unique covariates"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("basis dimension reset to minimum possible")

msgid "basis dimension reset to minimum possible"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("basis dimension too small for b-spline order")
#. R/smooth.r: stop("basis dimension too small for b-spline order")

msgid "basis dimension too small for b-spline order"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("basis dimension, k, increased to minimum possible\n")
#. R/smooth.r: warning("basis dimension, k, increased to minimum possible\n")
#. R/smooth.r: warning("basis dimension, k, increased to minimum possible\n")

msgid "basis dimension, k, increased to minimum possible"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("bnd must be a list")

msgid "bnd must be a list"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("bnd must be a list of boundary loops")
#. R/soap.r: stop("bnd must be a list of boundary loops")
#. R/soap.r: stop("bnd must be a list of boundary loops")

msgid "bnd must be a list of boundary loops"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: warning("burnin too large, reset")

msgid "burnin too large, reset"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("by.resids argument not supported")

msgid "by.resids argument not supported"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("calling gdi...", domain = "R-mgcv")

msgid "calling gdi..."
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("can't soap smooth without a boundary")
#. R/soap.r: stop("can't soap smooth without a boundary")
#. R/soap.r: stop("can't soap smooth without a boundary")

msgid "can't soap smooth without a boundary"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("cannot find valid starting values: please specify some")
#. R/bam.r: stop("cannot find valid starting values: please specify some")

msgid "cannot find valid starting values: please specify some"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: gettextf("chunk.size < number of coefficients. Reset to %d",     chunk.size)

msgid "chunk.size < number of coefficients. Reset to %d"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("coefficient simulation data is missing")

msgid "coefficient simulation data is missing"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("coefficient vector wrong length")

msgid "coefficient vector wrong length"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("color scheme not recognised")

msgid "color scheme not recognised"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("components of knots relating to a single smooth must be of same length")
#. R/smooth.r: stop("components of knots relating to a single smooth must be of same length")
#. R/smooth.r: stop("components of knots relating to a single smooth must be of same length")

msgid "components of knots relating to a single smooth must be of same length"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("cor dH/drho[%d] = %s", i, cor(as.numeric(b$dH[[i]]),     as.numeric(fd.dH[[i]])), domain = "R-mgcv")

msgid "cor dH/drho[%d] = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("cor db/drho[%d] = %s", i, cor(b$db.drho[, i], fd.br[,     i]), domain = "R-mgcv")

msgid "cor db/drho[%d] = %s"
msgstr ""


#: R/sparse.r: 0
#. R/sparse.r: stop("cubic spline only deals with 1D data")

msgid "cubic spline only deals with 1D data"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("data contain regions that are not contained in the knot specification")

msgid "data contain regions that are not contained in the knot specification"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("data outside soap boundary")
#. R/soap.r: stop("data outside soap boundary")
#. R/soap.r: stop("data outside soap boundary")

msgid "data outside soap boundary"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("data vectors are of different lengths")

msgid "data vectors are of different lengths"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("differences", domain = "R-mgcv")

msgid "differences"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("dimension of 'fx' is wrong")

msgid "dimension of 'fx' is wrong"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("dimensions of supplied 'w' argument is wrong")

msgid "dimensions of supplied 'w' argument is wrong"
msgstr ""


#: R/gam.sim.r: 0
#. R/gam.sim.r: stop("distribution was not recognised")

msgid "distribution was not recognised"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("done!", domain = "R-mgcv")

msgid "done!"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("effects", domain = "R-mgcv")

msgid "effects"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("eigenvalue range [%s, %s].", min(ev), max(ev), domain = "R-mgcv")

msgid "eigenvalue range [%s, %s]."
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("elements of 'min.sp' argument must be non negative")

msgid "elements of 'min.sp' argument must be non negative"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: stop("empty models are not available")

msgid "empty models are not available"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("factor 'by' variables can not be used with matrix arguments")

msgid "factor 'by' variables can not be used with matrix arguments"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("family not implemented yet")

msgid "family not implemented yet"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/gam.fit3.r: 0
#: R/gamm.r: 0
#: R/jagam.r: 0
#: R/mgcv.r: 0
#. R/bam.r: stop("family not recognized")
#. R/gam.fit3.r: stop("family not recognized")
#. R/gam.fit3.r: stop("family not recognized")
#. R/gamm.r: stop("family not recognized")
#. R/jagam.r: stop("family not recognized")
#. R/mgcv.r: stop("family not recognized")

msgid "family not recognized"
msgstr ""


#: R/fast-REML.r: 0
#. R/fast-REML.r: warning("fast REML optimizer reached iteration limit")

msgid "fast REML optimizer reached iteration limit"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("faulty bnd")
#. R/soap.r: stop("faulty bnd")
#. R/soap.r: stop("faulty bnd")
#. R/soap.r: stop("faulty bnd")
#. R/soap.r: stop("faulty bnd")
#. R/soap.r: stop("faulty bnd")

msgid "faulty bnd"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/bam.r: warning("fitted probabilities numerically 0 or 1 occurred")
#. R/bam.r: warning("fitted probabilities numerically 0 or 1 occurred")
#. R/gam.fit3.r: warning("fitted probabilities numerically 0 or 1 occurred")
#. R/mgcv.r: warning("fitted probabilities numerically 0 or 1 occurred")

msgid "fitted probabilities numerically 0 or 1 occurred"
msgstr ""


#: R/bam.r: 0
#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/bam.r: warning("fitted rates numerically 0 occurred")
#. R/bam.r: warning("fitted rates numerically 0 occurred")
#. R/gam.fit3.r: warning("fitted rates numerically 0 occurred")
#. R/mgcv.r: warning("fitted rates numerically 0 occurred")

msgid "fitted rates numerically 0 occurred"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("fs smooths can only have one factor argument")

msgid "fs smooths can only have one factor argument"
msgstr ""


#: R/fast-REML.r: 0
#: R/gam.fit3.r: 0
#: R/gam.fit3.r: 0
#. R/fast-REML.r: gettext("full convergence", domain = "R-mgcv")
#. R/gam.fit3.r: gettext("full convergence", domain = "R-mgcv")
#. R/gam.fit3.r: gettext("full convergence", domain = "R-mgcv")

msgid "full convergence"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("fx length wrong from t2 term: ignored")

msgid "fx length wrong from t2 term: ignored"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: warning("gamm can not fix only some margins of tensor product.")

msgid "gamm can not fix only some margins of tensor product."
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("gamm can not handle linked smoothing parameters (probably from use of 'id' or adaptive smooths)")

msgid "gamm can not handle linked smoothing parameters (probably from use of 'id' or adaptive smooths)"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("gamm models must have at least 1 smooth with unknown smoothing parameter or at least one other random effect")

msgid "gamm models must have at least 1 smooth with unknown smoothing parameter or at least one other random effect"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: warning("gamm not converged, try increasing niterPQL")

msgid "gamm not converged, try increasing niterPQL"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("grid vectors are different lengths")

msgid "grid vectors are different lengths"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("handling 'by' variables in smooth constructors may not work with the summation convention")

msgid "handling 'by' variables in smooth constructors may not work with the summation convention"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("in.out incorrect: see documentation")

msgid "in.out incorrect: see documentation"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("incorrect number of linear predictors for family")

msgid "incorrect number of linear predictors for family"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("incorrect number of smoothing parameters supplied for a smooth term")
#. R/mgcv.r: stop("incorrect number of smoothing parameters supplied for a smooth term")

msgid "incorrect number of smoothing parameters supplied for a smooth term"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: stop("indefinite penalized likelihood in 'gam.fit5()' function")

msgid "indefinite penalized likelihood in 'gam.fit5()' function"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("initial parameters are very close to inequality constraints")

msgid "initial parameters are very close to inequality constraints"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("initial parameters not feasible")

msgid "initial parameters not feasible"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("initial point is very close to some inequality constraints")

msgid "initial point is very close to some inequality constraints"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("inner groupings not nested in outer!!")

msgid "inner groupings not nested in outer!!"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/gam.fit4.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: gettextf("inner loop %d; can't correct step size", 1)
#. R/gam.fit3.r: gettextf("inner loop %d; can't correct step size", 2)
#. R/gam.fit3.r: gettextf("inner loop %d; can't correct step size", 3)
#. R/gam.fit4.r: gettextf("inner loop %d; can't correct step size", 1)
#. R/gam.fit4.r: gettextf("inner loop %d; can't correct step size", 2)
#. R/gam.fit4.r: gettextf("inner loop %d; can't correct step size", 3)
#. R/mgcv.r: gettextf("inner loop %d; can't correct step size", 1)
#. R/mgcv.r: gettextf("inner loop %d; can't correct step size", 2)

msgid "inner loop %d; can't correct step size"
msgstr ""


#: R/gam.fit3.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("invalid 'family' argument")
#. R/mgcv.r: stop("invalid 'family' argument")

msgid "invalid 'family' argument"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettextf("iteration %d", i)

msgid "iteration %d"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettext("iteration limit reached", domain = "R-mgcv")
#. R/gam.fit3.r: gettext("iteration limit reached", domain = "R-mgcv")

msgid "iteration limit reached"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("iteration limit reached: max(|grad|) = %g", max(abs(grad)))

msgid "iteration limit reached: max(|grad|) = %g"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("iterative weights or data non-finite in gam.fit - regularization may help. See ?gam.control")

msgid "iterative weights or data non-finite in gam.fit - regularization may help. See ?gam.control"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("jagam requires a file for the JAGS model specification")

msgid "jagam requires a file for the JAGS model specification"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: gettextf("knot %d is on or outside boundary", k)

msgid "knot %d is on or outside boundary"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("knot range does not include data")
#. R/smooth.r: stop("knot range does not include data")

msgid "knot range does not include data"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("knot range is so wide that there is *no* information about some basis coefficients")
#. R/smooth.r: warning("knot range is so wide that there is *no* information about some basis coefficients")

msgid "knot range is so wide that there is *no* information about some basis coefficients"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("knots must be specified for soap")
#. R/soap.r: stop("knots must be specified for soap")
#. R/soap.r: stop("knots must be specified for soap")

msgid "knots must be specified for soap"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("length of sp incorrect in t2: ignored")

msgid "length of sp incorrect in t2: ignored"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("lengths of 'bs.dim' and 'bnd' components of 'object' argument are inconsistent")
#. R/soap.r: stop("lengths of 'bs.dim' and 'bnd' components of 'object' argument are inconsistent")
#. R/soap.r: stop("lengths of 'bs.dim' and 'bnd' components of 'object' argument are inconsistent")

msgid "lengths of 'bs.dim' and 'bnd' components of 'object' argument are inconsistent"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("lengths of 'k' and 'bnd' arguments are inconsistent")

msgid "lengths of 'k' and 'bnd' arguments are inconsistent"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("linear predictor", domain = "R-mgcv")
#. R/plots.r: gettext("linear predictor", domain = "R-mgcv")

msgid "linear predictor"
msgstr ""


#: R/efam.r: 0
#: R/gam.fit3.r: 0
#. R/efam.r: gettextf("link \"%s\" is not available for Tweedie family", linktemp,     collapse = "")
#. R/gam.fit3.r: gettextf("link \"%s\" is not available for Tweedie family", linktemp)

msgid "link \"%s\" is not available for Tweedie family"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("link is not implemented for extended families")

msgid "link is not implemented for extended families"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("link was not recognized")

msgid "link was not recognized"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("log lik grad cor. = %s", cor(ll$lb, fdg), domain = "R-mgcv")

msgid "log lik grad cor. = %s"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("log lik hess cor. = %s", cor(as.numeric(ll$lbb), as.numeric(fdh)),     domain = "R-mgcv")

msgid "log lik hess cor. = %s"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("lower bound >= upper bound in call passed to 'mono.con()'")

msgid "lower bound >= upper bound in call passed to 'mono.con()'"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("matrix 'A' is not square")

msgid "matrix 'A' is not square"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("maximum number of iterations must be > 0")

msgid "maximum number of iterations must be > 0"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("method was not recognised")

msgid "method was not recognised"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("min.sp not supported with fast REML computation, and ignored.")

msgid "min.sp not supported with fast REML computation, and ignored."
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("mismatch between nb/polys supplied area names and data area names")

msgid "mismatch between nb/polys supplied area names and data area names"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("model has repeated 1-d smooths of same variable")

msgid "model has repeated 1-d smooths of same variable"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("model matrix too dense for any possible benefit from sparse")

msgid "model matrix too dense for any possible benefit from sparse"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("more knots than data in a ds term: knots ignored")

msgid "more knots than data in a ds term: knots ignored"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("more knots than data in a tp term: knots ignored")

msgid "more knots than data in a tp term: knots ignored"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("more knots than data in an sos term: knots ignored")

msgid "more knots than data in an sos term: knots ignored"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("more knots than unique data values is not allowed")

msgid "more knots than unique data values is not allowed"
msgstr ""


#: R/mvam.r: 0
#. R/mvam.r: stop("mvn requires 2 or more dimensional data")

msgid "mvn requires 2 or more dimensional data"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("names of 'z' and 'pc' must match")

msgid "names of 'z' and 'pc' must match"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("need at least one interior knot")
#. R/soap.r: stop("need at least one interior knot")

msgid "need at least one interior knot"
msgstr ""


#: R/efam.r: 0
#: R/gam.fit3.r: 0
#. R/efam.r: stop("negative values not allowed for the negative binomial family")
#. R/gam.fit3.r: stop("negative values not allowed for the negative binomial family")

msgid "negative values not allowed for the negative binomial family"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("negative values not allowed for the zero inflated Poisson family")

msgid "negative values not allowed for the zero inflated Poisson family"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("newdata is a model.frame: it should contain all required variables\n")

msgid "newdata is a model.frame: it should contain all required variables"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettextf("newton max(|grad|) = %s", max(abs(grad)), domain = "R-mgcv")

msgid "newton max(|grad|) = %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("nlm.fd not available with negative binomial Theta estimation")

msgid "nlm.fd not available with negative binomial Theta estimation"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("nlm.fd only available for GCV/UBRE")

msgid "nlm.fd only available for GCV/UBRE"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("no automatic plotting for smooths of more than one variable")

msgid "no automatic plotting for smooths of more than one variable"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("no automatic plotting for smooths of more than two variables")

msgid "no automatic plotting for smooths of more than two variables"
msgstr ""


#: R/fast-REML.r: 0
#. R/fast-REML.r: gettext("no convergence in 200 iterations", domain = "R-mgcv")

msgid "no convergence in 200 iterations"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("no data to predict at")
#. R/smooth.r: stop("no data to predict at")
#. R/smooth.r: stop("no data to predict at")

msgid "no data to predict at"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("no free coefs in sf smooth")

msgid "no free coefs in sf smooth"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("no spatial information provided!")

msgid "no spatial information provided!"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#: R/mgcv.r: 0
#. R/gam.fit3.r: stop("no valid set of coefficients has been found:please supply starting values",     call. = FALSE)
#. R/gam.fit4.r: stop("no valid set of coefficients has been found:please supply starting values",     call. = FALSE)
#. R/mgcv.r: stop("no valid set of coefficients has been found:please supply starting values",     call. = FALSE)

msgid "no valid set of coefficients has been found:please supply starting values"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("non-existent terms requested - ignoring")

msgid "non-existent terms requested - ignoring"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("not all required variables have been supplied in  newdata!\n")

msgid "not all required variables have been supplied in  newdata!"
msgstr ""


#: R/sparse.r: 0
#. R/sparse.r: stop("not enough unique values to find k nearest")

msgid "not enough unique values to find k nearest"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("nothing to do for this model")

msgid "nothing to do for this model"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("number of supplied knots != k for a cc smooth")

msgid "number of supplied knots != k for a cc smooth"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("number of supplied knots != k for a cr smooth")

msgid "number of supplied knots != k for a cr smooth"
msgstr ""


#: R/sparse.r: 0
#. R/sparse.r: stop("object not fully initialized")

msgid "object not fully initialized"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("one or more supplied k too small - reset to default")
#. R/smooth.r: warning("one or more supplied k too small - reset to default")

msgid "one or more supplied k too small - reset to default"
msgstr ""


#: R/sparse.r: 0
#. R/sparse.r: stop("only deals with 2D case")

msgid "only deals with 2D case"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("only first element of 'id' used")
#. R/smooth.r: warning("only first element of 'id' used")
#. R/smooth.r: warning("only first element of 'id' used")

msgid "only first element of 'id' used"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("only one level of smooth nesting is supported by gamm")

msgid "only one level of smooth nesting is supported by gamm"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("only outer methods 'newton' & 'bfgs' supports 'negbin' family and theta selection: reset")

msgid "only outer methods 'newton' & 'bfgs' supports 'negbin' family and theta selection: reset"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: gettextf("only scalar '%s' and '%s' arguments are allowed", "rho",     "theta")
#. R/gam.fit3.r: gettextf("only scalar '%s' and '%s' arguments are allowed", "p",     "phi")

msgid "only scalar '%s' and '%s' arguments are allowed"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("ord contains out of range orders (which will be ignored)")

msgid "ord contains out of range orders (which will be ignored)"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("ord is wrong. reset to NULL")

msgid "ord is wrong. reset to NULL"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("order too low")

msgid "order too low"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("p-values for any terms that can be penalized to zero will be unreliable: refit model to fix this")

msgid "p-values for any terms that can be penalized to zero will be unreliable: refit model to fix this"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("p-values may give low power in some circumstances")

msgid "p-values may give low power in some circumstances"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("p-values may give very low power")

msgid "p-values may give very low power"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("p-values un-reliable")

msgid "p-values un-reliable"
msgstr ""


#: R/gam.fit3.r: 0
#: R/gam.fit4.r: 0
#. R/gam.fit3.r: gettextf("penalized deviance = %s", pdev, domain = "R-mgcv")
#. R/gam.fit4.r: gettextf("penalized deviance = %s", pdev, domain = "R-mgcv")

msgid "penalized deviance = %s"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("penalty basis too large for smoothing basis")
#. R/smooth.r: stop("penalty basis too large for smoothing basis")

msgid "penalty basis too large for smoothing basis"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("penalty basis too small")

msgid "penalty basis too small"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("penalty column names don't match supplied area names!")

msgid "penalty column names don't match supplied area names!"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("penalty matrix, boundary polygons and/or neighbours list must be supplied in xt")

msgid "penalty matrix, boundary polygons and/or neighbours list must be supplied in xt"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("penalty order too high for basis dimension")

msgid "penalty order too high for basis dimension"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("predict.gam can only be used to predict from gam objects")

msgid "predict.gam can only be used to predict from gam objects"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("random argument must be a *named* list.")

msgid "random argument must be a *named* list."
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("random effects don't work with ids")

msgid "random effects don't work with ids"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("reparameterization unstable for margin: not done")

msgid "reparameterization unstable for margin: not done"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("residuals argument not supported")

msgid "residuals argument not supported"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("residuals argument to plot.gam is wrong length: ignored")

msgid "residuals argument to plot.gam is wrong length: ignored"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("response", domain = "R-mgcv")

msgid "response"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: warning("rho missing from simulation data edf.type reset to 2")

msgid "rho missing from simulation data edf.type reset to 2"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("s value increased")

msgid "s value increased"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("s value modified to give continuous function")

msgid "s value modified to give continuous function"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("s value reduced")

msgid "s value reduced"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: warning("saturated likelihood may be inaccurate")

msgid "saturated likelihood may be inaccurate"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("scale parameter must be positive")

msgid "scale parameter must be positive"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("scaled t df must be >2")

msgid "scaled t df must be >2"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("scheme should be a single number, or a vector with %d elements",     m)

msgid "scheme should be a single number, or a vector with %d elements"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("side conditions are not allowed for nested smooths")

msgid "side conditions are not allowed for nested smooths"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("silly tolerance supplied")

msgid "silly tolerance supplied"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("silly value supplied for rank.tol: reset to square root of machine precision")

msgid "silly value supplied for rank.tol: reset to square root of machine precision"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("single penalty tensor product smooths are deprecated and likely to be removed soon")

msgid "single penalty tensor product smooths are deprecated and likely to be removed soon"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("singular values not returned in order")

msgid "singular values not returned in order"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("smooth objects should not have a qrc attribute")

msgid "smooth objects should not have a qrc attribute"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: warning("smoothing parameter prior choise not recognised, reset to gamma")

msgid "smoothing parameter prior choise not recognised, reset to gamma"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("soap films are bivariate only")
#. R/soap.r: stop("soap films are bivariate only")
#. R/soap.r: stop("soap films are bivariate only")

msgid "soap films are bivariate only"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: warning("something wrong with argument 'd'")
#. R/smooth.r: warning("something wrong with argument 'd'")

msgid "something wrong with argument 'd'"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("sorry link not yet handled")

msgid "sorry link not yet handled"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: warning("sorry no option for contouring with errors: try plot.gam")

msgid "sorry no option for contouring with errors: try plot.gam"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("sorry, general families currently ignore offsets")
#. R/mgcv.r: warning("sorry, general families currently ignore offsets")

msgid "sorry, general families currently ignore offsets"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("sparse=TRUE not supported with fast REML, reset to REML.")

msgid "sparse=TRUE not supported with fast REML, reset to REML."
msgstr ""


#: R/fast-REML.r: 0
#: R/gam.fit3.r: 0
#: R/gam.fit3.r: 0
#. R/fast-REML.r: gettext("step failed", domain = "R-mgcv")
#. R/gam.fit3.r: gettext("step failed", domain = "R-mgcv")
#. R/gam.fit3.r: gettext("step failed", domain = "R-mgcv")

msgid "step failed"
msgstr ""


#: R/gam.fit4.r: 0
#. R/gam.fit4.r: gettextf("step failed: max(|grad|) = %s", max(abs(grad)))

msgid "step failed: max(|grad|) = %s"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("supplied dist negative")

msgid "supplied dist negative"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("supplied penalty not square!")

msgid "supplied penalty not square!"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("supplied penalty wrong dimension!")

msgid "supplied penalty wrong dimension!"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("te smooths not useable with gamm4: use t2 instead")

msgid "te smooths not useable with gamm4: use t2 instead"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("testing covariate scale invariance ... ", domain = "R-mgcv")

msgid "testing covariate scale invariance ..."
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("testing equivalence of gam and gamm with same sp ... ",     domain = "R-mgcv")

msgid "testing equivalence of gam and gamm with same sp ..."
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("testing equivalence of te(x) and s(x) ... ", domain = "R-mgcv")

msgid "testing equivalence of te(x) and s(x) ..."
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: gettext("testing invariance w.r.t. response ... ", domain = "R-mgcv")

msgid "testing invariance w.r.t. response ..."
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("the adaptive smooth class is limited to 1 or 2 covariates")

msgid "the adaptive smooth class is limited to 1 or 2 covariates"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettext("theoretical quantiles", domain = "R-mgcv")

msgid "theoretical quantiles"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("there should be %d knots supplied", nk)

msgid "there should be %d knots supplied"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: gettextf("there should be %d supplied knots", nk)
#. R/smooth.r: gettextf("there should be %d supplied knots", nk + 2 * m[1] +     2)

msgid "there should be %d supplied knots"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("too few knots")
#. R/smooth.r: stop("too few knots")

msgid "too few knots"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: gettextf(" total df = %s", round(sum(x$edf), digits = 2), domain = "R-mgcv")

msgid "total df = %s"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: warning("type 'iterms' is not available for multiple predictor cases")

msgid "type 'iterms' is not available for multiple predictor cases"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: stop("type must be \"link\" or \"response\"")

msgid "type must be \"link\" or \"response\""
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: stop("unconditional argument not meaningful here")
#. R/jagam.r: warning("unconditional argument not meaningful here")

msgid "unconditional argument not meaningful here"
msgstr ""


#: R/smooth.r: 0
#. R/smooth.r: stop("unimplemented sparse constraint type requested")

msgid "unimplemented sparse constraint type requested"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("unknown optimizer")

msgid "unknown optimizer"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("unknown outer optimization method")

msgid "unknown outer optimization method"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("unknown smoothness selection criterion")

msgid "unknown smoothness selection criterion"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("unrecognized (vector?) link")

msgid "unrecognized (vector?) link"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("unsupported order of differentiation requested of 'gam.fit3()'")

msgid "unsupported order of differentiation requested of 'gam.fit3()'"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: stop("unsupported smoothness selection method")

msgid "unsupported smoothness selection method"
msgstr ""


#: R/bam.r: 0
#. R/bam.r: warning("value of 'samfrac' argument is too small - ignored")

msgid "value of 'samfrac' argument is too small - ignored"
msgstr ""


#: R/mgcv.r: 0
#. R/mgcv.r: stop("value of epsilon must be > 0")

msgid "value of epsilon must be > 0"
msgstr ""


#: R/efam.r: 0
#. R/efam.r: stop("values out of range")

msgid "values out of range"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("variable names don't match boundary names")
#. R/soap.r: stop("variable names don't match boundary names")

msgid "variable names don't match boundary names"
msgstr ""


#: R/gam.fit3.r: 0
#. R/gam.fit3.r: stop("variance function not recognized for quasi")

msgid "variance function not recognized for quasi"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: gettextf("view variables must be one of %s", paste(v.names, collapse = ", "))

msgid "view variables must be one of %s"
msgstr ""


#: R/jagam.r: 0
#. R/jagam.r: warning("weights ignored")

msgid "weights ignored"
msgstr ""


#: R/gamm.r: 0
#. R/gamm.r: stop("weights must be like glm weights for generalized case")

msgid "weights must be like glm weights for generalized case"
msgstr ""


#: R/soap.r: 0
#. R/soap.r: stop("x and y must be same length")

msgid "x and y must be same length"
msgstr ""


#: R/plots.r: 0
#. R/plots.r: ngettext(boi$iter, "%s after %d iteration.", "%s after %d iterations.",     domain = "R-mgcv")

msgid        "%s after %d iteration."
msgid_plural "%s after %d iterations."
msgstr[0]    ""
msgstr[1]    ""


#: R/plots.r: 0
#. R/plots.r: ngettext(b$mgcv.conv$iter, "Smoothing parameter selection converged after %d iteration by steepest descent step failure.",     "Smoothing parameter selection converged after %d iterations by steepest descent step failure.",     domain = "R-mgcv")

msgid        "Smoothing parameter selection converged after %d iteration by steepest descent step failure."
msgid_plural "Smoothing parameter selection converged after %d iterations by steepest descent step failure."
msgstr[0]    ""
msgstr[1]    ""


#: R/plots.r: 0
#. R/plots.r: ngettext(b$mgcv.conv$iter, "Smoothing parameter selection converged after %d iteration.",     "Smoothing parameter selection converged after %d iterations.",     domain = "R-mgcv")

msgid        "Smoothing parameter selection converged after %d iteration."
msgid_plural "Smoothing parameter selection converged after %d iterations."
msgstr[0]    ""
msgstr[1]    ""
