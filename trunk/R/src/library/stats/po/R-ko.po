# Korean translation for R stats package
# src/library/stats/po/R-ko.po
# Copyright (C) 1995-2014 The R Core Team
# This file is distributed under the same license as the R stats package.
# Chel Hee Lee <chl948@mail.usask.ca>, 2008-2014.
#
msgid ""
msgstr ""
"Project-Id-Version: R 3.1.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2015-03-10 20:42\n"
"PO-Revision-Date: 2014-03-27 13:33-0600\n"
"Last-Translator: Chel Hee Lee <chl948@mail.usask.ca>\n"
"Language-Team:  <chl948@mail.usask.ca>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Poedit-SourceCharset: UTF-8\n"
"X-Generator: Poedit 1.5.4\n"

#. R/mlm.R: stop("\"mlm\" objects with weights are not supported")
#: R/mlm.R:0
#, fuzzy
msgid "\"mlm\" objects with weights are not supported"
msgstr "weights와 함께 사용된 'mlm' 객체들은 지원되지 않습니다"

#. R/aov.R: gettextf("%d out of %d effects not estimable", nc - rank, nc, domain = "R-stats")
#: R/aov.R:0
msgid "%d out of %d effects not estimable"
msgstr ""

#. R/smooth.R: gettextf("%s Tukey smoother resulting from %s", attr(x, "kind"), sQuote(paste(deparse(attr(x,     "call")), collapse = "")), domain = "R-stats")
#. R/smooth.R: gettextf("%s Tukey smoother resulting from %s", attr(object, "kind"), sQuote(paste(deparse(attr(object,     "call")), collapse = "")), domain = "R-stats")
#: R/smooth.R:0
msgid "%s Tukey smoother resulting from %s"
msgstr ""

#. R/ansari.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)))
#. R/bartlett.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/binom.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(n)), domain = "R-stats")
#. R/chisq.test.R: gettextf("%s and %s", paste(DNAME, collapse = "\n"), paste(DNAME2, collapse = "\n"))
#. R/cor.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/cor.test.R: gettextf("%s and %s", names(mf[1]), names(mf[2]))
#. R/fisher.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)), domain = "R-stats")
#. R/fligner.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/kruskal.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/ks.test.R: gettextf("%s and %s", paste(DNAME, collapse = ""), paste(deparse(substitute(y)),     collapse = ""))
#. R/mcnemar.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/mood.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/oneway.test.R: gettextf("%s and %s", dp[[2L]], dp[[3L]], domain = "R-stats")
#. R/pairwise.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/pairwise.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(g)), domain = "R-stats")
#. R/t.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)))
#. R/var.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)), domain = "R-stats")
#. R/wilcox.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/binom.test.R:0 R/chisq.test.R:0
#: R/cor.test.R:0 R/fisher.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#: R/ks.test.R:0 R/mcnemar.test.R:0 R/mood.test.R:0 R/oneway.test.R:0
#: R/pairwise.R:0 R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0
msgid "%s and %s"
msgstr ""

#. R/friedman.test.R: gettextf("%s and %s and %s", DNAME, deparse(substitute(groups)), deparse(substitute(blocks)))
#. R/friedman.test.R: gettextf("%s and %s and %s", names(mf[1]), names(mf[2]), names(mf[3]))
#. R/mantelhaen.test.R: gettextf("%s and %s and %s", deparse(substitute(x)), deparse(substitute(y)), deparse(substitute(z)),     domain = "R-stats")
#. R/quade.test.R: gettextf("%s and %s and %s", DNAME, deparse(substitute(groups)), deparse(substitute(blocks)))
#. R/quade.test.R: gettextf("%s and %s and %s", names(mf[1]), names(mf[2]), names(mf[3]), domain = "R-stats")
#: R/friedman.test.R:0 R/mantelhaen.test.R:0 R/quade.test.R:0
msgid "%s and %s and %s"
msgstr ""

#. R/xtabs.R: gettextf("%s applies only to two-way tables", "xtabs(*, sparse=TRUE)")
#: R/xtabs.R:0
msgid "%s applies only to two-way tables"
msgstr "%s는 2차원 테이블에만 적용합니다"

#. R/ansari.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/bartlett.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/fligner.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/kruskal.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/mood.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/t.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/var.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]), domain = "R-stats")
#. R/wilcox.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]), domain = "R-stats")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#: R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0
msgid "%s by %s"
msgstr ""

#. R/family.R: gettextf("%s link not recognised", sQuote(link))
#: R/family.R:0
msgid "%s link not recognised"
msgstr "인식되지 않는 %s 링크입니다"

#. R/stl.R: gettextf("%s must be 0 or 1", degname)
#: R/stl.R:0
#, fuzzy
msgid "%s must be 0 or 1"
msgstr "반드시 0 또는 1 이어야 합니다"

#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/xtabs.R: gettextf("%s needs package 'Matrix' correctly installed", "xtabs(*, sparse=TRUE)")
#: R/contrast.R:0 R/xtabs.R:0
msgid "%s needs package 'Matrix' correctly installed"
msgstr "%s는 정상적으로 설치되어 있는 패키지 'Matrix'를 필요로 합니다"

#. R/interaction.plot.R: gettextf("%s of %s", paste(deparse(substitute(fun)), collapse = ""), paste(deparse(substitute(response)),     collapse = ""))
#: R/interaction.plot.R:0
msgid "%s of %s"
msgstr ""

#. R/pairwise.R: gettextf("%s out of %s", deparse(substitute(x)), deparse(substitute(n)), domain = "R-stats")
#. R/prop.test.R: gettextf("%s out of %s", DNAME, deparse(substitute(n)), domain = "R-stats")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "%s out of %s"
msgstr ""

#. R/prop.trend.test.R: gettextf("%s out of %s,\n using scores: %s", deparse(substitute(x)), deparse(substitute(n)),     paste(score, collapse = " "), domain = "R-stats")
#: R/prop.trend.test.R:0
msgid ""
"%s out of %s,\n"
" using scores: %s"
msgstr ""

#. R/htest.R: gettextf("%s percent confidence interval:", format(100 * attr(x$conf.int, "conf.level")),     domain = "R-stats")
#: R/htest.R:0
#, fuzzy
msgid "%s percent confidence interval:"
msgstr "tie가 있어 정확한 신뢰구간을 계산할 수 없습니다"

#. R/poisson.test.R: gettextf("%s time base: %s", deparse(substitute(x)), deparse(substitute(T)), domain = "R-stats")
#: R/poisson.test.R:0
msgid "%s time base: %s"
msgstr ""

#. R/integrate.R: gettextf("%s with absolute error < %s", format(x$value, digits = digits), format(x$abs.error,     digits = 2L), domain = "R-stats")
#: R/integrate.R:0
msgid "%s with absolute error < %s"
msgstr ""

#. R/TukeyHSD.R: gettextf("%s%% family-wise confidence level", format(100 * attr(x, "conf.level"),     2), domain = "R-stats")
#. R/TukeyHSD.R: gettextf("%s%% family-wise confidence level", format(100 * attr(x, "conf.level"),     digits = 2L), domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "%s%% family-wise confidence level"
msgstr ""

#. R/aov.R: gettextf("'%s' and '%s' arguments must have the same length", "coef", "contrast.obj")
#. R/aov.R: gettextf("'%s' and '%s' arguments must have the same length", "coef", "contrast.obj")
#. R/bartlett.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/chisq.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/chisq.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "p")
#. R/cor.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/density.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "weights")
#. R/fisher.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/fligner.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/kruskal.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/loglin.R: gettextf("'%s' and '%s' arguments must have the same length", "start", "table")
#. R/mcnemar.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/pairwise.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "n")
#. R/prop.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "n")
#. R/weighted.mean.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "w")
#. R/wilcox.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#: R/aov.R:0 R/bartlett.test.R:0 R/chisq.test.R:0 R/cor.test.R:0 R/density.R:0
#: R/fisher.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0 R/loglin.R:0
#: R/mcnemar.test.R:0 R/pairwise.R:0 R/prop.test.R:0 R/weighted.mean.R:0
#: R/wilcox.test.R:0
#, fuzzy
msgid "'%s' and '%s' arguments must have the same length"
msgstr "인자들은 반드시 같은 길이를 가지고 있어야 합니다"

#. R/hclust.R: gettextf("'%s' argument cannot be coerced to class %s", "x", dQuote("hclust"))
#: R/hclust.R:0
#, fuzzy
msgid "'%s' argument cannot be coerced to class %s"
msgstr "인수 'x'를 클래스  %s로 강제형변환을 할 수 없습니다"

#. R/nlsFunc.R: gettextf("'%s' argument cannot be of mode '%s'", substitute(object), mode(object))
#: R/nlsFunc.R:0
#, fuzzy
msgid "'%s' argument cannot be of mode '%s'"
msgstr "'%1$s'는 모드 '%2$s'가 될 수 없습니다"

#. R/cancor.R: gettextf("'%s' argument has rank 0", "x")
#. R/cancor.R: gettextf("'%s' argument has rank 0", "y")
#: R/cancor.R:0
#, fuzzy
msgid "'%s' argument has rank 0"
msgstr "'x'의 rank는 0입니다"

#. R/kernel.R: gettextf("'%s' argument is less than %d", "r", 1)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "m", 1)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "r", 0)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "m", 1)
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument is less than %d"
msgstr "'r'은 1보다 적습니다"

#. R/aggregate.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ansari.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/bartlett.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/cor.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/fligner.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/friedman.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ftable.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ftable.R: gettextf("'%s' argument is missing or incorrect", "col.vars")
#. R/kruskal.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/mood.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/oneway.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/quade.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/t.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/var.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/wilcox.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/xtabs.R: gettextf("'%s' argument is missing or incorrect", "formula")
#: R/aggregate.R:0 R/ansari.test.R:0 R/bartlett.test.R:0 R/cor.test.R:0
#: R/fligner.test.R:0 R/friedman.test.R:0 R/ftable.R:0 R/kruskal.test.R:0
#: R/mood.test.R:0 R/oneway.test.R:0 R/quade.test.R:0 R/t.test.R:0
#: R/var.test.R:0 R/wilcox.test.R:0 R/xtabs.R:0
#, fuzzy
msgid "'%s' argument is missing or incorrect"
msgstr "'col.vars'이 빠져있거나 잘못되었습니다"

#. R/kernel.R: gettextf("'%s' argument is not a kernel", "k")
#. R/kernel.R: gettextf("'%s' argument is not a kernel", "x")
#. R/kernel.R: gettextf("'%s' argument is not a kernel", "k")
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument is not a kernel"
msgstr "'k'는 커널이 아닙니다"

#. R/dist.R: gettextf("'%s' argument is not a square matrix", "m")
#: R/dist.R:0
#, fuzzy
msgid "'%s' argument is not a square matrix"
msgstr "'V'는 수치형 정방행렬이 아닙니다"

#. R/diffinv.R: gettextf("'%s' argument is not a vector", "x")
#. R/diffinv.R: gettextf("'%s' argument is not a vector", "x")
#. R/kernel.R: gettextf("'%s' argument is not a vector", "x")
#: R/diffinv.R:0 R/kernel.R:0
#, fuzzy
msgid "'%s' argument is not a vector"
msgstr "'x'는 벡터가 아닙니다"

#. R/diffinv.R: gettextf("'%s' argument is not a vector or matrix", "x")
#. R/embed.R: gettextf("'%s' argument is not a vector or matrix", "x")
#: R/diffinv.R:0 R/embed.R:0
#, fuzzy
msgid "'%s' argument is not a vector or matrix"
msgstr "'x'는 벡터 또는 행렬이 아닙니다"

#. R/lag.R: gettextf("'%s' argument is not an integer", "k")
#: R/lag.R:0
#, fuzzy
msgid "'%s' argument is not an integer"
msgstr "'k'는 정수가 아닙니다"

#. R/ftable.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("ftable"))
#. R/loess.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("loess"))
#. R/smspline.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("smooth.spline"))
#: R/ftable.R:0 R/loess.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument is not an object of class %s"
msgstr "추가 인자 %1$s는 클래스 \"%2$s\"가 아닙니다"

#. R/density.R: gettextf("'%s' argument is not positive", "bw")
#: R/density.R:0
#, fuzzy
msgid "'%s' argument is not positive"
msgstr "'bw'는 양수가 아닙니다"

#. R/arima.R: gettextf("'%s' argument is of the wrong length", "fixed")
#. R/arima.R: gettextf("'%s' argument is of the wrong length", "init")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "seasonal")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "fixed")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "init")
#. R/contr.poly.R: gettextf("'%s' argument is of the wrong length", "scores")
#. R/hclust.R: gettextf("'%s' argument is of the wrong length", "height", domain = "R-stats")
#. R/hclust.R: gettextf("'%s' argument is of the wrong length", "order", domain = "R-stats")
#. R/kernel.R: gettextf("'%s' argument is of the wrong length", "coef")
#. R/nls-profile.R: gettextf("'%s' argument is of the wrong length", "params")
#. R/nls-profile.R: gettextf("'%s' argument is of the wrong length", "varying")
#. R/reshape.R: gettextf("'%s' argument is of the wrong length", "times")
#: R/arima.R:0 R/arma0.R:0 R/contr.poly.R:0 R/hclust.R:0 R/kernel.R:0
#: R/nls-profile.R:0 R/reshape.R:0
#, fuzzy
msgid "'%s' argument is of the wrong length"
msgstr "'scores' 인자의 길이가 잘못되었습니다"

#. R/biplot.R: gettextf("'%s' argument is outside [0,1]", "scale")
#. R/biplot.R: gettextf("'%s' argument is outside [0,1]", "scale")
#. R/quantile.R: gettextf("'%s' argument is outside [0,1]", "probs")
#: R/biplot.R:0 R/quantile.R:0
#, fuzzy
msgid "'%s' argument is outside [0,1]"
msgstr "'scale'이 [0,1] 범위외입니다"

#. R/loess.R: gettextf("'%s' argument must be 0, 1 or 2", "degree")
#. R/nlm.R: gettextf("'%s' argument must be 0, 1 or 2", "print.level")
#: R/loess.R:0 R/nlm.R:0
#, fuzzy
msgid "'%s' argument must be 0, 1 or 2"
msgstr "인자 'sides'는 반드시 1 또는 2이어야 합니다"

#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 0)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 0)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#: R/ar.R:0
#, fuzzy
msgid "'%s' argument must be >= %d"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/ftable.R: gettextf("'%s' argument must be a character string or connection", "file")
#: R/ftable.R:0
#, fuzzy
msgid "'%s' argument must be a character string or connection"
msgstr "'file'은 반드시 문자형 또는 커넥션이어야 합니다"

#. R/dendrogram.R: gettextf("'%s' argument must be a character vector of length '%s'", "ColSideColors",     "ncol(x)")
#. R/dendrogram.R: gettextf("'%s' argument must be a character vector of length '%s'", "RowSideColors",     "nrow(x)")
#: R/dendrogram.R:0
#, fuzzy
msgid "'%s' argument must be a character vector of length '%s'"
msgstr "'termlabels'는 반드시 적어도 길이가 1인 문자형 벡터이어야 합니다"

#. R/model.tables.R: gettextf("'%s' argument must be a function", "na.action")
#: R/model.tables.R:0
#, fuzzy
msgid "'%s' argument must be a function"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/aggregate.R: gettextf("'%s' argument must be a list", "by")
#. R/aov.R: gettextf("'%s' argument must be a list", "split")
#. R/ts.R: gettextf("'%s' argument must be a list", "model")
#: R/aggregate.R:0 R/aov.R:0 R/ts.R:0
#, fuzzy
msgid "'%s' argument must be a list"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/lm.R: gettextf("'%s' argument must be a matrix", "x")
#. R/lm.R: gettextf("'%s' argument must be a matrix", "x")
#: R/lm.R:0
#, fuzzy
msgid "'%s' argument must be a matrix"
msgstr "'x'는 반드시 행렬이어야 합니다"

#. R/cor.test.R: gettextf("'%s' argument must be a numeric vector", "x")
#. R/cor.test.R: gettextf("'%s' argument must be a numeric vector", "y")
#. R/glm.R: gettextf("'%s' argument must be a numeric vector", "weights")
#. R/lm.R: gettextf("'%s' argument must be a numeric vector", "weights")
#. R/smspline.R: gettextf("'%s' argument must be a numeric vector", "y")
#: R/cor.test.R:0 R/glm.R:0 R/lm.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be a numeric vector"
msgstr "'x'는 반드시 수치형 벡터이어야 합니다"

#. R/ansari.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/binom.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "p")
#. R/binom.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/cor.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/fisher.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/mantelhaen.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/prop.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/t.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/var.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/wilcox.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#: R/ansari.test.R:0 R/binom.test.R:0 R/cor.test.R:0 R/fisher.test.R:0
#: R/mantelhaen.test.R:0 R/prop.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
#, fuzzy
msgid "'%s' argument must be a single number between 0 and 1"
msgstr "'p'는 반드시 0과 1 사이 한 개의 숫자이어야 합니다"

#. R/poisson.test.R: gettextf("'%s' argument must be a single positive number", "r")
#. R/var.test.R: gettextf("'%s' argument must be a single positive number", "ratio")
#: R/poisson.test.R:0 R/var.test.R:0
#, fuzzy
msgid "'%s' argument must be a single positive number"
msgstr "'r'은 반드시 양의 값을 가지는 하나의 숫자이어야 합니다"

#. R/kernel.R: gettextf("'%s' argument must be a vector", "coef")
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument must be a vector"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/addmargins.R: gettextf("'%s' argument must be an array or table", "A")
#: R/addmargins.R:0
#, fuzzy
msgid "'%s' argument must be an array or table"
msgstr "'A'는 반드시 배열 또는 테이블이어야 합니다"

#. R/ftable.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("ftable"))
#. R/ftable.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("ftable"))
#. R/models.R: gettextf("'%s' argument must be an object of class %s", "termobj", dQuote("terms"))
#. R/plot.lm.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("lm"))
#: R/ftable.R:0 R/models.R:0 R/plot.lm.R:0
#, fuzzy
msgid "'%s' argument must be an object of class %s"
msgstr "'termobj'은 반드시 클래스 %s인 객체이어야 합니다"

#. R/acf.R: gettextf("'%s' argument must be at least %d", "lag.max", 0)
#. R/acf.R: gettextf("'%s' argument must be at least %d", "lag.max", 1)
#. R/approx.R: gettextf("'%s' argument must be at least %d", "n", 1)
#. R/ar.R: gettextf("'%s' argument must be at least %d", "n.ahead", 1)
#. R/contr.poly.R: gettextf("'%s' argument must be at least %d", "degree", 1)
#. R/smspline.R: gettextf("'%s' argument must be at least %d", "nknots", 1)
#: R/acf.R:0 R/approx.R:0 R/ar.R:0 R/contr.poly.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be at least %d"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/identify.hclust.R: gettextf("'%s' argument must be between %s and %s", "k", "2", length(tree$height))
#. R/smspline.R: gettextf("'%s' argument must be between %s and %s", "span", "0", "1")
#. R/spectrum.R: gettextf("'%s' argument must be between %s and %s", "p", "0", "0.5")
#. R/splinefun.R: gettextf("'%s' argument must be between %s and %s", "deriv", "0", "3")
#. R/splinefun.R: gettextf("'%s' argument must be between %s and %s", "deriv", "0", "3")
#. R/symnum.R: gettextf("'%s' argument must be between %s and %s", "x", "-1", "1")
#. R/symnum.R: gettextf("'%s' argument must be between %s and %s", "x", format(minc), format(maxc))
#: R/identify.hclust.R:0 R/smspline.R:0 R/spectrum.R:0 R/splinefun.R:0
#: R/symnum.R:0
#, fuzzy
msgid "'%s' argument must be between %s and %s"
msgstr "'x'는 반드시  %s와 %s사이에 있어야 합니다"

#. R/plot.lm.R: gettextf("'%s' argument must be in {1,..,%d}", "which", 6)
#. R/plot.lm.R: gettextf("'%s' argument must be in {1,..,%d}", "id.n", n, domain = "R-stats")
#: R/plot.lm.R:0
#, fuzzy
msgid "'%s' argument must be in {1,..,%d}"
msgstr "'id.n'는 반드시 {1,..,%d}내에 있어야 합니다"

#. R/StructTS.R: gettextf("'%s' argument must be numeric", "x")
#. R/acf.R: gettextf("'%s' argument must be numeric", "x")
#. R/acf.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/arima.R: gettextf("'%s' argument must be numeric", "x")
#. R/arma0.R: gettextf("'%s' argument must be numeric", "x")
#. R/cor.R: gettextf("'%s' argument must be numeric", "x")
#. R/cor.R: gettextf("'%s' argument must be numeric", "y")
#. R/density.R: gettextf("'%s' argument must be numeric", "x")
#. R/ks.test.R: gettextf("'%s' argument must be numeric", "x")
#. R/models.R: gettextf("'%s' argument must be numeric", "offset")
#. R/wilcox.test.R: gettextf("'%s' argument must be numeric", "x")
#. R/wilcox.test.R: gettextf("'%s' argument must be numeric", "y")
#: R/StructTS.R:0 R/acf.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/cor.R:0
#: R/density.R:0 R/ks.test.R:0 R/models.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "'%s' argument must be numeric"
msgstr "인자 'x'는 반드시 수치형이어야 합니다"

#. R/biplot.R: gettextf("'%s' argument must be of length %d", "choices", 2)
#. R/biplot.R: gettextf("'%s' argument must be of length %d", "choices", 2)
#. R/nlm.R: gettextf("'%s' argument must be of length %d", "interval", 2)
#. R/relevel.R: gettextf("'%s' argument must be of length %d", "ref", 1)
#. R/smspline.R: gettextf("'%s' argument must be of length %d", "spar", 1)
#: R/biplot.R:0 R/nlm.R:0 R/relevel.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be of length %d"
msgstr "'spar'은 반드시 길이가 1 이어야 합니다"

#. R/kmeans.R: gettextf("'%s' argument must be positive", "iter.max")
#. R/runmed.R: gettextf("'%s' argument must be positive", "k")
#: R/kmeans.R:0 R/runmed.R:0
#, fuzzy
msgid "'%s' argument must be positive"
msgstr "'k'는 반드시 양수이어야 합니다"

#. R/ARMAtheory.R: gettextf("'%s' argument must have length >= %d", "acf", 2)
#. R/stepfun.R: gettextf("'%s' argument must have length >= %d", "x", 1)
#: R/ARMAtheory.R:0 R/stepfun.R:0
#, fuzzy
msgid "'%s' argument must have length >= %d"
msgstr "'x'는 반드시 길이가 1보다 크거나 같아야 합니다"

#. R/nls.R: gettextf("'%s' argument will be ignored", "subset")
#. R/nls.R: gettextf("'%s' argument will be ignored", "na.action")
#: R/nls.R:0
#, fuzzy
msgid "'%s' argument will be ignored"
msgstr "인자 'subset'은 사용되지 않을 것입니다"

#. R/symnum.R: gettextf("'%s' must be unique, but are = %s", "cutpoints", tmp_n)
#. R/symnum.R: gettextf("'%s' must be unique, but are = %s", "symbols", tmp_n)
#: R/symnum.R:0
#, fuzzy
msgid "'%s' must be unique, but are = %s"
msgstr "'cutpoints'는 반드시 고유해야 하는데 다음과 같습니다 ="

#. R/friedman.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "y", "groups",     "blocks")
#. R/mantelhaen.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "x", "y", "z")
#. R/prop.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "x", "n", "p")
#. R/quade.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "y", "groups",     "blocks")
#: R/friedman.test.R:0 R/mantelhaen.test.R:0 R/prop.test.R:0 R/quade.test.R:0
#, fuzzy
msgid "'%s', '%s' and '%s' arguments must have the same length"
msgstr "'x', 'y', 그리고 'z'는 반드시 같은 길이를 가져야 합니다"

#. R/smspline.R: message("'.nknots.smspl()' is now exported; use it instead of 'n.knots()'")
#: R/smspline.R:0
msgid "'.nknots.smspl()' is now exported; use it instead of 'n.knots()'"
msgstr ""

#. R/anova.R: stop("'P.values' argument is TRUE, but 'has.Pvalue' argument is not")
#: R/anova.R:0
#, fuzzy
msgid "'P.values' argument is TRUE, but 'has.Pvalue' argument is not"
msgstr "'P.values'는 TRUE, 그러나 'has.Pvalue'는 그렇지 않습니다"

#. R/poisson.test.R: stop("'T' argument must be nonnegative")
#: R/poisson.test.R:0
#, fuzzy
msgid "'T' argument must be nonnegative"
msgstr "'T'는 반드시 음이 아닌 값이어야 합니다"

#. R/cor.R: stop("'V' is not a square numeric matrix")
#: R/cor.R:0
msgid "'V' is not a square numeric matrix"
msgstr "'V'는 수치형 정방행렬이 아닙니다"

#. R/mlm.R: stop("'X' does not define a subspace of 'M'")
#: R/mlm.R:0
msgid "'X' does not define a subspace of 'M'"
msgstr ""

#. R/dendrogram.R: stop("'X' is not a dendrogram")
#: R/dendrogram.R:0
msgid "'X' is not a dendrogram"
msgstr "'X'는 덴드로그램이 아닙니다"

#. R/lsfit.R: warning("'X' matrix was collinear")
#: R/lsfit.R:0
msgid "'X' matrix was collinear"
msgstr "'X'행렬은 collinear입니다"

#. R/smspline.R: warning("'all.knots' argument is TRUE; 'nknots' specification is disregarded")
#: R/smspline.R:0
#, fuzzy
msgid "'all.knots' argument is TRUE; 'nknots' specification is disregarded"
msgstr "'all.knots'가 TRUE이기 때문에 'nknots'지정은 사용되지 않습니다"

#. R/HoltWinters.R: stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
#: R/HoltWinters.R:0
msgid "'alpha', 'beta' and 'gamma' must be within the unit interval"
msgstr ""
"'alpha', 'beta' 그리고 'gamma'는 반드시 unit interval 내에 있어야 합니다"

#. R/nls.R: gettextf("'anova()' function is only defined for sequences of objects of class %s",     dQuote("nls"))
#. R/nls.R: gettextf("'anova()' function is only defined for sequences of objects of class %s",     dQuote("nls"))
#: R/nls.R:0
#, fuzzy
msgid "'anova()' function is only defined for sequences of objects of class %s"
msgstr "여러개의 \"nls\" 객체들의 시퀀스로부터 'anova'만이 정의됩니다"

#. R/ts.R: stop("'ar' part of model is not stationary")
#: R/ts.R:0
msgid "'ar' part of model is not stationary"
msgstr "모델의 'ar' 파트가 stationary 하지 않습니다"

#. R/arima.R: stop("'arima()' method is implemented only for univariate time series")
#: R/arima.R:0
#, fuzzy
msgid "'arima()' method is implemented only for univariate time series"
msgstr "오로지 일변량 시계열에서만 구현되어 있습니다"

#. R/kmeans.R: stop("'centers' must be a number or a matrix")
#: R/kmeans.R:0
msgid "'centers' must be a number or a matrix"
msgstr "'centers'는 반드시 숫자 또는 행렬이어야 합니다"

#. R/filter.R: stop("'circular' argument must be logical and not NA")
#: R/filter.R:0
#, fuzzy
msgid "'circular' argument must be logical and not NA"
msgstr "'circular'는 반드시 논리값이고 NA가 아니어야 합니다"

#. R/aov.R: stop("'coef' argument must define a contrast, i.e., sum to 0")
#. R/aov.R: stop("'coef' argument must define a contrast, i.e., sum to 0")
#: R/aov.R:0
#, fuzzy
msgid "'coef' argument must define a contrast, i.e., sum to 0"
msgstr "'coef'는 반드시 contrast를 정의해야 합니다.  예를들면, 총계는 0입니다"

#. R/nlminb.R: stop("'control' argument must be a named list")
#. R/nls.R: stop("'control' argument must be a named list")
#: R/nlminb.R:0 R/nls.R:0
msgid "'control' argument must be a named list"
msgstr "'control' 인자는 반드시 named list이어야 합니다"

#. R/nlminb.R: gettextf("'control' component '%s' = %g, is out of range", names(port_cpos)[B], v[iv1])
#: R/nlminb.R:0
msgid "'control' component '%s' = %g, is out of range"
msgstr ""

#. R/factanal.R: stop("'covmat' is not a valid covariance list")
#. R/princomp.R: stop("'covmat' is not a valid covariance list")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is not a valid covariance list"
msgstr "'covmat'은 유효한 공분산 목록이 아닙니다"

#. R/factanal.R: stop("'covmat' is of unknown type")
#. R/princomp.R: stop("'covmat' is of unknown type")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is of unknown type"
msgstr "알수 있는 타입의 'covmat'입니다"

#. R/cpgram.R: stop("'cpgram()' is implemented only for univariate time series")
#: R/cpgram.R:0
#, fuzzy
msgid "'cpgram()' is implemented only for univariate time series"
msgstr "오로지 일변량 시계열에서만 구현되어 있습니다"

#. R/model.tables.R: stop("'cterms' argument must match terms in model object")
#: R/model.tables.R:0
msgid "'cterms' argument must match terms in model object"
msgstr "'cterms' 인자는 반드시 모델 객체내의 항들과 일치해야 합니다"

#. R/symnum.R: gettextf("'cutpoints' must be unique in 0 < cuts < 1, but are = %s", tmp_n)
#: R/symnum.R:0
#, fuzzy
msgid "'cutpoints' must be unique in 0 < cuts < 1, but are = %s"
msgstr ""
"'cutpoints'는 반드시 0과 1사이에 고유한 값이어야 하는데 다음과 같습니다  = "

#. R/smspline.R: stop("'cv' argument must not be NA when 'df' argument is specified")
#: R/smspline.R:0
#, fuzzy
msgid "'cv' argument must not be NA when 'df' argument is specified"
msgstr "'df'가 지정되었을때 'cv'는 반드시 NA이서는 안됩니다"

#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#: R/models.R:0
msgid "'data' must be a data.frame, not a matrix or an array"
msgstr "'data'는 행렬 또는 배열이 아닌 반드시 데이터 프레임이어야 합니다"

#. R/nls.R: stop("'data' must be a list or an environment")
#: R/nls.R:0
msgid "'data' must be a list or an environment"
msgstr "'data'는 반드시 리스트 또는 environment이어야 합니다"

#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#: R/contr.poly.R:0
msgid "'degree' must be less than number of unique points"
msgstr ""
"'degree'의 값은 반드시 고유한 값을 가지는 포인트들의 개수보다 적어야 합니다"

#. R/ts.R: warning("'end' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'end' argument was not changed"
msgstr "변경되지 않은 'end' 값입니다"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "'f()' values at end points are not of opposite sign"
#: R/nlm.R:0
msgid "'f()' values at end points are not of opposite sign"
msgstr ""

#. R/nlm.R: stop("'f.lower = f(lower)' is NA")
#: R/nlm.R:0
#, fuzzy
msgid "'f.lower = f(lower)' is NA"
msgstr "f.lower = f(lower)의 결과가 NA입니다"

#. R/nlm.R: stop("'f.upper = f(upper)' is NA")
#: R/nlm.R:0
#, fuzzy
msgid "'f.upper = f(upper)' is NA"
msgstr "f.upper = f(upper)의 결과가 NA입니다"

#. R/glm.R: stop("'family' argument seems not to be a valid family object", call. = FALSE)
#: R/glm.R:0
msgid "'family' argument seems not to be a valid family object"
msgstr "'family' 인자는 유효한 family 객체가 아닌 것 같습니다"

#. R/glm.R: stop("'family' argument was not recognized")
#: R/glm.R:0
#, fuzzy
msgid "'family' argument was not recognized"
msgstr "인식할 수 없는 'family'입니다"

#. R/filter.R: stop("'filter' is longer than time series")
#: R/filter.R:0
msgid "'filter' is longer than time series"
msgstr "'filter'는 더이상 시계열이 아닙니다"

#. R/bartlett.test.R: stop("'formula' argument should be of the form response ~ group")
#. R/fligner.test.R: stop("'formula' argument should be of the form response ~ group")
#. R/kruskal.test.R: stop("'formula' argument should be of the form response ~ group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#, fuzzy
msgid "'formula' argument should be of the form response ~ group"
msgstr "'formula'는 반드시 response ~ group의 형식을 가져야 합니다"

#. R/ftable.R: stop("'formula' has '.' in both left and right hand sides")
#: R/ftable.R:0
msgid "'formula' has '.' in both left and right hand sides"
msgstr "'formula'의 양변 모두 '.'를 가지고 있습니다"

#. R/aggregate.R: stop("'formula' must have both left and right hand sides")
#. R/ftable.R: stop("'formula' must have both left and right hand sides")
#: R/aggregate.R:0 R/ftable.R:0
msgid "'formula' must have both left and right hand sides"
msgstr "'formula'는 반드시 좌변과 우변이 함께 있어야 합니다"

#. R/ts.R: stop("'frequency' and 'deltat' arguments are both supplied and are inconsistent")
#: R/ts.R:0
msgid ""
"'frequency' and 'deltat' arguments are both supplied and are inconsistent"
msgstr ""

#. R/ts.R: warning("'frequency' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'frequency' argument was not changed"
msgstr "변경되지 않은 'frequency'입니다"

#. R/dendrogram.R: gettextf("'height' must be at least %g, the maximal height of its components", h.max)
#: R/dendrogram.R:0
msgid "'height' must be at least %g, the maximal height of its components"
msgstr "'height'는 적어도 구성요소들의 최대값인 %g이어야 합니다"

#. R/fisher.test.R: warning("'hybrid' argument is ignored for a 2 x 2 table")
#: R/fisher.test.R:0
#, fuzzy
msgid "'hybrid' argument is ignored for a 2 x 2 table"
msgstr "2 x 2 분할표에서 'hybrid'는 무시됩니다"

#. R/identify.hclust.R: stop("'k' and 'h' arguments must be a scalar")
#: R/identify.hclust.R:0
#, fuzzy
msgid "'k' and 'h' arguments must be a scalar"
msgstr "'k'와 'h'는 반드시 스칼라이어야 합니다"

#. R/runmed.R: gettextf("'k' is bigger than 'n'!  Changing 'k' to %d", k <- as.integer(1 + 2 * ((n -     1)%/%2)))
#: R/runmed.R:0
msgid "'k' is bigger than 'n'!  Changing 'k' to %d"
msgstr "'k'는 'n'보다 큽니다! 'k'를 %d로 변경합니다"

#. R/cmdscale.R: stop("'k' must be in {1, 2, ..  n - 1}")
#: R/cmdscale.R:0
msgid "'k' must be in {1, 2, ..  n - 1}"
msgstr "'k'는 반드시 {1, 2, .. n - 1} 내에 있어야 합니다"

#. R/runmed.R: gettextf("'k' must be odd!  Changing 'k' to %d", k <- as.integer(1 + 2 * (k%/%2)))
#: R/runmed.R:0
msgid "'k' must be odd!  Changing 'k' to %d"
msgstr "'k'는 반드시 홀수이어야 합니다!  'k'를 to %d로 변경합니다"

#. R/kernel.R: stop("'kernapply' is not available for object 'x'")
#: R/kernel.R:0
msgid "'kernapply' is not available for object 'x'"
msgstr "객체 'x'에 'kernapply'을 사용할 수 없습니다"

#. R/logLik.R: gettextf("'log Lik.' %s (df=%s)", paste(format(c(x), digits = digits), collapse = ", "),     format(attr(x, "df")), domain = "R-stats")
#: R/logLik.R:0
msgid "'log Lik.' %s (df=%s)"
msgstr ""

#. R/logLik.R: stop("'logLik.lm()' does not support multiple responses")
#: R/logLik.R:0
msgid "'logLik.lm()' does not support multiple responses"
msgstr ""

#. R/mad.R: stop("'low' and 'high' arguments cannot be both TRUE")
#: R/mad.R:0
#, fuzzy
msgid "'low' and 'high' arguments cannot be both TRUE"
msgstr "'low'와 'high' 동시에 TRUE일 수 없습니다"

#. R/optim.R: stop("'lower' and 'upper' arguments must be finite values")
#: R/optim.R:0
#, fuzzy
msgid "'lower' and 'upper' arguments must be finite values"
msgstr "'lower'과 'upper'의 값은 반드시 유한해야 합니다"

#. R/kernel.R: stop("'m' argument must be numeric vector with non-negative integers")
#: R/kernel.R:0
#, fuzzy
msgid "'m' argument must be numeric vector with non-negative integers"
msgstr "'m'은 반드시 음이 아닌 정수를 가지는 숫자이어야 합니다"

#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#: R/termplot.R:0
msgid "'main' must be TRUE, FALSE, NULL or character (vector)."
msgstr "'main'은 반드시 TRUE, FALSE, NULL 또는 문자 (벡터)입니다."

#. R/loglin.R: stop("'margin' argument must contain names or numbers corresponding to 'table' argument")
#: R/loglin.R:0
msgid ""
"'margin' argument must contain names or numbers corresponding to 'table' "
"argument"
msgstr ""

#. R/dendrogram.R: stop("'margins' must be a numeric vector of length 2")
#: R/dendrogram.R:0
#, fuzzy
msgid "'margins' must be a numeric vector of length 2"
msgstr "'margins'는 반드시 길이가 2인 수치형 벡터이어야 합니다"

#. R/hclust.R: gettext("'merge' component in dendrogram must be integer", domain = "R-stats")
#: R/hclust.R:0
msgid "'merge' component in dendrogram must be integer"
msgstr "덴드로그램에서 'merge'요소는 반드시 정수이어야 합니다"

#. R/hclust.R: gettext("'merge' matrix has invalid contents", domain = "R-stats")
#: R/hclust.R:0
msgid "'merge' matrix has invalid contents"
msgstr ""

#. R/dendrogram.R: warning("'midcache()' of non-binary dendrograms only partly implemented")
#: R/dendrogram.R:0
#, fuzzy
msgid "'midcache()' of non-binary dendrograms only partly implemented"
msgstr "부분적으로만 구현된 바이너리가 아닌 덴드로그램들의 midcahe()입니다"

#. R/ts.R: stop("'model$order' must be of length 3")
#: R/ts.R:0
#, fuzzy
msgid "'model$order' must be of length 3"
msgstr "'model$order'는 길이가 반드시 3이어야 합니다"

#. R/termplot.R: warning("'model' appears to involve interactions: see the help page", domain = "R-stats",     immediate. = TRUE)
#: R/termplot.R:0
msgid "'model' appears to involve interactions: see the help page"
msgstr ""

#. R/model.tables.R: stop("'model.tables()' is not implemented for multiple responses")
#: R/model.tables.R:0
#, fuzzy
msgid "'model.tables()' is not implemented for multiple responses"
msgstr "다변량모델을 위한 'se.fit'은 아직 구현되어 있지 않습니다"

#. R/t.test.R: stop("'mu' must be a single number")
#. R/wilcox.test.R: stop("'mu' must be a single number")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'mu' must be a single number"
msgstr "'mu'는 반드시 한개의 숫자이어야 합니다"

#. R/fisher.test.R: stop("'mult' must be integer >= 2, typically = 30")
#: R/fisher.test.R:0
#, fuzzy
msgid "'mult' must be integer >= 2, typically = 30"
msgstr "'mult'는 반드시 2이상의 정수이어야 하는데 일반적으로 30이 사용됩니다"

#. R/binom.test.R: stop("'n' argument must be a positive integer >= 'x' argument")
#: R/binom.test.R:0
#, fuzzy
msgid "'n' argument must be a positive integer >= 'x' argument"
msgstr "'n'은 반드시 'x'보다 크거나 같은 양의 정수이어야 합니다"

#. R/ts.R: stop("'n' argument must be strictly positive")
#: R/ts.R:0
#, fuzzy
msgid "'n' argument must be strictly positive"
msgstr "'n'은 반드시 양수이어야 합니다"

#. R/power.anova.test.R: gettext("'n' is number in each group", domain = "R-stats")
#: R/power.anova.test.R:0
msgid "'n' is number in each group"
msgstr ""

#. R/power.R: gettext("'n' is number of *pairs*, 'sd' is std.dev. of *differences* within pairs")
#: R/power.R:0
msgid ""
"'n' is number of *pairs*, 'sd' is std.dev. of *differences* within pairs"
msgstr ""

#. R/prcomp.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#. R/princomp-add.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid ""
"'newdata' does not have named columns matching one or more of the original "
"columns"
msgstr ""
"'newdata'는 하나 또는 그 이상의 본래의 행들에 일치하는 named columns를 가지"
"고 있지 않습니다"

#. R/prcomp.R: stop("'newdata' does not have the correct number of columns")
#. R/princomp-add.R: stop("'newdata' does not have the correct number of columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have the correct number of columns"
msgstr "'newdata'는 올바른 열의 수를 가지고 있지 않습니다"

#. R/prcomp.R: stop("'newdata' must be a matrix or data frame")
#. R/princomp-add.R: stop("'newdata' must be a matrix or data frame")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' must be a matrix or data frame"
msgstr "'newdata'는 반드시 행렬 또는 데이터 프레임이어야 합니다"

#. R/smspline.R: stop("'nknots' must be numeric (in {1,..,n})")
#: R/smspline.R:0
msgid "'nknots' must be numeric (in {1,..,n})"
msgstr "'nknots'는 반드시 {1,..,n)내에 있는 수치형이어야 합니다"

#. R/ppr.R: stop("'nterms' is missing with no default")
#: R/ppr.R:0
msgid "'nterms' is missing with no default"
msgstr "'nterms'은 기본값 없이 누락되었습니다"

#. R/aov.R: stop("'object' argument does not include an error 'qr' component")
#: R/aov.R:0
#, fuzzy
msgid "'object' argument does not include an error 'qr' component"
msgstr "'object'는 에러 'qr'구성요소를 포함하고 있지 않습니다"

#. R/C.R: stop("'object' argument is not interpretable as a factor")
#: R/C.R:0
#, fuzzy
msgid "'object' argument is not interpretable as a factor"
msgstr "요인으로서 해석되어 질 수 없는 객체입니다"

#. R/lm.R: stop("'object' has no 'effects' component")
#: R/lm.R:0
msgid "'object' has no 'effects' component"
msgstr "'object'는 'effects' 구성요소를 가지고 있지 않습니다"

#. R/fisher.test.R: stop("'or' argument must be a single number between 0 and Inf")
#: R/fisher.test.R:0
#, fuzzy
msgid "'or' argument must be a single number between 0 and Inf"
msgstr "'or'은 반드시 0과 Inf사이의 한개의 숫자이어야 합니다"

#. R/arima.R: stop("'order' argument must be a non-negative numeric vector of length 3")
#: R/arima.R:0
#, fuzzy
msgid "'order' argument must be a non-negative numeric vector of length 3"
msgstr ""
"'order'는 반드시 길이가 3이며 음의 값을 가지지 않는 수치형 벡터이어야 합니다"

#. R/arma0.R: stop("'order' must be a non-negative numeric vector of length 3")
#: R/arma0.R:0
#, fuzzy
msgid "'order' must be a non-negative numeric vector of length 3"
msgstr ""
"'order'는 반드시 길이가 3이며 음의 값을 가지지 않는 수치형 벡터이어야 합니다"

#. R/dendrogram.R: stop("'order.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'order.dendrogram' requires a dendrogram"
msgstr "'order.dendrogram'는 덴드로그램을 필요로 합니다"

#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#: R/ar.R:0
#, fuzzy
msgid "'order.max' argument must be < 'n.used' argument"
msgstr "'order.max'는 반드시 'n.used'보다 작아야 합니다"

#. R/stepfun.R: stop("'plot.stepfun' called with wrong type of argument 'x'")
#: R/stepfun.R:0
msgid "'plot.stepfun' called with wrong type of argument 'x'"
msgstr ""

#. R/ppr.R: stop("'ppr' applies only to numerical variables")
#: R/ppr.R:0
msgid "'ppr' applies only to numerical variables"
msgstr "'ppr'은 오로지 수치형 변수들에만 적용합니다"

#. R/princomp.R: stop("'princomp' can only be used with more units than variables")
#: R/princomp.R:0
msgid "'princomp' can only be used with more units than variables"
msgstr ""

#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#: R/distn.R:0
#, fuzzy
msgid "'prob' and 'mu' arguments are both specified"
msgstr "'prob'와 'mu' 모두 지정되어 있습니다"

#. R/proj.R: stop("'proj()' is not implemented for multiple responses")
#. R/proj.R: stop("'proj()' is not implemented for multiple responses")
#: R/proj.R:0
#, fuzzy
msgid "'proj()' is not implemented for multiple responses"
msgstr "다변량모델을 위한 'se.fit'은 아직 구현되어 있지 않습니다"

#. R/relevel.R: stop("'ref' must be an existing level")
#: R/relevel.R:0
msgid "'ref' must be an existing level"
msgstr "'ref'는 반드시 존재하는 level이어야 합니다"

#. R/relevel.R: stop("'relevel' only for factors")
#. R/relevel.R: stop("'relevel' only for factors")
#: R/relevel.R:0
msgid "'relevel' only for factors"
msgstr ""

#. R/dendrogram.R: stop("'reorder.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'reorder.dendrogram' requires a dendrogram"
msgstr "'reorder.dendrogram'는 덴드로그램을 필요로 합니다"

#. R/ftable.R: stop("'row.var.names' missing")
#: R/ftable.R:0
msgid "'row.var.names' missing"
msgstr "'row.var.names'이 빠져있습니다"

#. R/acf.R: stop("'sampleT' and 'nser' arguments must be integer")
#: R/acf.R:0
#, fuzzy
msgid "'sampleT' and 'nser' arguments must be integer"
msgstr "'sampleT'와 'nser'는 반드시 정수이어야 합니다"

#. R/contr.poly.R: stop("'scores' must all be different numbers")
#: R/contr.poly.R:0
msgid "'scores' must all be different numbers"
msgstr "'scores'는 반드시 모두 다른 숫자들이어야 합니다"

#. R/ar.R: warning("'se.fit()' not yet implemented for multivariate models")
#: R/ar.R:0
#, fuzzy
msgid "'se.fit()' not yet implemented for multivariate models"
msgstr "다변량모델을 위한 'se.fit'은 아직 구현되어 있지 않습니다"

#. R/arima.R: stop("'seasonal$order' component must be a non-negative numeric vector of length 3")
#: R/arima.R:0
#, fuzzy
msgid ""
"'seasonal$order' component must be a non-negative numeric vector of length 3"
msgstr ""
"'seasonal$order'는 반드시 길이가 3이며 음의 값을 가지지 않는 수치형 벡터이어"
"야 합니다"

#. R/arma0.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#: R/arma0.R:0
#, fuzzy
msgid "'seasonal$order' must be a non-negative numeric vector of length 3"
msgstr ""
"'seasonal$order'는 반드시 길이가 3이며 음의 값을 가지지 않는 수치형 벡터이어"
"야 합니다"

#. R/arima.R: stop("'seasonal' argument must be a list with component 'order'")
#. R/arima.R: stop("'seasonal' argument must be a list with component 'order'")
#: R/arima.R:0
#, fuzzy
msgid "'seasonal' argument must be a list with component 'order'"
msgstr "'seasonal'은 반드시 'order'라는 요소를 함께 가지는 리스트이어야 합니다"

#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#: R/arma0.R:0
msgid "'seasonal' must be a list with component 'order'"
msgstr "'seasonal'은 반드시 'order'라는 요소를 함께 가지는 리스트이어야 합니다"

#. R/reshape.R: stop("'sep' must be a character string")
#: R/reshape.R:0
msgid "'sep' must be a character string"
msgstr "'sep'은 반드시 문자열이어야 합니다"

#. R/filter.R: stop("'sides' argument must be 1 or 2")
#: R/filter.R:0
#, fuzzy
msgid "'sides' argument must be 1 or 2"
msgstr "인자 'sides'는 반드시 1 또는 2이어야 합니다"

#. R/power.R: stop("'sig.level' argument must be numeric in [0, 1]")
#. R/power.R: stop("'sig.level' argument must be numeric in [0, 1]")
#. R/power.anova.test.R: stop("'sig.level' argument must be numeric in [0, 1]")
#: R/power.R:0 R/power.anova.test.R:0
#, fuzzy
msgid "'sig.level' argument must be numeric in [0, 1]"
msgstr "'sig.level'은 반드시 [0, 1]내에 있는 숫자이어야 합니다"

#. R/spline.R: stop("'spline' requires n >= 1")
#: R/spline.R:0
#, fuzzy
msgid "'spline' requires n >= 1"
msgstr "'spline'은 n이 1보다 크거나 같아야 합니다"

#. R/ts.R: stop("'start' > 'end'")
#: R/ts.R:0
msgid "'start' > 'end'"
msgstr "'start'는 'end'보다 큽니다"

#. R/ts.R: warning("'start' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'start' argument was not changed"
msgstr "변경되지 않은 'start'값입니다"

#. R/ts.R: stop("'start' cannot be after 'end'")
#. R/ts.R: stop("'start' cannot be after 'end'")
#: R/ts.R:0
msgid "'start' cannot be after 'end'"
msgstr "'start'는 'end' 뒤에 놓일 수 없습니다"

#. R/density.R: warning("'sum(weights) != 1'  -- will not get true density")
#: R/density.R:0
#, fuzzy
msgid "'sum(weights) != 1'  -- will not get true density"
msgstr "sum(weights) != 1 이므로 이것으로부터 확률밀도를 얻을 수 없습니다"

#. R/models.R: stop("'termlabels' must be a character vector of length at least one")
#: R/models.R:0
msgid "'termlabels' must be a character vector of length at least one"
msgstr "'termlabels'는 반드시 적어도 길이가 1인 문자형 벡터이어야 합니다"

#. R/smspline.R: stop("'tol' must be strictly positive and finite")
#: R/smspline.R:0
msgid "'tol' must be strictly positive and finite"
msgstr "'tol'은 반드시 양수이고 유한해야 합니다"

#. R/optim.R: stop("'trace != 0' needs 'REPORT >= 1'")
#: R/optim.R:0
msgid "'trace != 0' needs 'REPORT >= 1'"
msgstr "'trace != 0'은 'REPORT >= 1'를 필요로 합니다"

#. R/ts.R: stop("'ts' object must have one or more observations")
#: R/ts.R:0
msgid "'ts' object must have one or more observations"
msgstr "'ts' 객체는 반드시 하나 또는 그 이상의 관찰값들을 가집니다"

#. R/smspline.R: stop("'type = \"partial\"' is not yet implemented")
#: R/smspline.R:0
#, fuzzy
msgid "'type = \"partial\"' is not yet implemented"
msgstr "type에 \"partial\" 옵션은 아직 구현되지 않았습니다"

#. R/family.R: gettextf("'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\"",     variance_nm)
#: R/family.R:0
msgid ""
"'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", "
"\"mu^2\", \"mu^3\" and \"constant\""
msgstr ""
"유효하지 않은 'variance' \"%s\" 입니다: 가능한 값들은 \"mu(1-mu)\", \"mu\", "
"\"mu^2\", \"mu^3\" 그리고 \"constant\"입니다"

#. R/nls-profile.R: stop("'varying' argument must be in 'seq_along(pars)'")
#: R/nls-profile.R:0
#, fuzzy
msgid "'varying' argument must be in 'seq_along(pars)'"
msgstr "'varying'은 반드시 seq_along(pars)내에 있어야 합니다"

#. R/reshape.R: stop("'varying' arguments must be the same length")
#: R/reshape.R:0
msgid "'varying' arguments must be the same length"
msgstr "'varying' 인자들은 반드시 같은 길이이어야 합니다"

#. R/nls-profile.R: stop("'varying' must be in seq_along(pars)")
#: R/nls-profile.R:0
msgid "'varying' must be in seq_along(pars)"
msgstr "'varying'은 반드시 seq_along(pars)내에 있어야 합니다"

#. R/nls-profile.R: stop("'varying' must be logical, integer or character")
#: R/nls-profile.R:0
msgid "'varying' must be logical, integer or character"
msgstr "'varying'은 반드시 논리값, 정수 또는 문자이어야 합니다"

#. R/reshape.R: stop("'varying' must be nonempty list or vector")
#: R/reshape.R:0
msgid "'varying' must be nonempty list or vector"
msgstr "'varying'은 반드시 비어있지 않은 리스트 또는 벡터이어야 합니다"

#. R/density.R: stop("'weights' argument must all be finite")
#: R/density.R:0
#, fuzzy
msgid "'weights' argument must all be finite"
msgstr "'split' 인자는 반드시 리스트이어야 합니다"

#. R/density.R: stop("'weights' argument must not be negative")
#: R/density.R:0
#, fuzzy
msgid "'weights' argument must not be negative"
msgstr "'weights'는 반드시 음수이어야 합니다"

#. R/lm.R: stop("'weights' as formula should be one-sided")
#: R/lm.R:0
msgid "'weights' as formula should be one-sided"
msgstr ""

#. R/TukeyHSD.R: stop("'which' specified no factors")
#: R/TukeyHSD.R:0
msgid "'which' specified no factors"
msgstr "'which'는 어떠한 요인들도 지정하지 않았습니다"

#. R/TukeyHSD.R: warning("'which' specified some non-factors which will be dropped")
#: R/TukeyHSD.R:0
msgid "'which' specified some non-factors which will be dropped"
msgstr "'which'는 제거되어질 일부 요인이 아닌 것들을 지정했습니다"

#. R/acf.R: stop("'x$lag' must have at least 1 column")
#: R/acf.R:0
#, fuzzy
msgid "'x$lag' must have at least 1 column"
msgstr "x$lag은 적어도 1개의 열을 반드시 가지고 있어야 합니다"

#. R/poisson.test.R: stop("'x' and 'T' arguments have incompatible length")
#: R/poisson.test.R:0
#, fuzzy
msgid "'x' and 'T' arguments have incompatible length"
msgstr "'x'와 'g'는 반드시 같은 길이를 가지고 있어야 합니다"

#. R/distn.R: stop("'x' and 'prob' arguments must be equal length vectors")
#: R/distn.R:0
#, fuzzy
msgid "'x' and 'prob' arguments must be equal length vectors"
msgstr "x[]와 prob[]는 반드시 같은 길이를 가지는 벡터이어야 합니다"

#. R/chisq.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#. R/fisher.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#. R/mantelhaen.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mantelhaen.test.R:0
#, fuzzy
msgid "'x' and 'y' arguments must have at least 2 levels"
msgstr "'x'와 'y'는 반드시 최소한 2 level들을 가져야 합니다"

#. R/mcnemar.test.R: stop("'x' and 'y' must have the same number of levels (minimum 2)")
#: R/mcnemar.test.R:0
msgid "'x' and 'y' must have the same number of levels (minimum 2)"
msgstr "'x'와 'y'는 반드시 같은 수의 level들을 가져야 합니다 (적어도 2이상)"

#. R/density.R: stop("'x' argument contains missing values")
#: R/density.R:0
#, fuzzy
msgid "'x' argument contains missing values"
msgstr "'x'는 결측치들을 포함하고 있습니다"

#. R/fisher.test.R: gettextf("'x' argument has been rounded to integer: %s", ax)
#: R/fisher.test.R:0
#, fuzzy
msgid "'x' argument has been rounded to integer: %s"
msgstr "'x'는 다음과 같은 정수로 반올림 되었습니다: %s"

#. R/fisher.test.R: stop("'x' argument has entries too large to be integer")
#: R/fisher.test.R:0
msgid "'x' argument has entries too large to be integer"
msgstr ""

#. R/kruskal.test.R: warning("'x' argument is a list, so ignoring argument 'g'")
#: R/kruskal.test.R:0
#, fuzzy
msgid "'x' argument is a list, so ignoring argument 'g'"
msgstr "'col.vars'이 빠져있거나 잘못되었습니다"

#. R/cor.R: stop("'x' argument is empty")
#: R/cor.R:0
#, fuzzy
msgid "'x' argument is empty"
msgstr "'x'는 empty합니다"

#. R/kruskal.test.R: stop("'x' argument must be a list with at least 2 elements")
#: R/kruskal.test.R:0
#, fuzzy
msgid "'x' argument must be a list with at least 2 elements"
msgstr "'x'는 반드시 2개의 요소들을 가지고 있는 리스트이어야 합니다"

#. R/anova.R: stop("'x' argument must be coefficient matrix or data frame")
#: R/anova.R:0
#, fuzzy
msgid "'x' argument must be coefficient matrix or data frame"
msgstr "'x'는 반드시 계수 행렬/데이터 프레임이어야 합니다"

#. R/poisson.test.R: stop("'x' argument must be finite, nonnegative, and integer")
#: R/poisson.test.R:0
#, fuzzy
msgid "'x' argument must be finite, nonnegative, and integer"
msgstr "'x'는 반드시 유한해야 하고, 음이 아닌 정수이어야 합니다"

#. R/distn.R: stop("'x' argument must be non-negative")
#: R/distn.R:0
#, fuzzy
msgid "'x' argument must be non-negative"
msgstr "'x'는 반드시 음수가 아니어야 합니다"

#. R/binom.test.R: stop("'x' argument must be non-negative and integer")
#: R/binom.test.R:0
#, fuzzy
msgid "'x' argument must be non-negative and integer"
msgstr "'x'는 반드시 음의 값을 가지지 않는 정수이어야 합니다"

#. R/fisher.test.R: stop("'x' argument must have at least 2 rows and 2 columns")
#: R/fisher.test.R:0
#, fuzzy
msgid "'x' argument must have at least 2 rows and 2 columns"
msgstr "'x'는 반드시 적어도 2개의 행과 2개의 열을 가지고 있어야 합니다"

#. R/kernel.R: stop("'x' is shorter than kernel 'k'")
#: R/kernel.R:0
msgid "'x' is shorter than kernel 'k'"
msgstr "'x'는 커널 'k'보다 짧습니다"

#. R/chisq.test.R: stop("'x' must at least have 2 elements")
#: R/chisq.test.R:0
msgid "'x' must at least have 2 elements"
msgstr "'x'는 반드시 적어도 2개의 요소들을 가지고 있어야 합니다"

#. R/splinefun.R: stop("'x' must be *strictly* increasing (non - NA)")
#: R/splinefun.R:0
msgid "'x' must be *strictly* increasing (non - NA)"
msgstr "'x'는 반드시 *단조* 증가해야합니다 (non - NA)"

#. R/mantelhaen.test.R: stop("'x' must be a 3-dimensional array")
#: R/mantelhaen.test.R:0
msgid "'x' must be a 3-dimensional array"
msgstr "'x'는 반드시 3차원 배열이어야 합니다"

#. R/bartlett.test.R: stop("'x' must be a list with at least 2 elements")
#. R/fligner.test.R: stop("'x' must be a list with at least 2 elements")
#: R/bartlett.test.R:0 R/fligner.test.R:0
msgid "'x' must be a list with at least 2 elements"
msgstr "'x'는 반드시 2개의 요소들을 가지고 있는 리스트이어야 합니다"

#. R/cov.wt.R: stop("'x' must be a matrix or a data frame")
#: R/cov.wt.R:0
msgid "'x' must be a matrix or a data frame"
msgstr "'x'는 반드시 행렬 또는 데이터 프레임이어야 합니다"

#. R/dendrogram.R: stop("'x' must be a numeric matrix")
#: R/dendrogram.R:0
msgid "'x' must be a numeric matrix"
msgstr "'x'는 반드시 수치형 행렬이어야 합니다"

#. R/spectrum.R: stop("'x' must be a time series or an ar() fit")
#: R/spectrum.R:0
msgid "'x' must be a time series or an ar() fit"
msgstr "'x'는 반드시 시계열이거나 ar() 적합이어야 합니다"

#. R/smspline.R: stop("'x' must be between 0 and 1 for periodic smooth")
#: R/smspline.R:0
msgid "'x' must be between 0 and 1 for periodic smooth"
msgstr ""

#. R/mcnemar.test.R: stop("'x' must be square with at least two rows and columns")
#: R/mcnemar.test.R:0
msgid "'x' must be square with at least two rows and columns"
msgstr "'x'는 반드시 적어도 2개의 행과 열을 가진 정방형이어야 합니다"

#. R/cov.wt.R: stop("'x' must contain finite values only")
#: R/cov.wt.R:0
msgid "'x' must contain finite values only"
msgstr "'x'는 반드시 유하한 값들만을 포함하고 있어야 합니다"

#. R/ecdf.R: stop("'x' must have 1 or more non-missing values")
#: R/ecdf.R:0
msgid "'x' must have 1 or more non-missing values"
msgstr "'x'는 반드시 한 개 또는 그 이상의 결측되지 않은 값들이 있어야 합니다"

#. R/pairwise.R: stop("'x' must have 2 columns")
#. R/prop.test.R: stop("'x' must have 2 columns")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' must have 2 columns"
msgstr "'x'는 반드시 2개의 열들을 가지고 있어야 합니다"

#. R/dendrogram.R: stop("'x' must have at least 2 rows and 2 columns")
#: R/dendrogram.R:0
msgid "'x' must have at least 2 rows and 2 columns"
msgstr "'x'는 반드시 적어도 2개의 행과 2개의 열을 가지고 있어야 합니다"

#. R/diffinv.R: stop("'xi' does not have the right length")
#: R/diffinv.R:0
msgid "'xi' does not have the right length"
msgstr "'xi'는 올바른 길이를 가지고 있지 않습니다"

#. R/arima.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#. R/arma0.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#: R/arima.R:0 R/arma0.R:0
msgid "'xreg' and 'newxreg' have different numbers of columns"
msgstr "'xreg'와 'newxred'의 열의 길이가 서로 다릅니다"

#. R/arma0.R: stop("'xreg' argument is collinear")
#: R/arma0.R:0
#, fuzzy
msgid "'xreg' argument is collinear"
msgstr "'xreg'는 공선형입니다"

#. R/ts.R: stop("'xy.labels' must be logical or character")
#: R/ts.R:0
msgid "'xy.labels' must be logical or character"
msgstr "'xy.labels'는 반드시 논리값 또는 문자이어야 합니다"

#. R/qqnorm.R: stop("'y' argument is empty or has only NA values")
#: R/qqnorm.R:0
#, fuzzy
msgid "'y' argument is empty or has only NA values"
msgstr "y는 비어 있거나 오로지 NA만을 가집니다"

#. R/t.test.R: stop("'y' is missing for paired test")
#. R/wilcox.test.R: stop("'y' is missing for paired test")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'y' is missing for paired test"
msgstr ""

#. R/spline.R: stop("'y' must be increasing or decreasing")
#. R/splinefun.R: stop("'y' must be increasing or decreasing")
#: R/spline.R:0 R/splinefun.R:0
msgid "'y' must be increasing or decreasing"
msgstr "'y'는 반드시 증가 또는 감소 해야합니다"

#. R/ks.test.R: stop("'y' must be numeric or a function or a string naming a valid function")
#: R/ks.test.R:0
msgid "'y' must be numeric or a function or a string naming a valid function"
msgstr ""
"'y'는 반드시 수치형이거나 함수 또는 유효한 함수를 이름짓는 문자열이어야 합니"
"다"

#. R/stepfun.R: stop("'y' must be one longer than 'x'")
#: R/stepfun.R:0
msgid "'y' must be one longer than 'x'"
msgstr "'y'는 반드시 'x'보다 길어야 합니다"

#. R/glm.R: gettextf("(Dispersion parameter for %s family taken to be %s)", x$family$family,     format(x$dispersion), domain = "R-stats")
#: R/glm.R:0
msgid "(Dispersion parameter for %s family taken to be %s)"
msgstr ""

#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/lm.influence.R: gettext("(Intercept)", domain = "R-stats")
#. R/manova.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#: R/dummy.coef.R:0 R/lm.influence.R:0 R/manova.R:0 R/proj.R:0
msgid "(Intercept)"
msgstr ""

#. R/kmeans.R: gettextf(" (between_SS / total_SS = %5.1f %%)", 100 * x$betweenss/x$totss, domain = "R-stats")
#: R/kmeans.R:0
msgid "(between_SS / total_SS = %5.1f %%)"
msgstr ""

#. R/models.R: gettext("(offset)", domain = "R-stats")
#. R/models.R: gettext("(offset)", domain = "R-stats")
#: R/models.R:0
msgid "(offset)"
msgstr ""

#. R/wilcox.test.R: gettext("(pseudo)median", domain = "R-stats")
#. R/wilcox.test.R: gettext("(pseudo)median", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "(pseudo)median"
msgstr ""

#. R/models.R: gettext("(weights)", domain = "R-stats")
#: R/models.R:0
msgid "(weights)"
msgstr ""

#. R/isoreg.R: gettextf("  (x,y) ordering: %s", str(x$ord), domain = "R-stats")
#: R/isoreg.R:0
msgid "(x,y) ordering: %s"
msgstr ""

#. R/lm.R: stop("0 (non-NA) cases")
#. R/lm.R: stop("0 (non-NA) cases")
#: R/lm.R:0
msgid "0 (non-NA) cases"
msgstr ""

#. R/glm.R: stop("0s in V(mu)")
#: R/glm.R:0
msgid "0s in V(mu)"
msgstr "V(mu)내에 0이 있습니다"

#. R/fisher.test.R: stop("2 or more non-zero column marginals are needed")
#: R/fisher.test.R:0
#, fuzzy
msgid "2 or more non-zero column marginals are needed"
msgstr "0의 값을 가지지 않는 열방향의 marginal들이 2개 이상 필요합니다"

#. R/fisher.test.R: stop("2 or more non-zero row marginals are needed")
#: R/fisher.test.R:0
#, fuzzy
msgid "2 or more non-zero row marginals are needed"
msgstr "0의 값을 가지지 않는 행방향의 marginal들이 2개 이상 필요합니다"

#. R/acf.R: gettext("ACF", domain = "R-stats")
#: R/acf.R:0
msgid "ACF"
msgstr ""

#. R/acf.R: gettext("ACF (cov)", domain = "R-stats")
#: R/acf.R:0
msgid "ACF (cov)"
msgstr ""

#. R/StructTS.R: gettext("ACF of Residuals")
#: R/StructTS.R:0
msgid "ACF of Residuals"
msgstr ""

#. R/add.R: stop("AIC is -infinity for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is -infinity for this model, so 'step' cannot proceed"
msgstr ""
"AIC는 이 모델에서 음의 무한값을 가지므로 'step'은 더 이상 진행할 수 없습니다"

#. R/add.R: stop("AIC is not defined for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is not defined for this model, so 'step' cannot proceed"
msgstr ""
"AIC는 이 모델에 정의되어 있지 않으므로 'step'은 더 이상 진행할 수 없습니다"

#. R/glm.R: gettext("AIC: ", domain = "R-stats")
#: R/glm.R:0
msgid "AIC:"
msgstr ""

#. R/lm.R: warning("ANOVA F-tests on an essentially perfect fit are unreliable")
#: R/lm.R:0
msgid "ANOVA F-tests on an essentially perfect fit are unreliable"
msgstr ""

#. R/nls.R: gettext("Achieved convergence tolerance:", domain = "R-stats")
#: R/nls.R:0
msgid "Achieved convergence tolerance:"
msgstr ""

#. R/lm.R: gettext("Adjusted R-squared: ", domain = "R-stats")
#: R/lm.R:0
msgid "Adjusted R-squared:"
msgstr ""

#. R/nls.R: gettext("Algorithm \"port\", convergence message: ", domain = "R-stats")
#: R/nls.R:0
msgid "Algorithm \"port\", convergence message:"
msgstr ""

#. R/add.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#. R/glm.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#. R/glm.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#: R/add.R:0 R/glm.R:0
msgid "Analysis of Deviance Table"
msgstr ""

#. R/lm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/lm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/mlm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/mlm.R: gettext("Analysis of Variance Table")
#. R/nls.R: gettext("Analysis of Variance Table")
#: R/lm.R:0 R/mlm.R:0 R/nls.R:0
msgid "Analysis of Variance Table"
msgstr ""

#. R/loess.R: gettextf("Analysis of Variance:   denominator df %s", format(round(dfden, 2L)), domain = "R-stats")
#: R/loess.R:0
msgid "Analysis of Variance:   denominator df %s"
msgstr ""

#. R/ansari.test.R: gettext("Ansari-Bradley test", domain = "R-stats")
#: R/ansari.test.R:0
msgid "Ansari-Bradley test"
msgstr ""

#. R/lm.R: warning("Assuming constant prediction variance even though model fit is weighted")
#: R/lm.R:0
msgid "Assuming constant prediction variance even though model fit is weighted"
msgstr ""

#. R/acf.R: gettextf("Autocorrelations of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Autocorrelations of series %s, by lag"
msgstr ""

#. R/acf.R: gettextf("Autocovariances of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Autocovariances of series %s, by lag"
msgstr ""

#. R/kmeans.R: gettext("Available components:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Available components:"
msgstr ""

#. R/power.anova.test.R: gettext("Balanced one-way analysis of variance power calculation", domain = "R-stats")
#: R/power.anova.test.R:0
msgid "Balanced one-way analysis of variance power calculation"
msgstr ""

#. R/density.R: gettextf("Bandwidth 'bw' = %s", formatC(x$bw, digits = digits), domain = "R-stats")
#: R/density.R:0
msgid "Bandwidth 'bw' = %s"
msgstr ""

#. R/constrOptim.R: gettext("Barrier algorithm ran out of iterations and did not converge")
#: R/constrOptim.R:0
msgid "Barrier algorithm ran out of iterations and did not converge"
msgstr "Barrier 알고리즘이 주어진 최대반복수에 도달했으므로 수렴하지 않습니다"

#. R/bartlett.test.R: gettext("Bartlett test of homogeneity of variances", domain = "R-stats")
#: R/bartlett.test.R:0
msgid "Bartlett test of homogeneity of variances"
msgstr ""

#. R/bartlett.test.R: gettext("Bartlett's K-squared", domain = "R-stats")
#: R/bartlett.test.R:0
msgid "Bartlett's K-squared"
msgstr ""

#. R/ts-tests.R: gettext("Box-Ljung test")
#: R/ts-tests.R:0
msgid "Box-Ljung test"
msgstr ""

#. R/ts-tests.R: gettext("Box-Pierce test")
#: R/ts-tests.R:0
msgid "Box-Pierce test"
msgstr ""

#. R/HoltWinters.R: gettext("Call:", domain = "R-stats")
#. R/StructTS.R: gettext("Call:", domain = "R-stats")
#. R/aov.R: gettext("Call:", domain = "R-stats")
#. R/aov.R: gettext("Call:", domain = "R-stats")
#. R/ar.R: gettext("Call:", domain = "R-stats")
#. R/arima.R: gettext("Call:", domain = "R-stats")
#. R/arma0.R: gettext("Call:", domain = "R-stats")
#. R/density.R: gettext("Call:", domain = "R-stats")
#. R/ecdf.R: gettext("Call: ", domain = "R-stats")
#. R/factanal.R: gettext("Call:", domain = "R-stats")
#. R/glm.R: gettext("Call:  ", domain = "R-stats")
#. R/glm.R: gettext("Call:", domain = "R-stats")
#. R/hclust.R: gettext("Call:", domain = "R-stats")
#. R/lm.R: gettext("Call:", domain = "R-stats")
#. R/lm.R: gettext("Call:", domain = "R-stats")
#. R/loess.R: gettext("Call:", domain = "R-stats")
#. R/loess.R: gettext("Call:", domain = "R-stats")
#. R/ppr.R: gettext("Call:", domain = "R-stats")
#. R/princomp.R: gettext("Call:", domain = "R-stats")
#. R/smspline.R: gettext("Call:", domain = "R-stats")
#. R/stepfun.R: gettext("Call: ", domain = "R-stats")
#. R/stl.R: gettext(" Call:", domain = "R-stats")
#. R/stl.R: gettext(" Call:", domain = "R-stats")
#: R/HoltWinters.R:0 R/StructTS.R:0 R/aov.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0
#: R/density.R:0 R/ecdf.R:0 R/factanal.R:0 R/glm.R:0 R/hclust.R:0 R/lm.R:0
#: R/loess.R:0 R/ppr.R:0 R/princomp.R:0 R/smspline.R:0 R/stepfun.R:0 R/stl.R:0
msgid "Call:"
msgstr ""

#. R/prop.trend.test.R: gettext("Chi-squared Test for Trend in Proportions", domain = "R-stats")
#: R/prop.trend.test.R:0
msgid "Chi-squared Test for Trend in Proportions"
msgstr ""

#. R/chisq.test.R: warning("Chi-squared approximation may be incorrect")
#. R/prop.test.R: warning("Chi-squared approximation may be incorrect")
#: R/chisq.test.R:0 R/prop.test.R:0
msgid "Chi-squared approximation may be incorrect"
msgstr "카이제곱 approximation은 정확하지 않을수도 있습니다"

#. R/chisq.test.R: gettext("Chi-squared test for given probabilities", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Chi-squared test for given probabilities"
msgstr ""

#. R/chisq.test.R: gettextf("Chi-squared test for given probabilities with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/chisq.test.R:0
msgid ""
"Chi-squared test for given probabilities with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/hclust.R: gettext("Cluster Dendrogram")
#: R/hclust.R:0
#, fuzzy
msgid "Cluster Dendrogram"
msgstr "유효하지 않은 덴드로그램입니다"

#. R/kmeans.R: gettext("Cluster means:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Cluster means:"
msgstr ""

#. R/hclust.R: gettext("Cluster method: ", domain = "R-stats")
#: R/hclust.R:0
#, fuzzy
msgid "Cluster method:"
msgstr "유효하지 않은 클러스터링 메소드입니다"

#. R/kmeans.R: gettext("Clustering vector:", domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "Clustering vector:"
msgstr "유효하지 않은 클러스터링 메소드입니다"

#. R/mantelhaen.test.R: gettext("Cochran-Mantel-Haenszel M^2", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Cochran-Mantel-Haenszel M^2"
msgstr ""

#. R/mantelhaen.test.R: gettext("Cochran-Mantel-Haenszel test", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Cochran-Mantel-Haenszel test"
msgstr ""

#. R/glm.R: gettextf("Coefficients  [contrasts: %s]:", apply(cbind(names(co), co), 1L, paste,     collapse = "="), domain = "R-stats")
#: R/glm.R:0
msgid "Coefficients  [contrasts: %s]:"
msgstr ""

#. R/ppr.R: gettext("Coefficients of ridge terms:", domain = "R-stats")
#: R/ppr.R:0
msgid "Coefficients of ridge terms:"
msgstr ""

#. R/HoltWinters.R: gettext("Coefficients:", domain = "R-stats")
#. R/ar.R: gettext("Coefficients:", domain = "R-stats")
#. R/arima.R: gettext("Coefficients:", domain = "R-stats")
#. R/arma0.R: gettext("Coefficients:", domain = "R-stats")
#. R/glm.R: gettext("Coefficients:", domain = "R-stats")
#. R/glm.R: gettext("Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Coefficients:", domain = "R-stats")
#: R/HoltWinters.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/glm.R:0 R/lm.R:0
msgid "Coefficients:"
msgstr ""

#. R/medpolish.R: gettext("Column Effects:", domain = "R-stats")
#: R/medpolish.R:0
msgid "Column Effects:"
msgstr ""

#. R/dendrogram.R: stop("Colv = \"Rowv\" but nrow(x) != ncol(x)")
#: R/dendrogram.R:0
msgid "Colv = \"Rowv\" but nrow(x) != ncol(x)"
msgstr "Colv = \"Rowv\"인데, nrow(x)와 ncol(x)가 같지 않습니다"

#. R/poisson.test.R: gettext("Comparison of Poisson rates", domain = "R-stats")
#: R/poisson.test.R:0
msgid "Comparison of Poisson rates"
msgstr ""

#. R/stl.R: gettext("Components", domain = "R-stats")
#: R/stl.R:0
msgid "Components"
msgstr ""

#. R/hclust.R: gettextf("\n Consider providing '%s' method", paste("as.hclust.", oldClass(x)[1L],     "()", collapse = ""))
#: R/hclust.R:0
#, fuzzy
msgid "Consider providing '%s' method"
msgstr "as.hclust.%s() 메소드를 사용하는 것을 고려해주세요"

#. R/nls.R: warning("No starting values specified for some parameters.", "\n", gettextf("Initializing %s to '1.'.",     tmp_n), "\n", "Consider specifying 'start' or using a selfStart model", domain = "R-stats",     sep = "")
#: R/nls.R:0
msgid "Consider specifying 'start' or using a selfStart model"
msgstr ""

#. R/plot.lm.R: gettext("Constant Leverage:\n Residuals vs Factor Levels")
#: R/plot.lm.R:0
msgid ""
"Constant Leverage:\n"
" Residuals vs Factor Levels"
msgstr ""

#. R/aov.R: gettextf("Contrast %s", seq(ncol(contrast)), domain = "R-stats")
#: R/aov.R:0
msgid "Contrast %s"
msgstr ""

#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#: R/mlm.R:0
msgid "Contrast matrix %s"
msgstr ""

#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#: R/mlm.R:0
msgid "Contrasts orthogonal to %s"
msgstr ""

#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#: R/mlm.R:0
msgid "Contrasts spanned by %s"
msgstr ""

#. R/loess.R: gettext("Control settings:", domain = "R-stats")
#: R/loess.R:0
msgid "Control settings:"
msgstr ""

#. R/nls.R: gettextf("Convergence failure: %s", msg.nls)
#: R/nls.R:0
msgid "Convergence failure: %s"
msgstr ""

#. R/plot.lm.R: gettext("Cook's dist vs Leverage  ")
#: R/plot.lm.R:0
msgid "Cook's dist vs Leverage"
msgstr ""

#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#: R/plot.lm.R:0
msgid "Cook's distance"
msgstr ""

#. R/glm.R: gettext("Correlation of Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Correlation of Coefficients:", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "Correlation of Coefficients:"
msgstr ""

#. R/nls.R: gettext("Correlation of Parameter Estimates:", domain = "R-stats")
#: R/nls.R:0
msgid "Correlation of Parameter Estimates:"
msgstr ""

#. R/isoreg.R: gettext("Cumulative Data and Convex Minorant", domain = "R-stats")
#: R/isoreg.R:0
msgid "Cumulative Data and Convex Minorant"
msgstr ""

#. R/nls.R: gettext("Data:", domain = "R-stats")
#. R/pairwise.R: gettext("Data: ", domain = "R-stats")
#: R/nls.R:0 R/pairwise.R:0
msgid "Data:"
msgstr ""

#. R/HoltWinters.R: gettext("Decomposition of additive time series")
#: R/HoltWinters.R:0
msgid "Decomposition of additive time series"
msgstr ""

#. R/HoltWinters.R: gettext("Decomposition of multiplicative time series")
#: R/HoltWinters.R:0
msgid "Decomposition of multiplicative time series"
msgstr ""

#. R/glm.R: gettextf("Degrees of Freedom: %d Total (i.e. Null); %d Residual", x$df.null, x$df.residual,     domain = "R-stats")
#: R/glm.R:0
msgid "Degrees of Freedom: %d Total (i.e. Null); %d Residual"
msgstr ""

#. R/density.R: gettext("Density", domain = "R-stats")
#: R/density.R:0
msgid "Density"
msgstr ""

#. R/model.tables.R: message("Design is unbalanced - use 'se.contrast()' for se's")
#: R/model.tables.R:0
#, fuzzy
msgid "Design is unbalanced - use 'se.contrast()' for se's"
msgstr ""
"디자인이 unbalance 하므로 se를 계산하고자 할때는 se.contrast()를 사용해주세요"

#. R/glm.R: gettextf("Deviance = %s Iterations - %d\n", dev, iter, domain = "R-stats")
#: R/glm.R:0
msgid "Deviance = %s Iterations - %d"
msgstr ""

#. R/glm.R: gettext("Deviance Residuals:", domain = "R-stats")
#: R/glm.R:0
msgid "Deviance Residuals:"
msgstr ""

#. R/medpolish.R: gettext("Diagnostic Comparison Values", domain = "R-stats")
#: R/medpolish.R:0
msgid "Diagnostic Comparison Values"
msgstr ""

#. R/ts-tests.R: gettext("Dickey-Fuller")
#: R/ts-tests.R:0
msgid "Dickey-Fuller"
msgstr ""

#. R/TukeyHSD.R: gettextf("Differences in mean levels of %s", names(x)[i], domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "Differences in mean levels of %s"
msgstr ""

#. R/hclust.R: gettext("Distance: ", domain = "R-stats")
#: R/hclust.R:0
msgid "Distance:"
msgstr ""

#. R/ecdf.R: gettext("Empirical CDF", domain = "R-stats")
#: R/ecdf.R:0
msgid "Empirical CDF"
msgstr ""

#. R/ecdf.R: gettextf("Empirical CDF:\t  %d unique values with summary\n", n, domain = "R-stats")
#: R/ecdf.R:0
msgid "Empirical CDF:\t  %d unique values with summary"
msgstr ""

#. R/smspline.R: gettextf("Equivalent Degrees of Freedom (Df): %s", format(x$df, digits = digits),     domain = "R-stats")
#: R/smspline.R:0
#, fuzzy
msgid "Equivalent Degrees of Freedom (Df): %s"
msgstr "잔차에 자유도가 없습니다"

#. R/loess.R: gettext("Equivalent Number of Parameters:", domain = "R-stats")
#. R/loess.R: gettext("Equivalent Number of Parameters:", domain = "R-stats")
#: R/loess.R:0
msgid "Equivalent Number of Parameters:"
msgstr ""

#. R/ppr.R: gettext("Equivalent df for ridge terms:", domain = "R-stats")
#: R/ppr.R:0
msgid "Equivalent df for ridge terms:"
msgstr ""

#. R/aov.R: warning("Error() model is singular")
#: R/aov.R:0
msgid "Error() model is singular"
msgstr "Error() 모델이 singular합니다"

#. R/dummy.coef.R: gettext("Error:", domain = "R-stats")
#: R/dummy.coef.R:0
msgid "Error:"
msgstr ""

#. R/aov.R: gettextf("Error: %s", strata, domain = "R-stats")
#: R/aov.R:0
msgid "Error: %s"
msgstr ""

#. R/aov.R: gettext("Estimated effects are balanced", domain = "R-stats")
#: R/aov.R:0
msgid "Estimated effects are balanced"
msgstr ""

#. R/aov.R: gettext("Estimated effects may be unbalanced", domain = "R-stats")
#: R/aov.R:0
msgid "Estimated effects may be unbalanced"
msgstr ""

#. R/poisson.test.R: gettext("Exact Poisson test", domain = "R-stats")
#: R/poisson.test.R:0
msgid "Exact Poisson test"
msgstr ""

#. R/binom.test.R: gettext("Exact binomial test", domain = "R-stats")
#: R/binom.test.R:0
msgid "Exact binomial test"
msgstr ""

#. R/mantelhaen.test.R: gettext("Exact conditional test of independence in 2 x 2 x k tables", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Exact conditional test of independence in 2 x 2 x k tables"
msgstr ""

#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#: R/add.R:0
msgid "F test assumes 'quasi%s' family"
msgstr "F 테스트는 'quasi%s' 페밀리를 가정합니다"

#. R/var.test.R: gettext("F test to compare two variances", domain = "R-stats")
#: R/var.test.R:0
msgid "F test to compare two variances"
msgstr ""

#. R/lsfit.R: gettextf("F-statistic (df=%s, %s)=%s", format(degfree), format(n[i] - p), format(round(fstat[i],     digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "F-statistic (df=%s, %s)=%s"
msgstr ""

#. R/lm.R: gettextf("F-statistic: %s on %d and %d DF", formatC(x$fstatistic[1L], digits = digits),     x$fstatistic[2L], x$fstatistic[3L], domain = "R-stats")
#: R/lm.R:0
msgid "F-statistic: %s on %d and %d DF"
msgstr ""

#. R/factanal.R: gettext("Factor Correlations:", domain = "R-stats")
#: R/factanal.R:0
msgid "Factor Correlations:"
msgstr ""

#. R/plot.lm.R: gettext("Factor Level Combinations")
#: R/plot.lm.R:0
msgid "Factor Level Combinations"
msgstr ""

#. R/family.R: gettext("Family: ", domain = "R-stats")
#: R/family.R:0
msgid "Family:"
msgstr ""

#. R/add.R: gettext("Final Model: ", domain = "R-stats")
#: R/add.R:0
msgid "Final Model:"
msgstr ""

#. R/medpolish.R: gettext("Final: ", domain = "R-stats")
#: R/medpolish.R:0
msgid "Final:"
msgstr ""

#. R/fisher.test.R: gettext("Fisher's Exact Test for Count Data", domain = "R-stats")
#: R/fisher.test.R:0
msgid "Fisher's Exact Test for Count Data"
msgstr ""

#. R/fisher.test.R: gettextf("Fisher's Exact Test for Count Data with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/fisher.test.R:0
msgid ""
"Fisher's Exact Test for Count Data with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/TukeyHSD.R: gettext("Fit: ", domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "Fit:"
msgstr ""

#. R/nls.R: gettext("Fitted values")
#. R/plot.lm.R: gettext("Fitted values")
#: R/nls.R:0 R/plot.lm.R:0
msgid "Fitted values"
msgstr ""

#. R/fligner.test.R: gettext("Fligner-Killeen test of homogeneity of variances", domain = "R-stats")
#: R/fligner.test.R:0
msgid "Fligner-Killeen test of homogeneity of variances"
msgstr ""

#. R/fligner.test.R: gettext("Fligner-Killeen:med chi-squared", domain = "R-stats")
#: R/fligner.test.R:0
msgid "Fligner-Killeen:med chi-squared"
msgstr ""

#. R/nls.R: gettext("Formula:", domain = "R-stats")
#: R/nls.R:0
msgid "Formula:"
msgstr ""

#. R/friedman.test.R: gettext("Friedman chi-squared", domain = "R-stats")
#: R/friedman.test.R:0
msgid "Friedman chi-squared"
msgstr ""

#. R/friedman.test.R: gettext("Friedman rank sum test", domain = "R-stats")
#: R/friedman.test.R:0
msgid "Friedman rank sum test"
msgstr ""

#. R/dummy.coef.R: gettext("Full coefficients are:", domain = "R-stats")
#: R/dummy.coef.R:0
msgid "Full coefficients are:"
msgstr ""

#. R/ppr.R: gettext("Goodness of fit:", domain = "R-stats")
#: R/ppr.R:0
msgid "Goodness of fit:"
msgstr ""

#. R/aov.R: gettext("Grand Mean: ", domain = "R-stats")
#: R/aov.R:0
msgid "Grand Mean:"
msgstr ""

#. R/aov.R: gettext("Grand Means:", domain = "R-stats")
#: R/aov.R:0
msgid "Grand Means:"
msgstr ""

#. R/model.tables.R: gettext("Grand mean", domain = "R-stats")
#: R/model.tables.R:0
msgid "Grand mean"
msgstr ""

#. R/mlm.R: gettext("Greenhouse-Geisser epsilon:", domain = "R-stats")
#. R/mlm.R: gettext("Greenhouse-Geisser epsilon:")
#: R/mlm.R:0
msgid "Greenhouse-Geisser epsilon:"
msgstr ""

#. R/aggregate.R: gettextf("Group.%d", seq_along(by))
#. R/aggregate.R: gettextf("Group.%d", ind)
#: R/aggregate.R:0
msgid "Group.%d"
msgstr ""

#. R/hclust.R: gettext("Height")
#: R/hclust.R:0
msgid "Height"
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and additive seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and additive seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and multiplicative seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and multiplicative seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and without seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and without seasonal component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and with additive seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and with additive seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and with multiplicative seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and with multiplicative "
"seasonal component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and without seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and without seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters filtering")
#: R/HoltWinters.R:0
msgid "Holt-Winters filtering"
msgstr ""

#. R/mlm.R: gettext("Huynh-Feldt epsilon:", domain = "R-stats")
#. R/mlm.R: gettext("Huynh-Feldt epsilon:")
#: R/mlm.R:0
msgid "Huynh-Feldt epsilon:"
msgstr ""

#. R/stl.R: gettext(" IQR:", domain = "R-stats")
#: R/stl.R:0
msgid "IQR:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid ""
"If writing your own selfStart model, see \"help(selfStart)\" for the new "
"form of the \"initial\" attribute."
msgstr ""

#. R/prcomp.R: gettext("Importance of components:", domain = "R-stats")
#. R/princomp-add.R: gettext("Importance of components:", domain = "R-stats")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "Importance of components:"
msgstr ""

#. R/lm.influence.R: gettextf("Influence measures of\n\t%s:", paste(deparse(x$call), collapse = ""), domain = "R-stats")
#: R/lm.influence.R:0
msgid ""
"Influence measures of\n"
"\t%s:"
msgstr ""

#. R/add.R: gettext("Initial Model: ", domain = "R-stats")
#: R/add.R:0
msgid "Initial Model:"
msgstr ""

#. R/nls.R: gettextf("Initializing %s to '1.'.", tmp_n)
#: R/nls.R:0
msgid "Initializing %s to '1.'."
msgstr ""

#. R/ar.R: gettext("Intercept: ", domain = "R-stats")
#: R/ar.R:0
msgid "Intercept:"
msgstr ""

#. R/isoreg.R: gettextf("Isotonic regression %s", paste(deparse(x$call), collapse = ""), domain = "R-stats")
#: R/isoreg.R:0
msgid "Isotonic regression %s"
msgstr ""

#. R/cor.test.R: gettext("Kendall's rank correlation tau", domain = "R-stats")
#: R/cor.test.R:0
msgid "Kendall's rank correlation tau"
msgstr ""

#. R/kruskal.test.R: gettext("Kruskal-Wallis chi-squared", domain = "R-stats")
#: R/kruskal.test.R:0
msgid "Kruskal-Wallis chi-squared"
msgstr ""

#. R/kruskal.test.R: gettext("Kruskal-Wallis rank sum test", domain = "R-stats")
#: R/kruskal.test.R:0
msgid "Kruskal-Wallis rank sum test"
msgstr ""

#. R/nlminb.R: gettext("LIV too small (15)")
#: R/nlminb.R:0
msgid "LIV too small (15)"
msgstr ""

#. R/nlminb.R: gettext("LV too small (16)")
#: R/nlminb.R:0
msgid "LV too small (16)"
msgstr ""

#. R/StructTS.R: gettext("Lag")
#. R/acf.R: gettext("Lag", domain = "R-stats")
#: R/StructTS.R:0 R/acf.R:0
msgid "Lag"
msgstr ""

#. R/plot.lm.R: gettext("Leverage")
#. R/plot.lm.R: gettext("Leverage  ")
#: R/plot.lm.R:0
msgid "Leverage"
msgstr ""

#. R/family.R: gettext("Link function: ", domain = "R-stats")
#: R/family.R:0
#, fuzzy
msgid "Link function:"
msgstr "유효한 step function이 아닙니다"

#. R/factanal.R: gettext("Loadings:", domain = "R-stats")
#. R/princomp-add.R: gettext("Loadings:", domain = "R-stats")
#: R/factanal.R:0 R/princomp-add.R:0
msgid "Loadings:"
msgstr ""

#. R/arima.R: warning("MA part of model is not invertible")
#. R/arma0.R: warning("MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "MA part of model is not invertible"
msgstr "모델의 MA부분은 invertible 합니다"

#. R/ar.R: stop("MLE only implemented for univariate series")
#: R/ar.R:0
msgid "MLE only implemented for univariate series"
msgstr "MLE가 단변량시리즈에 대해서만 구현되어 있습니다"

#. R/mantelhaen.test.R: gettext("Mantel-Haenszel X-squared", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Mantel-Haenszel X-squared"
msgstr ""

#. R/mantelhaen.test.R: gettext("Mantel-Haenszel chi-squared test with continuity correction", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Mantel-Haenszel chi-squared test with continuity correction"
msgstr ""

#. R/addmargins.R: gettext("Margins computed over dimensions in the following order:", domain = "R-stats")
#: R/addmargins.R:0
msgid "Margins computed over dimensions in the following order:"
msgstr ""

#. R/mlm.R: gettext("Mauchly's test of sphericity")
#: R/mlm.R:0
msgid "Mauchly's test of sphericity"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's Chi-squared test", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's Chi-squared test"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's Chi-squared test with continuity correction", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's Chi-squared test with continuity correction"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's chi-squared", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's chi-squared"
msgstr ""

#. R/medpolish.R: gettextf("Median Polish Results (Dataset: %s)", sQuote(x$name), domain = "R-stats")
#: R/medpolish.R:0
msgid "Median Polish Results (Dataset: %s)"
msgstr ""

#. R/nls.R: gettextf("Model %s:", format(1L:nmodels))
#: R/nls.R:0
msgid "Model %s:"
msgstr ""

#. R/glm.R: gettextf("Model %s: %s", format(1L:nmodels), variables, domain = "R-stats")
#. R/lm.R: gettextf("Model %s: %s", format(seq_len(nmodels)), variables, domain = "R-stats")
#. R/loess.R: gettextf("Model %s: %s", format(seq_len(nmodels)), models, domain = "R-stats")
#. R/mlm.R: gettextf("Model %s: %s", format(seq_len(nmodels)), variables, domain = "R-stats")
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0
msgid "Model %s: %s"
msgstr ""

#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/glm.R: gettext("Model: ", domain = "R-stats")
#. R/nls.R: gettext("Model:", domain = "R-stats")
#: R/add.R:0 R/glm.R:0 R/nls.R:0
msgid "Model:"
msgstr ""

#. R/mood.test.R: gettext("Mood two-sample test of scale", domain = "R-stats")
#: R/mood.test.R:0
msgid "Mood two-sample test of scale"
msgstr ""

#. R/lm.R: gettext("Multiple R-squared:", domain = "R-stats")
#: R/lm.R:0
msgid "Multiple R-squared:"
msgstr ""

#. R/density.R: gettextf("N = %s   Bandwidth = %s", x$n, formatC(x$bw), domain = "R-stats")
#: R/density.R:0
msgid "N = %s   Bandwidth = %s"
msgstr ""

#. R/smspline.R: stop("NA lev[]; probably smoothing parameter 'spar' is way too large!")
#: R/smspline.R:0
msgid "NA lev[]; probably smoothing parameter 'spar' is way too large!"
msgstr ""

#. R/mantelhaen.test.R: stop("NA values are not allowed")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "NA values are not allowed"
msgstr "NA를 사용할 수 없습니다"

#. R/cmdscale.R: stop("NA values are not allowed in 'd' argument")
#: R/cmdscale.R:0
#, fuzzy
msgid "NA values are not allowed in 'd' argument"
msgstr "NA값들은 'd'에서 사용할 수 없습니다"

#. R/friedman.test.R: stop("NA values are not allowed in 'groups' or 'blocks' arguments")
#. R/quade.test.R: stop("NA values are not allowed in 'groups' or 'blocks' arguments")
#: R/friedman.test.R:0 R/quade.test.R:0
#, fuzzy
msgid "NA values are not allowed in 'groups' or 'blocks' arguments"
msgstr "NA는 'groups' 또는 'blocks'내에서 허용되지 않습니다"

#. R/arma0.R: warning("NA values are present: setting 'delta' to -1")
#: R/arma0.R:0
#, fuzzy
msgid "NA values are present: setting 'delta' to -1"
msgstr "NA가 존재하므로 'delta'를 -1로 설정합니다"

#. R/arima.R: gettextf("NA values in '%s'", "phi")
#. R/arima.R: gettextf("NA values in '%s'", "theta")
#: R/arima.R:0
#, fuzzy
msgid "NA values in '%s'"
msgstr "'%s' 내에 NA가 존재합니다"

#. R/acf.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#: R/acf.R:0 R/ar.R:0
#, fuzzy
msgid "NA values in 'x'"
msgstr "'x'내에 NA가 있습니다"

#. R/glm.R: stop("NAs in V(mu)")
#: R/glm.R:0
msgid "NAs in V(mu)"
msgstr "V(mu)내에 NA가 있습니다"

#. R/glm.R: stop("NAs in d(mu)/d(eta)")
#: R/glm.R:0
msgid "NAs in d(mu)/d(eta)"
msgstr "d(mu)/d(eta)내에 NA가 있습니다"

#. R/lm.influence.R: gettext("NONE", domain = "R-stats")
#: R/lm.influence.R:0
msgid "NONE"
msgstr ""

#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "NOT changed:"
msgstr ""

#. R/power.R: gettext("NOTE: ", domain = "R-stats")
#: R/power.R:0
msgid "NOTE:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid "New selfStart functions are available."
msgstr ""

#. R/glm.R: gettext("No coefficients", domain = "R-stats")
#. R/glm.R: gettext("No coefficients", domain = "R-stats")
#. R/lm.R: gettext("No coefficients", domain = "R-stats")
#. R/lm.R: gettext("No coefficients", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "No coefficients"
msgstr ""

#. R/manova.R: gettext("No error degrees of freedom", domain = "R-stats")
#: R/manova.R:0
#, fuzzy
msgid "No error degrees of freedom"
msgstr "잔차에 자유도가 없습니다"

#. R/nls.R: warning("No starting values specified for some parameters.", "\n", gettextf("Initializing %s to '1.'.",     tmp_n), "\n", "Consider specifying 'start' or using a selfStart model", domain = "R-stats",     sep = "")
#: R/nls.R:0
#, fuzzy
msgid "No starting values specified for some parameters."
msgstr "초기값 지정이 이루어지지 않았습니다"

#. R/nls.R: gettext("Nonlinear regression model", domain = "R-stats")
#: R/nls.R:0
msgid "Nonlinear regression model"
msgstr ""

#. R/plot.lm.R: gettext("Normal Q-Q")
#: R/plot.lm.R:0
msgid "Normal Q-Q"
msgstr ""

#. R/qqnorm.R: gettext("Normal Q-Q Plot")
#: R/qqnorm.R:0
msgid "Normal Q-Q Plot"
msgstr ""

#. R/aov.R: gettext("Note: The results below are on the weighted scale", domain = "R-stats")
#. R/aov.R: gettext("Note: The results below are on the weighted scale", domain = "R-stats")
#: R/aov.R:0
msgid "Note: The results below are on the weighted scale"
msgstr ""

#. R/model.tables.R: gettext("Notes:", domain = "R-stats")
#: R/model.tables.R:0
msgid "Notes:"
msgstr ""

#. R/glm.R: gettextf("Null Deviance:\t   %s\nResidual Deviance: %s\tAIC: %s", format(signif(x$null.deviance,     digits)), format(signif(x$deviance, digits)), format(signif(x$aic, digits)),     domain = "R-stats")
#: R/glm.R:0
msgid ""
"Null Deviance:\t   %s\n"
"Residual Deviance: %s\tAIC: %s"
msgstr ""

#. R/glm.R: gettext("Null deviance:", domain = "R-stats")
#: R/glm.R:0
msgid "Null deviance:"
msgstr ""

#. R/glm.R: gettext("Number of Fisher Scoring iterations: ", domain = "R-stats")
#: R/glm.R:0
#, fuzzy
msgid "Number of Fisher Scoring iterations:"
msgstr "최대반복수는 반드시 0 보다 커야 합니다"

#. R/loess.R: gettext("Number of Observations:", domain = "R-stats")
#. R/loess.R: gettext("Number of Observations:", domain = "R-stats")
#: R/loess.R:0
msgid "Number of Observations:"
msgstr ""

#. R/nls.R: gettext("Number of iterations till stop:", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Number of iterations till stop:"
msgstr "최대반복수는 반드시 0 보다 커야 합니다"

#. R/nls.R: gettext("Number of iterations to convergence:", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Number of iterations to convergence:"
msgstr "최대반복수는 반드시 0 보다 커야 합니다"

#. R/hclust.R: gettext("Number of objects: ", domain = "R-stats")
#: R/hclust.R:0
msgid "Number of objects:"
msgstr ""

#. R/constrOptim.R: gettextf("Objective function decreased at outer iteration %d", i)
#: R/constrOptim.R:0
msgid "Objective function decreased at outer iteration %d"
msgstr "outer iteration %d에서 목적함수가 감소했습니다"

#. R/constrOptim.R: gettextf("Objective function increased at outer iteration %d", i)
#: R/constrOptim.R:0
msgid "Objective function increased at outer iteration %d"
msgstr "outer iteration %d에서 목적함수가 증가했습니다"

#. R/plot.lm.R: gettext("Obs. number")
#: R/plot.lm.R:0
msgid "Obs. number"
msgstr ""

#. R/HoltWinters.R: gettext("Observed / Fitted")
#: R/HoltWinters.R:0
msgid "Observed / Fitted"
msgstr ""

#. R/t.test.R: gettext("One Sample t-test")
#: R/t.test.R:0
msgid "One Sample t-test"
msgstr ""

#. R/ks.test.R: gettext("One-sample Kolmogorov-Smirnov test", domain = "R-stats")
#: R/ks.test.R:0
#, fuzzy
msgid "One-sample Kolmogorov-Smirnov test"
msgstr "Kolmogorov-Smirnov 테스트를 이용할 때는 ties가 있으면 안됩니다"

#. R/power.R: gettext("One-sample t test power calculation")
#: R/power.R:0
msgid "One-sample t test power calculation"
msgstr ""

#. R/oneway.test.R: gettext("One-way analysis of means", domain = "R-stats")
#: R/oneway.test.R:0
msgid "One-way analysis of means"
msgstr ""

#. R/oneway.test.R: gettext("One-way analysis of means (not assuming equal variances)", domain = "R-stats")
#: R/oneway.test.R:0
msgid "One-way analysis of means (not assuming equal variances)"
msgstr ""

#. R/ar.R: gettextf("Order selected %s sigma^2 estimated as %s", x$order, format(x$var.pred,     digits = digits), domain = "R-stats")
#: R/ar.R:0
msgid "Order selected %s sigma^2 estimated as %s"
msgstr ""

#. R/stl.R: gettext("Other components: ", domain = "R-stats")
#: R/stl.R:0
msgid "Other components:"
msgstr ""

#. R/medpolish.R: gettext("Overall: ", domain = "R-stats")
#: R/medpolish.R:0
msgid "Overall:"
msgstr ""

#. R/pairwise.R: gettext("P-value adjustment method: ", domain = "R-stats")
#: R/pairwise.R:0
#, fuzzy
msgid "P-value adjustment method:"
msgstr "유효하지 않은 클러스터링 메소드입니다"

#. R/prcomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#: R/prcomp.R:0 R/princomp.R:0
msgid "PCA applies only to numerical variables"
msgstr ""

#. R/acf.R: gettextf("Page [%d,%d]: i =%s; j =%s", I, J, paste(iind, collapse = ","), paste(jind,     collapse = ","))
#: R/acf.R:0
msgid "Page [%d,%d]: i =%s; j =%s"
msgstr ""

#. R/power.R: gettext("Paired t test power calculation")
#: R/power.R:0
msgid "Paired t test power calculation"
msgstr ""

#. R/t.test.R: gettext("Paired t-test")
#: R/t.test.R:0
msgid "Paired t-test"
msgstr ""

#. R/pairwise.R: gettext("Paired t-tests", domain = "R-stats")
#: R/pairwise.R:0
msgid "Paired t-tests"
msgstr ""

#. R/pairwise.R: gettext("Pairwise comparison of proportions", domain = "R-stats")
#: R/pairwise.R:0
msgid "Pairwise comparison of proportions"
msgstr ""

#. R/pairwise.R: gettextf("Pairwise comparisons using %s", x$method, domain = "R-stats")
#: R/pairwise.R:0
msgid "Pairwise comparisons using %s"
msgstr ""

#. R/nls.R: gettext("Parameters:", domain = "R-stats")
#: R/nls.R:0
msgid "Parameters:"
msgstr ""

#. R/acf.R: gettext("Partial ACF", domain = "R-stats")
#: R/acf.R:0
msgid "Partial ACF"
msgstr ""

#. R/acf.R: gettextf("Partial autocorrelations of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Partial autocorrelations of series %s, by lag"
msgstr ""

#. R/termplot.R: gettextf("Partial for %s", nmt)
#. R/termplot.R: gettextf("Partial for %s", nmt)
#: R/termplot.R:0
msgid "Partial for %s"
msgstr ""

#. R/chisq.test.R: gettext("Pearson's Chi-squared test", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Pearson's Chi-squared test"
msgstr ""

#. R/chisq.test.R: gettext("Pearson's Chi-squared test with Yates' continuity correction", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Pearson's Chi-squared test with Yates' continuity correction"
msgstr ""

#. R/chisq.test.R: gettextf("Pearson's Chi-squared test with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/chisq.test.R:0
msgid ""
"Pearson's Chi-squared test with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/cor.test.R: gettext("Pearson's product-moment correlation", domain = "R-stats")
#: R/cor.test.R:0
msgid "Pearson's product-moment correlation"
msgstr ""

#. R/smspline.R: gettextf("Penalized Criterion: %s", format(x$pen.crit, digits = digits), domain = "R-stats")
#: R/smspline.R:0
msgid "Penalized Criterion: %s"
msgstr ""

#. R/ts-tests.R: gettext("Phillips-Perron Unit Root Test")
#: R/ts-tests.R:0
msgid "Phillips-Perron Unit Root Test"
msgstr ""

#. R/lm.influence.R: gettextf("Potentially influential observations of\n\t%s", paste(deparse(object$call),     collapse = ""), domain = "R-stats")
#: R/lm.influence.R:0
msgid ""
"Potentially influential observations of\n"
"\t%s"
msgstr ""

#. R/plot.lm.R: gettext("Predicted values")
#: R/plot.lm.R:0
msgid "Predicted values"
msgstr ""

#. R/ppr.R: gettext("Projection direction vectors:", domain = "R-stats")
#: R/ppr.R:0
msgid "Projection direction vectors:"
msgstr ""

#. R/quade.test.R: gettext("Quade F", domain = "R-stats")
#: R/quade.test.R:0
msgid "Quade F"
msgstr ""

#. R/quade.test.R: gettext("Quade test", domain = "R-stats")
#: R/quade.test.R:0
msgid "Quade test"
msgstr ""

#. R/kmeans.R: gettextf("Quick-TRANSfer stage steps exceeded maximum (= %d)", isteps.Qtran)
#: R/kmeans.R:0
msgid "Quick-TRANSfer stage steps exceeded maximum (= %d)"
msgstr ""

#. R/lsfit.R: gettextf("R-Square=%s", format(round(rsquared[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "R-Square=%s"
msgstr ""

#. R/nls.R: gettext("Reason stopped:", domain = "R-stats")
#: R/nls.R:0
msgid "Reason stopped:"
msgstr ""

#. R/aov.R: message("Refitting model to allow projection")
#: R/aov.R:0
msgid "Refitting model to allow projection"
msgstr "projection을 허용하도록 모델을 재적합합니다"

#. R/loess.R: gettext("Residual Scale Estimate:", domain = "R-stats")
#. R/loess.R: gettext("Residual Scale Estimate:", domain = "R-stats")
#: R/loess.R:0
msgid "Residual Scale Estimate:"
msgstr ""

#. R/lsfit.R: gettextf("Residual Standard Error=%s", format(round(resse[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "Residual Standard Error=%s"
msgstr ""

#. R/glm.R: gettext("Residual deviance:", domain = "R-stats")
#: R/glm.R:0
msgid "Residual deviance:"
msgstr ""

#. R/lm.R: gettextf("Residual standard error: %s on %d degrees of freedom", format(signif(x$sigma,     digits)), rdf, domain = "R-stats")
#. R/nls.R: gettextf("Residual standard error: %s on %d degrees of freedom", format(signif(x$sigma,     digits)), rdf, domain = "R-stats")
#: R/lm.R:0 R/nls.R:0
msgid "Residual standard error: %s on %d degrees of freedom"
msgstr ""

#. R/nls.R: gettext("Residual sum-of-squares:", domain = "R-stats")
#: R/nls.R:0
msgid "Residual sum-of-squares:"
msgstr ""

#. R/medpolish.R: gettext("Residuals", domain = "R-stats")
#. R/nls.R: gettext("Residuals")
#. R/plot.lm.R: gettext("Residuals")
#: R/medpolish.R:0 R/nls.R:0 R/plot.lm.R:0
msgid "Residuals"
msgstr ""

#. R/plot.lm.R: gettext("Residuals vs Fitted")
#: R/plot.lm.R:0
msgid "Residuals vs Fitted"
msgstr ""

#. R/plot.lm.R: gettext("Residuals vs Leverage")
#: R/plot.lm.R:0
msgid "Residuals vs Leverage"
msgstr ""

#. R/lm.R: gettext("Residuals:", domain = "R-stats")
#. R/medpolish.R: gettext("Residuals:", domain = "R-stats")
#: R/lm.R:0 R/medpolish.R:0
msgid "Residuals:"
msgstr ""

#. R/aov.R: gettextf("Response %s", cn, domain = "R-stats")
#: R/aov.R:0
msgid "Response %s"
msgstr ""

#. R/glm.R: gettext("Response: ", domain = "R-stats")
#. R/lm.R: gettext("Response:", domain = "R-stats")
#. R/lsfit.R: gettext("Response: ", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0 R/lsfit.R:0
msgid "Response:"
msgstr ""

#. R/prcomp.R: gettext("Rotated variables:", domain = "R-stats")
#: R/prcomp.R:0
msgid "Rotated variables:"
msgstr ""

#. R/prcomp.R: gettext("Rotation:", domain = "R-stats")
#: R/prcomp.R:0
msgid "Rotation:"
msgstr ""

#. R/medpolish.R: gettext("Row Effects:", domain = "R-stats")
#: R/medpolish.R:0
msgid "Row Effects:"
msgstr ""

#. R/model.tables.R: gettextf("SE's for type '%s' are not yet implemented", type)
#. R/model.tables.R: gettextf("SE's for type '%s' are not yet implemented", type)
#: R/model.tables.R:0
#, fuzzy
msgid "SE's for type '%s' are not yet implemented"
msgstr "유형 '%s'에 대한 SE는 아직 구현되지 않았습니다"

#. R/mlm.R: gettextf("SSD matrix from %s", paste(deparse(object$call), collapse = ""))
#: R/mlm.R:0
msgid "SSD matrix from %s"
msgstr ""

#. R/qqnorm.R: gettext("Sample Quantiles")
#: R/qqnorm.R:0
msgid "Sample Quantiles"
msgstr ""

#. R/plot.lm.R: gettext("Scale-Location")
#: R/plot.lm.R:0
msgid "Scale-Location"
msgstr ""

#. R/nlminb.R: gettextf("See PORT documentation.  Code (%d)", iv1)
#: R/nlminb.R:0
msgid "See PORT documentation.  Code (%d)"
msgstr ""

#. R/acf.R: gettextf("Series %s", x$series)
#. R/acf.R: gettextf("Series %s", seq_len(nser))
#: R/acf.R:0
msgid "Series %s"
msgstr ""

#. R/cpgram.R: gettext("Series: ", domain = "R-stats")
#: R/cpgram.R:0
msgid "Series:"
msgstr ""

#. R/shapiro.test.R: gettext("Shapiro-Wilk normality test", domain = "R-stats")
#: R/shapiro.test.R:0
msgid "Shapiro-Wilk normality test"
msgstr ""

#. R/anova.R: gettext("Signif. codes:  ", domain = "R-stats")
#: R/anova.R:0
msgid "Signif. codes:"
msgstr ""

#. R/add.R: gettext("Single term additions", domain = "R-stats")
#. R/add.R: gettext("Single term additions", domain = "R-stats")
#. R/add.R: gettext("Single term additions", domain = "R-stats")
#: R/add.R:0
msgid "Single term additions"
msgstr ""

#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#: R/add.R:0
msgid "Single term deletions"
msgstr ""

#. R/smspline.R: gettextf("Smoothing Parameter  spar=%s lambda=%s", format(x$spar, digits = digits),     format(x$lambda, digits = digits), domain = "R-stats")
#: R/smspline.R:0
msgid "Smoothing Parameter  spar=%s lambda=%s"
msgstr ""

#. R/HoltWinters.R: gettext("Smoothing parameters:", domain = "R-stats")
#: R/HoltWinters.R:0
msgid "Smoothing parameters:"
msgstr ""

#. R/cor.test.R: gettext("Spearman's rank correlation rho", domain = "R-stats")
#: R/cor.test.R:0
msgid "Spearman's rank correlation rho"
msgstr ""

#. R/prcomp.R: gettext("Standard deviations:", domain = "R-stats")
#. R/princomp.R: gettext("Standard deviations:", domain = "R-stats")
#: R/prcomp.R:0 R/princomp.R:0
msgid "Standard deviations:"
msgstr ""

#. R/model.tables.R: message("Standard error information not returned as design is unbalanced. \nStandard errors can be obtained through 'se.contrast'.")
#: R/model.tables.R:0
msgid ""
"Standard error information not returned as design is unbalanced. \n"
"Standard errors can be obtained through 'se.contrast'."
msgstr ""
"Standard error에 대한 정보는 디자인이 unbalance하므로 반환되지 않습니다. \n"
"Standard errors는 'se.contrast'을 통하여 얻을 수 있습니다."

#. R/model.tables.R: gettext("Standard errors for differences of means", domain = "R-stats")
#: R/model.tables.R:0
msgid "Standard errors for differences of means"
msgstr ""

#. R/model.tables.R: gettext("Standard errors of effects", domain = "R-stats")
#: R/model.tables.R:0
msgid "Standard errors of effects"
msgstr ""

#. R/model.tables.R: gettext("Standard errors of residuals", domain = "R-stats")
#: R/model.tables.R:0
msgid "Standard errors of residuals"
msgstr ""

#. R/StructTS.R: gettext("Standardized Residuals")
#: R/StructTS.R:0
msgid "Standardized Residuals"
msgstr ""

#. R/nls.R: gettext("Standardized residuals")
#. R/plot.lm.R: gettext("Standardized residuals")
#. R/plot.lm.R: gettext("Standardized residuals")
#: R/nls.R:0 R/plot.lm.R:0
msgid "Standardized residuals"
msgstr ""

#. R/add.R: gettextf("Start:  AIC=%s", format(round(bAIC, 2)), domain = "R-stats")
#: R/add.R:0
msgid "Start:  AIC=%s"
msgstr ""

#. R/plot.lm.R: gettext("Std. Pearson resid.")
#: R/plot.lm.R:0
msgid "Std. Pearson resid."
msgstr ""

#. R/plot.lm.R: gettext("Std. deviance resid.")
#: R/plot.lm.R:0
msgid "Std. deviance resid."
msgstr ""

#. R/stepfun.R: gettext("Step function", domain = "R-stats")
#: R/stepfun.R:0
#, fuzzy
msgid "Step function"
msgstr "유효한 step function이 아닙니다"

#. R/glm.R: gettextf("Step halved: new deviance = %s", dev, domain = "R-stats")
#. R/glm.R: gettextf("Step halved: new deviance = %s", dev, domain = "R-stats")
#: R/glm.R:0
msgid "Step halved: new deviance = %s"
msgstr ""

#. R/add.R: gettextf("Step:  AIC=%s", format(round(bAIC, 2)), domain = "R-stats")
#: R/add.R:0
msgid "Step:  AIC=%s"
msgstr ""

#. R/add.R: gettext("Stepwise Model Path", domain = "R-stats")
#: R/add.R:0
msgid "Stepwise Model Path"
msgstr ""

#. R/aov.R: gettextf("Stratum %d: %s", ii, i, domain = "R-stats")
#: R/aov.R:0
msgid "Stratum %d: %s"
msgstr ""

#. R/aov.R: gettext("Sum of Squares", domain = "R-stats")
#: R/aov.R:0
msgid "Sum of Squares"
msgstr ""

#. R/model.tables.R: gettext("Table of residuals from each stratum", domain = "R-stats")
#: R/model.tables.R:0
msgid "Table of residuals from each stratum"
msgstr ""

#. R/model.tables.R: gettext("Tables of effects", domain = "R-stats")
#: R/model.tables.R:0
msgid "Tables of effects"
msgstr ""

#. R/model.tables.R: gettext("Tables of means", domain = "R-stats")
#: R/model.tables.R:0
msgid "Tables of means"
msgstr ""

#. R/glm.R: gettext("Terms added sequentially (first to last)", domain = "R-stats")
#: R/glm.R:0
msgid "Terms added sequentially (first to last)"
msgstr ""

#. R/aov.R: gettext("Terms:", domain = "R-stats")
#: R/aov.R:0
msgid "Terms:"
msgstr ""

#. R/hclust.R: message("The 'ward()' method has been renamed to 'ward.D()'; note new 'ward.D2()'")
#: R/hclust.R:0
msgid ""
"The 'ward()' method has been renamed to 'ward.D()'; note new 'ward.D2()'"
msgstr ""

#. R/factanal.R: gettextf("The degrees of freedom for the model is %d and the fit was %s", x$dof,     round(x$criteria["objective"], 4), domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "The degrees of freedom for the model is %d and the fit was %s"
msgstr "잔차에 자유도가 없습니다"

#. R/factanal.R: gettextf("The p-value is %s", signif(x$PVAL, 3), domain = "R-stats")
#: R/factanal.R:0
msgid "The p-value is %s"
msgstr ""

#. R/qqnorm.R: gettext("Theoretical Quantiles")
#: R/qqnorm.R:0
msgid "Theoretical Quantiles"
msgstr ""

#. R/ts.R: gettext("Time", domain = "R-stats")
#: R/ts.R:0
msgid "Time"
msgstr ""

#. R/ts.R: gettextf("Time Series:\nStart = %s\nEnd = %s\nFrequency = %s", deparse(start(x)),     deparse(end(x)), deparse(fr.x), domain = "R-stats")
#. R/ts.R: gettextf("Time Series:\nStart = %s\nEnd = %s\nFrequency = %s", format(tsp(x)[1L]),     format(tsp(x)[2L]), deparse(fr.x), domain = "R-stats")
#: R/ts.R:0
msgid ""
"Time Series:\n"
"Start = %s\n"
"End = %s\n"
"Frequency = %s"
msgstr ""

#. R/stl.R: gettext("Time.series components:", domain = "R-stats")
#: R/stl.R:0
msgid "Time.series components:"
msgstr ""

#. R/loess.R: gettext("Trace of smoother matrix:", domain = "R-stats")
#: R/loess.R:0
msgid "Trace of smoother matrix:"
msgstr ""

#. R/ts-tests.R: gettext("Truncation lag parameter")
#: R/ts-tests.R:0
msgid "Truncation lag parameter"
msgstr ""

#. R/medpolish.R: gettext("Tukey Additivity Plot", domain = "R-stats")
#: R/medpolish.R:0
msgid "Tukey Additivity Plot"
msgstr ""

#. R/TukeyHSD.R: gettext("Tukey multiple comparisons of means", domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "Tukey multiple comparisons of means"
msgstr ""

#. R/t.test.R: gettext("Two Sample t-test")
#: R/t.test.R:0
msgid "Two Sample t-test"
msgstr ""

#. R/ks.test.R: gettext("Two-sample Kolmogorov-Smirnov test", domain = "R-stats")
#: R/ks.test.R:0
msgid "Two-sample Kolmogorov-Smirnov test"
msgstr ""

#. R/power.R: gettext("Two-sample comparison of proportions power calculation")
#: R/power.R:0
msgid "Two-sample comparison of proportions power calculation"
msgstr ""

#. R/power.R: gettext("Two-sample t test power calculation")
#: R/power.R:0
msgid "Two-sample t test power calculation"
msgstr ""

#. R/factanal.R: gettext("Uniquenesses:", domain = "R-stats")
#: R/factanal.R:0
msgid "Uniquenesses:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid ""
"Use\n"
"  SSfpl instead of fpl,\n"
"  SSfol instead of first.order.log,\n"
"  SSbiexp instead of biexp,\n"
"  SSlogis instead of logistic."
msgstr ""

#. R/nlminb.R: gettextf("V[IV[1]] = V[%d] = %g is out of range (see PORT docu.)", iv1, v[iv1])
#: R/nlminb.R:0
msgid "V[IV[1]] = V[%d] = %g is out of range (see PORT docu.)"
msgstr ""

#. R/princomp-add.R: gettext("Variances")
#. R/princomp-add.R: gettext("Variances")
#: R/princomp-add.R:0
msgid "Variances"
msgstr ""

#. R/StructTS.R: gettext("Variances:", domain = "R-stats")
#: R/StructTS.R:0
msgid "Variances:"
msgstr ""

#. R/kmeans.R: gettext("Warning: did *not* converge in specified number of iterations\n", domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "Warning: did *not* converge in specified number of iterations"
msgstr "glm.fit: 알고리즘이 수렴하지 않았습니다"

#. R/lm.R: gettext("Weighted Residuals:", domain = "R-stats")
#: R/lm.R:0
msgid "Weighted Residuals:"
msgstr ""

#. R/nls.R: gettext("Weighted residual sum-of-squares:", domain = "R-stats")
#: R/nls.R:0
msgid "Weighted residual sum-of-squares:"
msgstr ""

#. R/stl.R: gettext("Weights:", domain = "R-stats")
#: R/stl.R:0
msgid "Weights:"
msgstr ""

#. R/t.test.R: gettext("Welch Two Sample t-test")
#: R/t.test.R:0
msgid "Welch Two Sample t-test"
msgstr ""

#. R/model.tables.R: gettext("When comparing means with same levels of:", domain = "R-stats")
#: R/model.tables.R:0
msgid "When comparing means with same levels of:"
msgstr ""

#. R/pairwise.R: gettext("Wilcoxon rank sum test", domain = "R-stats")
#. R/wilcox.test.R: gettext("Wilcoxon rank sum test", domain = "R-stats")
#: R/pairwise.R:0 R/wilcox.test.R:0
msgid "Wilcoxon rank sum test"
msgstr ""

#. R/wilcox.test.R: gettext("Wilcoxon rank sum test with continuity correction", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "Wilcoxon rank sum test with continuity correction"
msgstr ""

#. R/pairwise.R: gettext("Wilcoxon signed rank test", domain = "R-stats")
#. R/wilcox.test.R: gettext("Wilcoxon signed rank test", domain = "R-stats")
#: R/pairwise.R:0 R/wilcox.test.R:0
msgid "Wilcoxon signed rank test"
msgstr ""

#. R/wilcox.test.R: gettext("Wilcoxon signed rank test with continuity correction", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "Wilcoxon signed rank test with continuity correction"
msgstr ""

#. R/kmeans.R: gettext("Within cluster sum of squares by cluster:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Within cluster sum of squares by cluster:"
msgstr ""

#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#: R/mlm.R:0
msgid "X does not define a subspace of M"
msgstr ""

#. R/nlminb.R: gettext("X-convergence (3)")
#: R/nlminb.R:0
msgid "X-convergence (3)"
msgstr ""

#. R/chisq.test.R: gettext("X-squared", domain = "R-stats")
#. R/prop.test.R: gettext("X-squared", domain = "R-stats")
#. R/prop.trend.test.R: gettext("X-squared", domain = "R-stats")
#. R/ts-tests.R: gettext("X-squared")
#: R/chisq.test.R:0 R/prop.test.R:0 R/prop.trend.test.R:0 R/ts-tests.R:0
msgid "X-squared"
msgstr ""

#. R/smooth.R: gettext("__twiced__ NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("__twiced__ NOT changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "__twiced__ NOT changed:"
msgstr ""

#. R/smooth.R: gettext("__twiced__ changed:", domain = "R-stats")
#. R/smooth.R: gettext("__twiced__ changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "__twiced__ changed:"
msgstr ""

#. R/oneway.test.R: stop("a two-sided formula is required")
#: R/oneway.test.R:0
msgid "a two-sided formula is required"
msgstr "양변을 가진 formula가 필요합니다"

#. R/nlminb.R: gettext("absolute function convergence (6)")
#: R/nlminb.R:0
msgid "absolute function convergence (6)"
msgstr ""

#. R/shapiro.test.R: stop("all 'x' values are identical")
#: R/shapiro.test.R:0
msgid "all 'x' values are identical"
msgstr "모든 'x'의 값들이 동일합니다"

#. R/zzModels.R: stop("all 'x' values must be non-negative to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "all 'x' values must be non-negative to fit the Weibull growth model"
msgstr ""

#. R/stl.R: gettext(" all == 1", domain = "R-stats")
#: R/stl.R:0
msgid "all == 1"
msgstr ""

#. R/identify.hclust.R: gettextf("all elements of 'which' must be between 1 and %d", k)
#: R/identify.hclust.R:0
msgid "all elements of 'which' must be between 1 and %d"
msgstr "'which'의 모든 구성요소들은 반드시 1과 %d사이에 있어야 합니다"

#. R/fisher.test.R: stop("all entries of 'x' argument must be nonnegative and finite")
#: R/fisher.test.R:0
#, fuzzy
msgid "all entries of 'x' argument must be nonnegative and finite"
msgstr "'x'의 모든 항목들은 반드시 음수가 아니어야 하고 유한해야 합니다"

#. R/chisq.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/mcnemar.test.R: stop("all entries of 'x' must be nonnegative and finite")
#: R/chisq.test.R:0 R/mcnemar.test.R:0
msgid "all entries of 'x' must be nonnegative and finite"
msgstr "'x'의 모든 항목들은 반드시 음수가 아니어야 하고 유한해야 합니다"

#. R/fligner.test.R: stop("all group levels must be finite")
#. R/kruskal.test.R: stop("all group levels must be finite")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all group levels must be finite"
msgstr "모든 그룹 레벨들은 반드시 유한해야 합니다"

#. R/fligner.test.R: stop("all groups must contain data")
#. R/kruskal.test.R: stop("all groups must contain data")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all groups must contain data"
msgstr "모든 그룹들은 반드시 데이터를 가지고 있어야 합니다"

#. R/bartlett.test.R: stop("all observations are in the same group")
#. R/fligner.test.R: stop("all observations are in the same group")
#. R/kruskal.test.R: stop("all observations are in the same group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all observations are in the same group"
msgstr "모든 관측치는 같은 그룹내에 있어야 합니다"

#. R/StructTS.R: stop("all parameters were fixed")
#. R/arma0.R: stop("all parameters were fixed")
#: R/StructTS.R:0 R/arma0.R:0
msgid "all parameters were fixed"
msgstr ""

#. R/prop.test.R: gettext("all proportions", domain = "R-stats")
#: R/prop.test.R:0
msgid "all proportions"
msgstr ""

#. R/na.ts.R: stop("all times contain an NA")
#. R/ts.R: stop("all times contain an NA")
#: R/na.ts.R:0 R/ts.R:0
msgid "all times contain an NA"
msgstr ""

#. R/smspline.R: stop("all weights should be non-negative")
#: R/smspline.R:0
msgid "all weights should be non-negative"
msgstr "모든 weights는 반드시 음수가 아니어야 합니다"

#. R/htest.R: gettext("alternative hypothesis: ", domain = "R-stats")
#: R/htest.R:0
msgid "alternative hypothesis:"
msgstr ""

#. R/fisher.test.R: stop("alternative must be \"two.sided\", \"less\" or \"greater\"")
#: R/fisher.test.R:0
msgid "alternative must be \"two.sided\", \"less\" or \"greater\""
msgstr ""
"alternative는 반드시 \"two.sided\", \"less\" 또는 \"greater\"이어야 합니다"

#. R/hclust.R: gettextf("ambiguous clustering method %s", method)
#: R/hclust.R:0
#, fuzzy
msgid "ambiguous clustering method %s"
msgstr "분명하지 않은 클러스터링 메소드입니다"

#. R/dist.R: stop("ambiguous distance method")
#: R/dist.R:0
msgid "ambiguous distance method"
msgstr "불분명한 distance method입니다"

#. R/anova.R: stop("an object of class \"anova\" must have colnames")
#: R/anova.R:0
#, fuzzy
msgid "an object of class \"anova\" must have colnames"
msgstr "'anova' 객체는 반드시 colnames를 가지고 있어야 합니다"

#. R/selfStart.R: stop("argument 'object' has an impossible length")
#: R/selfStart.R:0
msgid "argument 'object' has an impossible length"
msgstr "인수 'object'는 가질 수 없는 길이를 가지고 있습니다"

#. R/proj.R: stop("argument does not include a 'qr' component")
#: R/proj.R:0
msgid "argument does not include a 'qr' component"
msgstr "인자가 'qr' 구성요소를 포함하지 않습니다"

#. R/proj.R: stop("argument does not include an 'effects' component")
#: R/proj.R:0
msgid "argument does not include an 'effects' component"
msgstr "인자가 'effects' 구성요소를 포함하지 않습니다"

#. R/r2dtable.R: stop("arguments 'r' and 'c' must have the same sums")
#: R/r2dtable.R:0
msgid "arguments 'r' and 'c' must have the same sums"
msgstr "인자들 'r'과 'c'는 반드시 같은 총계를 가져야 합니다"

#. R/aggregate.R: stop("arguments must have the same length")
#. R/contr.poly.R: stop("arguments must have the same length")
#: R/aggregate.R:0 R/contr.poly.R:0
msgid "arguments must have the same length"
msgstr "인자들은 반드시 같은 길이를 가지고 있어야 합니다"

#. R/lm.R: warning("assuming prediction variance inversely proportional to weights used for fitting")
#: R/lm.R:0
msgid ""
"assuming prediction variance inversely proportional to weights used for "
"fitting"
msgstr ""
"prediction variance는 모델적합시 사용된 가중치의 역수에 비례한다고 가정합니다"

#. R/hclust.R: stop("at least 2 objects are needed to cluster")
#: R/hclust.R:0
#, fuzzy
msgid "at least 2 objects are needed to cluster"
msgstr ""
"클러스터를 위해서는 반드시 n이 2보다 크거나 같은 객체들을 가지고 있어야 합니"
"다"

#. R/density.R: stop("at least 2 points are needed to select a bandwidth automatically")
#: R/density.R:0
#, fuzzy
msgid "at least 2 points are needed to select a bandwidth automatically"
msgstr ""
"bandwidth를 자동으로 선택하기 위해서 적어도 2개의 포인트들이 필요합니다"

#. R/chisq.test.R: stop("at least one entry of 'x' must be positive")
#: R/chisq.test.R:0
msgid "at least one entry of 'x' must be positive"
msgstr "'x'의 항목들중 적어도 한개는 양수이어야 합니다"

#. R/integrate.R: stop("at least one integration limit is missing")
#: R/integrate.R:0
msgid "at least one integration limit is missing"
msgstr ""

#. R/approx.R: stop("at least two non-NA values to interpolate are needed")
#. R/approx.R: stop("at least two non-NA values to interpolate are needed")
#: R/approx.R:0
#, fuzzy
msgid "at least two non-NA values to interpolate are needed"
msgstr "보간을 위해서는 최소한 2개의 NA가 아닌 값들이 필요합니다"

#. R/smooth.R: stop("attempt to smooth NA values")
#: R/smooth.R:0
msgid "attempt to smooth NA values"
msgstr ""

#. R/smooth.R: stop("attempt to smooth non-numeric values")
#: R/smooth.R:0
msgid "attempt to smooth non-numeric values"
msgstr ""

#. R/add.R: warning("attempting model selection on an essentially perfect fit is nonsense", call. = FALSE)
#: R/add.R:0
msgid "attempting model selection on an essentially perfect fit is nonsense"
msgstr "근본적으로 완벽한 적합에 대한 모델선택을 시도하는 것은 넌센스입니다"

#. R/ts.R: stop("bad value for 'end' argument")
#: R/ts.R:0
#, fuzzy
msgid "bad value for 'end' argument"
msgstr "잘못된 'end' 값입니다"

#. R/diffinv.R: stop("bad value for 'lag' or 'differences' argument")
#: R/diffinv.R:0
#, fuzzy
msgid "bad value for 'lag' or 'differences' argument"
msgstr "'lag' 또는 'differences'의 값이 잘못되었습니다"

#. R/ts.R: stop("bad value for 'lag' or 'differences' arguments")
#: R/ts.R:0
#, fuzzy
msgid "bad value for 'lag' or 'differences' arguments"
msgstr "'lag' 또는 'differences'의 값이 잘못되었습니다"

#. R/ts.R: stop("bad value for 'start'")
#: R/ts.R:0
msgid "bad value for 'start'"
msgstr "잘못된 'start' 값입니다"

#. R/runmed.R: stop("bandwidth 'k' must be >= 1 and odd!")
#: R/runmed.R:0
msgid "bandwidth 'k' must be >= 1 and odd!"
msgstr "bandwidth 'k'는 반드시 1 보다 크거나 같아야 하며 홀수이어야 합니다"

#. R/contrast.R: stop("baseline group number out of range")
#: R/contrast.R:0
msgid "baseline group number out of range"
msgstr "baseline group number가 범위밖입니다"

#. R/biplot.R: stop("biplots are not defined for complex PCA")
#: R/biplot.R:0
msgid "biplots are not defined for complex PCA"
msgstr "biplots는 복잡한 PCA에 정의되어 있지 않습니다"

#. R/loess.R: warning("both 'span' and 'enp.target' specified: 'span' will be used")
#: R/loess.R:0
msgid "both 'span' and 'enp.target' specified: 'span' will be used"
msgstr "'span'과 'enp.target'모두 지정되었으므로 'span'만 사용될 것입니다"

#. R/princomp.R: warning("both 'x' and 'covmat' were supplied: 'x' will be ignored")
#: R/princomp.R:0
msgid "both 'x' and 'covmat' were supplied: 'x' will be ignored"
msgstr "'x'와 'covmat' 모두 제공되었기 때문에 'x'는 사용되지 않을 것입니다"

#. R/cor.R: stop("both 'x' and 'y' must be non-empty")
#: R/cor.R:0
msgid "both 'x' and 'y' must be non-empty"
msgstr "'x'와 'y' 모두 반드시 non-empty이어야 합니다"

#. R/nlminb.R: gettext("both X-convergence and relative convergence (5)")
#: R/nlminb.R:0
msgid "both X-convergence and relative convergence (5)"
msgstr ""

#. R/optim.R: warning("bounds can only be used with method L-BFGS-B (or Brent)")
#: R/optim.R:0
msgid "bounds can only be used with method L-BFGS-B (or Brent)"
msgstr "bounds는 메소드 L-BFGS-B (또는 Brent)에서만 사용할 수 있습니다"

#. R/ts.R: stop("burn-in 'n.start' must be as long as 'ar + ma'")
#: R/ts.R:0
msgid "burn-in 'n.start' must be as long as 'ar + ma'"
msgstr ""

#. R/lm.R: warning("calling anova.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling anova.lm(<fake-lm-object>) ..."
msgstr "anova.lm(<fake-lm-object>) ...를 호출합니다"

#. R/lm.R: warning("calling predict.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling predict.lm(<fake-lm-object>) ..."
msgstr "predict.lm(<fake-lm-object>) ...를 호출합니다"

#. R/lm.R: warning("calling summary.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling summary.lm(<fake-lm-object>) ..."
msgstr "summary.lm(<fake-lm-object>) ... 을 호출합니다"

#. R/acf.R: warning("can use 'ci.type=\"ma\"' only if first lag is 0")
#: R/acf.R:0
#, fuzzy
msgid "can use 'ci.type=\"ma\"' only if first lag is 0"
msgstr "만약 첫번째 lag이 0인 경우만 ci.type=\"ma\"를 사용할 수 있습니다"

#. R/nls.R: stop("cannot calculate REML log-likelihood for \"nls\" objects")
#: R/nls.R:0
msgid "cannot calculate REML log-likelihood for \"nls\" objects"
msgstr "\"nls\" 객체에 대해서 REML log-likelihood를 계산할 수 없습니다"

#. R/aggregate.R: gettextf("cannot change frequency from %g to %g", ofrequency, nfrequency)
#: R/aggregate.R:0
msgid "cannot change frequency from %g to %g"
msgstr "빈도를 %1$g에서 %2$g로 변경할 수 없습니다"

#. R/ansari.test.R: warning("cannot compute asymptotic confidence set or estimator")
#: R/ansari.test.R:0
msgid "cannot compute asymptotic confidence set or estimator"
msgstr "asymptotic confidence set 또는 estimator를 계산할 수 없습니다"

#. R/wilcox.test.R: stop("cannot compute confidence interval when all observations are tied", call. = FALSE)
#. R/wilcox.test.R: stop("cannot compute confidence interval when all observations are tied", call. = FALSE)
#: R/wilcox.test.R:0
msgid "cannot compute confidence interval when all observations are tied"
msgstr "모든 관측치들의 값이 같다면 신뢰구간을 계산 할 수 없습니다"

#. R/ansari.test.R: warning("cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute confidence set, returning NA"
msgstr "confidence set을 계산할 수 없어 NA를 돌려줍니다"

#. R/ansari.test.R: warning("cannot compute estimate, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute estimate, returning NA"
msgstr "추정치를 계산할 수 없어 NA를 반환합니다"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with ties")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with ties"
msgstr ""

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with zeroes"
msgstr ""

#. R/ansari.test.R: warning("cannot compute exact confidence intervals with ties")
#. R/wilcox.test.R: warning("cannot compute exact confidence intervals with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact confidence intervals with ties"
msgstr "tie가 있어 정확한 신뢰구간을 계산할 수 없습니다"

#. R/ansari.test.R: warning("cannot compute exact p-value with ties")
#. R/cor.test.R: warning("cannot compute exact p-value with ties")
#. R/cor.test.R: warning("cannot compute exact p-value with ties")
#. R/ks.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#: R/ansari.test.R:0 R/cor.test.R:0 R/ks.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact p-value with ties"
msgstr "tie가 있어 정확한 p값을 계산할 수 없습니다"

#. R/wilcox.test.R: warning("cannot compute exact p-value with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact p-value with zeroes"
msgstr ""

#. R/chisq.test.R: warning("cannot compute simulated p-value with zero marginals")
#: R/chisq.test.R:0
msgid "cannot compute simulated p-value with zero marginals"
msgstr ""

#. R/models.R: stop("cannot create a formula from a zero-column data frame")
#: R/models.R:0
msgid "cannot create a formula from a zero-column data frame"
msgstr ""
"아무런 열을 가지고 있지 않은 데이터 프레임은 formula를 생성할 수 없습니다"

#. R/family.R: stop("cannot find valid starting values: please specify some")
#. R/glm.R: stop("cannot find valid starting values: please specify some", call. = FALSE)
#: R/family.R:0 R/glm.R:0
msgid "cannot find valid starting values: please specify some"
msgstr "유효한 시작값들을 찾을 수 없습니다.  일부를 정해주시길 바랍니다"

#. R/zzModels.R: stop("cannot fit an asymptotic regression model to these data")
#: R/zzModels.R:0
msgid "cannot fit an asymptotic regression model to these data"
msgstr "asymptotic regression model을 이러한 데이터에 적합할 수 없습니다"

#. R/HoltWinters.R: stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
#: R/HoltWinters.R:0
msgid "cannot fit models without level ('alpha' must not be 0 or FALSE)"
msgstr ""
"level없이 모델들을 적합할 수 없습니다 ('alpha'는 반드시 0이 아니거나 FALSE이"
"어야 합니다)"

#. R/cor.R: stop("cannot handle 'pairwise.complete.obs'")
#: R/cor.R:0
msgid "cannot handle 'pairwise.complete.obs'"
msgstr "'pairwise.complete.obs'를 처리할 수 없습니다"

#. R/ts.R: stop("cannot plot more than 10 series as \"multiple\"")
#: R/ts.R:0
msgid "cannot plot more than 10 series as \"multiple\""
msgstr ""

#. R/nls-profile.R: stop("cannot recognize parameter name")
#: R/nls-profile.R:0
msgid "cannot recognize parameter name"
msgstr "파라미터명을 인식할 수 없습니다"

#. R/prcomp.R: stop("cannot rescale a constant/zero column to unit variance")
#: R/prcomp.R:0
msgid "cannot rescale a constant/zero column to unit variance"
msgstr ""

#. R/family.R: stop("cannot simulate from non-integer prior.weights")
#: R/family.R:0
msgid "cannot simulate from non-integer prior.weights"
msgstr "정수가 아닌 prior.weights로부터 simulate 할 수 없습니다"

#. R/princomp.R: stop("cannot use 'cor = TRUE' with a constant variable")
#: R/princomp.R:0
msgid "cannot use 'cor = TRUE' with a constant variable"
msgstr "'cor = TRUE'는 상수를 가지는 변수와 함께 사용할 수 없습니다"

#. R/ftable.R: stop("cannot use dots in formula with given data")
#: R/ftable.R:0
msgid "cannot use dots in formula with given data"
msgstr "주어진 데이터에서는 formula에 dots 기법를 사용할 수 없습니다"

#. R/smspline.R: stop("cannot use more inner knots than unique 'x' values")
#: R/smspline.R:0
msgid "cannot use more inner knots than unique 'x' values"
msgstr ""

#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "changed:"
msgstr ""

#. R/kernel.R: stop("coefficients do not add to 1")
#: R/kernel.R:0
msgid "coefficients do not add to 1"
msgstr ""

#. R/approx.R: warning("collapsing to unique 'x' values")
#: R/approx.R:0
msgid "collapsing to unique 'x' values"
msgstr "고유한 'x'값들로 범위를 축소합니다"

#. R/dendrogram.R: stop("column dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "column dendrogram ordering gave index of wrong length"
msgstr ""

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast (sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast (sum to zero)"
msgstr ""
"'contrast.obj'의 열들은 반드시 합계가 0이 되도록 contrast를 정의 해야합니다"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast(sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast(sum to zero)"
msgstr ""
"'contrast.obj'의 열들은 반드시 합이 0이 되도록 constrast를 정의해야 합니다"

#. R/mantelhaen.test.R: gettext("common odds ratio", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "common odds ratio"
msgstr ""

#. R/contrast.R: gettextf("contrast function '%s' does not support 'sparse = TRUE'", ctr)
#: R/contrast.R:0
msgid "contrast function '%s' does not support 'sparse = TRUE'"
msgstr ""

#. R/contrast.R: stop("contrasts apply only to factors")
#. R/contrast.R: stop("contrasts apply only to factors")
#: R/contrast.R:0
msgid "contrasts apply only to factors"
msgstr "contrasts는 요인들에만 적용합니다"

#. R/contrast.R: stop("contrasts can be applied only to factors with 2 or more levels")
#: R/contrast.R:0
msgid "contrasts can be applied only to factors with 2 or more levels"
msgstr ""
"contrasts는 오로지 2 또는 그 이상의 level들을 가진 요인들에만 적용할 수 있습"
"니다"

#. R/models.R: gettextf("contrasts dropped from factor %s due to missing levels", nm, domain = "R-stats")
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s due to missing levels"
msgstr ""
"contrasts는 오로지 2 또는 그 이상의 level들을 가진 요인들에만 적용할 수 있습"
"니다"

#. R/contr.poly.R: gettextf("contrasts not defined for %d degrees of freedom", n - 1)
#. R/contrast.R: gettextf("contrasts not defined for %d degrees of freedom", n - 1L)
#: R/contr.poly.R:0 R/contrast.R:0
msgid "contrasts not defined for %d degrees of freedom"
msgstr ""

#. R/nlm.R: stop("convergence problem in zero finding: ", conditionMessage(val))
#: R/nlm.R:0
#, fuzzy
msgid "convergence problem in zero finding:"
msgstr "수렴에 관한 문제: optim은 code = %d를 반환하였습니다"

#. R/arma0.R: warning("converting non-invertible initial MA values")
#: R/arma0.R:0
msgid "converting non-invertible initial MA values"
msgstr ""

#. R/cor.test.R: gettext("correlation", domain = "R-stats")
#: R/cor.test.R:0
msgid "correlation"
msgstr ""

#. R/princomp.R: stop("covariance matrix is not non-negative definite")
#: R/princomp.R:0
msgid "covariance matrix is not non-negative definite"
msgstr "공분산행렬이 non-negative definite가 아닙니다"

#. R/spectrum.R: stop("coverage probability out of range [0,1)")
#: R/spectrum.R:0
msgid "coverage probability out of range [0,1)"
msgstr "coverage probability가 [0,1) 범위외에 있습니다"

#. R/smspline.R: warning("cross-validation with non-unique 'x' values seems doubtful")
#: R/smspline.R:0
msgid "cross-validation with non-unique 'x' values seems doubtful"
msgstr ""

#. R/cutree.R: message("cutree(): k(h) = ", k, domain = "R-stats")
#: R/cutree.R:0
msgid "cutree(): k(h) ="
msgstr ""

#. R/t.test.R: stop("data are essentially constant")
#. R/t.test.R: stop("data are essentially constant")
#: R/t.test.R:0
msgid "data are essentially constant"
msgstr "데이터는 본질적으로 상수입니다"

#. R/HoltWinters.R: stop("data must be non-zero for multiplicative Holt-Winters")
#: R/HoltWinters.R:0
msgid "data must be non-zero for multiplicative Holt-Winters"
msgstr ""
"multiplicative Holt-Winters 방법을 사용하기 위해서는 데이터가 반드시 0이 아니"
"어야 합니다"

#. R/htest.R: gettextf("data: %s", x$data.name, domain = "R-stats")
#: R/htest.R:0
msgid "data: %s"
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram entries must be 1,2,..,%d (in any order), to be coercible to an object of class \"hclust\"",     n)
#: R/dendrogram.R:0
msgid ""
"dendrogram entries must be 1,2,..,%d (in any order), to be coercible to an "
"object of class \"hclust\""
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram leaf '%s', at height %s", format(attr(x, "label"), digits = digits),     format(attr(x, "height"), digits = digits), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram leaf '%s', at height %s"
msgstr ""

#. R/dendrogram.R: stop("dendrogram node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram node with non-positive #{branches}"
msgstr "양수가 아닌 #{branches}가 사용된 덴드로그램 노드입니다"

#. R/dendrogram.R: stop("dendrogram non-leaf node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram non-leaf node with non-positive #{branches}"
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram with %d branches and %d members total, at height %s", length(x),     attr(x, "members"), format(attr(x, "height"), digits = digits), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram with %d branches and %d members total, at height %s"
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram with %d branches and %d members, at height %s", le, memb, format(hgt,     digits = digits.d), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram with %d branches and %d members, at height %s"
msgstr ""

#. R/var.test.R: gettext("denom df", domain = "R-stats")
#: R/var.test.R:0
msgid "denom df"
msgstr ""

#. R/model.tables.R: stop("design is unbalanced so cannot proceed")
#: R/model.tables.R:0
msgid "design is unbalanced so cannot proceed"
msgstr "디자인이 unbalance 하여 더이상 진행할 수 없습니다"

#. R/mcnemar.test.R: gettext("df", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "df"
msgstr ""

#. R/cor.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#: R/cor.R:0
msgid "diag(.) had 0 or NA entries; non-finite result is doubtful"
msgstr ""
"diag(.)는 0 또는 NA 항목을 가지고 있으므로 유한하지 않은 결과를 얻을 것으로 "
"의심됩니다"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "'f()' values at end points are not of opposite sign"
#: R/nlm.R:0
msgid ""
"did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0"
msgstr ""

#. R/wilcox.test.R: gettext("difference in location", domain = "R-stats")
#. R/wilcox.test.R: gettext("difference in location", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "difference in location"
msgstr ""

#. R/t.test.R: gettext("difference in means", domain = "R-stats")
#: R/t.test.R:0
msgid "difference in means"
msgstr ""

#. R/cancor.R: stop("dimension 0 in 'x' or 'y' argument")
#: R/cancor.R:0
#, fuzzy
msgid "dimension 0 in 'x' or 'y' argument"
msgstr "'x' 또는 'y'의 차원이 0입니다"

#. R/hclust.R: stop("dissimilarities are of improper length")
#. R/hclust.R: warning("dissimilarities are of improper length")
#: R/hclust.R:0
msgid "dissimilarities are of improper length"
msgstr ""

#. R/cmdscale.R: stop("distances must be result of 'dist' or a square matrix")
#: R/cmdscale.R:0
msgid "distances must be result of 'dist' or a square matrix"
msgstr "distances는 반드시 'dist'의 결과이거나 정방행렬이어야 합니다"

#. R/mantelhaen.test.R: stop("each dimension in table must be >= 2")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "each dimension in table must be >= 2"
msgstr "테이블의 각 dimension은 2 보다 크거나 같아야 합니다"

#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.list))
#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.obj))
#: R/aov.R:0
msgid "each element of '%s' must be logical"
msgstr "'%s'의 각 구성요소는 논리값이어야 합니다"

#. R/model.tables.R: stop("eff.aovlist: non-orthogonal contrasts would give an incorrect answer")
#: R/model.tables.R:0
msgid "eff.aovlist: non-orthogonal contrasts would give an incorrect answer"
msgstr ""

#. R/cutree.R: stop("either 'k' or 'h' must be specified")
#: R/cutree.R:0
msgid "either 'k' or 'h' must be specified"
msgstr "'k' 또는 'h' 중 하나는 반드시 지정되어야 합니다"

#. R/cutree.R: gettextf("elements of 'k' must be between 1 and %d", n)
#: R/cutree.R:0
msgid "elements of 'k' must be between 1 and %d"
msgstr "'which'의 모든 구성요소들은 반드시 1과 %d 사이에 있어야 합니다"

#. R/prop.test.R: stop("elements of 'n' must be positive")
#: R/prop.test.R:0
msgid "elements of 'n' must be positive"
msgstr "'n'의 구성요소들은 반드시 양수이어야 합니다"

#. R/prop.test.R: stop("elements of 'p' must be in (0,1)")
#: R/prop.test.R:0
msgid "elements of 'p' must be in (0,1)"
msgstr "'p'의 구성요소들은 반드시 (0,1)내에 있어야 합니다"

#. R/prop.test.R: stop("elements of 'x' must be nonnegative")
#: R/prop.test.R:0
msgid "elements of 'x' must be nonnegative"
msgstr "'x'의 구성요소들은 반드시 음이 아닌 수이어야 합니다"

#. R/prop.test.R: stop("elements of 'x' must not be greater than those of 'n'")
#: R/prop.test.R:0
msgid "elements of 'x' must not be greater than those of 'n'"
msgstr "'x'의 구성요소들은 반드시 'n'의 구성요소들보다 커서는 안됩니다"

#. R/kmeans.R: stop("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers", call. = FALSE)
#: R/kmeans.R:0
msgid "empty cluster: try a better set of initial centers"
msgstr ""

#. R/ARMAtheory.R: stop("empty model supplied")
#: R/ARMAtheory.R:0
msgid "empty model supplied"
msgstr ""

#. R/lm.R: warning("essentially perfect fit: summary may be unreliable")
#: R/lm.R:0
msgid "essentially perfect fit: summary may be unreliable"
msgstr ""

#. R/poisson.test.R: gettext("event rate", domain = "R-stats")
#: R/poisson.test.R:0
msgid "event rate"
msgstr ""

#. R/power.R: gettextf("exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL",     "n", "delta", "sd", "power", "sig.level")
#. R/power.R: gettextf("exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL",     "n", "p1", "p2", "power", "sig.level")
#: R/power.R:0
#, fuzzy
msgid "exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL"
msgstr ""
"'n', 'p1', 'p2', 'power', 그리고 'sig.level' 중의 하나는 반드시 NULL이어야 합"
"니다"

#. R/power.anova.test.R: stop("exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL")
#: R/power.anova.test.R:0
msgid ""
"exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig."
"level' must be NULL"
msgstr ""
"'groups', 'n', 'between.var', 'within.var', 'power', 그리고 'sig.level' 중 하"
"나는 반드시 NULL이어야 합니다"

#. R/poisson.test.R: gettext("expected count1", domain = "R-stats")
#: R/poisson.test.R:0
msgid "expected count1"
msgstr ""

#. R/ts.R: warning("extending time series when replacing values", call. = FALSE)
#: R/ts.R:0
msgid "extending time series when replacing values"
msgstr ""

#. R/logLik.R: warning("extra arguments were discarded")
#: R/logLik.R:0
#, fuzzy
msgid "extra arguments were discarded"
msgstr "추가 인자 %s는 사용되지 않을 것입니다"

#. R/integrate.R: gettext("extremely bad integrand behaviour")
#: R/integrate.R:0
msgid "extremely bad integrand behaviour"
msgstr ""

#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#: R/factanal.R:0
msgid "factor analysis applies only to numerical variables"
msgstr "factor analysis는 오로지 수치형 변수들에만 적용됩니다"

#. R/factanal.R: stop("factor analysis requires at least three variables")
#: R/factanal.R:0
msgid "factor analysis requires at least three variables"
msgstr "factor analysis는 최소 3개의 변수들을 필요로 합니다"

#. R/TukeyHSD.R: gettext("factor levels have been ordered", domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "factor levels have been ordered"
msgstr ""

#. R/quantile.R: stop("factors are not allowed")
#: R/quantile.R:0
msgid "factors are not allowed"
msgstr "요인은 허용되지 않습니다"

#. R/reshape.R: stop("failed to guess time-varying variables from their names")
#: R/reshape.R:0
msgid "failed to guess time-varying variables from their names"
msgstr ""

#. R/integrate.R: gettextf("failed with message %s", sQuote(x$message), domain = "R-stats")
#: R/integrate.R:0
msgid "failed with message %s"
msgstr ""

#. R/nlminb.R: gettext("false convergence (8)")
#: R/nlminb.R:0
msgid "false convergence (8)"
msgstr ""

#. R/lm.R: gettextf("family '%s' not implemented", fam)
#: R/lm.R:0
msgid "family '%s' not implemented"
msgstr "페밀리 '%s'는 구현되지 않았습니다"

#. R/glm.R: warning("fitting to calculate the null deviance did not converge -- increase 'maxit' value?")
#: R/glm.R:0
msgid ""
"fitting to calculate the null deviance did not converge -- increase 'maxit' "
"value?"
msgstr ""

#. R/nlminb.R: gettext("fn cannot be computed at initial par (63)")
#: R/nlminb.R:0
msgid "fn cannot be computed at initial par (63)"
msgstr ""

#. R/family.R: gettextf("for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column matrix where first column is the number of successes and second column is the number of failures",     sQuote("binomial"))
#. R/family.R: gettextf("for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column matrix where first column is the number of successes and second column is the number of failures",     sQuote("quasibinomial"))
#: R/family.R:0
#, fuzzy
msgid ""
"for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column "
"matrix where first column is the number of successes and second column is "
"the number of failures"
msgstr ""
"'binomial' 페밀리에서 y는 반드시 0과 1로만 구성된 벡터이어야 합니다\n"
"또는 첫번째 열은 성공의 수, 두번째 열은 실패의 수를 나타내은 2개의 열로된 행"
"렬이어야 합니다"

#. R/nlsFunc.R: gettextf("formula '%s' must be of the form '~expr'", deparse(as.vector(object)))
#: R/nlsFunc.R:0
msgid "formula '%s' must be of the form '~expr'"
msgstr "formula '%s'는 반드시 '~expr'의 형태를 가지고 있어야 합니다"

#. R/cpgram.R: gettext("frequency", domain = "R-stats")
#: R/cpgram.R:0
msgid "frequency"
msgstr ""

#. R/StructTS.R: stop("frequency must be a positive integer >= 2 for BSM")
#: R/StructTS.R:0
msgid "frequency must be a positive integer >= 2 for BSM"
msgstr "BSM에서 빈도는 반드시 2보다 크거나 같은 양의 정수이어야 합니다"

#. R/nlminb.R: gettext("function evaluation limit reached without convergence (9)")
#: R/nlminb.R:0
msgid "function evaluation limit reached without convergence (9)"
msgstr ""

#. R/isoreg.R: gettext("  further components: ", domain = "R-stats")
#: R/isoreg.R:0
msgid "further components:"
msgstr ""

#. R/glm.R: warning("glm.fit: algorithm did not converge", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm did not converge"
msgstr "glm.fit: 알고리즘이 수렴하지 않았습니다"

#. R/glm.R: warning("glm.fit: algorithm stopped at boundary value", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: algorithm stopped at boundary value"
msgstr "glm.fit: 알고리즘이 boundary value에서 멈췄습니다"

#. R/glm.R: warning("glm.fit: fitted probabilities numerically 0 or 1 occurred", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted probabilities numerically 0 or 1 occurred"
msgstr "glm.fit: 적합된 확률값들이 0 또는 1 입니다"

#. R/glm.R: warning("glm.fit: fitted rates numerically 0 occurred", call. = FALSE)
#: R/glm.R:0
msgid "glm.fit: fitted rates numerically 0 occurred"
msgstr ""

#. R/nlminb.R: gettext("gr cannot be computed at initial par (65)")
#: R/nlminb.R:0
msgid "gr cannot be computed at initial par (65)"
msgstr ""

#. R/ansari.test.R: stop("grouping factor must have exactly 2 levels")
#. R/mood.test.R: stop("grouping factor must have exactly 2 levels")
#. R/t.test.R: stop("grouping factor must have exactly 2 levels")
#. R/var.test.R: stop("grouping factor must have exactly 2 levels")
#. R/wilcox.test.R: stop("grouping factor must have exactly 2 levels")
#: R/ansari.test.R:0 R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "grouping factor must have exactly 2 levels"
msgstr "grouping factor는 반드시 2개의 수준을 가지고 있어야만 합니다"

#. R/plot.lm.R: gettextf("hat values (leverages) are all = %s\n and there are no factor predictors; no plot no. 5",     format(mean(r.hat)))
#: R/plot.lm.R:0
msgid ""
"hat values (leverages) are all = %s\n"
" and there are no factor predictors; no plot no. 5"
msgstr ""

#. R/fisher.test.R: gettextf("if '%s' argument is not a matrix, '%s' argument must be given", "x", "y")
#. R/mcnemar.test.R: gettextf("if '%s' argument is not a matrix, '%s' argument must be given", "x", "y")
#: R/fisher.test.R:0 R/mcnemar.test.R:0
#, fuzzy
msgid "if '%s' argument is not a matrix, '%s' argument must be given"
msgstr "만약 'x'가 행렬이 아니라면, 'y'는 반드시 주어져야 합니다"

#. R/mantelhaen.test.R: gettextf("if '%s' argument is not an array, '%s' argument must be given", "x", "y")
#. R/mantelhaen.test.R: gettextf("if '%s' argument is not an array, '%s' argument must be given", "x", "z")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "if '%s' argument is not an array, '%s' argument must be given"
msgstr "만약 'x'가 배열이 아니라면 'y'는 반드시 주어져야 합니다"

#. R/family.R: warning("ignoring prior weights")
#: R/family.R:0
msgid "ignoring prior weights"
msgstr "prior weights를 무시합니다"

#. R/lm.R: stop("incompatible dimensions")
#. R/lm.R: stop("incompatible dimensions")
#: R/lm.R:0
msgid "incompatible dimensions"
msgstr ""

#. R/ts.R: stop("inconsistent specification of 'ar' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ar' order"
msgstr "'ar'의 순서에 부합하지 않는 지정입니다"

#. R/ts.R: stop("inconsistent specification of 'ma' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ma' order"
msgstr "'ma'의 순서에 부합하지 않는 지정입니다"

#. R/diffinv.R: stop("incorrect dimensions for 'xi'")
#: R/diffinv.R:0
msgid "incorrect dimensions for 'xi'"
msgstr "'xi'의 차원이 잘못되었습니다"

#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "row.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "row.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "col.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "col.vars")
#: R/ftable.R:0
#, fuzzy
msgid "incorrect specification for '%s' argument"
msgstr "formula' 지정이 잘못되었습니다"

#. R/ftable.R: stop("incorrect variable names in lhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in lhs of formula"
msgstr "formula의 좌변에 잘못된 변수명이 있습니다"

#. R/ftable.R: stop("incorrect variable names in rhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in rhs of formula"
msgstr "formula의 우변에 잘못된 변수명이 있습니다"

#. R/bandwidths.R: gettextf("increasing bw.SJ() search interval (%d) to [%.4g,%.4g]", itry, lower, upper)
#: R/bandwidths.R:0
msgid "increasing bw.SJ() search interval (%d) to [%.4g,%.4g]"
msgstr "bw.SJ() 검색간격 (%d)에서 [%.4g,%.4g]로 넓혔습니다"

#. R/kmeans.R: stop("initial centers are not distinct")
#: R/kmeans.R:0
msgid "initial centers are not distinct"
msgstr ""

#. R/nlminb.R: gettext("initial par violates constraints")
#: R/nlminb.R:0
msgid "initial par violates constraints"
msgstr ""

#. R/constrOptim.R: stop("initial value is not in the interior of the feasible region")
#: R/constrOptim.R:0
msgid "initial value is not in the interior of the feasible region"
msgstr "초기값이 feasible region의 내부에 있지 않습니다"

#. R/isoreg.R: gettext("  initially ordered 'x'", domain = "R-stats")
#: R/isoreg.R:0
msgid "initially ordered 'x'"
msgstr ""

#. R/glm.R: stop("inner loop 1; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 1; cannot correct step size"
msgstr ""

#. R/glm.R: stop("inner loop 2; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 2; cannot correct step size"
msgstr ""

#. R/dendrogram.R: gettext("inner node:", domain = "R-stats")
#: R/dendrogram.R:0
msgid "inner node:"
msgstr ""

#. R/ftable.R: stop("interactions are not allowed")
#. R/xtabs.R: stop("interactions are not allowed")
#: R/ftable.R:0 R/xtabs.R:0
msgid "interactions are not allowed"
msgstr "interactions을 허용하지 않습니다"

#. R/power.R: stop("internal error", domain = "R-stats")
#. R/power.R: stop("internal error", domain = "R-stats")
#. R/power.anova.test.R: stop("internal error", domain = "R-stats")
#: R/power.R:0 R/power.anova.test.R:0
msgid "internal error"
msgstr ""

#. R/arima.R: gettextf("invalid '%s' argument", "SSinit")
#. R/chisq.test.R: gettextf("invalid '%s' argument", "x")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/family.R: gettextf("invalid '%s' argument", "lambda")
#. R/glm.R: gettextf("invalid '%s' argument", "method")
#. R/loess.R: gettextf("invalid '%s' argument", "control")
#. R/loess.R: gettextf("invalid '%s' argument", "x")
#. R/loess.R: gettextf("invalid '%s' argument", "y")
#. R/loess.R: gettextf("invalid '%s' argument", "span")
#. R/loess.R: gettextf("invalid '%s' argument", "cell")
#. R/loess.R: gettextf("invalid '%s' argument", "degree")
#. R/models.R: gettextf("invalid '%s' argument", "contrasts.arg")
#. R/models.R: gettextf("invalid '%s' argument", "data")
#. R/nafns.R: gettextf("invalid '%s' argument", "omit")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "n")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "r")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "c")
#. R/smooth.R: gettextf("invalid '%s' argument", "endrule")
#: R/arima.R:0 R/chisq.test.R:0 R/cor.R:0 R/family.R:0 R/glm.R:0 R/loess.R:0
#: R/models.R:0 R/nafns.R:0 R/r2dtable.R:0 R/smooth.R:0
#, fuzzy
msgid "invalid '%s' argument"
msgstr "유효하지 않은 'use' 인자입니다"

#. R/HoltWinters.R: gettextf("invalid '%s' value", "length(x)")
#. R/approx.R: gettextf("invalid '%s' value", "length(x)")
#. R/approx.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/cmdscale.R: gettextf("invalid '%s' value", "n")
#. R/density.R: gettextf("invalid '%s' value", "length(x)")
#. R/diffinv.R: gettextf("invalid '%s' value", "length(x)")
#. R/filter.R: gettextf("invalid '%s' value", "nrow(x)")
#. R/filter.R: gettextf("invalid '%s' value", "length(filter)")
#. R/kmeans.R: gettextf("invalid '%s' value", "nrow(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "ncol(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "k")
#. R/loess.R: gettextf("invalid '%s' value", "NCOL(X)")
#. R/loess.R: gettextf("invalid '%s' value", "NCOL(X)")
#. R/runmed.R: gettextf("invalid '%s' value", "length(x)")
#. R/runmed.R: gettextf("invalid '%s' value", "k")
#. R/smooth.R: gettextf("invalid '%s' value", "length(x)")
#. R/smspline.R: gettextf("invalid '%s' value", "control.spar")
#. R/spline.R: gettextf("invalid '%s' value", "length(x)")
#. R/splinefun.R: gettextf("invalid '%s' value", "length(x)")
#. R/stl.R: gettextf("invalid '%s' value", "length(x)")
#. R/symnum.R: gettextf("invalid '%s' value", "abbr.colnames'")
#: R/HoltWinters.R:0 R/approx.R:0 R/bandwidths.R:0 R/cmdscale.R:0
#: R/density.R:0 R/diffinv.R:0 R/filter.R:0 R/kmeans.R:0 R/loess.R:0
#: R/runmed.R:0 R/smooth.R:0 R/smspline.R:0 R/spline.R:0 R/splinefun.R:0
#: R/stl.R:0 R/symnum.R:0
#, fuzzy
msgid "invalid '%s' value"
msgstr "유효하지 않은 'use' 인자입니다"

#. R/nlm.R: stop("invalid 'extendInt' argument; please report")
#: R/nlm.R:0
#, fuzzy
msgid "invalid 'extendInt' argument; please report"
msgstr "'extendInt'가 올바르지 않습니다; 보고해주세요"

#. R/lm.R: stop("invalid 'lm' object:  no 'terms' component")
#: R/lm.R:0
msgid "invalid 'lm' object:  no 'terms' component"
msgstr "유효하지 않은 'lm'객체입니다:  그 이유는 구성요소 'terms'이 없습니다"

#. R/chisq.test.R: stop("invalid 'nrow(x)' or 'ncol(x)' value", domain = "R-stats")
#. R/fisher.test.R: stop("invalid 'nrow(x)' or 'ncol(x)' value")
#: R/chisq.test.R:0 R/fisher.test.R:0
msgid "invalid 'nrow(x)' or 'ncol(x)' value"
msgstr ""

#. R/cutree.R: stop("invalid 'tree' argument ('merge' component)")
#: R/cutree.R:0
#, fuzzy
msgid "invalid 'tree' argument ('merge' component)"
msgstr "유효하지 않은 'tree'입니다 ('merge'요소입니다)"

#. R/dendrogram.R: stop("invalid (length 0) node in dendrogram")
#: R/dendrogram.R:0
msgid "invalid (length 0) node in dendrogram"
msgstr "덴드로그램내에 유효하지 않은 길이가 0인 노드가 있습니다"

#. R/nls-profile.R: stop("invalid argument passed to 'getProfile()'")
#: R/nls-profile.R:0
#, fuzzy
msgid "invalid argument passed to 'getProfile()'"
msgstr "'getProfile'에 유효하지 않은 인자가 전달되었습니다"

#. R/hclust.R: gettextf("invalid clustering method %s", method)
#: R/hclust.R:0
#, fuzzy
msgid "invalid clustering method %s"
msgstr "유효하지 않은 클러스터링 메소드입니다"

#. R/hclust.R: gettext("invalid dendrogram", domain = "R-stats")
#: R/hclust.R:0
msgid "invalid dendrogram"
msgstr "유효하지 않은 덴드로그램입니다"

#. R/hclust.R: stop("invalid dissimilarities")
#: R/hclust.R:0
msgid "invalid dissimilarities"
msgstr "유효하지 않은 비유사도입니다"

#. R/dist.R: stop("invalid distance method")
#: R/dist.R:0
msgid "invalid distance method"
msgstr "유효하지 않은 distance method입니다"

#. R/glm.R: stop("invalid fitted means in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid fitted means in empty model"
msgstr "유효하지 않은 fitted means가 empty 모델에 있습니다"

#. R/ansari.test.R: stop("invalid formula")
#. R/cor.test.R: stop("invalid formula")
#. R/friedman.test.R: stop("invalid formula")
#. R/models.R: stop("invalid formula")
#. R/mood.test.R: stop("invalid formula")
#. R/quade.test.R: stop("invalid formula")
#. R/t.test.R: stop("invalid formula")
#. R/var.test.R: stop("invalid formula")
#. R/wilcox.test.R: stop("invalid formula")
#: R/ansari.test.R:0 R/cor.test.R:0 R/friedman.test.R:0 R/models.R:0
#: R/mood.test.R:0 R/quade.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "invalid formula"
msgstr "유효하지 않은 formula입니다"

#. R/deriv.R: stop("invalid formula in 'deriv()'")
#. R/deriv.R: stop("invalid formula in 'deriv()'")
#: R/deriv.R:0
#, fuzzy
msgid "invalid formula in 'deriv()'"
msgstr "deriv에 유효하지 않은 formula입니다"

#. R/approx.R: stop("invalid interpolation method")
#. R/approx.R: stop("invalid interpolation method")
#. R/spline.R: stop("invalid interpolation method")
#: R/approx.R:0 R/spline.R:0
msgid "invalid interpolation method"
msgstr "유효하지 않은 보간법입니다"

#. R/binom.test.R: gettextf("invalid length of '%s' argument", "x")
#. R/hclust.R: gettextf("invalid length of '%s' argument", "members")
#: R/binom.test.R:0 R/hclust.R:0
#, fuzzy
msgid "invalid length of '%s' argument"
msgstr "유효하지 않은 'method' 인자입니다"

#. R/glm.R: stop("invalid linear predictor values in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid linear predictor values in empty model"
msgstr "유효하지 않은 linear predictor 값들이 empty 모델에 있습니다"

#. R/lm.influence.R: stop("invalid model QR matrix")
#: R/lm.influence.R:0
msgid "invalid model QR matrix"
msgstr ""

#. R/smspline.R: stop("invalid number of points")
#: R/smspline.R:0
msgid "invalid number of points"
msgstr ""

#. R/integrate.R: stop("invalid parameter values")
#: R/integrate.R:0
msgid "invalid parameter values"
msgstr "유효하지 않은 파라미터 값입니다"

#. R/models.R: stop("invalid response type")
#: R/models.R:0
msgid "invalid response type"
msgstr "종속변수 타입이 유효하지 않습니다"

#. R/nlminb.R: gettext("iteration limit reached without convergence (10)")
#: R/nlminb.R:0
msgid "iteration limit reached without convergence (10)"
msgstr ""

#. R/dendrogram.R: gettextf("layout: widths = %s, heights = %s; lmat=\n", paste(lwid, collapse = " "),     paste(lhei, collapse = " "), domain = "R-stats")
#: R/dendrogram.R:0
msgid "layout: widths = %s, heights = %s; lmat="
msgstr ""

#. R/dendrogram.R: gettextf("leaf %s", dQuote(at$label), domain = "R-stats")
#. R/dendrogram.R: gettextf("leaf %s", format(object, digits = digits.d), domain = "R-stats")
#: R/dendrogram.R:0
msgid "leaf %s"
msgstr ""

#. R/dendrogram.R: gettextf("leaf:", domain = "R-stats")
#: R/dendrogram.R:0
msgid "leaf:"
msgstr ""

#. R/fft.R: stop("length mismatch in convolution")
#: R/fft.R:0
msgid "length mismatch in convolution"
msgstr ""

#. R/cov.wt.R: stop("length of 'center' must equal the number of columns in 'x'")
#: R/cov.wt.R:0
msgid "length of 'center' must equal the number of columns in 'x'"
msgstr "'center'의 길이는 반드시 'x'의 열의 개수와 같아야 합니다"

#. R/filter.R: stop("length of 'init' argument must equal length of 'filter' argument")
#: R/filter.R:0
#, fuzzy
msgid "length of 'init' argument must equal length of 'filter' argument"
msgstr "'init'의 길이는 반드시 'filter'의 길이와 같아야 합니다"

#. R/spectrum.R: stop("length of 'p' must be 1 or equal the number of columns of 'x'")
#: R/spectrum.R:0
msgid "length of 'p' must be 1 or equal the number of columns of 'x'"
msgstr "'p'의 길이는 반드시 1이거나 'x'의 열의 개수와 같아야 합니다"

#. R/glm.R: gettextf("length of 'start' should equal %d and correspond to initial coefs for %s",     nvars, tmp_N)
#: R/glm.R:0
msgid ""
"length of 'start' should equal %d and correspond to initial coefs for %s"
msgstr ""
"'start'의 길이는 %1$d이어야 하며 %2$s에 대한 초기계수들에 상응되어야 합니다"

#. R/reshape.R: stop("length of 'v.names' does not evenly divide length of 'varying'")
#: R/reshape.R:0
msgid "length of 'v.names' does not evenly divide length of 'varying'"
msgstr "'v.names'의 길이를 'varying'의 길이로 정확히 나눌 수 없습니다"

#. R/reshape.R: stop("length of 'varying' must be the product of length of 'v.names' and length of 'times'")
#: R/reshape.R:0
msgid ""
"length of 'varying' must be the product of length of 'v.names' and length of "
"'times'"
msgstr ""
"'varying'의 길이는 반드시 'v.names'의 길이와 'times'의 길이를 곱한 것과 같아"
"야 합니다"

#. R/cov.wt.R: stop("length of 'wt' must equal the number of rows in 'x'")
#: R/cov.wt.R:0
msgid "length of 'wt' must equal the number of rows in 'x'"
msgstr "'wt'의 길이는 반드시 'x'의 행의수와 동일해야 합니다"

#. R/shapiro.test.R: stop("length of 'x' argument must be between 3 and 5000")
#: R/shapiro.test.R:0
#, fuzzy
msgid "length of 'x' argument must be between 3 and 5000"
msgstr "'which'의 모든 구성요소들은 반드시 1과 %d 사이에 있어야 합니다"

#. R/addmargins.R: gettextf("length of FUN, %d, does not match the length of the margins, %d", length(FUN),     n.sid)
#: R/addmargins.R:0
#, fuzzy
msgid "length of FUN, %d, does not match the length of the margins, %d"
msgstr ""
"FUN의 길이는 %d인데,\n"
" 이는 margins의 길이 %d와 일치하지 않습니다"

#. R/arima.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "xreg")
#. R/arma0.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "xreg")
#. R/smspline.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "w")
#: R/arima.R:0 R/arma0.R:0 R/smspline.R:0
#, fuzzy
msgid "lengths of '%s' and '%s' arguments must match"
msgstr "'x'와 'w'의 길이는 반드시 일치해야 합니다"

#. R/nls-profile.R: warning("levels truncated to positive values only")
#: R/nls-profile.R:0
msgid "levels truncated to positive values only"
msgstr ""

#. R/family.R: gettextf("link %s not available for binomial family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for binomial family; available links are %s"
msgstr ""
"링크 \"%s\"는 바이노미얼 페밀리에서 사용할 수 없습니다.  사용가능한 링크들은 "
"%s입니다"

#. R/family.R: gettextf("link %s not available for gamma family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for gamma family; available links are %s"
msgstr ""
"링크 \"%s\"는 감마 페밀리에서 사용할 수 없습니다.  사용가능한 링크는 %s입니다"

#. R/family.R: gettextf("link %s not available for gaussian family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for gaussian family; available links are %s"
msgstr ""
"링크 \"%s\"는 가우시안 페밀리에서 사용할 수 없습니다.  사용가능한 링크들은 %s"
"입니다"

#. R/family.R: gettextf("link %s not available for inverse.gaussian family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid ""
"link %s not available for inverse.gaussian family; available links are %s"
msgstr ""
"링크 \"%s\"는 inverse.gaussian 페밀리에서 사용할 수 없습니다.  사용가능한 링"
"크는 %s입니다"

#. R/family.R: gettextf("link %s not available for poisson family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for poisson family; available links are %s"
msgstr ""
"링크 \"%s\"는 포아송 페밀리에서 사용할 수 없습니다.  사용가능한 링크들은 %s입"
"니다"

#. R/family.R: gettextf("link %s not available for quasibinomial family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for quasibinomial family; available links are %s"
msgstr ""
"링크 \"%s\"는 쿼시바이노미얼 페밀리에서 사용할 수 없습니다.  사용가능한 링크"
"는 %s입니다"

#. R/family.R: gettextf("link %s not available for quasipoisson family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for quasipoisson family; available links are %s"
msgstr ""
"링크 \"%s\"는 쿼시포아송 페밀리에서 사용할 수 없습니다.  사용가능한 링크들은 "
"%s입니다"

#. R/glm.R: gettext("link: ", domain = "R-stats")
#: R/glm.R:0
msgid "link:"
msgstr ""

#. R/lm.R: stop("lm object does not have a proper 'qr' component. Rank zero or should not have used lm(.., qr=FALSE).")
#: R/lm.R:0
#, fuzzy
msgid ""
"lm object does not have a proper 'qr' component. Rank zero or should not "
"have used lm(.., qr=FALSE)."
msgstr ""
"lm 객체는 적절한 'qr' 요소를 가지고 있지 않습니다.\n"
" Rank zero인 경우 lm(.., qr=FALSE)를 사용하지 말아야 합니다."

#. R/wilcox.test.R: gettext("location", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "location"
msgstr ""

#. R/wilcox.test.R: gettext("location shift", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "location shift"
msgstr ""

#. R/nlminb.R: stop("logical 'hessian' argument not allowed.  See documentation.")
#: R/nlminb.R:0
msgid "logical 'hessian' argument not allowed.  See documentation."
msgstr ""

#. R/nlm.R: stop("lower < upper  is not fulfilled")
#: R/nlm.R:0
msgid "lower < upper  is not fulfilled"
msgstr "lower < upper 이라는 조건이 만족하지 않습니다"

#. R/glm.R: stop("maximum number of iterations must be > 0")
#: R/glm.R:0
#, fuzzy
msgid "maximum number of iterations must be > 0"
msgstr "최대반복수는 반드시 0 보다 커야 합니다"

#. R/integrate.R: gettext("maximum number of subdivisions reached")
#: R/integrate.R:0
#, fuzzy
msgid "maximum number of subdivisions reached"
msgstr "최대반복수는 반드시 0 보다 커야 합니다"

#. R/t.test.R: gettext("mean", domain = "R-stats")
#: R/t.test.R:0
msgid "mean"
msgstr ""

#. R/t.test.R: gettextf("mean in group %s", levels(g))
#: R/t.test.R:0
msgid "mean in group %s"
msgstr ""

#. R/t.test.R: gettext("mean of the differences")
#: R/t.test.R:0
msgid "mean of the differences"
msgstr ""

#. R/t.test.R: gettext("mean of x")
#. R/t.test.R: gettext("mean of x")
#: R/t.test.R:0
msgid "mean of x"
msgstr ""

#. R/t.test.R: gettext("mean of y")
#: R/t.test.R:0
msgid "mean of y"
msgstr ""

#. R/optim.R: stop("method = \"Brent\" is only available for one-dimensional optimization")
#: R/optim.R:0
msgid "method = \"Brent\" is only available for one-dimensional optimization"
msgstr "1차원 최적화 문제는 method에 \"Brent\" 옵션을 이용할 수 있습니다"

#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#: R/lm.R:0
msgid "method = '%s' is not supported. Using 'qr'"
msgstr "method = '%s'는 지원되지 않으므로 'qr'을 이용해보세요"

#. R/optim.R: warning("method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'")
#: R/optim.R:0
msgid ""
"method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'"
msgstr ""
"메소드 L-BFGS-B는 'reltol'과 'abtol' 대신에 'factr'(그리고 'pgtol')을 사용합"
"니다"

#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#: R/bandwidths.R:0
msgid "minimum occurred at one end of the range"
msgstr "최소값이 범위의 끝점들 중 하나에서 발견되었습니다"

#. R/ppr.R: stop("mismatched 'x' and 'y'")
#: R/ppr.R:0
msgid "mismatched 'x' and 'y'"
msgstr ""

#. R/lsfit.R: warning("missing observations were deleted")
#: R/lsfit.R:0
#, fuzzy
msgid "missing observations were deleted"
msgstr "결측값들은 삭제되었습니다"

#. R/smspline.R: stop("missing or infinite values in inputs are not allowed")
#: R/smspline.R:0
msgid "missing or infinite values in inputs are not allowed"
msgstr "입력에 결측치 혹은 무한한 값들은 허용되지 않습니다"

#. R/lm.R: stop("missing or negative weights not allowed")
#. R/nls.R: stop("missing or negative weights not allowed")
#: R/lm.R:0 R/nls.R:0
msgid "missing or negative weights not allowed"
msgstr "weights는 누락되거나 음수이어서는 안됩니다"

#. R/quantile.R: stop("missing values and NaN's not allowed if 'na.rm' is FALSE")
#: R/quantile.R:0
msgid "missing values and NaN's not allowed if 'na.rm' is FALSE"
msgstr "만약 'na.rm'이 FALSE라면 결측값들과 NaN은 허용되지 않습니다"

#. R/contr.poly.R: stop("missing values are not allowed in 'poly()'")
#: R/contr.poly.R:0
#, fuzzy
msgid "missing values are not allowed in 'poly()'"
msgstr "'poly'에서는 결측치들을 사용할 수 없습니다"

#. R/filter.R: gettextf("missing values in '%s' argument", "filter")
#. R/nafns.R: gettextf("missing values in '%s' argument", "object")
#: R/filter.R:0 R/nafns.R:0
#, fuzzy
msgid "missing values in '%s' argument"
msgstr "'filter'에 누락된 값들이 있습니다"

#. R/isoreg.R: stop("missing values not allowed")
#: R/isoreg.R:0
msgid "missing values not allowed"
msgstr ""

#. R/models.R: stop("model frame and formula mismatch in model.matrix()")
#: R/models.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr "model.matrix()에서 model frame과 formula가 일치하지 않습니다"

#. R/ar.R: gettextf("model order: %d singularities in the computation of the projection matrix results are only valid up to model order %d",     m, m - 1L)
#: R/ar.R:0
msgid ""
"model order: %d singularities in the computation of the projection matrix "
"results are only valid up to model order %d"
msgstr ""

#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#: R/AIC.R:0
msgid "models are not all fitted to the same number of observations"
msgstr ""

#. R/glm.R: stop("models were not all fitted to the same size of dataset")
#. R/lm.R: stop("models were not all fitted to the same size of dataset")
#. R/mlm.R: stop("models were not all fitted to the same size of dataset")
#: R/glm.R:0 R/lm.R:0 R/mlm.R:0
msgid "models were not all fitted to the same size of dataset"
msgstr ""

#. R/glm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/lm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/loess.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/mlm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/nls.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0 R/nls.R:0
#, fuzzy
msgid "models with response %s removed because response differs from model 1"
msgstr ""
"응답 %s를 가지는 모델들은 제거되었습니다.  그 이유는 응답이 모델 1과 다르기 "
"때문입니다"

#. R/kmeans.R: stop("more cluster centers than data points")
#: R/kmeans.R:0
msgid "more cluster centers than data points"
msgstr "데이터 포인트들보다 더 많은 cluster centers가 있습니다"

#. R/kmeans.R: stop("more cluster centers than distinct data points.")
#: R/kmeans.R:0
msgid "more cluster centers than distinct data points."
msgstr ""
"서로 다르게 구별되는 데이터 포인트들보다도 더 많은 cluster center가 있습니다"

#. R/reshape.R: gettextf("multiple rows match for %s=%s: first taken", timevar, times[i])
#: R/reshape.R:0
msgid "multiple rows match for %s=%s: first taken"
msgstr ""

#. R/symnum.R: stop("must have 2 'symbols' for logical 'x' argument")
#: R/symnum.R:0
msgid "must have 2 'symbols' for logical 'x' argument"
msgstr "반드시 노리적 'x'인수에 2개의 'symbols'를 가져야 합니다"

#. R/zzModels.R: stop("must have at least 4 observations to fit an 'SSfol' model")
#: R/zzModels.R:0
msgid "must have at least 4 observations to fit an 'SSfol' model"
msgstr ""
"'SSfol' model을 적합하기 위해서는 적어도 4개의 관측치들이 있어야 합니다"

#. R/zzModels.R: stop("must have length of response = length of second argument to 'SSfol'")
#: R/zzModels.R:0
msgid "must have length of response = length of second argument to 'SSfol'"
msgstr ""

#. R/kmeans.R: stop("must have same number of columns in 'x' and 'centers'")
#: R/kmeans.R:0
msgid "must have same number of columns in 'x' and 'centers'"
msgstr "'x'와 'centers'는 반드시 같은수의 열을 가져야 합니다"

#. R/spectrum.R: stop("must specify 'spans' or a valid kernel")
#: R/spectrum.R:0
msgid "must specify 'spans' or a valid kernel"
msgstr "'spans' 또는 유효한 커널을 반드시 지정해야 합니다"

#. R/xtabs.R: stop("must supply either 'formula' or 'data'")
#: R/xtabs.R:0
msgid "must supply either 'formula' or 'data'"
msgstr "'formula' 또는 'data' 둘 중 하나는 반드시 제공되어야 합니다"

#. R/contr.poly.R: stop("must supply one or more vectors")
#: R/contr.poly.R:0
msgid "must supply one or more vectors"
msgstr "하나 이상의 벡터들이 제공되어야 합니다"

#. R/power.R: gettext("n is number in *each* group")
#. R/power.R: gettext("n is number in *each* group")
#: R/power.R:0
msgid "n is number in *each* group"
msgstr ""

#. R/family.R: stop("need CRAN package 'SuppDists' for the 'inverse.gaussian' family")
#: R/family.R:0
msgid "need CRAN package 'SuppDists' for the 'inverse.gaussian' family"
msgstr "'inverse.gaussian' 페밀리는 CRAN 패키지 'SuppDists'를 필요로 합니다"

#. R/update.R: stop("need an object with call component")
#: R/update.R:0
msgid "need an object with call component"
msgstr "호출요소를 가진 객체가 필요합니다"

#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#: R/bandwidths.R:0
msgid "need at least 2 data points"
msgstr "최소한 2개의 데이터 포인트들이 필요합니다"

#. R/HoltWinters.R: stop("need at least 2 periods to compute seasonal start values")
#: R/HoltWinters.R:0
msgid "need at least 2 periods to compute seasonal start values"
msgstr ""
"seasonal start value를 계산하기 위해서는 최소한 2개의 주기를 필요로 합니다"

#. R/smspline.R: stop("need at least four unique 'x' values")
#: R/smspline.R:0
msgid "need at least four unique 'x' values"
msgstr "적어도 네개의 고유한 'x'값들이 필요합니다"

#. R/hclust.R: stop("need dendrograms where all leaves have labels")
#: R/hclust.R:0
msgid "need dendrograms where all leaves have labels"
msgstr ""

#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#: R/manova.R:0
msgid "need multiple responses"
msgstr ""

#. R/median.R: stop("need numeric data")
#: R/median.R:0
msgid "need numeric data"
msgstr "수치형 데이터가 필요합니다"

#. R/smspline.R: stop("need result of 'smooth.spline(keep.data = TRUE)'")
#. R/smspline.R: stop("need result of 'smooth.spline(keep.data = TRUE)'")
#: R/smspline.R:0
#, fuzzy
msgid "need result of 'smooth.spline(keep.data = TRUE)'"
msgstr "smooth.spline(keep.data = TRUE)의 결과가 필요합니다"

#. R/family.R: gettextf("negative values are not allowed for the '%s' family", "Poisson")
#. R/family.R: gettextf("negative values are not allowed for the '%s' family", "quasiPoisson")
#: R/family.R:0
#, fuzzy
msgid "negative values are not allowed for the '%s' family"
msgstr "'Poisson' 페밀리에 음의 값들은 허용되지 않습니다"

#. R/glm.R: stop("negative weights are not allowed")
#. R/lsfit.R: stop("negative weights are not allowed")
#: R/glm.R:0 R/lsfit.R:0
#, fuzzy
msgid "negative weights are not allowed"
msgstr "음수를 가지는 weights는 허용되지 않습니다"

#. R/factanal.R: stop("neither 'x' nor 'covmat' supplied")
#: R/factanal.R:0
msgid "neither 'x' nor 'covmat' supplied"
msgstr "'x'와 'covmat' 두가지 모두 제공되지 않았습니다"

#. R/logLik.R: stop("no \"nobs\" attribute is available")
#: R/logLik.R:0
msgid "no \"nobs\" attribute is available"
msgstr "\"nobs\" 속성은 사용가능하지 않습니다"

#. R/add.R: stop("no 'add1' method implemented for \"mlm\" models")
#: R/add.R:0
msgid "no 'add1' method implemented for \"mlm\" models"
msgstr "\"mlm\" 모델을 위해 구현된 'add1' 메소드가 아닙니다"

#. R/stepfun.R: stop("no 'as.stepfun' method available for 'x'")
#: R/stepfun.R:0
msgid "no 'as.stepfun' method available for 'x'"
msgstr "'x'에 사용가능한 'as.stepfun' 메소드가 없습니다"

#. R/add.R: stop("no 'drop1' method for \"mlm\" models")
#: R/add.R:0
msgid "no 'drop1' method for \"mlm\" models"
msgstr "\"mlm\" 모델에 대한 'drop1'메소드가 아닙니다"

#. R/selfStart.R: gettextf("no 'getInitial' method found for %s objects", dQuote(data.class(object)))
#: R/selfStart.R:0
#, fuzzy
msgid "no 'getInitial' method found for %s objects"
msgstr "\"%s\" 객체들에 대한 'getInitial' 메소드를 찾을 수 없습니다"

#. R/logLik.R: warning("no 'nobs()' method is available")
#. R/logLik.R: stop("no 'nobs()' method is available")
#: R/logLik.R:0
#, fuzzy
msgid "no 'nobs()' method is available"
msgstr "\"nobs\" 메소드는 사용가능하지 않습니다"

#. R/reshape.R: stop("no 'reshapeWide' attribute, must specify 'varying'")
#: R/reshape.R:0
msgid "no 'reshapeWide' attribute, must specify 'varying'"
msgstr "'reshapeWide' 속성이 없으므로 반드시 'varying'를 지정해야 합니다"

#. R/aov.R: stop("no degrees of freedom for residuals")
#: R/aov.R:0
msgid "no degrees of freedom for residuals"
msgstr "잔차에 자유도가 없습니다"

#. R/TukeyHSD.R: stop("no factors in the fitted model")
#: R/TukeyHSD.R:0
msgid "no factors in the fitted model"
msgstr "적합된 모델에 요인들이 없습니다"

#. R/smspline.R: stop("no finite observations")
#: R/smspline.R:0
msgid "no finite observations"
msgstr ""

#. R/loess.R: stop("no models to compare")
#: R/loess.R:0
msgid "no models to compare"
msgstr "비교할 모델들이 없습니다"

#. R/glm.R: gettextf("no observations informative at iteration %d", iter)
#: R/glm.R:0
msgid "no observations informative at iteration %d"
msgstr ""

#. R/nls.R: stop("no parameters to fit")
#: R/nls.R:0
msgid "no parameters to fit"
msgstr "적합할 파라미터들이 없습니다"

#. R/ts.R: stop("no replacement values supplied")
#: R/ts.R:0
msgid "no replacement values supplied"
msgstr "제공된 치환값들이 없습니다"

#. R/aggregate.R: stop("no rows to aggregate")
#: R/aggregate.R:0
msgid "no rows to aggregate"
msgstr "한데 묶을 행들은 없습니다"

#. R/prcomp.R: stop("no scores are available: refit with 'retx=TRUE'")
#: R/prcomp.R:0
msgid "no scores are available: refit with 'retx=TRUE'"
msgstr ""

#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#: R/nlm.R:0
msgid "no sign change found in %d iterations"
msgstr ""

#. R/bandwidths.R: stop("no solution in the specified range of bandwidths")
#: R/bandwidths.R:0
msgid "no solution in the specified range of bandwidths"
msgstr "bandwidth의 지정된 범위 내에서는 솔루션이 존재하지 않습니다"

#. R/factanal.R: stop("no starting values specified")
#. R/nls.R: stop("no starting values specified")
#: R/factanal.R:0 R/nls.R:0
msgid "no starting values specified"
msgstr "초기값 지정이 이루어지지 않았습니다"

#. R/models.R: stop("no terms component nor attribute")
#: R/models.R:0
msgid "no terms component nor attribute"
msgstr ""

#. R/add.R: stop("no terms in scope")
#. R/add.R: stop("no terms in scope")
#: R/add.R:0
msgid "no terms in scope"
msgstr "scope에 아무런 항이 없습니다"

#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#: R/add.R:0
msgid "no terms in scope for adding to object"
msgstr "scope에는 객체에 추가할 목적의 항이 없습니다"

#. R/ts.R: stop("no time series supplied")
#: R/ts.R:0
msgid "no time series supplied"
msgstr "제공된 시계열이 없습니다"

#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#: R/glm.R:0
msgid ""
"no valid set of coefficients has been found: please supply starting values"
msgstr "유효한 계수의 값들을 찾을 수 없으므로 시작값을 제공해주시길 바랍니다"

#. R/lm.influence.R: stop("non-NA residual length does not match cases used in fitting")
#: R/lm.influence.R:0
msgid "non-NA residual length does not match cases used in fitting"
msgstr ""

#. R/model.tables.R: gettextf("non-factors ignored: %s", tmp_n)
#: R/model.tables.R:0
msgid "non-factors ignored: %s"
msgstr "다음과 같이 요인이 아닌 것들은 무시됩니다: %s"

#. R/density.R: gettextf("non-finite '%s' argument", "bw")
#. R/density.R: gettextf("non-finite '%s' argument", "from")
#. R/density.R: gettextf("non-finite '%s' argument", "to")
#: R/density.R:0
#, fuzzy
msgid "non-finite '%s' argument"
msgstr "유효하지 않은 'use' 인자입니다"

#. R/glm.R: gettextf("non-finite coefficients at iteration %d", iter)
#: R/glm.R:0
msgid "non-finite coefficients at iteration %d"
msgstr "iteration %d에서 얻어진 계수의 값은 유한하지 않습니다"

#. R/family.R: warning("non-integer counts in a binomial glm!")
#: R/family.R:0
msgid "non-integer counts in a binomial glm!"
msgstr "binomial glm에서 정수가 아닌 count가 있습니다"

#. R/family.R: warning("non-integer number of successes in a binomial glm!")
#: R/family.R:0
#, fuzzy
msgid "non-integer number of successes in a binomial glm!"
msgstr "binomial glm에서 number of success가 정수가 아닙니다"

#. R/ts.R: warning("non-intersecting series")
#: R/ts.R:0
msgid "non-intersecting series"
msgstr ""

#. R/dendrogram.R: stop("non-leaf subtree of length 0")
#: R/dendrogram.R:0
#, fuzzy
msgid "non-leaf subtree of length 0"
msgstr "'ref'는 반드시 길이가 1이어야 합니다"

#. R/density.R: warning("non-matched further arguments are disregarded")
#: R/density.R:0
msgid "non-matched further arguments are disregarded"
msgstr ""

#. R/family.R: stop("non-positive values not allowed for the 'gamma' family")
#: R/family.R:0
msgid "non-positive values not allowed for the 'gamma' family"
msgstr "'gamma' 페밀리에서는 양수가 아닌 값들은 사용할 수없습니다"

#. R/arima.R: stop("non-stationary AR part")
#. R/arma0.R: stop("non-stationary AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary AR part"
msgstr ""

#. R/arima.R: stop("non-stationary AR part from CSS")
#: R/arima.R:0
msgid "non-stationary AR part from CSS"
msgstr ""

#. R/arima.R: stop("non-stationary seasonal AR part")
#. R/arma0.R: stop("non-stationary seasonal AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary seasonal AR part"
msgstr ""

#. R/arima.R: stop("non-stationary seasonal AR part from CSS")
#: R/arima.R:0
msgid "non-stationary seasonal AR part from CSS"
msgstr ""

#. R/ts.R: stop("non-time series not of the correct length")
#: R/ts.R:0
msgid "non-time series not of the correct length"
msgstr ""

#. R/stepfun.R: stop("not a valid step function")
#: R/stepfun.R:0
msgid "not a valid step function"
msgstr "유효한 step function이 아닙니다"

#. R/ts.R: stop("not all series have the same frequency")
#: R/ts.R:0
msgid "not all series have the same frequency"
msgstr ""

#. R/friedman.test.R: stop("not an unreplicated complete block design")
#. R/quade.test.R: stop("not an unreplicated complete block design")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "not an unreplicated complete block design"
msgstr "unreplicated complete 블록 디자인이 아닙니다"

#. R/ansari.test.R: gettextf("not enough '%s' observations", "x")
#. R/ansari.test.R: gettextf("not enough '%s' observations", "y")
#. R/kruskal.test.R: gettextf("not enough '%s' observations", "x")
#. R/poisson.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "y")
#. R/var.test.R: gettextf("not enough '%s' observations", "x")
#. R/var.test.R: gettextf("not enough '%s' observations", "y")
#. R/wilcox.test.R: gettextf("not enough '%s' observations", "x")
#. R/wilcox.test.R: gettextf("not enough '%s' observations", "y")
#: R/ansari.test.R:0 R/kruskal.test.R:0 R/poisson.test.R:0 R/t.test.R:0
#: R/var.test.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "not enough '%s' observations"
msgstr "'x' 관측값들이 충분하지 않습니다"

#. R/ks.test.R: stop("not enough 'x' data")
#: R/ks.test.R:0
msgid "not enough 'x' data"
msgstr "충분하지 않은 'x' 데이터입니다"

#. R/ks.test.R: stop("not enough 'y' data")
#: R/ks.test.R:0
msgid "not enough 'y' data"
msgstr "충분하지 않은 'y' 데이터입니다"

#. R/prop.test.R: stop("not enough data")
#: R/prop.test.R:0
msgid "not enough data"
msgstr ""

#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#: R/contrast.R:0
msgid "not enough degrees of freedom to define contrasts"
msgstr "contrasts를 정의하기에는 자유도가 충분하지 않습니다"

#. R/cor.test.R: stop("not enough finite observations")
#. R/cor.test.R: stop("not enough finite observations")
#: R/cor.test.R:0
msgid "not enough finite observations"
msgstr "유한한 값을 가지는 관측치가 충분하지 않습니다"

#. R/oneway.test.R: stop("not enough groups")
#: R/oneway.test.R:0
msgid "not enough groups"
msgstr ""

#. R/fligner.test.R: stop("not enough observations")
#. R/mood.test.R: stop("not enough observations")
#. R/oneway.test.R: stop("not enough observations")
#. R/t.test.R: stop("not enough observations")
#: R/fligner.test.R:0 R/mood.test.R:0 R/oneway.test.R:0 R/t.test.R:0
msgid "not enough observations"
msgstr ""

#. R/plot.lm.R: gettextf("not plotting observations with leverage one:\n  %s", paste(which(isInf),     collapse = ", "), domain = "R-stats")
#: R/plot.lm.R:0
msgid ""
"not plotting observations with leverage one:\n"
"  %s"
msgstr ""

#. R/ftable.R: stop("nothing to tabulate")
#: R/ftable.R:0
msgid "nothing to tabulate"
msgstr "테이블을 만들 것이 없습니다"

#. R/htest.R: gettext("null values:", domain = "R-stats")
#: R/htest.R:0
msgid "null values:"
msgstr ""

#. R/var.test.R: gettext("num df", domain = "R-stats")
#: R/var.test.R:0
msgid "num df"
msgstr ""

#. R/symnum.R: stop("number of 'cutpoints' must be one less than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one less than number of symbols"
msgstr "'cutpoints'의 개수는 반드시 심볼의 개수보다 하나 적어야 합니다"

#. R/symnum.R: stop("number of 'cutpoints' must be one more than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one more than number of symbols"
msgstr "'cutpoints'의 개수는 반드시 심볼의 개수보다 하나 많아야 합니다"

#. R/kmeans.R: stop("number of cluster centres must lie between 1 and nrow(x)", call. = FALSE)
#: R/kmeans.R:0
msgid "number of cluster centres must lie between 1 and nrow(x)"
msgstr "cluster centres의 개수는 반드시 1과 nrows(x)사이에 있어야 합니다"

#. R/ts.R: stop("number of differences must be a positive integer")
#: R/ts.R:0
msgid "number of differences must be a positive integer"
msgstr ""

#. R/poisson.test.R: gettext("number of events", domain = "R-stats")
#: R/poisson.test.R:0
msgid "number of events"
msgstr ""

#. R/power.anova.test.R: stop("number of groups must be at least 2")
#: R/power.anova.test.R:0
#, fuzzy
msgid "number of groups must be at least 2"
msgstr "그룹의 수는 반드시 적어도 2이어야 합니다"

#. R/smspline.R: stop("number of observations in 'x' and 'y' arguments must match")
#: R/smspline.R:0
#, fuzzy
msgid "number of observations in 'x' and 'y' arguments must match"
msgstr "'x'와 'y'의 관측치의 개수는 반드시 일치해야 합니다"

#. R/power.anova.test.R: stop("number of observations in each group must be at least 2")
#: R/power.anova.test.R:0
#, fuzzy
msgid "number of observations in each group must be at least 2"
msgstr "각 그룹에 있는 관측치의 수는 반드시 적어도 2이어야 합니다"

#. R/glm.R: gettextf("number of offsets (%d) should be equal to number of observations (%d)",     length(offset), NROW(Y))
#. R/lm.R: gettextf("number of offsets (%d) should be equal to number of observations (%d)",     length(offset), NROW(y))
#: R/glm.R:0 R/lm.R:0
#, fuzzy
msgid "number of offsets (%d) should be equal to number of observations (%d)"
msgstr "offsets의 개수 %1$d는 관측치의 개수 %2$d와 같아야 합니다"

#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#: R/add.R:0
msgid "number of rows in use has changed: remove missing values?"
msgstr "행의 개수가 변경되었습니다: 결측치들을 제거했나요?"

#. R/ar.R: stop("number of series in 'object' and 'newdata' do not match")
#: R/ar.R:0
msgid "number of series in 'object' and 'newdata' do not match"
msgstr "'object'와 'newdata'에 있는 시리즈의 개수가 일치하지 않습니다"

#. R/binom.test.R: gettext("number of successes", domain = "R-stats")
#: R/binom.test.R:0
msgid "number of successes"
msgstr ""

#. R/binom.test.R: gettext("number of trials", domain = "R-stats")
#: R/binom.test.R:0
msgid "number of trials"
msgstr ""

#. R/ts.R: stop("number of values supplied is not a sub-multiple of the number of values to be replaced")
#: R/ts.R:0
msgid ""
"number of values supplied is not a sub-multiple of the number of values to "
"be replaced"
msgstr ""

#. R/lsfit.R: gettextf("number of weights = %d should equal %d (number of responses)", nwts, nry)
#: R/lsfit.R:0
msgid "number of weights = %d should equal %d (number of responses)"
msgstr "weights의 개수 %1$d는 응답의 개수 %2$d와 같아야 합니다"

#. R/smspline.R: stop("number of weights must match number of observations")
#: R/smspline.R:0
#, fuzzy
msgid "number of weights must match number of observations"
msgstr "가중치의 개수는 반드시 관측치의 개수와 일치해야 합니다"

#. R/ksmooth.R: stop("numeric 'y' argument must be supplied.\nFor density estimation use 'density()'")
#: R/ksmooth.R:0
#, fuzzy
msgid ""
"numeric 'y' argument must be supplied.\n"
"For density estimation use 'density()'"
msgstr ""
"수치형 y가 반드시 제공되어야 합니다.\n"
"밀도추정을 위해서는 density()를 사용하세요"

#. R/contrast.R: stop("numeric contrasts or contrast name expected")
#: R/contrast.R:0
msgid "numeric contrasts or contrast name expected"
msgstr ""

#. R/biplot.R: gettextf("object '%s' has no scores", deparse(substitute(x)))
#. R/biplot.R: gettextf("object '%s' has no scores", deparse(substitute(x)))
#: R/biplot.R:0
msgid "object '%s' has no scores"
msgstr "객체 '%s'는 아무런 score를 가지지 않습니다"

#. R/manova.R: gettextf("object must be of class %s or %s", dQuote("manova"), dQuote("maov"))
#: R/manova.R:0
msgid "object must be of class %s or %s"
msgstr "객체는 반드시 클래스 %1$s 또는 %2$s이어야 합니다"

#. R/lsfit.R: warning("observations with 0 weight were not used in calculating standard deviation")
#. R/lsfit.R: warning("observations with 0 weight were not used in calculating standard deviation")
#: R/lsfit.R:0
#, fuzzy
msgid ""
"observations with 0 weight were not used in calculating standard deviation"
msgstr "가중치가 0인 관측치들은 표준편차의 계산시 이용되지 않습니다"

#. R/glm.R: warning("observations with zero weight not used for calculating dispersion")
#: R/glm.R:0
msgid "observations with zero weight not used for calculating dispersion"
msgstr ""
"dispersion을 계산하기 위해서 이용되지 않았던 가중치가 없는 관측치들입니다"

#. R/fisher.test.R: gettext("odds ratio", domain = "R-stats")
#. R/fisher.test.R: gettext("odds ratio")
#: R/fisher.test.R:0
msgid "odds ratio"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid "old-style self-starting model functions are no longer supported."
msgstr ""

#. R/optim.R: warning("one-dimensional optimization by Nelder-Mead is unreliable:\nuse \"Brent\" or optimize() directly")
#: R/optim.R:0
msgid ""
"one-dimensional optimization by Nelder-Mead is unreliable:\n"
"use \"Brent\" or optimize() directly"
msgstr ""
"Nelder-Mead를 이용한 1차원 최적화 문제는 신뢰할 수 없습니다:\n"
"\"Brent\" 또는 optimize()를 이용해보세요"

#. R/cmdscale.R: gettextf("only %d of the first %d eigenvalues are > 0", k1, k)
#: R/cmdscale.R:0
#, fuzzy
msgid "only %d of the first %d eigenvalues are > 0"
msgstr "처음 %2$d개의 고유치들 중 %1$d개만이 양수입니다"

#. R/loess.R: stop("only 1-4 predictors are allowed")
#: R/loess.R:0
msgid "only 1-4 predictors are allowed"
msgstr ""

#. R/StructTS.R: stop("only implemented for univariate time series")
#. R/arma0.R: stop("only implemented for univariate time series")
#: R/StructTS.R:0 R/arma0.R:0
msgid "only implemented for univariate time series"
msgstr "오로지 일변량 시계열에서만 구현되어 있습니다"

#. R/ts.R: stop("only replacement of elements is allowed")
#: R/ts.R:0
msgid "only replacement of elements is allowed"
msgstr ""

#. R/stl.R: stop("only univariate series are allowed")
#: R/stl.R:0
msgid "only univariate series are allowed"
msgstr "오로지 단변량 시리즈만이 허용됩니다"

#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#: R/HoltWinters.R:0
msgid "optimization difficulties: %s"
msgstr "최적화하는데 다음과 같은 어려움이 있습니다: %s"

#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#: R/HoltWinters.R:0
msgid "optimization failure"
msgstr "최적화에 실패했습니다"

#. R/anova.R: gettextf("option \"%s\" is invalid: assuming TRUE", "show.coef.Pvalues")
#. R/anova.R: gettextf("option \"%s\" is invalid: assuming TRUE", "show.signif.stars")
#: R/anova.R:0
#, fuzzy
msgid "option \"%s\" is invalid: assuming TRUE"
msgstr "옵션 \"show.coef.Pvalues\"가 유효하지 않으므로 TRUE라고 가정합니다"

#. R/contr.poly.R: gettextf("orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom",     n - 1)
#: R/contr.poly.R:0
msgid ""
"orthogonal polynomials cannot be represented accurately enough for %d "
"degrees of freedom"
msgstr ""

#. R/StructTS.R: gettext("p-value")
#. R/htest.R: gettext("p-value", domain = "R-stats")
#: R/StructTS.R:0 R/htest.R:0
msgid "p-value"
msgstr ""

#. R/ks.test.R: warning("p-value will be approximate in the presence of ties")
#: R/ks.test.R:0
msgid "p-value will be approximate in the presence of ties"
msgstr "tie때문에 p-값은 근사치로 계산될 것입니다"

#. R/lm.R: gettext("p-value: ", domain = "R-stats")
#: R/lm.R:0
msgid "p-value:"
msgstr ""

#. R/lsfit.R: gettextf("p-value=%s", format(round(pvalue[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "p-value=%s"
msgstr ""

#. R/StructTS.R: gettext("p-values for Ljung-Box statistic")
#: R/StructTS.R:0
msgid "p-values for Ljung-Box statistic"
msgstr ""

#. R/nls.R: gettextf("parameters without starting value in 'data': %s", tmp_n)
#: R/nls.R:0
msgid "parameters without starting value in 'data': %s"
msgstr ""

#. R/pairwise.R: stop("pooling of SD is incompatible with paired tests")
#: R/pairwise.R:0
msgid "pooling of SD is incompatible with paired tests"
msgstr ""

#. R/family.R: stop("positive values only are allowed for the 'inverse.gaussian' family")
#: R/family.R:0
msgid "positive values only are allowed for the 'inverse.gaussian' family"
msgstr "'inverse.gaussian' 페밀링에서는 양수값들만 사용할 수 있습니다"

#. R/StructTS.R: gettextf("possible convergence problem: 'optim' gave code = %d and message %s", res$convergence,     sQuote(res$message))
#: R/StructTS.R:0
msgid "possible convergence problem: 'optim' gave code = %d and message %s"
msgstr "해에 대한 수렴문제: 'optim'이 코드 = %d와 메시지 %s를 돌려주었습니다"

#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d", res$convergence)
#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d", res$convergence)
#. R/arma0.R: gettextf("possible convergence problem: optim gave code = %d", code)
#: R/arima.R:0 R/arma0.R:0
msgid "possible convergence problem: optim gave code = %d"
msgstr "수렴에 관한 문제: optim은 code = %d를 반환하였습니다"

#. R/lm.R: warning("prediction from a rank-deficient fit may be misleading")
#: R/lm.R:0
msgid "prediction from a rank-deficient fit may be misleading"
msgstr ""

#. R/lm.R: warning("predictions on current data refer to _future_ responses")
#: R/lm.R:0
msgid "predictions on current data refer to _future_ responses"
msgstr "현재 데이터를 이용한 예측은 _future_response을 의미합니다"

#. R/loess.R: stop("predictors must all be numeric")
#: R/loess.R:0
msgid "predictors must all be numeric"
msgstr "predictors는 반드시 모두 수치형이어야 합니다"

#. R/distn.R: stop("probabilities must be finite, non-negative and not all 0")
#: R/distn.R:0
#, fuzzy
msgid "probabilities must be finite, non-negative and not all 0"
msgstr "확률은 반드시 음의 값을 가져서는 안됩니다"

#. R/chisq.test.R: stop("probabilities must be non-negative.")
#: R/chisq.test.R:0
msgid "probabilities must be non-negative."
msgstr "확률은 반드시 음의 값을 가져서는 안됩니다"

#. R/chisq.test.R: stop("probabilities must sum to 1.")
#: R/chisq.test.R:0
msgid "probabilities must sum to 1."
msgstr "확률값들의 총계는 반드시 1 이어야 합니다"

#. R/binom.test.R: gettext("probability of success", domain = "R-stats")
#: R/binom.test.R:0
msgid "probability of success"
msgstr ""

#. R/prop.test.R: gettext("proportion", domain = "R-stats")
#: R/prop.test.R:0
msgid "proportion"
msgstr ""

#. R/poisson.test.R: gettext("rate ratio", domain = "R-stats")
#. R/poisson.test.R: gettext("rate ratio", domain = "R-stats")
#: R/poisson.test.R:0
msgid "rate ratio"
msgstr ""

#. R/ansari.test.R: gettext("ratio of scales", domain = "R-stats")
#: R/ansari.test.R:0
msgid "ratio of scales"
msgstr ""

#. R/var.test.R: gettext("ratio of variances", domain = "R-stats")
#. R/var.test.R: gettext("ratio of variances", domain = "R-stats")
#: R/var.test.R:0
msgid "ratio of variances"
msgstr ""

#. R/optim.R: warning("read the documentation for 'trace' more carefully")
#: R/optim.R:0
msgid "read the documentation for 'trace' more carefully"
msgstr "'trace'에 대하여 문서를 좀 더 자세히 읽어보세요"

#. R/relevel.R: gettextf("ref = %d must be in 1L:%d", ref, nlev)
#: R/relevel.R:0
msgid "ref = %d must be in 1L:%d"
msgstr "ref = %d은 반드시 1L:%d 내에 있어야 합니다"

#. R/nlminb.R: gettext("relative convergence (4)")
#: R/nlminb.R:0
msgid "relative convergence (4)"
msgstr ""

#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#: R/wilcox.test.R:0
#, fuzzy
msgid "requested 'conf.level' value is not achievable"
msgstr "성취 될 수 없는 conf.level이 요청되었습니다"

#. R/wilcox.test.R: warning("requested conf.level not achievable")
#: R/wilcox.test.R:0
msgid "requested conf.level not achievable"
msgstr "성취 될 수 없는 conf.level이 요청되었습니다"

#. R/factanal.R: stop("requested scores without an 'x' matrix")
#: R/factanal.R:0
msgid "requested scores without an 'x' matrix"
msgstr ""

#. R/lm.R: warning("residual degrees of freedom in object suggest this is not an \"lm\" fit")
#: R/lm.R:0
msgid "residual degrees of freedom in object suggest this is not an \"lm\" fit"
msgstr ""
"객체내의 잔차에 대한 자유도는 \"lm\"을 사용한 적합이 아니라는 것을 의미합니다"

#. R/manova.R: gettextf("residuals have rank %d < %d", rss.qr$rank, ncol(resid))
#: R/manova.R:0
msgid "residuals have rank %d < %d"
msgstr "잔차는 %2$d보다 작은 수의 rank %1$d을 가집니다"

#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#: R/mlm.R:0
msgid "residuals have rank %s < %s"
msgstr "잔차는  %2$s보다 작은 수의 rank %1$s를 가집니다"

#. R/factanal.R: stop("response not allowed in formula")
#. R/prcomp.R: stop("response not allowed in formula")
#. R/princomp.R: stop("response not allowed in formula")
#: R/factanal.R:0 R/prcomp.R:0 R/princomp.R:0
msgid "response not allowed in formula"
msgstr "formula에서 허용되지 않은 response입니다"

#. R/integrate.R: gettext("roundoff error is detected in the extrapolation table")
#: R/integrate.R:0
msgid "roundoff error is detected in the extrapolation table"
msgstr ""

#. R/integrate.R: gettext("roundoff error was detected")
#: R/integrate.R:0
msgid "roundoff error was detected"
msgstr ""

#. R/dendrogram.R: stop("row dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "row dendrogram ordering gave index of wrong length"
msgstr ""

#. R/htest.R: gettext("sample estimates:", domain = "R-stats")
#: R/htest.R:0
msgid "sample estimates:"
msgstr ""

#. R/bandwidths.R: stop("sample is too sparse to find TD", domain = "R-stats")
#: R/bandwidths.R:0
msgid "sample is too sparse to find TD"
msgstr ""

#. R/mantelhaen.test.R: stop("sample size in each stratum must be > 1")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "sample size in each stratum must be > 1"
msgstr "각 stratum에 있는 샘플의 크기는 반드시 1 보다 커야 합니다"

#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "samples differ in location: cannot compute confidence set, returning NA"
msgstr ""
"location에 있는 샘플들이 다르므로 confidence set을 계산할 수 없어 NA를 돌려줍"
"니다"

#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#: R/add.R:0
msgid "scale:"
msgstr ""

#. R/ts.R: stop("scatter plots only for univariate time series")
#: R/ts.R:0
msgid "scatter plots only for univariate time series"
msgstr ""

#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#: R/add.R:0
msgid "scope is not a subset of term labels"
msgstr "scope는 항 레이블들의 부분집합이 아닙니다"

#. R/nlm.R: gettextf("search in [%g,%g]\n", lower, upper, domain = "R-stats")
#: R/nlm.R:0
msgid "search in [%g,%g]"
msgstr ""

#. R/nlm.R: gettextf("search in [%g,%g] ... ", lower, upper, domain = "R-stats")
#: R/nlm.R:0
msgid "search in [%g,%g] ..."
msgstr ""

#. R/arima.R: warning("seasonal MA part of model is not invertible")
#. R/arma0.R: warning("seasonal MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "seasonal MA part of model is not invertible"
msgstr "모델의 계절 MA 부분은 invertible 하지 않습니다"

#. R/ts.R: warning("series is corrupt, with no 'tsp' attribute")
#. R/ts.R: stop("series is corrupt, with no 'tsp' attribute")
#: R/ts.R:0
msgid "series is corrupt, with no 'tsp' attribute"
msgstr ""

#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d", NROW(x), nn)
#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d", NROW(x), nn)
#: R/ts.R:0
msgid "series is corrupt: length %d with 'tsp' implying %d"
msgstr ""

#. R/stl.R: stop("series is not periodic or has less than two periods")
#: R/stl.R:0
msgid "series is not periodic or has less than two periods"
msgstr ""

#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#: R/nls.R:0
msgid "setVarying : 'vary' length must match length of parameters"
msgstr ""
"setVarying : 'vary'의 길이는 반드시 파라미터들의 길이와 일치해야 합니다"

#. R/smspline.R: warning(wtxt, "\n", "setting df = 1  __use with care!__", sep = "")
#: R/smspline.R:0
msgid "setting df = 1  __use with care!__"
msgstr ""

#. R/arima.R: gettextf("sigma^2 estimated as %s:  log likelihood = %s,  aic = %s", format(x$sigma2,     digits = digits), format(round(x$loglik, 2L)), format(round(x$aic, 2L)), domain = "R-stats")
#. R/arma0.R: gettextf("sigma^2 estimated as %s:  log likelihood = %s,  aic = %s", format(x$sigma2,     digits = digits), format(round(x$loglik, 2)), format(round(x$aic, 2)), domain = "R-stats")
#: R/arima.R:0 R/arma0.R:0
msgid "sigma^2 estimated as %s:  log likelihood = %s,  aic = %s"
msgstr ""

#. R/arima.R: gettextf("sigma^2 estimated as %s:  part log likelihood = %s", format(x$sigma2, digits = digits),     format(round(x$loglik, 2)), domain = "R-stats")
#. R/arma0.R: gettextf("sigma^2 estimated as %s:  part log likelihood = %s", format(x$sigma2, digits = digits),     format(round(x$loglik, 2)), domain = "R-stats")
#: R/arima.R:0 R/arma0.R:0
msgid "sigma^2 estimated as %s:  part log likelihood = %s"
msgstr ""

#. R/contrast.R: stop("singular contrast matrix")
#: R/contrast.R:0
msgid "singular contrast matrix"
msgstr ""

#. R/nlminb.R: gettext("singular convergence (7)")
#: R/nlminb.R:0
msgid "singular convergence (7)"
msgstr ""

#. R/lm.R: stop("singular fit encountered")
#. R/lm.R: stop("singular fit encountered")
#: R/lm.R:0
msgid "singular fit encountered"
msgstr ""

#. R/nls.R: stop("singular gradient matrix at initial parameter estimates")
#: R/nls.R:0
msgid "singular gradient matrix at initial parameter estimates"
msgstr "초기 파라미터 추정치로부터 특이 그래디언트 행렬을 얻었습니다"

#. R/ts-tests.R: stop("singularities in regression")
#: R/ts-tests.R:0
msgid "singularities in regression"
msgstr ""

#. R/distn.R: stop("size != sum(x), i.e. one is wrong")
#: R/distn.R:0
msgid "size != sum(x), i.e. one is wrong"
msgstr "size가 sum(x)와 다르기 때문에 둘 중 하나는 잘못되었습니다"

#. R/hclust.R: stop("size cannot be NA nor exceed 65536")
#: R/hclust.R:0
#, fuzzy
msgid "size cannot be NA nor exceed 65536"
msgstr "크기는 NA가 될 수 없으며 65536도 넘을 수 없습니다"

#. R/smspline.R: gettext("smoothing parameter value is too large")
#: R/smspline.R:0
#, fuzzy
msgid "smoothing parameter value is too large"
msgstr "유효하지 않은 파라미터 값입니다"

#. R/smspline.R: gettext("smoothing parameter value is too small")
#: R/smspline.R:0
#, fuzzy
msgid "smoothing parameter value is too small"
msgstr "유효하지 않은 파라미터 값입니다"

#. R/arima.R: warning("some AR parameters were fixed: setting 'transform.pars = FALSE'")
#: R/arima.R:0
#, fuzzy
msgid "some AR parameters were fixed: setting 'transform.pars = FALSE'"
msgstr ""
"일부 AR 파라미터들은 고정되어 있습니다: transform.pars = FALASE 로 설정합니다"

#. R/arma0.R: warning("some ARMA parameters were fixed: setting transform.pars = FALSE")
#: R/arma0.R:0
msgid "some ARMA parameters were fixed: setting transform.pars = FALSE"
msgstr ""
"일부 ARMA 파라미터들은 고정되어 있습니다:  transform.pars = FALSE로 설정합니"
"다"

#. R/reshape.R: gettextf("some constant variables (%s) are really varying", tmp_N)
#: R/reshape.R:0
msgid "some constant variables (%s) are really varying"
msgstr ""

#. R/kruskal.test.R: warning("some elements of 'x' argument are not numeric and will be coerced to numeric")
#: R/kruskal.test.R:0
msgid ""
"some elements of 'x' argument are not numeric and will be coerced to numeric"
msgstr ""

#. R/dummy.coef.R: warning("some terms will have NAs due to the limits of the method")
#: R/dummy.coef.R:0
msgid "some terms will have NAs due to the limits of the method"
msgstr "메소드의 한계로 인하여 일부 항들이 NA를 가질 것입니다"

#. R/smspline.R: stop("some weights should be positive")
#: R/smspline.R:0
msgid "some weights should be positive"
msgstr "일부 weights는 양수이어야 합니다"

#. R/smspline.R: warning("specified both 'df' and 'cv'; will disregard the latter")
#: R/smspline.R:0
msgid "specified both 'df' and 'cv'; will disregard the latter"
msgstr "'df'와 'cv' 모두 지정되었으므로 나중의 것은 사용되지 않을 것입니다"

#. R/loess.R: stop("specified parametric for all predictors")
#: R/loess.R:0
msgid "specified parametric for all predictors"
msgstr ""

#. R/loess.R: stop("specified the square of a factor predictor to be dropped when degree = 1")
#: R/loess.R:0
msgid ""
"specified the square of a factor predictor to be dropped when degree = 1"
msgstr ""

#. R/loess.R: stop("specified the square of a predictor to be dropped with only one numeric predictor")
#: R/loess.R:0
msgid ""
"specified the square of a predictor to be dropped with only one numeric "
"predictor"
msgstr ""

#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#: R/distn.R:0
msgid "specify 'rate' or 'scale' but not both"
msgstr "'rate' 또는 'scale' 중 하나만 지정해야 합니다"

#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'k' and 'h'"
msgstr "'k'와 'h'중 하나만 지정해야 합니다"

#. R/identify.hclust.R: stop("specify exactly one of 'which' and 'x'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'which' and 'x'"
msgstr "'which'와 'x'중 하나만 지정해야 합니다"

#. R/spectrum.R: gettext("spectrum")
#: R/spectrum.R:0
msgid "spectrum"
msgstr ""

#. R/spectrum.R: gettext("spectrum (dB)")
#: R/spectrum.R:0
msgid "spectrum (dB)"
msgstr ""

#. R/splinefun.R: warning("spline: first and last y values differ - using y[1L] for both")
#: R/splinefun.R:0
msgid "spline: first and last y values differ - using y[1L] for both"
msgstr "spline: 처음과 마지막 y 값들이 다릅니다 - 양쪽 모두 y[1L]을 사용합니다"

#. R/spline.R: warning("spline: first and last y values differ - using y[1] for both")
#: R/spline.R:0
msgid "spline: first and last y values differ - using y[1] for both"
msgstr ""
"spline:  처음과 마지막 y 값들이 다릅니다 - 양쪽에 모두 y[1]을 사용합니다"

#. R/factanal.R: gettextf("start %d value: %s uniqs: %s", i, format(nfit$criteria[1L]), format(as.vector(round(nfit$uniquenesses,     4))), domain = "R-stats")
#: R/factanal.R:0
msgid "start %d value: %s uniqs: %s"
msgstr ""

#. R/glm.R: warning("step size truncated due to divergence", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated due to divergence"
msgstr "수렴하지 않기 때문에 step size는 잘려졌습니다"

#. R/glm.R: warning("step size truncated: out of bounds", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated: out of bounds"
msgstr ""

#. R/stepfun.R: stop("stepfun: 'x' must be ordered increasingly")
#: R/stepfun.R:0
msgid "stepfun: 'x' must be ordered increasingly"
msgstr ""

#. R/nlminb.R: gettext("storage only has been allocated (14)")
#: R/nlminb.R:0
msgid "storage only has been allocated (14)"
msgstr ""

#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#: R/cor.R:0
msgid "supply both 'x' and 'y' or a matrix-like 'x'"
msgstr "'x'와 'y' 모두 제공하거나, 행렬형태의 'x'를 제공해야 합니다"

#. R/pairwise.R: gettext("t tests with non-pooled SD", domain = "R-stats")
#: R/pairwise.R:0
msgid "t tests with non-pooled SD"
msgstr ""

#. R/pairwise.R: gettext("t tests with pooled SD", domain = "R-stats")
#: R/pairwise.R:0
msgid "t tests with pooled SD"
msgstr ""

#. R/prop.test.R: stop("table 'x' should have 2 entries")
#: R/prop.test.R:0
msgid "table 'x' should have 2 entries"
msgstr "테이블 'x'는 반드시 2개의 항목들을 가지고 있어야 합니다"

#. R/cutree.R: stop("the 'height' component of 'tree' is not sorted (increasingly)")
#: R/cutree.R:0
msgid "the 'height' component of 'tree' is not sorted (increasingly)"
msgstr "'tree'의 구성요소 'height'는 오름차순으로 정렬되어 있지 않습니다"

#. R/lm.R: stop("the 'se.fit' argument is not yet implemented for \"mlm\" objects")
#: R/lm.R:0
msgid "the 'se.fit' argument is not yet implemented for \"mlm\" objects"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies above that of y", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies above that of y"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies above the null hypothesis", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies above the null hypothesis"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies below that of y", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies below that of y"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies below the null hypothesis", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies below the null hypothesis"
msgstr ""

#. R/poisson.test.R: stop("the case k > 2 is unimplemented")
#: R/poisson.test.R:0
msgid "the case k > 2 is unimplemented"
msgstr ""

#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#: R/aov.R:0
msgid "the contrast defined is empty (has no TRUE elements)"
msgstr "정의된 contrast가 비어있어 TRUE를 가지는 요소가 없습니다"

#. R/StructTS.R: stop("the first value of the time series must not be missing")
#: R/StructTS.R:0
msgid "the first value of the time series must not be missing"
msgstr "시계열의 첫번째 값은 반드시 누락되어서는 안됩니다"

#. R/glm.R: warning("the following arguments to 'anova.glm' are invalid and dropped: ", tmp_N)
#: R/glm.R:0
#, fuzzy
msgid "the following arguments to 'anova.glm' are invalid and dropped:"
msgstr ""
"'anova.glm'에 전달된 다음의 인자들은 유효하지 않아 사용되지 않을 것입니다"

#. R/integrate.R: gettext("the input is invalid")
#: R/integrate.R:0
msgid "the input is invalid"
msgstr ""

#. R/integrate.R: gettext("the integral is probably divergent")
#: R/integrate.R:0
msgid "the integral is probably divergent"
msgstr ""

#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#: R/StructTS.R:0
msgid "the series is entirely NA"
msgstr "시리즈가 완전하게 NA입니다"

#. R/reshape.R: warning("there are records with missing times, which will be dropped.")
#: R/reshape.R:0
msgid "there are records with missing times, which will be dropped."
msgstr "누락된 times와 함께 있는 레코드는 이용되지 않을 것입니다"

#. R/bartlett.test.R: stop("there must be at least 2 observations in each group")
#: R/bartlett.test.R:0
msgid "there must be at least 2 observations in each group"
msgstr "각 그룹에는 최소한 2개의 관측치들이 있어야 합니다"

#. R/model.tables.R: stop("this fit does not inherit from \"lm\"")
#: R/model.tables.R:0
msgid "this fit does not inherit from \"lm\""
msgstr ""

#. R/ks.test.R: warning("ties should not be present for the Kolmogorov-Smirnov test")
#: R/ks.test.R:0
msgid "ties should not be present for the Kolmogorov-Smirnov test"
msgstr "Kolmogorov-Smirnov 테스트를 이용할 때는 ties가 있으면 안됩니다"

#. R/poisson.test.R: gettext("time base", domain = "R-stats")
#: R/poisson.test.R:0
msgid "time base"
msgstr ""

#. R/ts.R: stop("time series contains internal NA values")
#: R/ts.R:0
#, fuzzy
msgid "time series contains internal NA values"
msgstr "시리즈가 완전하게 NA입니다"

#. R/HoltWinters.R: stop("time series has no or less than 2 periods")
#: R/HoltWinters.R:0
msgid "time series has no or less than 2 periods"
msgstr "시계열이 없거나 2 주기보다 적습니다"

#. R/ts.R: stop("times to be replaced do not match")
#: R/ts.R:0
msgid "times to be replaced do not match"
msgstr ""

#. R/lm.influence.R: stop("too few cases, n < k")
#: R/lm.influence.R:0
msgid "too few cases, n < k"
msgstr "관측치의 수가 너무 적습니다, 즉, n < k 입니다"

#. R/zzModels.R: stop("too few distinct input values to fit a Michaelis-Menten model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a Michaelis-Menten model"
msgstr ""
"Michaelis-Menten model을 적합하기에는 너무 적은 수의 고유값을 가진 입력입니다"

#. R/zzModels.R: stop("too few distinct input values to fit a biexponential")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a biexponential"
msgstr ""

#. R/zzModels.R: stop("too few distinct input values to fit a four-parameter logistic")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a four-parameter logistic"
msgstr ""
"4개의 파라미터를 가지는 로지스틱을 적합하기에는 너무 적은 수의 고유값을 가진 "
"입력입니다"

#. R/zzModels.R: stop("too few distinct input values to fit a logistic model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a logistic model"
msgstr "로지스틱 모델을 적합하기에는 너무 적은 수의 고유값을 가진 입력입니다"

#. R/zzModels.R: stop("too few distinct input values to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit an asymptotic regression model"
msgstr ""
"asymptotic regression model을 적합하기 하기에는 너무 적은 수의 고유한 값을 가"
"지는 입력입니다"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOff' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOff' model"
msgstr ""
"'asympOff' model을 적합하기에는 너무 적은 숫자의 고유한 값을 가지는 입력입니"
"다"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOrig' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOrig' model"
msgstr ""
"'asympOrig' model을 적합하기에는 너무 적은 숫자의 고유한 값을 가지는 입력입니"
"다"

#. R/zzModels.R: stop("too few distinct input values to fit the Gompertz model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Gompertz model"
msgstr "Gompertz model을 적합하기에는 너무 적은 수의 고유값을 가진 입력입니다"

#. R/zzModels.R: stop("too few distinct input values to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Weibull growth model"
msgstr ""
"Weibull growth model을 적합하기에는 너무 적은 수의 고유값을 가진 입력입니다"

#. R/pairwise.R: stop("too few groups")
#: R/pairwise.R:0
msgid "too few groups"
msgstr "그룹의 수가 너무 적습니다"

#. R/arima.R: stop("too few non-missing observations")
#: R/arima.R:0
msgid "too few non-missing observations"
msgstr "누락되지 않은 값들이 너무 적습니다"

#. R/zzModels.R: stop("too few observations to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few observations to fit an asymptotic regression model"
msgstr "asymptotic regression model을 적합하는데 너무 적은 관측치입니다"

#. R/ts.R: stop("too many replacement values supplied")
#: R/ts.R:0
msgid "too many replacement values supplied"
msgstr "제공된 치환값들이 너무 많습니다"

#. R/arma0.R: warning("transformed ARMA parameters were fixed")
#: R/arma0.R:0
msgid "transformed ARMA parameters were fixed"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is greater than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is less than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true correlation is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/cor.test.R: gettextf("true correlation is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is less than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is not equal to %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true event rate is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/poisson.test.R: gettextf("true event rate is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
#, fuzzy
msgid "true location is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/wilcox.test.R: gettextf("true location is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is less than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
#, fuzzy
msgid "true mean is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/t.test.R: gettextf("true mean is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is not equal to %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is greater than %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
#, fuzzy
msgid "true odds ratio is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/fisher.test.R: gettextf("true odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is not equal to %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is greater than %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is greater than %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is less than %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is less than %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is not equal to %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is greater than %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is greater than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is less than %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is less than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is not equal to %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion is greater than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion is greater than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion is less than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
#, fuzzy
msgid "true proportion is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/prop.test.R: gettextf("true proportion is not equal to %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion is not equal to %s"
msgstr ""

#. R/poisson.test.R: gettextf("true rate ratio is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true rate ratio is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true rate ratio is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/poisson.test.R: gettextf("true rate ratio is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is not equal to %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is greater than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is greater than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is less than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is less than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is not equal to %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is not equal to %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is greater than %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is greater than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is less than %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is less than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is not equal to %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true rho is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/cor.test.R: gettextf("true rho is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true tau is less than %s"
msgstr "'r'은 1보다 적습니다"

#. R/cor.test.R: gettextf("true tau is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is not equal to %s"
msgstr ""

#. R/add.R: gettextf("trying +%s", tt, domain = "R-stats")
#: R/add.R:0
msgid "trying +%s"
msgstr ""

#. R/add.R: gettextf("trying - %s", tt, domain = "R-stats")
#: R/add.R:0
msgid "trying - %s"
msgstr ""

#. R/ks.test.R: gettext("two-sided", domain = "R-stats")
#. R/ks.test.R: gettext("two-sided", domain = "R-stats")
#: R/ks.test.R:0
msgid "two-sided"
msgstr ""

#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#: R/model.tables.R:0
msgid "type '%s' is not implemented yet"
msgstr "타입 '%s'는 아직 구현되지 않았습니다"

#. R/cancor.R: stop("unequal number of rows in 'cancor()'")
#: R/cancor.R:0
#, fuzzy
msgid "unequal number of rows in 'cancor()'"
msgstr "'cancor'에 있는 행의 숫자들이 동일하지 않습니다"

#. R/acf.R: stop("univariate time series only")
#: R/acf.R:0
msgid "univariate time series only"
msgstr "일변량 시계열만 가능합니다"

#. R/density.R: stop("unknown bandwidth rule")
#: R/density.R:0
msgid "unknown bandwidth rule"
msgstr "알 수 없는 bandwidth rule입니다"

#. R/kernel.R: stop("unknown named kernel")
#: R/kernel.R:0
msgid "unknown named kernel"
msgstr "알수없는 named kernel입니다"

#. R/optim.R: gettextf("unknown names in control: %s")
#: R/optim.R:0
#, fuzzy
msgid "unknown names in control: %s"
msgstr "control에 다음과 같은 알 수 없는 이름이 있습니다: "

#. R/stl.R: stop("unknown string value for 's.window' argument")
#: R/stl.R:0
#, fuzzy
msgid "unknown string value for 's.window' argument"
msgstr "s.window에 알수없는 문자열 값입니다"

#. R/nls.R: warning("upper and lower bounds ignored unless 'algorithm = \"port\"'")
#: R/nls.R:0
#, fuzzy
msgid "upper and lower bounds ignored unless 'algorithm = \"port\"'"
msgstr "만약 algorithm에 \"port\"가 주어지지 않는다면 상한과 하한이 무시됩니다"

#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate", fam)
#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate", fam)
#: R/glm.R:0
msgid "using F test with a '%s' family is inappropriate"
msgstr "'%s' 페밀리를 이용하여 F 테스트를 사용하는 것은 부적절합니다"

#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#: R/glm.R:0
msgid "using F test with a fixed dispersion is inappropriate"
msgstr "고정된 dispersion을 이용해서 F 테스트를 사용하는 것은 부적절합니다"

#. R/models.R: warning("using type = \"numeric\" with a factor response will be ignored")
#: R/models.R:0
msgid "using type = \"numeric\" with a factor response will be ignored"
msgstr "요인형 종속변수의 type = \"numeric\"의 사용은 무시될 것입니다"

#. R/family.R: message("using weights as inverse variances")
#: R/family.R:0
msgid "using weights as inverse variances"
msgstr "weights를 inverse variances 로 사용합니다"

#. R/family.R: message("using weights as shape parameters")
#: R/family.R:0
msgid "using weights as shape parameters"
msgstr "shape 파라미터로서 weight를 사용합니다"

#. R/glm.R: stop("value of 'epsilon' must be > 0")
#: R/glm.R:0
#, fuzzy
msgid "value of 'epsilon' must be > 0"
msgstr "'epsilon'의 값은 반드시 0보다 커야 합니다"

#. R/models.R: gettextf("variable '%s' is absent, its contrast will be ignored", nn)
#: R/models.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "변수 '%s'가 없으므로 이에 대한 contrast는 무시될 것입니다"

#. R/models.R: gettextf("variable '%s' is not a factor", nm)
#: R/models.R:0
msgid "variable '%s' is not a factor"
msgstr "변수 '%s'는 요인이 아닙니다"

#. R/models.R: gettextf("variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied",     names(old)[wrong], old[wrong], new[wrong])
#: R/models.R:0
msgid "variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied"
msgstr ""
"변수 '%1$s'는 유형 \"%2$s\"과 함께 적합되었어야 하는데 유형 \"%3$s\"이 제공되"
"었었습니다"

#. R/models.R: gettextf("variables %s were specified with different types from the fit", tmp_N)
#: R/models.R:0
msgid "variables %s were specified with different types from the fit"
msgstr ""

#. R/aov.R: stop("weights are not supported in a multistratum aov() fit")
#: R/aov.R:0
msgid "weights are not supported in a multistratum aov() fit"
msgstr "weights는 multistratum aov() 적합에 지원되지 않습니다"

#. R/cov.wt.R: stop("weights must be non-negative and not all zero")
#: R/cov.wt.R:0
msgid "weights must be non-negative and not all zero"
msgstr "weights는 반드시 음의 값을 가지지 않으며, 모두 0이어서는 안됩니다"

#. R/dendrogram.R: gettext(" with node pars", domain = "R-stats")
#: R/dendrogram.R:0
msgid "with node pars"
msgstr ""

#. R/anova.R: stop("wrong 'cs.ind' argument")
#: R/anova.R:0
#, fuzzy
msgid "wrong 'cs.ind' argument"
msgstr "유효하지 않은 'use' 인자입니다"

#. R/embed.R: stop("wrong embedding dimension")
#. R/embed.R: stop("wrong embedding dimension")
#: R/embed.R:0
msgid "wrong embedding dimension"
msgstr ""

#. R/ftable.R: stop("wrong method")
#: R/ftable.R:0
msgid "wrong method"
msgstr "잘못된 메소드입니다"

#. R/ppr.R: stop("wrong number of columns in 'x'")
#: R/ppr.R:0
msgid "wrong number of columns in 'x'"
msgstr "'x'에 있는 열의 개수가 잘못되었습니다"

#. R/contrast.R: stop("wrong number of contrast matrix rows")
#: R/contrast.R:0
msgid "wrong number of contrast matrix rows"
msgstr "contrast 행렬의 행의 개수가 잘못되었습니다"

#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#: R/ts-tests.R:0
msgid "x is not a vector or univariate time series"
msgstr "x는 벡터 또는 단변량 시계열이 아닙니다"

#. R/family.R: stop("y values must be 0 <= y <= 1")
#. R/family.R: stop("y values must be 0 <= y <= 1")
#: R/family.R:0
#, fuzzy
msgid "y values must be 0 <= y <= 1"
msgstr "y 값들은 반드시 0 이상 1 이하이어야 합니다"

#. R/smspline.R: gettextf("you must supply 1 < df <= n,  n = #{unique x} = %d", nx)
#: R/smspline.R:0
msgid "you must supply 1 < df <= n,  n = #{unique x} = %d"
msgstr ""

#. R/approx.R: stop("zero non-NA points")
#. R/approx.R: stop("zero non-NA points")
#. R/spline.R: stop("zero non-NA points")
#. R/splinefun.R: stop("zero non-NA points")
#: R/approx.R:0 R/spline.R:0 R/splinefun.R:0
msgid "zero non-NA points"
msgstr "NA가 아닌 포인트들의 개수는 0입니다"

#. R/ar.R: stop("zero-variance series")
#. R/ar.R: stop("zero-variance series")
#: R/ar.R:0
msgid "zero-variance series"
msgstr ""

#. R/smooth.R: ngettext(it, " used %d iteration", " used %d iterations", domain = "R-stats")
#. R/smooth.R: ngettext(it, " used %d iteration", " used %d iterations", domain = "R-stats")
#: R/smooth.R:0
msgid " used %d iteration"
msgid_plural " used %d iterations"
msgstr[0] ""

#. R/factanal.R: ngettext(factors, "%d factor is too many for %d variables", "%d factors are too many for %d variables",     domain = "R-stats")
#: R/factanal.R:0
msgid "%d factor is too many for %d variables"
msgid_plural "%d factors are too many for %d variables"
msgstr[0] ""

#. R/loglin.R: ngettext(z$nlast, "%d iteration: deviation %s", "%d iterations: deviation %s", domain = "R-stats")
#: R/loglin.R:0
msgid "%d iteration: deviation %s"
msgid_plural "%d iterations: deviation %s"
msgstr[0] ""

#. R/lsfit.R: ngettext(sum(!good), "%d missing value deleted", "%d missing values deleted", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "%d missing value deleted"
msgid_plural "%d missing values deleted"
msgstr[0] "결측값들은 삭제되었습니다"

#. R/nafns.R: ngettext(n <- length(x), "%d observation deleted due to missingness", "%d observations deleted due to missingness")
#: R/nafns.R:0
msgid "%d observation deleted due to missingness"
msgid_plural "%d observations deleted due to missingness"
msgstr[0] ""

#. R/smspline.R: ngettext(diff, "%d observation with NA, NaN or Inf deleted", "%d observations with NAs, NaNs and/or Infs deleted",     domain = "R-stats")
#: R/smspline.R:0
msgid "%d observation with NA, NaN or Inf deleted"
msgid_plural "%d observations with NAs, NaNs and/or Infs deleted"
msgstr[0] "NA, NaNs 그리고/또는 Infs를 가지는 %d개의 관측치들은 삭제되었습니다"

#. R/princomp.R: ngettext(x$n.obs, "%d observation.", "%d observations.", domain = "R-stats")
#: R/princomp.R:0
#, fuzzy
msgid "%d observation."
msgid_plural "%d observations."
msgstr[0] "'x' 관측값들이 충분하지 않습니다"

#. R/lm.R: ngettext(df[1L], "%d residual is 0: no residual degrees of freedom!", "ALL %d residuals are 0: no residual degrees of freedom!",     domain = "R-stats")
#: R/lm.R:0
msgid "%d residual is 0: no residual degrees of freedom!"
msgid_plural "ALL %d residuals are 0: no residual degrees of freedom!"
msgstr[0] ""

#. R/princomp.R: ngettext(length(x$scale), "%d variable and", "%d variables and", domain = "R-stats")
#: R/princomp.R:0
msgid "%d variable and"
msgid_plural "%d variables and"
msgstr[0] ""

#. R/prop.test.R: ngettext(k, "%d-sample proportions test with continuity correction", "%d-sample test for equality of proportions with continuity correction",     domain = "R-stats")
#. R/prop.test.R: ngettext(k, "%d-sample proportions test with continuity correction", "%d-sample test for given proportions with continuity correction",     domain = "R-stats")
#: R/prop.test.R:0
msgid "%d-sample proportions test with continuity correction"
msgid_plural "%d-sample test for given proportions with continuity correction"
msgstr[0] ""

#. R/prop.test.R: ngettext(k, "%d-sample proportions test without continuity correction", "%d-sample test for equality of proportions without continuity correction",     domain = "R-stats")
#. R/prop.test.R: ngettext(k, "%d-sample proportions test without continuity correction", "%d-sample test for given proportions without continuity correction",     domain = "R-stats")
#: R/prop.test.R:0
msgid "%d-sample proportions test without continuity correction"
msgid_plural ""
"%d-sample test for given proportions without continuity correction"
msgstr[0] ""

#. R/lsfit.R: ngettext(nrx, "'X' matrix has %d case (row)", "'X' matrix has %d cases (rows)", domain = "R-stats")
#: R/lsfit.R:0
msgid "'X' matrix has %d case (row)"
msgid_plural "'X' matrix has %d cases (rows)"
msgstr[0] "'X' 행렬은 %d 개의 케이스들을 가집니다 (행방향)"

#. R/lsfit.R: ngettext(nry, "'Y' has %d case (row)", "'Y' has %d cases (rows)", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "'Y' has %d case (row)"
msgid_plural "'Y' has %d cases (rows)"
msgstr[0] "'X' 행렬은 %d 개의 케이스들을 가집니다 (행방향)"

#. R/filter.R: ngettext(nser, "'init' must have %d column", "'init' must have 1 or %d columns",     domain = "R-stats")
#: R/filter.R:0
#, fuzzy
msgid "'init' must have %d column"
msgid_plural "'init' must have 1 or %d columns"
msgstr[0] "'init'는 반드시 1개의 열을 가지고 있어야 합니다"

#. R/models.R: ngettext(nr, "'newdata' had %d row", "'newdata' had %d rows", domain = "R-stats")
#: R/models.R:0
msgid "'newdata' had %d row"
msgid_plural "'newdata' had %d rows"
msgstr[0] "'newdata'는 %d 행을 가지고 있었습니다"

#. R/factanal.R: ngettext(p, "'start' must have %d row", "'start' must have %d rows", domain = "R-stats")
#: R/factanal.R:0
msgid "'start' must have %d row"
msgid_plural "'start' must have %d rows"
msgstr[0] "'start'은 반드시  %d 행을 가지고 있습니다"

#. R/ts.R: ngettext(n.start, "'start.innov' argument is too short: need %d point", "'start.innov' argument is too short: need %d points",     domain = "R-stats")
#: R/ts.R:0
#, fuzzy
msgid "'start.innov' argument is too short: need %d point"
msgid_plural "'start.innov' argument is too short: need %d points"
msgstr[0] "변경되지 않은 'start'값입니다"

#. R/nlm.R: ngettext(maxiter, "'uniroot()' method did _NOT_ converge in %d iteration", "'uniroot()' method did _NOT_ converge in %d iterations",     domain = "R-stats")
#: R/nlm.R:0
#, fuzzy
msgid "'uniroot()' method did _NOT_ converge in %d iteration"
msgid_plural "'uniroot()' method did _NOT_ converge in %d iterations"
msgstr[0] "glm.fit: 알고리즘이 수렴하지 않았습니다"

#. R/logLik.R: ngettext(length(cl), "Class %s: %s (df=%s)\n", "Classes %s: %s (df=%s)\n", domain = "R-stats")
#: R/logLik.R:0
msgid "Class %s: %s (df=%s)\n"
msgid_plural "Classes %s: %s (df=%s)\n"
msgstr[0] ""

#. R/logLik.R: ngettext(length(cl), "Class %s: %s, ... (df=%s)\n", "Classes %s: %s, ... (df=%s)\n",     domain = "R-stats")
#: R/logLik.R:0
msgid "Class %s: %s, ... (df=%s)\n"
msgid_plural "Classes %s: %s, ... (df=%s)\n"
msgstr[0] ""

#. R/glm.R: ngettext(nsingular, "Coefficients: (%d not defined because of singularity)", "Coefficients: (%d not defined because of singularities)",     domain = "R-stats")
#. R/lm.R: ngettext(nsingular, "Coefficients: (%d not defined because of singularity)", "Coefficients: (%d not defined because of singularities)",     domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "Coefficients: (%d not defined because of singularity)"
msgid_plural "Coefficients: (%d not defined because of singularities)"
msgstr[0] ""

#. R/density.R: ngettext(x$n, "Data: %s (%d observation);", "Data: %s (%d observations);", domain = "R-stats")
#: R/density.R:0
msgid "Data: %s (%d observation);"
msgid_plural "Data: %s (%d observations);"
msgstr[0] ""

#. R/isoreg.R: ngettext(length(x$iKnots), "Isotonic regression from %s\n  with %d knot / break at obs.nr. %s;\n",     "Isotonic regression from %s\n  with %d knots / breaks at obs.nr. %s;\n", domain = "R-stats")
#: R/isoreg.R:0
msgid ""
"Isotonic regression from %s\n"
"  with %d knot / break at obs.nr. %s;\n"
msgid_plural ""
"Isotonic regression from %s\n"
"  with %d knots / breaks at obs.nr. %s;\n"
msgstr[0] ""

#. R/kmeans.R: ngettext(length(x$size), "K-means clustering with %d cluster of size %s", "K-means clustering with %d clusters of sizes %s",     domain = "R-stats")
#: R/kmeans.R:0
msgid "K-means clustering with %d cluster of size %s"
msgid_plural "K-means clustering with %d clusters of sizes %s"
msgstr[0] ""

#. R/aov.R: ngettext(length(rs), "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/aov.R: ngettext(length(rs), "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/loess.R: ngettext(1L, "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/loess.R: ngettext(1L, "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#: R/aov.R:0 R/loess.R:0
msgid "Residual Standard Error:"
msgid_plural "Residual Standard Errors:"
msgstr[0] ""

#. R/smspline.R: ngettext(ip["iter"], "Smoothing Parameter  spar=%s lambda=%s (%d iteration)", "Smoothing Parameter  spar=%s lambda=%s (%d iterations)",     domain = "R-stats")
#: R/smspline.R:0
msgid "Smoothing Parameter  spar=%s lambda=%s (%d iteration)"
msgid_plural "Smoothing Parameter  spar=%s lambda=%s (%d iterations)"
msgstr[0] ""

#. R/stepfun.R: ngettext(n, "Step function with continuity 'f'=%s, %d knot at:", "Step function with continuity 'f'=%s, %d knots at:",     domain = "R-stats")
#: R/stepfun.R:0
msgid "Step function with continuity 'f'=%s, %d knot at:"
msgid_plural "Step function with continuity 'f'=%s, %d knots at:"
msgstr[0] ""

#. R/stepfun.R: ngettext(n, "Step function with continuity 'f'=%s, %d knot with summary:", "Step function with continuity 'f'=%s, %d knots with summary:",     domain = "R-stats")
#: R/stepfun.R:0
msgid "Step function with continuity 'f'=%s, %d knot with summary:"
msgid_plural "Step function with continuity 'f'=%s, %d knots with summary:"
msgstr[0] ""

#. R/factanal.R: ngettext(factors, "Test of the hypothesis that %d factor is sufficient.", "Test of the hypothesis that %d factors are sufficient.",     domain = "R-stats")
#: R/factanal.R:0
msgid "Test of the hypothesis that %d factor is sufficient."
msgid_plural "Test of the hypothesis that %d factors are sufficient."
msgstr[0] ""

#. R/factanal.R: ngettext(x$dof, "The chi square statistic is %s on %d degree of freedom.", "The chi square statistic is %s on %d degrees of freedom.",     domain = "R-stats")
#: R/factanal.R:0
msgid "The chi square statistic is %s on %d degree of freedom."
msgid_plural "The chi square statistic is %s on %d degrees of freedom."
msgstr[0] ""

#. R/glm.R: ngettext(nobs, "X matrix has rank %d, but only %d observation", "X matrix has rank %d, but only %d observations",     domain = "R-stats")
#: R/glm.R:0
msgid "X matrix has rank %d, but only %d observation"
msgid_plural "X matrix has rank %d, but only %d observations"
msgstr[0] ""
"X 행렬은 rank %1$d를 가지고 있으나  %2$d개의 관측치 만을 가지고 있습니다"

#. R/smooth.R: ngettext(it, "__twiced__ used %d iteration", "__twiced__ used %d iterations", domain = "R-stats")
#. R/smooth.R: ngettext(it, "__twiced__ used %d iteration", "__twiced__ used %d iterations", domain = "R-stats")
#: R/smooth.R:0
msgid "__twiced__ used %d iteration"
msgid_plural "__twiced__ used %d iterations"
msgstr[0] ""

#. R/lsfit.R: ngettext(ncx, "but %d variable", "but %d variables", domain = "R-stats")
#: R/lsfit.R:0
msgid "but %d variable"
msgid_plural "but %d variables"
msgstr[0] ""

#. R/models.R: ngettext(nr2, "but variable found had %d row", "but variables found have %d rows",     domain = "R-stats")
#: R/models.R:0
msgid "but variable found had %d row"
msgid_plural "but variables found have %d rows"
msgstr[0] ""

#. R/diffinv.R: ngettext(na, "extra argument %s is disregarded", "extra arguments %s are be disregarded",     domain = "R-stats")
#. R/lm.R: ngettext(length(dots), "extra argument %s is disregarded", "extra arguments %s are disregarded",     domain = "R-stats")
#. R/lm.R: ngettext(as.integer(length(dots)), "extra argument %s is disregarded", "extra arguments %s are disregarded",     domain = "R-stats")
#: R/diffinv.R:0 R/lm.R:0
#, fuzzy
msgid "extra argument %s is disregarded"
msgid_plural "extra arguments %s are disregarded"
msgstr[0] "추가 인자 %s는 사용되지 않을 것입니다"

#. R/dendrogram.R: ngettext(length(nms), "extra argument %s is not of class \"dendrogram\"", "extra arguments %s are not of class \"dendrogram\"",     domain = "R-stats")
#: R/dendrogram.R:0
#, fuzzy
msgid "extra argument %s is not of class \"dendrogram\""
msgid_plural "extra arguments %s are not of class \"dendrogram\""
msgstr[0] "추가 인자 %1$s는 클래스 \"%2$s\"가 아닙니다"

#. R/models.R: ngettext(length(m), "factor %s has new level %s", "factor %s has new levels %s",     domain = "R-stats")
#: R/models.R:0
msgid "factor %s has new level %s"
msgid_plural "factor %s has new levels %s"
msgstr[0] ""

#. R/nls.R: ngettext(sum(np == -1), "fitting parameter %s without any variables", "fitting parameters %s without any variables",     domain = "R-stats")
#: R/nls.R:0
msgid "fitting parameter %s without any variables"
msgid_plural "fitting parameters %s without any variables"
msgstr[0] ""

#. R/kmeans.R: ngettext(iter.max, "kmeans algorithm did not converge in %d iteration", "kmeans algorithm did not converge in %d iterations",     domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "kmeans algorithm did not converge in %d iteration"
msgid_plural "kmeans algorithm did not converge in %d iterations"
msgstr[0] "glm.fit: 알고리즘이 수렴하지 않았습니다"

#. R/add.R: ngettext(sum(where == 0), "lower scope has term %s not included in model", "lower scope has terms %s not included in model",     domain = "R-stats")
#: R/add.R:0
msgid "lower scope has term %s not included in model"
msgid_plural "lower scope has terms %s not included in model"
msgstr[0] "lower scope는 모델에는 포함되어 있지 않은 항 %s를 가지고 있습니다"

#. R/medpolish.R: ngettext(maxiter, "medpolish() did not converge in %d iteration", "medpolish() did not converge in %d iterations",     domain = "R-stats")
#: R/medpolish.R:0
#, fuzzy
msgid "medpolish() did not converge in %d iteration"
msgid_plural "medpolish() did not converge in %d iterations"
msgstr[0] "glm.fit: 알고리즘이 수렴하지 않았습니다"

#. R/prop.test.R: ngettext(k, "null probability %s", "null probabilities %s", domain = "R-stats")
#: R/prop.test.R:0
msgid "null probability %s"
msgid_plural "null probabilities %s"
msgstr[0] ""

#. R/lsfit.R: ngettext(nry, "only %d case", "only %d cases", domain = "R-stats")
#: R/lsfit.R:0
msgid "only %d case"
msgid_plural "only %d cases"
msgstr[0] ""

#. R/selfStart.R: ngettext(sum(msng), "parameter %s does not occur in the model formula", "parameters %s do not occur in the model formula",     domain = "R-stats")
#: R/selfStart.R:0
msgid "parameter %s does not occur in the model formula"
msgid_plural "parameters %s do not occur in the model formula"
msgstr[0] ""

#. R/aov.R: ngettext(length(indError), "there is %d Error term: only 1 is allowed", "there are %d Error terms: only 1 is allowed",     domain = "R-stats")
#: R/aov.R:0
msgid "there is %d Error term: only 1 is allowed"
msgid_plural "there are %d Error terms: only 1 is allowed"
msgstr[0] ""

#. R/factanal.R: ngettext(nc, "unable to optimize from this starting value", "unable to optimize from these starting values",     domain = "R-stats")
#: R/factanal.R:0
msgid "unable to optimize from this starting value"
msgid_plural "unable to optimize from these starting values"
msgstr[0] "이 초기값으로부터는 최적화된 솔루션을 찾을 수 없습니다"

#. R/aov.R: ngettext(na, "unknown name %s in the 'split' list", "unknown names %s in the 'split' list",     domain = "R-stats")
#: R/aov.R:0
msgid "unknown name %s in the 'split' list"
msgid_plural "unknown names %s in the 'split' list"
msgstr[0] "'split' 리스트에 알 수 없는 이름 %s가 있습니다"

#. R/nlminb.R: ngettext(length(nap), "unrecognized control element named %s ignored", "unrecognized control elements named %s ignored",     domain = "R-stats")
#. R/nls.R: ngettext(length(nap), "unrecognized control element named %s ignored", "unrecognized control elements named %s ignored",     domain = "R-stats")
#: R/nlminb.R:0 R/nls.R:0
msgid "unrecognized control element named %s ignored"
msgid_plural "unrecognized control elements named %s ignored"
msgstr[0] ""

#. R/add.R: ngettext(sum(where == 0), "upper scope has term %s not included in model", "upper scope has terms %s not included in model",     domain = "R-stats")
#: R/add.R:0
msgid "upper scope has term %s not included in model"
msgid_plural "upper scope has terms %s not included in model"
msgstr[0] "upper scope는 모델에는 포함되어 있지 않은 항 %s를 가지고 있습니다"

#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit",     domain = "R-stats")
#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit",     domain = "R-stats")
#: R/add.R:0
msgid "using the %d/%d row from a combined fit"
msgid_plural "using the %d/%d rows from a combined fit"
msgstr[0] ""

#, fuzzy
#~ msgid "'%s' argument is of wrong length"
#~ msgstr "'scores' 인자의 길이가 잘못되었습니다"

#, fuzzy
#~ msgid "'merge' and 'height' arguments do not fit!"
#~ msgstr "'merge'와 'height'가 서로 맞아떨어지지 않습니다!"

#, fuzzy
#~ msgid "probabilities cannot be negative nor all 0"
#~ msgstr "확률값은 음의 값을 가질 수 없고 모두 0일 수도 없습니다"

#~ msgid "anova is only defined for sequences of \"nls\" objects"
#~ msgstr "여러개의 \"nls\" 객체들의 시퀀스로부터 anova만이 정의됩니다"

#~ msgid "arguments must have same length"
#~ msgstr "인자들은 반드시 동일한 길이를 가지고 있어야 합니다"

#, fuzzy
#~ msgid "missing values in 'object' argument"
#~ msgstr "객체안에 결측값들이 있습니다"

#, fuzzy
#~ msgid "'object' argument is not a valid object of class \"smooth.spline\""
#~ msgstr "추가 인자 %1$s는 클래스 \"%2$s\"가 아닙니다"

#, fuzzy
#~ msgid "'%s' argument must be numeric vector"
#~ msgstr "'y'는 반드시 수치형 벡터이어야 합니다"

#, fuzzy
#~ msgid "extra argument %s is disregarded."
#~ msgid_plural "extra arguments %s are disregarded."
#~ msgstr[0] "추가 인자 %s는 사용되지 않을 것입니다"

#~ msgid "'acf' must be of length two or more"
#~ msgstr "'acf'는 반드시 길이가 2 또는 그 이상이어야 합니다"

#~ msgid "invalid length(x)"
#~ msgstr "유효하지 않은 length(x)입니다"

#~ msgid "'x' must be numeric"
#~ msgstr "'x'는 반드시 수치형이어야 합니다"

#~ msgid "'lag.max' must be at least 0"
#~ msgstr "'lag.max'는 반드시 적어도 0이어야 합니다"

#~ msgid "'lag.max' must be at least 1"
#~ msgstr "'lag.max'는 반드시 적어도 1이어야 합니다"

#~ msgid "F test assumes quasi%s family"
#~ msgstr "F 테스트는 quasi%s 페밀리를 가정합니다"

#~ msgid "'by' must be a list"
#~ msgstr "'by'는 반드시 리스트이어야 합니다"

#~ msgid "'formula' missing or incorrect"
#~ msgstr "'formula'가 누락되었거나 잘못되었습니다"

#~ msgid "option \"show.signif.stars\" is invalid: assuming TRUE"
#~ msgstr "옵션 \"show.signif.stars\"는 유효하지 않으므로 TRUE라고 가정합니다"

#~ msgid "'conf.level' must be a single number between 0 and 1"
#~ msgstr "'conf.level'은 반드시 0과 1사이에 있는 단 한개의 숫자이어야 합니다"

#~ msgid "not enough 'y' observations"
#~ msgstr "'y' 관측값들이 충분하지 않습니다"

#~ msgid "'coef' must have same length as 'contrast.obj'"
#~ msgstr "'coef'는 반드시 'contrast.obj'와 같은 길이를 가져야 합니다"

#~ msgid "'approx' requires n >= 1"
#~ msgstr "'approx'는 n이 1 보다 크거나 같아야 합니다"

#~ msgid "'order.max' must be >= 1"
#~ msgstr "'order.max'는 반드시 1 보다 크거나 같아야 합니다"

#~ msgid "'n.ahead' must be at least 1"
#~ msgstr "'n.ahead'는 반드시 적어도 1이어야 합니다"

#~ msgid "'order.max' must be >= 0"
#~ msgstr "'order.max'는 반드시 0보다 크거나 같아야 합니다"

#~ msgid "lengths of 'x' and 'xreg' do not match"
#~ msgstr "'x'와 'xreg'의 길이가 일치하지 않습니다"

#~ msgid "wrong length for 'fixed'"
#~ msgstr "'fixed'의 길이가 잘못되었습니다"

#~ msgid "'init' is of the wrong length"
#~ msgstr "잘못된 길이를 가지는 'init'입니다"

#~ msgid "invalid 'SSinit'"
#~ msgstr "유효하지 않은 'SSinit'"

#~ msgid "invalid 'x'"
#~ msgstr "유효하지 않은 'x'입니다"

#~ msgid "invalid 'nb'"
#~ msgstr "유효하지 않은 'nb'입니다"

#~ msgid "incorrect length of 'x'"
#~ msgstr "'x'의 길이가 올바르지 않습니다"

#~ msgid "length of choices must be 2"
#~ msgstr "choices의 길이는 반드시 2이어야 합니다"

#~ msgid "'y' has rank 0"
#~ msgstr "'y'의 rank는 0입니다"

#~ msgid "'x' and 'y' must have the same length"
#~ msgstr "'x'와 'y'의 길이는 반드시 같아야 합니다"

#~ msgid "'x' and 'p' must have the same number of elements"
#~ msgstr "'x'와 'p'는 반드시 같은 수의 요소들을 가지고 있어야 합니다"

#~ msgid "invalid value of 'n'"
#~ msgstr "유효한 'n'의 값이 아닙니다"

#~ msgid "'degree' must be at least 1"
#~ msgstr "'degree'는 반드시 적어도 1이어야 합니다"

#~ msgid "'y' must be numeric"
#~ msgstr "'y'는 반드시 수치형이어야 합니다"

#~ msgid "'y' must be a numeric vector"
#~ msgstr "'y'는 반드시 수치형 벡터이어야 합니다"

#~ msgid "Cannot compute exact p-value with ties"
#~ msgstr "tie때문에 정확한 p값을 계산할 수 없습니다"

#~ msgid "'formula' missing or invalid"
#~ msgstr "'formula'가 누락되었거나 유효하지 않습니다"

#~ msgid "'ColSideColors' must be a character vector of length ncol(x)"
#~ msgstr "'ColSideColors'는 반드시 길이가 ncol(x)인 문자형 벡터이어야 합니다"

#~ msgid "'RowSideColors' must be a character vector of length nrow(x)"
#~ msgstr "'RowSideColors'는 반드시 길이 nrow(x)인 문자형 벡터이어야 합니다"

#~ msgid "invalid value of length(x)"
#~ msgstr "유효하지 않은 length(x)의 값입니다"

#~ msgid "'x' and 'weights' have unequal length"
#~ msgstr "'x'와 'weights'는 서로 다른 길이를 가지고 있습니다"

#~ msgid "non-finite 'bw'"
#~ msgstr "유한하지 않은 'bw'입니다"

#~ msgid "non-finite 'from'"
#~ msgstr "유한하지 않은 'from'입니다"

#~ msgid "non-finite 'to'"
#~ msgstr "유한하지 않은 'to'입니다"

#~ msgid "non-square matrix"
#~ msgstr "정방행렬이 아닙니다"

#~ msgid "no starting values supplied"
#~ msgstr "제공된 시작값들이 없습니다"

#~ msgid "invalid argument 'lambda'"
#~ msgstr "유효하지 않은 인자 'lambda'입니다"

#~ msgid "negative values not allowed for the 'quasiPoisson' family"
#~ msgstr "'quasiPoisson' 페밀리에서 음의 값들은 허용되지 않습니다"

#~ msgid ""
#~ "for the 'quasibinomial' family, y must be a vector of 0 and 1's\n"
#~ "or a 2 column matrix where col 1 is no. successes and col 2 is no. "
#~ "failures"
#~ msgstr ""
#~ "'quasibinomial' 페밀리에서 y는 반드시 0과 1로만 구성된 벡터이어야 합니다\n"
#~ "또는 첫번째 열은 성공의 수, 두번째 열은 실패의 수를 나타내는 2개의 열로된 "
#~ "행렬이어야 합니다"

#~ msgid "'x' must have at least 2 rows and columns"
#~ msgstr "'x'는 반드시 적어도 2개의 행과 열을 가져야 합니다"

#~ msgid "'y', 'groups' and 'blocks' must have the same length"
#~ msgstr ""
#~ "'y', 'groups' 그리고 'blocks'는 반드시 같은 길이를 가지고 있어야 합니다"

#~ msgid "formula missing"
#~ msgstr "formula가 없습니다"

#~ msgid "incorrect specification for 'row.vars'"
#~ msgstr "'row.vars' 지정이 잘못되었습니다"

#~ msgid "incorrect specification for 'col.vars'"
#~ msgstr "'col.vars' 지정이 잘못되었습니다"

#~ msgid "'x' must be an \"ftable\" object"
#~ msgstr "'x'는 반드시 \"ftable\" 객체이어야 합니다"

#~ msgid "'weights' must be a numeric vector"
#~ msgstr "'weights'는 반드시 수치형 벡터입니다"

#~ msgid ","
#~ msgstr ","

#~ msgid "k must be between 2 and %d"
#~ msgstr "k는 반드시 2와 %d사이에 있어야 합니다"

#~ msgid "'m' is less than 1"
#~ msgstr "'m'은 1보다 적습니다"

#~ msgid "'r' is less than 0"
#~ msgstr "'r'은 0보다 적습니다"

#~ msgid "'coef' must be a vector"
#~ msgstr "'coef'는 반드시 벡터이어야 합니다"

#~ msgid "'coef' does not have the correct length"
#~ msgstr "'coef'의 길이가 잘못되었습니다"

#~ msgid "'x' is not a kernel"
#~ msgstr "'x'는 커널이 아닙니다"

#~ msgid "invalid nrow(x)"
#~ msgstr "유효하지 않은 nrow(x)입니다"

#~ msgid "invalid ncol(x)"
#~ msgstr "유효하지 않은 ncol(x)입니다"

#~ msgid "'invalid value of 'k'"
#~ msgstr "'k'의 값이 유효하지 않습니다"

#~ msgid "'iter.max' must be positive"
#~ msgstr "'iter.max'는 반드시 양수이어야 합니다"

#~ msgid "number of offsets is %d, should equal %d (number of observations)"
#~ msgstr "offset의 개수  %1$d는 관측치의 개수 %2$d와 같아야 합니다"

#~ msgid "'degree' must be 0, 1 or 2"
#~ msgstr "'degree'는 반드시 0, 1, 또는 2이어야 합니다"

#~ msgid "invalid 'control' argument"
#~ msgstr "유효하지 않은 'control' 인자입니다"

#~ msgid "invalid NCOL(X)"
#~ msgstr "유효하지 않은 NCOL(X)입니다"

#~ msgid "invalid 'y'"
#~ msgstr "유효하지 않은 'y'입니다"

#~ msgid "invalid argument 'span'"
#~ msgstr "유효하지 않은 인자 'span'입니다"

#~ msgid "invalid argument 'cell'"
#~ msgstr "유효하지 않은 인자 'cell'입니다"

#~ msgid "invalid argument 'degree'"
#~ msgstr "유효하지 않은 인자 'degree'입니다"

#~ msgid "first argument must be a \"loess\" object"
#~ msgstr "첫번째 인자는 반드시 \"loess\" 객체이어야 합니다"

#~ msgid "'start' and 'table' must be same length"
#~ msgstr "'start'와 'table'는 반드시 같은 길이이어야 합니다"

#~ msgid "observations with 0 weights not used"
#~ msgstr "가중치가 0인 관측치들은 사용되지 않습니다"

#~ msgid "if 'x' is not an array, 'z' must be given"
#~ msgstr "만약 'x'가 배열이 아니라면 'z'는 반드시 주어져야 합니다"

#~ msgid "na.action must be a function"
#~ msgstr "na.action은 반드시 함수이어야 합니다"

#~ msgid "'offset' must be numeric"
#~ msgstr "'offset'은 반드시 수치형이어야 합니다"

#~ msgid "invalid 'contrasts.arg' argument"
#~ msgstr "유효하지 않은 'contrasts.arg' 인자입니다"

#~ msgid "invalid 'data' argument"
#~ msgstr "'data' 인자가 유효하지 않습니다"

#~ msgid "invalid argument 'omit'"
#~ msgstr "유효하지 않은 인수 'omit'입니다"

#~ msgid "'print.level' must be in {0,1,2}"
#~ msgstr "'print.level'은 반드시 {0,1,2}내에 있어야 합니다"

#~ msgid "'interval' must be a vector of length 2"
#~ msgstr "'interval'은 반드시 길이가 2인 벡터이어야 합니다"

#~ msgid "'params' has wrong length"
#~ msgstr "'params'의 길이가 잘못되었습니다"

#~ msgid "'varying' has wrong length"
#~ msgstr "'varying'의 길이가 잘못되었습니다"

#~ msgid "argument 'na.action' will be ignored"
#~ msgstr "인자 'na.action'은 사용되지 않을 것입니다"

#~ msgid "'x' and 'n' must have the same length"
#~ msgstr "'x'와 'n'은 반드시 같은 길이를 가지고 있어야 합니다"

#~ msgid "'which' must be in 1:6"
#~ msgstr "'which'는 반드시 1:6내에 있어야 합니다"

#~ msgid ""
#~ "exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL"
#~ msgstr ""
#~ "'n', 'delta', 'sd', 'power', 그리고 'sig.level' 중의 하나는 반드시 NULL이"
#~ "어야 합니다"

#~ msgid "'p' must have the same length as 'x' and 'n'"
#~ msgstr "'p'는 'x'와 'n'과 같은 길이를 가지고 있어야 합니다"

#~ msgid "'formula' missing"
#~ msgstr "'formula'가 없습니다"

#~ msgid "'probs' outside [0,1]"
#~ msgstr "'probs'는 [0,1] 범위외입니다"

#~ msgid "invalid argument 'n'"
#~ msgstr "유효하지 않은 인자 'n'입니다"

#~ msgid "invalid argument 'r'"
#~ msgstr "유효하지 않은 인자 'r'입니다"

#~ msgid "invalid argument 'c'"
#~ msgstr "유효하지 않은 인자 'c'입니다"

#~ msgid "'times' is wrong length"
#~ msgstr "'times'의 길이가 잘 못되었습니다"

#~ msgid "invalid value of 'k'"
#~ msgstr "'k'의 값이 유효하지 않습니다"

#~ msgid "sample size must be between 3 and 5000"
#~ msgstr "샘플의 크기는 반드시 3 부터 5000 이내에 있어야 합니다"

#~ msgid "invalid 'endrule' argument"
#~ msgstr "유효하지 않은 'endrule'인자입니다"

#~ msgid "invalid 'control.spar'"
#~ msgstr "유효하지 않은 'control.spar'입니다"

#~ msgid "'nknots' must be at least 1"
#~ msgstr "'nknots'은 반드시 적어도 1이어야 합니다"

#~ msgid "not a valid \"smooth.spline\" object"
#~ msgstr "유효한 \"smooth.spline\" 객체가 아닙니다"

#~ msgid "'span' must be between 0 and 1."
#~ msgstr "'span'은 반드시 0과 1 사이에 있어야 합니다"

#~ msgid "'p' must be between 0 and 0.5"
#~ msgstr "'p'는 반드시 0과 0.5 사이에 있어야 합니다"

#~ msgid "'deriv' must be between 0 and 3"
#~ msgstr "'deriv'는 반드시 0과 3사이에 있어야 합니다"

#~ msgid "'x' must be between -1 and 1"
#~ msgstr "'x'는 반드시 -1과 1 사이에 있어야 합니다"

#~ msgid "invalid 'abbr.colnames'"
#~ msgstr "유효하지 않은 'abbr.colnames'입니다"

#~ msgid "'model' must be list"
#~ msgstr "'model'은 반드시 리스트이어야 합니다"

#~ msgid "'ratio' must be a single positive number"
#~ msgstr "'ratio'는 반드시 양의 값을 가지는 하나의 숫자이어야 합니다"

#~ msgid "'x' and 'w' must have the same length"
#~ msgstr "'x'와 'w'는 반드시 같은 길이를 가져야 합니다"

#~ msgid "Requested conf.level not achievable"
#~ msgstr "성취될 수 없는 conf.level이 요청되었습니다"

#~ msgid "'init' must have 1 or %d columns"
#~ msgstr "'init'는 반드시 1개 또는 %d개의 열을 가지고 있어야 합니다"

#~ msgid "'deriv' must be between 0 and 2"
#~ msgstr "'deriv'는 반드시 0과 2사이에 있어야 합니다"

#~ msgid "character variable '%s' changed to a factor"
#~ msgstr "문자형 변수 '%s'가 요인으로 변경되었습니다"

#~ msgid "variable '%s' converted to a factor"
#~ msgstr "변수 '%s'가 요인으로 변환되었습니다"
