# R Italian translation
# Copyright (C) The R Foundation
# This file is distributed under the same license as the R package.
# Daniele Medri <dmedri@gmail.com>, 2005-2020.
#
msgid ""
msgstr ""
"Project-Id-Version: R-methods 3.6.3\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2021-03-18 20:00\n"
"PO-Revision-Date: \n"
"Last-Translator: Daniele Medri <dmedri@gmail.com>\n"
"Language-Team: Italian https://github.com/dmedri/R-italian-lang\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 2.2.1\n"

#. R/RMethodUtils.R: warning("\"MethodsList\" is defunct; allMethods now are empty")
#: R/RMethodUtils.R:0
msgid "\"MethodsList\" is defunct; allMethods now are empty"
msgstr "\"MethodsList\" è rimossa; allMethods ora sono vuoti"

#. R/MethodsList.R: gettext("## Signature:", domain = "R-methods")
#: R/MethodsList.R:0
msgid "## Signature:"
msgstr ""

#. R/MethodsListClass.R: gettext("%d: target %s: chose %s (others: %s)", domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "%d: target %s: chose %s (others: %s)"
msgstr "%d: obiettivo \"%s\": scegli \"%s\" (altri: %s)"

#. R/MethodsList.R: gettextf("%f is not a valid generic function: methods list was an object of class %s",     sQuote(f), dQuote(class(mlist)))
#: R/MethodsList.R:0
msgid ""
"%f is not a valid generic function: methods list was an object of class %s"
msgstr ""
"%f non è una funzione generica valida: l'elenco dei metodi era un oggetto "
"della classe %s"

#. R/RMethodUtils.R: gettextf("%s arguments (%s) after %s in the generic must appear in the method, in the same place at the end of the argument list",     .renderSignature(generic@generic, signature), paste(sQuote(trailingArgs), collapse = ", "),     sQuote("..."))
#: R/RMethodUtils.R:0
msgid ""
"%s arguments (%s) after %s in the generic must appear in the method, in the "
"same place at the end of the argument list"
msgstr ""
"Gli argomenti %s (%s) dopo %s nel generico devono apparire nel metodo, nello "
"stesso posto alla fine della lista argomenti"

#. R/Methods.R: gettextf("%s dispatches internally;  methods can be defined, but the generic function is implicit, and cannot be changed.",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s dispatches internally;  methods can be defined, but the generic function "
"is implicit, and cannot be changed."
msgstr ""
"%s con dispatch interni;  i metodi possono essere definiti, ma la funzione "
"generica è implicita, e non può essere modificata."

#. R/Methods.R: gettextf("%s has no methods defined", sQuote(f))
#: R/Methods.R:0
msgid "%s has no methods defined"
msgstr "%s non ha metodi definiti"

#. R/Methods.R: gettextf("%s is a primitive function; its generic form cannot be redefined", sQuote(name))
#: R/Methods.R:0
msgid "%s is a primitive function; its generic form cannot be redefined"
msgstr ""
"%s è una funzione primitiva; la sua forma generica non può essere ridefinita"

#. R/SClasses.R: gettextf("%s is not a defined class", dQuote(Class))
#: R/SClasses.R:0
msgid "%s is not a defined class"
msgstr "%s non è una classe definita"

#. R/refClass.R: gettextf("%s is not a defined class in this environment", dQuote(Class))
#: R/refClass.R:0
msgid "%s is not a defined class in this environment"
msgstr "%s non è una classe ridefinita in questo ambiente"

#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(field), dQuote(thisClass@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(def@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(className))
#: R/refClass.R:0
msgid "%s is not a field in class %s"
msgstr "%s non è un campo nella classe %s"

#. R/refClass.R: gettextf("%s is not a field in this class", sQuote(name))
#: R/refClass.R:0
msgid "%s is not a field in this class"
msgstr "%s non è un campo in questa classe"

#. R/RMethodUtils.R: gettextf("%s is not a generic function (or not visible here)", sQuote(f))
#: R/RMethodUtils.R:0
msgid "%s is not a generic function (or not visible here)"
msgstr "%s non è una funzione generica (o non è visibile qui)"

#. R/trace.R: gettextf("%s is not a method for reference class %s", sQuote(as.character(if (is.symbol(thisName)) thisName else what)),     dQuote(class(where)))
#: R/trace.R:0
msgid "%s is not a method for reference class %s"
msgstr "%s non è un metodo per la classe riferimento %s"

#. R/refClass.R: gettextf("%s is not a reference class", dQuote(Class))
#. R/refClass.R: gettextf("%s is not a reference class", dQuote(def@className))
#: R/refClass.R:0
msgid "%s is not a reference class"
msgstr "%s non è una classe riferimento"

#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#: R/SClasses.R:0
msgid "%s is not a slot in class %s"
msgstr "%s non è uno slot nella classe %s"

#. R/refClass.R: gettextf("%s is not a valid field or method name for reference class %s", sQuote(field),     dQuote(thisClass@className))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for reference class %s"
msgstr "%s non è un valido campo o nome metodo per la classe riferimento %s"

#. R/refClass.R: gettextf("%s is not a valid field or method name for this class", sQuote(what))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for this class"
msgstr "%s non è un valido campo o un nome metodo per questa classe"

#. R/Methods.R: gettextf("%s is not an S4 generic function in %s; methods not removed", sQuote(f),     sQuote(getPackageName(where)))
#: R/Methods.R:0
msgid "%s is not an S4 generic function in %s; methods not removed"
msgstr "%s non è una generica funzione S4 in %s; metodi non rimossi"

#. R/Methods.R: gettextf("%s is not currently a generic:  define it first to create a non-default implicit form",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s is not currently a generic:  define it first to create a non-default "
"implicit form"
msgstr ""
"%s non è attualmente un generico: definiscilo prima per creare un modulo "
"implicito non predefinito"

#. R/RClassUtils.R: gettextf("%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)",     dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"%s is not eligible to be the data part of another class (must be a basic "
"class or a virtual class with no slots)"
msgstr ""
"%s non è idonea come parte dati di un'altra classe (dev'essere una classe "
"base o una classe virtuale senza slot)"

#. R/addedFunctions.R: gettextf("%s is not one of the element names", sQuote(name))
#: R/addedFunctions.R:0
msgid "%s is not one of the element names"
msgstr "%s non è uno dei nomi degli elementi"

#. R/MethodsList.R: gettextf("%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s",     sQuote("useInherited"), dQuote(class(useInherited)))
#: R/MethodsList.R:0
msgid ""
"%s must be TRUE, FALSE, or a named logical vector of those values; got an "
"object of class %s"
msgstr ""
"%s dev'essere TRUE, FALSE o un vettore logico nominato di tali valori; si è "
"ottenuto un oggetto della classe %s"

#. R/trace.R: gettextf("%s() is not a generic function in the target environment -- methods will not be inserted",     f)
#: R/trace.R:0
msgid ""
"%s() is not a generic function in the target environment -- methods will not "
"be inserted"
msgstr ""
"%s () non è una funzione generica nell'ambiente di destinazione -- i metodi "
"non saranno inseriti"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is defunct.",     dQuote(this), domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is defunct."
msgstr ""
"%s, insieme agli altri modi d'uso degli oggetti metadati \"MethodsList\", è "
"deprecato."

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is deprecated.",     dQuote(this), domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is "
"deprecated."
msgstr ""
"%s, insieme agli altri modi d'uso degli oggetti metadati \"MethodsList\", è "
"deprecato."

#. R/Methods.R: gettextf("'%s' is not a known generic function {and 'package' not specified}", f)
#: R/Methods.R:0
msgid "'%s' is not a known generic function {and 'package' not specified}"
msgstr "'%s' non è una funzione generica nota {e 'package' non specificato}"

#. R/Methods.R: gettextf("'%s' or '%s' argument must be supplied", "generic.function", "class")
#: R/Methods.R:0
#, fuzzy
msgid "'%s' or '%s' argument must be supplied"
msgstr "Nessun %s nome passato"

#. R/RClassUtils.R: stop("'Class' argument must be a valid class definition or class")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'Class' argument must be a valid class definition or class"
msgstr "'Class' dev'essere una definizione valida o una classe"

#. R/oldClass.R: gettextf("'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s",     dQuote(class(object)))
#: R/oldClass.R:0
msgid ""
"'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true "
"of class %s"
msgstr ""
"'S3Class' può assegnare solo agli oggetti S4 che estendono \"oldClass\"; non "
"è vero per la classe %s"

#. R/oldClass.R: gettextf("'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s",     dQuote("oldClass"), dQuote(class(object)))
#: R/oldClass.R:0
msgid ""
"'S3Class' only defined for extensions of %s or classes with a data part:  "
"not true of class %s"
msgstr ""
"'S3Class' definito solo per estensioni di %s o classi con una parte dati:  "
"non è vero per la classe %s"

#. R/ClassExtensions.R: gettextf("'S3Part()' method is only defined for classes set up by 'setOldCLass()' method, basic classes or subclasses of these: not true of class %s",     dQuote(class(object)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"'S3Part()' method is only defined for classes set up by 'setOldCLass()' "
"method, basic classes or subclasses of these: not true of class %s"
msgstr ""
"S3Part() è unicamente definito per le classi impostate da setOldCLass(), "
"classi di base o sottoclassi di queste:  non è vero per la classe %s"

#. R/as.R: gettext("'as' method should have one argument, or match the arguments of 'coerce()' function: got (%s)",     domain = "R-methods")
#: R/as.R:0
#, fuzzy
msgid ""
"'as' method should have one argument, or match the arguments of 'coerce()' "
"function: got (%s)"
msgstr ""
"Il metodo 'as' dovrebbe avere un argomento o corrispondere agli argomenti di "
"coerce(): si è ottenuto (%s)"

#. R/Methods.R: stop("'callGeneric()' function must be called from within a method body")
#: R/Methods.R:0
#, fuzzy
msgid "'callGeneric()' function must be called from within a method body"
msgstr "callGeneric() dev'essere chiamato all'interno del corpo di un metodo"

#. R/RClassUtils.R: stop("'class' is a reserved slot name and cannot be redefined")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'class' is a reserved slot name and cannot be redefined"
msgstr "\"class\" è un nome slot riservato e non può essere ridefinito"

#. R/is.R: stop("'class1' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class1' must be the name of a class or a class definition"
msgstr "'class1' dev'essere il nome di una classe o una definizione di classe"

#. R/is.R: stop("'class2' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class2' must be the name of a class or a class definition"
msgstr "'class2' dev'essere il nome di una classe o una definizione di classe"

#. R/RClassUtils.R: stop("'externalptr' objects cannot be initialized from function 'new()'")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'externalptr' objects cannot be initialized from function 'new()'"
msgstr "Gli oggetti 'externalptr' non possono essere inizializzati da new()"

#. R/Methods.R: stop("'file' must be a character string or a connection")
#. R/Methods.R: stop("'file' must be a character string or a connection")
#: R/Methods.R:0
msgid "'file' must be a character string or a connection"
msgstr "'file' dev'essere una stringa di caratteri o una connessione"

#. R/MethodsListClass.R: gettext("'initialize' method returned an object of class %s instead of the required class %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid ""
"'initialize' method returned an object of class %s instead of the required "
"class %s"
msgstr ""
"Il metodo 'initialize' ha restituito un oggetto della classe %s invece della "
"classe richiesta %s"

#. R/MethodsListClass.R: gettextf("(All objects are from package %s)", unique(sQuote(pkg)), domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "(All objects are from package %s)"
msgstr ""

#. R/show.R: gettext("(This generic function excludes non-simple inheritance; see '?setIs')")
#: R/show.R:0
msgid "(This generic function excludes non-simple inheritance; see '?setIs')"
msgstr ""

#. R/RClassUtils.R: gettextf("(class %s)", .dQ(slotDefs[match(pnames[check], slotNames)]))
#. R/RClassUtils.R: gettextf("(class %s)", .dQ(unlist(properties, recursive = FALSE)[undefClasses]))
#: R/RClassUtils.R:0
msgid "(class %s)"
msgstr "(classe %s)"

#. R/methodsTable.R: gettextf("(definition from function %s)", sQuote(m@generic), domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "(definition from function %s)"
msgstr "nessuna definizione esistente per la funzione %s"

#. R/methodsTable.R: gettextf("(inherited from: %s)", sigString(d), domain = "R-methods")
#: R/methodsTable.R:0
msgid "(inherited from: %s)"
msgstr ""

#. R/trace.R: gettext("(to see original from package, look at object@original)", domain = "R-methods")
#: R/trace.R:0
msgid "(to see original from package, look at object@original)"
msgstr ""

#. R/trace.R: gettext("(to see the tracing code, look at body(object))", domain = "R-methods")
#: R/trace.R:0
msgid "(to see the tracing code, look at body(object))"
msgstr ""

#. R/Methods.R: gettextf("* mlist environment with %d potential methods", length(mlist), domain = "R-methods")
#: R/Methods.R:0
msgid "* mlist environment with %d potential methods"
msgstr ""

#. R/methodsTable.R: gettext("** final methods' distances: (%s)", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** final methods' distances: (%s)"
msgstr ""

#. R/methodsTable.R: gettext("** individual arguments' distances:", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** individual arguments' distances:"
msgstr ""

#. R/RMethodUtils.R: gettextf("--- caching class %s", dQuote(cl))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "--- caching class %s"
msgstr "(classe %s)"

#. R/RMethodUtils.R: gettextf("--- done caching class %s", dQuote(cl))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "--- done caching class %s"
msgstr "(classe %s)"

#. R/RMethodUtils.R: gettextf("--- done getting generic %s", sQuote(f))
#: R/RMethodUtils.R:0
msgid "--- done getting generic %s"
msgstr ""

#. R/RMethodUtils.R: gettextf("--- getting generic %s (and methods)", sQuote(f))
#: R/RMethodUtils.R:0
msgid "--- getting generic %s (and methods)"
msgstr ""

#. R/methodsTable.R: gettextf(" .. method %d: length(sig) = %d < nArg = %d\n", i, length(sig), nArg, domain = "R-methods")
#: R/methodsTable.R:0
msgid ".. method %d: length(sig) = %d < nArg = %d"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: about to assign or setMethod", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: about to assign or setMethod"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: after computing what, whereF", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: after computing what, whereF"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: untrace case", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: untrace case"
msgstr ""

#. R/MethodsList.R: gettext("<Empty Methods List>", domain = "R-methods")
#: R/MethodsList.R:0
msgid "<Empty Methods List>"
msgstr ""

#. R/methodsTable.R: gettext("<No methods>\n\n", domain = "R-methods")
#: R/methodsTable.R:0
msgid "<No methods>"
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the connection %s."
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the file %s.\n", sQuote(filename),     domain = "R-methods")
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the file %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the connection %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the file %s.\n", sQuote(filename))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the file %s."
msgstr ""

#. R/SClasses.R: gettext("All %s names must be distinct in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be distinct in:\n"
"(%s)"
msgstr ""
"Tutti i %s nomi devono essere distinti in:\n"
"(%s)"

#. R/SClasses.R: gettext("All %s names must be nonempty in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be nonempty in:\n"
"(%s)"
msgstr ""
"Tutti i %s nomi devono essere non-vuoti in:\n"
"(%s)"

#. R/RClassUtils.R: gettextf("Also defined by %s", paste(sQuote(pkgs[-1]), collapse = " "))
#: R/RClassUtils.R:0
#, fuzzy
msgid "Also defined by %s"
msgstr "Definito anche da"

#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(cl), domain = "R-methods")
#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", classLabel(cl), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", dQuote(class(object)))
#. R/trace.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0 R/trace.R:0
msgid "An object of class %s"
msgstr "Un oggetto di classe %s"

#. R/trace.R: gettextf("An object of class %s, from source:", dQuote(class(object)), domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "An object of class %s, from source:"
msgstr "Un oggetto di classe %s"

#. R/MethodsListClass.R: gettextf("An object of class %s:", dQuote(class(object)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "An object of class %s:"
msgstr "Un oggetto di classe %s"

#. R/trace.R: gettextf("An object with tracing code, class %s\nOriginal definition:\n", dQuote(class(object)),     domain = "R-methods")
#: R/trace.R:0
msgid ""
"An object with tracing code, class %s\n"
"Original definition:"
msgstr ""

#. R/SClasses.R: stop("Argument 'representation' cannot be used if argument 'slots' is supplied")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"Argument 'representation' cannot be used if argument 'slots' is supplied"
msgstr ""
"L'argomento \"representation\" non può essere utilizzato se è fornito "
"l'argomento \"slot\""

#. R/RClassUtils.R: gettextf("Calling function 'new()' on an undefined and non-basic class (\"%s\")",     Class)
#: R/RClassUtils.R:0
msgid "Calling function 'new()' on an undefined and non-basic class (\"%s\")"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s"
msgstr "(classe %s)"

#. R/show.R: gettextf("Class %s (from package %s)", dQuote(className), sQuote(packageName))
#: R/show.R:0
msgid "Class %s (from package %s)"
msgstr ""

#. R/show.R: gettextf("Class %s (from the global environment)", dQuote(className))
#: R/show.R:0
msgid "Class %s (from the global environment)"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s [in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s [package in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s consists of following classes: ", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s consists of following classes:"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s", dQuote(class(object)),     dQuote(nam), sQuote(object@package), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Class %s for generic %s defined from package %s"
msgstr "funzione generatore di classe per la classe %s dal pacchetto %s"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s"
msgstr ""
"nessuna tabella metodi per la generica %s dal pacchetto %s nel pacchetto %s"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n  defined with value class: %s\n",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s\n"
"  defined with value class: %s"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s\n  defined with value class: %s\n",     dQuote(class(object)), dQuote(nam), sQuote(object@package), dQuote(object@valueClass),     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  defined with value class: %s"
msgstr ""
"nessuna tabella metodi per la generica %s dal pacchetto %s nel pacchetto %s"

#. R/SClasses.R: gettextf("Class %s has a sealed class definition and cannot be redefined", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "Class %s has a sealed class definition and cannot be redefined"
msgstr "%s ha una definizione di classe protetta e non può essere ridefinita"

#. R/refClass.R: gettextf("Class %s is not a subclass of %s; functional semantics not defined for this class",     dQuote(class(object)), dQuote("envRefClass"))
#: R/refClass.R:0
msgid ""
"Class %s is not a subclass of %s; functional semantics not defined for this "
"class"
msgstr ""
"La classe %s non è una sottoclasse di %s; semantica funzionale non definita "
"per questa classe"

#. R/refClass.R: gettextf("Class %s is not one of the reference super classes for this object", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "Class %s is not one of the reference super classes for this object"
msgstr "%s non è una delle superclassi riferimento per questo oggetto"

#. R/RClassUtils.R: gettextf("Class %s, by class %s", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, by class %s"
msgstr "la classe %s non può estendere la classe %s"

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit coerce", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test and coerce", dQuote(what[i]),     tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test and coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test and coerce", dQuote(what[i]),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test and coerce"
msgstr ""

#. R/refClass.R: gettext("Class Methods: ", domain = "R-methods")
#: R/refClass.R:0
msgid "Class Methods:"
msgstr ""

#. R/refClass.R: gettext("Class fields:", domain = "R-methods")
#: R/refClass.R:0
msgid "Class fields:"
msgstr ""

#. R/refClass.R: gettextf("Class method definition (class %s) for method %s", dQuote(cl), sQuote(paste(object@name,     "()", collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition (class %s) for method %s"
msgstr "funzione generatore di classe per la classe %s dal pacchetto %s"

#. R/refClass.R: gettextf("Class method definition for method %s", sQuote(paste(object@name, "()",     collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition for method %s"
msgstr "richiesta una definizione per questo metodo"

#. R/ClassUnion.R: gettext("Class must be an empty virtual class with NULL prototype")
#: R/ClassUnion.R:0
msgid "Class must be an empty virtual class with NULL prototype"
msgstr ""

#. R/RClassUtils.R: gettext("Class:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class:"
msgstr ""

#. R/trace.R: sprintf("Constructing traceable class %s", dQuote(traceClassName))
#: R/trace.R:0
msgid "Constructing traceable class %s"
msgstr ""

#. R/Methods.R: gettextf("Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)",     sQuote(f), sQuote(getPackageName(where)), sQuote(getPackageName(gwhere)))
#: R/Methods.R:0
msgid ""
"Copying the generic function %s to environment %s, because the previous "
"version was in a sealed namespace (%s)"
msgstr ""
"Copia della funzione generica %s nell'ambiente %s, perché la versione "
"precedente era in un namespace protetto (%s)"

#. R/refClass.R: stop("Could not find local object in supplied environment")
#: R/refClass.R:0
msgid "Could not find local object in supplied environment"
msgstr "Non è possibile trovare l'oggetto locale nell'ambiente fornito"

#. R/packageName.R: gettextf("Created a package name, %s, when none found", sQuote(pkg))
#: R/packageName.R:0
msgid "Created a package name, %s, when none found"
msgstr "Creato un nome pacchetto,%s, quando non ne è stato trovato alcuno"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in package %s (from the saved implicit definition)",     sQuote(name), sQuote(package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in package %s (from the saved "
"implicit definition)"
msgstr ""
"Creazione di una funzione generica per %s da %s in %s\n"
"    (dalla definizione implicita salvata)"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in the global environment (from the saved implicit definition)",     sQuote(name), sQuote(package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in the global environment (from "
"the saved implicit definition)"
msgstr ""
"Creazione di una funzione generica per %s da %s in %s\n"
"    (dalla definizione implicita salvata)"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in package %s", sQuote(f),     sQuote(fdef@package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function for %s from package %s in package %s"
msgstr "Creazione di una funzione generica per %s dal pacchetto %s in %s"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in the global environment",     sQuote(f), sQuote(fdef@package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from package %s in the global environment"
msgstr "Creazione di una funzione generica per %s dal pacchetto %s in %s"

#. R/Methods.R: gettextf("Creating a generic function from function %s in package %s", sQuote(f),     sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in package %s"
msgstr "Creazione di una funzione generica dalla funzione %s in %s"

#. R/Methods.R: gettextf("Creating a generic function from function %s in the global environment",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in the global environment"
msgstr "Creazione di una funzione generica dalla funzione %s in %s"

#. R/Methods.R: gettextf("Creating a new generic function for %s in package %s", sQuote(name), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in package %s"
msgstr "Creazione una nuova generica funzione per %s in %s"

#. R/Methods.R: gettextf("Creating a new generic function for %s in the global environment", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in the global environment"
msgstr "Creazione una nuova generica funzione per %s in %s"

#. R/RClassUtils.R: stop("Data part ('.Data' slot) is undefined for general S4 object")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Data part ('.Data' slot) is undefined for general S4 object"
msgstr "La parte dati non è definita per l'oggetto S4 generale"

#. R/RClassUtils.R: gettextf("Definition of slot %s, in class %s, as %s conflicts with definition, inherited from class %s, as %s",     sQuote(dup), dQuote(name), dQuote(elNamed(allProps, dup)), dQuote(cl), dQuote(elNamed(theseProperties,         dup)))
#: R/RClassUtils.R:0
msgid ""
"Definition of slot %s, in class %s, as %s conflicts with definition, "
"inherited from class %s, as %s"
msgstr ""
"La definizione dello slot %s, nella classe %s, come %s è in conflitto con la "
"definizione, ereditata dalla classe %s, come %s"

#. R/RMethodUtils.R: message("Empty function name in .getGeneric", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "Empty function name in .getGeneric"
msgstr "Nome funzione vuoto in .getGeneric"

#. R/trace.R: gettextf("Environment of class %s is locked; using global environment for new class",     dQuote(className))
#: R/trace.R:0
msgid ""
"Environment of class %s is locked; using global environment for new class"
msgstr ""
"L'ambiente della classe %s è bloccato; si utilizza l'ambiente globale per la "
"nuova classe"

#. R/show.R: gettext("Excluded from nextMethod:", domain = "R-methods")
#: R/show.R:0
msgid "Excluded from nextMethod:"
msgstr ""

#. R/show.R: gettextf("Extended class definition (%s)", classLabel(class(object)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Extended class definition (%s)"
msgstr "classi slot non definite nella definizione di %s: %s"

#. R/refClass.R: gettextf("Field %s:", dQuote(fi), domain = "R-methods")
#: R/refClass.R:0
msgid "Field %s:"
msgstr ""

#. R/Methods.R: gettextf("For function %s, signature %s: argument in method definition changed from (%s) to (%s)",     sQuote(f), sQuote(signature), mnames, fnames)
#: R/Methods.R:0
msgid ""
"For function %s, signature %s: argument in method definition changed from "
"(%s) to (%s)"
msgstr ""
"Per la funzione %s, firma %s: l'argomento nella definizione del metodo è "
"stato modificato da (%s) a (%s)"

#. R/trace.R: gettextf("For package %s", sQuote(object@packageName), domain = "R-methods")
#: R/trace.R:0
msgid "For package %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Found more than one class %s in cache; using the first, from namespace '%s'",     dQuote(value[[1]]@className), pkgs[1])
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Found more than one class %s in cache; using the first, from namespace '%s'"
msgstr ""
"Trovata più di una classe \"%s\" in cache; si utilizza il primo, dal "
"namespace '%s'"

#. R/trace.R: gettextf("From source file %s", sQuote(object@sourceFile), domain = "R-methods")
#: R/trace.R:0
msgid "From source file %s"
msgstr ""

#. R/Methods.R: gettextf("Function %s is a group generic; do not call it directly", sQuote(name))
#: R/Methods.R:0
msgid "Function %s is a group generic; do not call it directly"
msgstr "La funzione %s è un gruppo generico; non chiamatelo direttamente"

#. R/Methods.R: gettextf("Function %s is already a group generic; no change", sQuote(name))
#: R/Methods.R:0
msgid "Function %s is already a group generic; no change"
msgstr "La funzione %s è già un gruppo generico; nessun cambiamento"

#. R/Methods.R: gettextf("Function %s:\n<not an S4 generic function>", sQuote(f), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Function %s:\n"
"<not an S4 generic function>"
msgstr "La funzione dev'essere un S4 generico"

#. R/debug.R: stop("Function must be an S4 generic")
#: R/debug.R:0
msgid "Function must be an S4 generic"
msgstr "La funzione dev'essere un S4 generico"

#. R/methodsTable.R: gettextf("Function: %s (package %s)", func, pkg, domain = "R-methods")
#: R/methodsTable.R:0
msgid "Function: %s (package %s)"
msgstr ""

#. R/refClass.R: gettext("Generator for class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Generator for class"
msgstr "nessuna definizione per la classe %s"

#. R/methodsTable.R: gettext(" Group generics: ", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Group generics:"
msgstr ""

#. R/MethodsList.R: gettextf("In command %s: use of \"MethodsList\" metadata objects is defunct.", deparse(this),     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "In command %s: use of \"MethodsList\" metadata objects is defunct."
msgstr "In %s: l'uso degli oggetti metadati \"MethodsList\" è deprecato."

#. R/MethodsList.R: gettextf("In command %s: use of \"MethodsList\" metadata objects is deprecated.",     sQuote(deparse(this)), domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "In command %s: use of \"MethodsList\" metadata objects is deprecated."
msgstr "In %s: l'utilizzo degli oggetti metadati \"MethodsList\" è deprecato."

#. R/RMethodUtils.R: gettextf("In method for %s with signature %s: ", sQuote(f), msig, domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "In method for %s with signature %s:"
msgstr "nel metodo per %s con firma %s:"

#. R/SClasses.R: gettextf("In slot '%s' of class \"%s\": %s", slotNames[[i]], class(sloti), errori)
#: R/SClasses.R:0
#, fuzzy
msgid "In slot '%s' of class \"%s\": %s"
msgstr "nome non valido per lo slot di classe %s: %s"

#. R/refClass.R: gettext(" Insert trace debugging for the specified method.  The arguments are the same as for the trace() function in package \"base\".  The first argument should be the name of the method to be traced, quoted or not.\n\n The additional argument classMethod= can be supplied as TRUE (by name only) in order to trace a method in a generator object (e.g., \"new\") rather than in the objects generated from that class.")
#: R/refClass.R:0
msgid ""
"Insert trace debugging for the specified method.  The arguments are the same "
"as for the trace() function in package \"base\".  The first argument should "
"be the name of the method to be traced, quoted or not.\n"
"\n"
" The additional argument classMethod= can be supplied as TRUE (by name only) "
"in order to trace a method in a generator object (e.g., \"new\") rather than "
"in the objects generated from that class."
msgstr ""

#. R/methodsTable.R: stop("Internal error in finding inherited methods; didn't return a unique method",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Internal error in finding inherited methods; didn't return a unique method"
msgstr ""

#. R/RClassUtils.R: gettext("Known Subclasses: ", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Known Subclasses:"
msgstr ""

#. R/refClass.R: gettext("Locked Fields", domain = "R-methods")
#: R/refClass.R:0
msgid "Locked Fields"
msgstr ""

#. R/show.R: gettextf("Method Definition (Class %s):", dQuote(classLabel(cl)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition (Class %s):"
msgstr "nessuna definizione per la classe %s"

#. R/show.R: gettext("Method Definition:", domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition:"
msgstr "Metodi non trovati: %s"

#. R/trace.R: gettext("Methods inserted for function %s(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Methods inserted for function %s(): %s"
msgstr "Metodi inseriti per la funzione %s(): %s"

#. R/RMethodUtils.R: gettextf("Methods list objects are not maintained in this version of R:  request for function %s may return incorrect information",     sQuote(fdef@generic))
#: R/RMethodUtils.R:0
msgid ""
"Methods list objects are not maintained in this version of R:  request for "
"function %s may return incorrect information"
msgstr ""

#. R/show.R: gettext("Methods may be defined for arguments: %s\nUse 'showMethods(\"%s\")' for currently available ones.",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Methods may be defined for arguments: %s\n"
"Use 'showMethods(\"%s\")' for currently available ones."
msgstr ""

#. R/refClass.R: gettextf("Methods not found: %s", paste(dQuote(methods[missing]), collapse = ", "))
#: R/refClass.R:0
msgid "Methods not found: %s"
msgstr "Metodi non trovati: %s"

#. R/refClass.R: gettext("Methods used: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Methods used:"
msgstr "Metodi non trovati: %s"

#. R/trace.R: gettext("Modified functions inserted through trace(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Modified functions inserted through trace(): %s"
msgstr "Inserite funzioni modificate tramite trace():%s"

#. R/RClassUtils.R: gettext("NOTE: arguments in definition %s changed from (%s) to (%s)", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "NOTE: arguments in definition %s changed from (%s) to (%s)"
msgstr ""
"Per la funzione %s, firma %s: l'argomento nella definizione del metodo è "
"stato modificato da (%s) a (%s)"

#. R/RClassUtils.R: gettext("Name:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Name:"
msgstr ""

#. R/trace.R: gettext("New functions are not currently inserted (not untraceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "New functions are not currently inserted (not untraceable): %s"
msgstr "Nuove funzioni non sono attualmente inserite (non rintracciabili): %s"

#. R/SClasses.R: gettextf("No %s names supplied", what)
#: R/SClasses.R:0
msgid "No %s names supplied"
msgstr "Nessun %s nome passato"

#. R/refClass.R: gettext("No Class Methods", domain = "R-methods")
#: R/refClass.R:0
msgid "No Class Methods"
msgstr ""

#. R/refClass.R: gettext("No fields defined", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "No fields defined"
msgstr "Definito anche da"

#. R/NextMethod.R: stop("No next method available")
#: R/NextMethod.R:0
msgid "No next method available"
msgstr "Nessun metodo successivo disponibile"

#. R/methodsTable.R: gettextf("No simply inherited methods found for function %s; using non-simple method",     sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid ""
"No simply inherited methods found for function %s; using non-simple method"
msgstr ""
"Non sono stati trovati metodi semplici ereditati per la funzione %s; si "
"utilizza un metodo non-semplice"

#. R/RClassUtils.R: gettextf("No slots, prototype of class %s", dQuote(.class1(ClassDef@prototype)),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "No slots, prototype of class %s"
msgstr ""

#. R/trace.R: gettext("Non-function objects are not currently inserted (not traceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Non-function objects are not currently inserted (not traceable): %s"
msgstr ""
"Gli oggetti non-funzioni non sono attualmente inseriti (non tracciabili): %s"

#. R/methodsTable.R: gettext("Note: method with signature %s chosen for function %s,\n target signature %s.\n %s would also be valid",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Note: method with signature %s chosen for function %s,\n"
" target signature %s.\n"
" %s would also be valid"
msgstr ""
"Nota: metodo con firma %s scelto per la funzione %s,\n"
"  firma target %s.\n"
"  %s sarebbe anche valido"

#. R/RClassUtils.R: gettextf("Note: some superclasses of class %s in package %s have duplicate definitions. This definition is not being treated as equivalent to that from package %s",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: some superclasses of class %s in package %s have duplicate "
"definitions. This definition is not being treated as equivalent to that from "
"package %s"
msgstr ""
"Nota: alcune superclassi della classe %s nel pacchetto %s hanno definizioni "
"duplicate. Questa definizione non viene trattata come equivalente dal "
"pacchetto %s"

#. R/RClassUtils.R: gettextf("Note: the specification for class %s in package %s seems equivalent to one from package %s and is not turning on duplicate class definitions for this class",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: the specification for class %s in package %s seems equivalent to one "
"from package %s and is not turning on duplicate class definitions for this "
"class"
msgstr ""
"Nota: la specifica per la classe %s nel pacchetto %s sembra equivalente a "
"una del pacchetto %s: non attivate definizioni di classe duplicate per "
"questa classe."

#. R/MethodsListClass.R: gettextf("Notes: %s.", notei, domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Notes: %s."
msgstr "Note: %s."

#. R/BasicClasses.R: gettextf("OOPS: something wrong with '.OldClassesPrototypes[[%d]]'", i)
#: R/BasicClasses.R:0
msgid "OOPS: something wrong with '.OldClassesPrototypes[[%d]]'"
msgstr "OOPS: qualcosa è andato storto con '.OldClassesPrototypes[[%d]]'"

#. R/MethodsListClass.R: gettext("Object:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Object:"
msgstr ""

#. R/MethodsListClass.R: gettext("Package:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Package:"
msgstr ""

#. R/trace.R: gettextf("Pretend we inserted class %s", class)
#: R/trace.R:0
#, fuzzy
msgid "Pretend we inserted class %s"
msgstr "nessuna definizione trovata per la classe ereditata:%s"

#. R/refClass.R: gettext("Prototypical reference class object", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Prototypical reference class object"
msgstr "non un riferimento di classe: %s"

#. R/methodsTable.R: stop(gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic)),     damain = "R-methods")
#: R/methodsTable.R:0
msgid "R-methods"
msgstr ""

#. R/refClass.R: gettext("Reference Class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Class"
msgstr "non un riferimento di classe: %s"

#. R/refClass.R: gettext("Reference Superclasses: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Superclasses:"
msgstr "non un riferimento di classe: %s"

#. R/refClass.R: gettextf("Reference class object of class %s", classLabel(class(.self)), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference class object of class %s"
msgstr "Un oggetto di classe %s"

#. R/refClass.R: gettext(" Reference methods used by this method are named as the arguments  either quoted or unquoted.  In the code analysis phase of installing the  the present method, the declared methods will be included.  It is essntial  to declare any methods used in a nonstandard way (e.g., via an apply function). Methods called directly do not need to be declared, but it is harmless to do so. $usingMethods() does nothing at run time.")
#: R/refClass.R:0
msgid ""
"Reference methods used by this method are named as the arguments  either "
"quoted or unquoted.  In the code analysis phase of installing the  the "
"present method, the declared methods will be included.  It is essntial  to "
"declare any methods used in a nonstandard way (e.g., via an apply function). "
"Methods called directly do not need to be declared, but it is harmless to do "
"so. $usingMethods() does nothing at run time."
msgstr ""

#. R/refClass.R: gettextf("Reference superclasses must come from the same package for the environment to be defined:  got %s and %s",     .nQuote(clRefMethods$.objectPackage), .nQuote(pkg))
#: R/refClass.R:0
msgid ""
"Reference superclasses must come from the same package for the environment "
"to be defined:  got %s and %s"
msgstr ""
"Le superclassi di riferimento devono provenire dallo stesso pacchetto per "
"l'ambiente da definire:  si è ottenuto%s e %s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s", message, target)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method %s not defined for signature %s"
msgstr ""
"non è possibile annullare il tracing del metodo per %s; nessun metodo "
"definito per questa firma: %s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s, required for signature %s",     message, target, defined)
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Required method %s not defined for signature %s, required for signature %s"
msgstr ""
"non è possibile annullare il tracing del metodo per %s; nessun metodo "
"definito per questa firma: %s"

#. R/RClassUtils.R: gettextf("Required method not defined: %s", message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method not defined: %s"
msgstr "Metodi non trovati: %s"

#. R/Methods.R: gettextf("Restoring default function definition of %s", sQuote(f))
#: R/Methods.R:0
msgid "Restoring default function definition of %s"
msgstr "Ripristino della definizione predefinita di funzione per %s"

#. R/MethodsList.R: gettext("See ?MethodsList.", domain = "R-methods")
#: R/MethodsList.R:0
msgid "See ?MethodsList."
msgstr ""

#. R/MethodsList.R: gettext("See ?MethodsList. (This warning is shown once per session.)", domain = "R-methods")
#: R/MethodsList.R:0
msgid "See ?MethodsList. (This warning is shown once per session.)"
msgstr ""

#. R/show.R: gettext("Signatures:", domain = "R-methods")
#: R/show.R:0
msgid "Signatures:"
msgstr ""

#. R/method.skeleton.R: gettextf("Skeleton of method written to %s", sQuote(file))
#: R/method.skeleton.R:0
msgid "Skeleton of method written to %s"
msgstr "Skeleton per il metodo scritto in %s"

#. R/method.skeleton.R: message("Skeleton of method written to connection", domain = "R-methods")
#: R/method.skeleton.R:0
#, fuzzy
msgid "Skeleton of method written to connection"
msgstr "Skeleton per il metodo scritto in %s"

#. R/BasicClasses.R: gettextf("Slot %s:", dQuote(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", deparse(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", dQuote(s), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0
msgid "Slot %s:"
msgstr ""

#. R/RClassUtils.R: gettext("Slots:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Slots:"
msgstr ""

#. R/trace.R: gettextf("Source environment created %s", format(object@dateCreated), domain = "R-methods")
#: R/trace.R:0
msgid "Source environment created %s"
msgstr ""

#. R/refClass.R: gettextf("The definition of class %s follows.", dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "The definition of class %s follows."
msgstr "nessuna definizione trovata per la classe %s"

#. R/RClassUtils.R: gettextf("The prototype for class %s has undefined slot(s): %s", dQuote(name), paste0("'",     undefinedPrototypeSlots, "'", collapse = ", "))
#: R/RClassUtils.R:0
msgid "The prototype for class %s has undefined slot(s): %s"
msgstr "Il prototipo per la classe %s ha slot non definiti: %s"

#. R/trace.R: gettext("Tracing ", domain = "R-methods")
#: R/trace.R:0
msgid "Tracing"
msgstr ""

#. R/refClass.R: gettext("Usage:  $help(topic) where topic is the name of a method (quoted or not)")
#: R/refClass.R:0
msgid ""
"Usage:  $help(topic) where topic is the name of a method (quoted or not)"
msgstr ""

#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead), domain = "R-methods")
#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead), domain = "R-methods")
#: R/MethodsList.R:0
msgid "Use %s instead."
msgstr "Utilizzare '%s' al suo posto."

#. R/MethodsList.R: gettext("Use of the \"MethodsList\" meta data objects is defunct.", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "Use of the \"MethodsList\" meta data objects is defunct."
msgstr "In %s: l'uso degli oggetti metadati \"MethodsList\" è deprecato."

#. R/MethodsList.R: gettext("Use of the \"MethodsList\" meta data objects is deprecated.", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "Use of the \"MethodsList\" meta data objects is deprecated."
msgstr "In %s: l'utilizzo degli oggetti metadati \"MethodsList\" è deprecato."

#. R/RClassUtils.R: gettextf("Virtual Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s [in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s [package in %s]"
msgstr ""

#. R/trace.R: gettext("Warning: Tracing only in the namespace; to untrace you will need:", domain = "R-methods")
#: R/trace.R:0
msgid "Warning: Tracing only in the namespace; to untrace you will need:"
msgstr ""

#. R/as.R: gettextf("a 'replace' method definition in 'setAs' function must be a function of two arguments, got %d",     length(args))
#: R/as.R:0
#, fuzzy
msgid ""
"a 'replace' method definition in 'setAs' function must be a function of two "
"arguments, got %d"
msgstr ""
"una definizione del metodo 'replace' in 'setAs' dev'essere una funzione di "
"due argomenti, si è ottenuta %d"

#. R/refClass.R: gettextf("a call to 'superClass()' is in the method %s but there is no superclass definition of this method for class %s",     sQuote(me), dQuote(thisClass@className))
#: R/refClass.R:0
#, fuzzy
msgid ""
"a call to 'superClass()' is in the method %s but there is no superclass "
"definition of this method for class %s"
msgstr ""
"una chiamata a superClass() nel metodo %s ma non esiste una definizione di "
"superclasse di questo metodo per la classe %s"

#. R/NextMethod.R: gettextf("a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'",     sQuote(f))
#: R/NextMethod.R:0
msgid ""
"a call to callNextMethod() appears in a call to %s, but the call does not "
"seem to come from either a generic function or another 'callNextMethod'"
msgstr ""
"una chiamata a callNextMethod() appare in una chiamata a %s, ma quest'ultima "
"non sembra provenire da una funzione generica o da un'altra 'callNextMethod'"

#. R/Methods.R: stop("a function for argument 'f' must be a generic function")
#. R/trace.R: stop("a function for argument 'f' must be a generic function")
#: R/Methods.R:0 R/trace.R:0
msgid "a function for argument 'f' must be a generic function"
msgstr "una funzione per l'argomento 'f' dev'essere una funzione generica"

#. R/RClassUtils.R: gettextf("a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype@object)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype object was supplied with object slot of class %s, but the class "
"definition requires an object that is class %s"
msgstr ""
"un oggetto prototipo è stato fornito con slot per oggetti della classe %s, "
"ma la definizione della classe richiede un oggetto che è la classe %s"

#. R/RClassUtils.R: gettextf("a prototype was supplied of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype was supplied of class %s, but the class definition requires an "
"object that is class %s"
msgstr ""
"è stato fornito un prototipo della classe %s, ma la definizione della classe "
"richiede un oggetto di classe %s"

#. R/refClass.R: gettextf("a single class name is needed for field %s, got a character vector of length %d",     sQuote(thisName), length(thisField))
#: R/refClass.R:0
msgid ""
"a single class name is needed for field %s, got a character vector of length "
"%d"
msgstr ""
"è necessario un singolo nome di classe per il campo %s, si è ottenuto un "
"vettore di caratteri di lunghezza %d"

#. R/RClassUtils.R: gettextf("a validity method must be a function of one argument, got an object of class %s",     dQuote(class(validity)))
#: R/RClassUtils.R:0
msgid ""
"a validity method must be a function of one argument, got an object of class "
"%s"
msgstr ""
"un metodo di validità dev'essere una funzione di un argomento, si è ottenuto "
"un oggetto della classe %s"

#. R/SClasses.R: gettextf("abnormal type %s is not supported as a superclass of a class definition",     dQuote(type))
#: R/SClasses.R:0
msgid "abnormal type %s is not supported as a superclass of a class definition"
msgstr ""
"il tipo anomalo %s non è supportato come superclasse di una definizione di "
"classe"

#. R/RMethodUtils.R: gettextf("action function %s has no arguments, should have at least 1", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "action function %s has no arguments, should have at least 1"
msgstr "funzione azione %s senza argomenti, dovrebbe averne almeno 1"

#. R/as.R: warning("ambiguous object (length != 1) to coerce to \"name\"")
#: R/as.R:0
msgid "ambiguous object (length != 1) to coerce to \"name\""
msgstr "oggetto ambiguo (length ! = 1) da convertire in \"name\""

#. R/Methods.R: sprintf("apparent internal error: a generic function was found for \"%s\", but no corresponding object was found searching from \"%s\"",     f, getPackageName(where))
#: R/Methods.R:0
msgid ""
"apparent internal error: a generic function was found for \"%s\", but no "
"corresponding object was found searching from \"%s\""
msgstr ""

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\nmove the file or remove the class/method")
#: R/zzz.R:0
#, fuzzy
msgid ""
"apparently bad method or class metadata in saved environment;\n"
"move the file or remove the class/method"
msgstr ""
"metodo apparentemente errato o metadati di classe nell'ambiente salvato;"

#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f1)), domain = "R-methods")
#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f2)), domain = "R-methods")
#: R/Methods.R:0
msgid "argument %s is not S4"
msgstr "l'argomento %s non è S4"

#. R/Methods.R: gettextf("argument %s must be a generic function or a single character string; got an object of class %s",     sQuote("f"), dQuote(class(f)))
#: R/Methods.R:0
msgid ""
"argument %s must be a generic function or a single character string; got an "
"object of class %s"
msgstr ""
"l'argomento %s dev'essere una funzione generica o una singola stringa di "
"caratteri; si è ottenuto un oggetto della classe %s"

#. R/SClasses.R: gettextf("argument %s must be a list or a character vector; got an object of class %s",     dQuote(what), dQuote(class(fields)))
#: R/SClasses.R:0
msgid ""
"argument %s must be a list or a character vector; got an object of class %s"
msgstr ""
"l'argomento %s dev'essere una lista o un vettore di caratteri; si è ottenuto "
"un oggetto della classe %s"

#. R/oldClass.R: gettextf("argument 'Classes' must be a vector of two classes; got an argument of length %d",     length(Classes))
#: R/oldClass.R:0
msgid ""
"argument 'Classes' must be a vector of two classes; got an argument of "
"length %d"
msgstr ""
"l'argomento 'Classes' dev'essere un vettore di due classi; si è ottenuto un "
"argomento di lunghezza %d"

#. R/oldClass.R: gettextf("argument 'S4Class' must be a class definition: got an object of class %s",     dQuote(class(S4Class)))
#: R/oldClass.R:0
msgid ""
"argument 'S4Class' must be a class definition: got an object of class %s"
msgstr ""
"l'argomento 'S4Class' dev'essere una definizione di classe: si è ottenuto un "
"oggetto della classe %s"

#. R/RClassUtils.R: stop("argument 'abbreviate' must be 0, 1, 2, or 3")
#: R/RClassUtils.R:0
msgid "argument 'abbreviate' must be 0, 1, 2, or 3"
msgstr "l'argomento 'abbreviate' dev'essere 0, 1, 2 o 3"

#. R/SClasses.R: stop("argument 'classDef' must be a class definition or the name of a class")
#: R/SClasses.R:0
msgid "argument 'classDef' must be a class definition or the name of a class"
msgstr ""
"l'argomento 'classDef' dev'essere una definizione di classe o il nome di una "
"classe"

#. R/SClasses.R: gettextf("argument 'classDef' must be a string or a class representation; got an object of class %s",     dQuote(class(classDef)))
#: R/SClasses.R:0
msgid ""
"argument 'classDef' must be a string or a class representation; got an "
"object of class %s"
msgstr ""
"l'argomento 'classDef' dev'essere una stringa o una rappresentazione di "
"classe; si è ottenuto un oggetto di classe %s"

#. R/Methods.R: gettextf("argument 'f' must be a generic function or %s", .notSingleString(f))
#: R/Methods.R:0
msgid "argument 'f' must be a generic function or %s"
msgstr "l'argomento 'f' dev'essere una funzione generica o %s"

#. R/RMethodUtils.R: stop("argument 'f' must be a string, generic function, or primitive: got an ordinary function")
#: R/RMethodUtils.R:0
msgid ""
"argument 'f' must be a string, generic function, or primitive: got an "
"ordinary function"
msgstr ""
"l'argomento 'f' dev'essere una stringa, una funzione generica o una "
"primitiva: si è ottenuta una funzione ordinaria"

#. R/RClassUtils.R: stop("argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'")
#: R/RClassUtils.R:0
msgid ""
"argument 'includeSubclasses' must be a logical, either one value or a vector "
"of the same length as argument 'classes'"
msgstr ""
"l'argomento 'includeSubclasses' dev'essere logico, un valore o un vettore "
"della stessa lunghezza dell'argomento 'classes'"

#. R/trace.R: stop("argument 'signature' is not meaningful for tracing reference methods")
#: R/trace.R:0
msgid "argument 'signature' is not meaningful for tracing reference methods"
msgstr ""
"l'argomento 'signature' non è significativo per il tracing dei metodi "
"riferimento"

#. R/Methods.R: warning("argument 'signature' is not meaningful with the current implementation and is ignored \n(extract a subset of the methods list instead)")
#: R/Methods.R:0
msgid ""
"argument 'signature' is not meaningful with the current implementation and "
"is ignored \n"
"(extract a subset of the methods list instead)"
msgstr ""
"l'argomento 'signature' non è significativo con l'implementazione corrente "
"ed è ignorato\n"
"(piuttosto si estragga un sottoinsieme dall'elenco dei metodi)"

#. R/methodsTable.R: stop("argument 'signatures' must be a character matrix whose rows are method signatures")
#: R/methodsTable.R:0
msgid ""
"argument 'signatures' must be a character matrix whose rows are method "
"signatures"
msgstr ""
"l'argomento 'signatures' dev'essere una matrice di caratteri le cui righe "
"sono firme del metodo"

#. R/trace.R: stop("argument 'what' should be the name of a function")
#: R/trace.R:0
msgid "argument 'what' should be the name of a function"
msgstr "argomento 'what' dovrebbe essere il nome di una funzione"

#. R/RMethodUtils.R: stop("argument f must be a generic function with signature \"...\"")
#: R/RMethodUtils.R:0
msgid "argument f must be a generic function with signature \"...\""
msgstr "l'argomento f dev'essere una funzione generica con firma \"...\""

#. R/as.R: gettextf("argument names in 'replace' method changed to agree with 'coerce<-' generic function:\n%s",     paste(deparse(replace), sep = "\n    "))
#: R/as.R:0
#, fuzzy
msgid ""
"argument names in 'replace' method changed to agree with 'coerce<-' generic "
"function:\n"
"%s"
msgstr ""
"i nomi degli argomenti in 'replace' sono stati cambiati in accordo con il "
"generico 'coerce <-':\n"
"%s"

#. R/MethodsList.R: stop("arguments 'names' and 'signature' must have the same length")
#: R/MethodsList.R:0
msgid "arguments 'names' and 'signature' must have the same length"
msgstr "gli argomenti 'names' e 'signature' devono avere la medesima lunghezza"

#. R/refClass.R: stop("arguments must all be character string names of fields")
#: R/refClass.R:0
msgid "arguments must all be character string names of fields"
msgstr ""
"gli argomenti devono essere tutti nomi di stringhe di caratteri dei campi"

#. R/refClass.R: stop("arguments to 'methods()' must be named, or one named list")
#: R/refClass.R:0
#, fuzzy
msgid "arguments to 'methods()' must be named, or one named list"
msgstr "gli argomenti di method() devono essere nominati o una lista nomi"

#. R/RClassUtils.R: gettextf("assigning as %s a class representation with internal name %s", dQuote(Class),     dQuote(def@className))
#: R/RClassUtils.R:0
msgid "assigning as %s a class representation with internal name %s"
msgstr "assegnando come %s una rappresentazione di classe con nome interno %s"

#. R/trace.R: gettextf("assigning over the binding of symbol %s in environment/package %s", sQuote(what),     sQuote(pname))
#: R/trace.R:0
msgid "assigning over the binding of symbol %s in environment/package %s"
msgstr "assegnando sul binding del simbolo %s nell'ambiente/pacchetto %s"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for @%s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"l'assegnamento di un oggetto di classe %s non è valido per @%s in un oggetto "
"di classe %s; is(value, \"%s\") non è TRUE"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for slot %s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"l'assegnazione di un oggetto della classe %s non è valida per lo slot %s in "
"un oggetto della classe %s; is(value, \"%s\") non è TRUE"

#. R/Methods.R: gettextf("bad class specified for element %d (should be a single character string)",     i)
#: R/Methods.R:0
msgid ""
"bad class specified for element %d (should be a single character string)"
msgstr ""
"classe errata specificata per l'elemento%d (dovrebbe essere una singola "
"stringa di caratteri)"

#. R/methodsTable.R: gettextf("bad method object stored in method table, class %s", dQuote(class(current)))
#: R/methodsTable.R:0
msgid "bad method object stored in method table, class %s"
msgstr "oggetto metodo errato archiviato nella tabella metodi, classe %s"

#. R/NextMethod.R: gettextf("bad object found as method (class %s)", dQuote(class(method)))
#: R/NextMethod.R:0
msgid "bad object found as method (class %s)"
msgstr "oggetto errato trovato come metodo (classe %s)"

#. R/RMethodUtils.R: stop("botched namespace: failed to find 'base' namespace in its parents", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "botched namespace: failed to find 'base' namespace in its parents"
msgstr ""

#. R/is.R: gettext("both classes must be defined")
#: R/is.R:0
msgid "both classes must be defined"
msgstr "entrambe le classi devono essere definite"

#. R/NextMethod.R: stop("call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context")
#: R/NextMethod.R:0
msgid ""
"call to 'callNextMethod' does not appear to be in a 'method' or "
"'callNextMethod' context"
msgstr ""
"la chiamata a 'callNextMethod' non sembra essere in un contesto 'method' o "
"'callNextMethod'"

#. R/RMethodUtils.R: gettext("called 'doPrimitiveMethod()'", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "called 'doPrimitiveMethod()'"
msgstr ""

#. R/methodsTable.R: gettext(" can eliminate dominated ones,", domain = "R-methods")
#: R/methodsTable.R:0
msgid "can eliminate dominated ones,"
msgstr ""

#. R/is.R: gettextf("cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package",     dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid ""
"cannot create a 'setIs' relation when neither of the classes (%s and %s) is "
"local and modifiable in this package"
msgstr ""
"non è possibile creare una relazione 'setls' quando nessuna delle classi (%s "
"e %s) è locale e modificabile in questo pacchetto"

#. R/trace.R: gettextf("cannot find an environment corresponding to package name '%s'", package)
#: R/trace.R:0
#, fuzzy
msgid "cannot find an environment corresponding to package name '%s'"
msgstr ""
"non è possibile trovare un ambiente corrispondente al nome del pacchetto '%s"
"\""

#. R/BasicClasses.R: stop("cannot have more than one unnamed argument as environment")
#: R/BasicClasses.R:0
msgid "cannot have more than one unnamed argument as environment"
msgstr "non è possibile avere più di un argomento non nominato come ambiente"

#. R/trace.R: gettext("cannot insert methods for these functions (methods table not found in source): %s",     domain = "R-methods")
#: R/trace.R:0
msgid ""
"cannot insert methods for these functions (methods table not found in "
"source): %s"
msgstr ""
"non è possibile inserire metodi per queste funzioni (tabella metodi non "
"trovata nei sorgenti): %s"

#. R/trace.R: gettext("cannot insert these (not found in source): %s", domain = "R-methods")
#: R/trace.R:0
msgid "cannot insert these (not found in source): %s"
msgstr "non è possibile inserire questi (non trovati nelle sorgenti): %s"

#. R/Methods.R: gettextf("cannot remove methods for %s in locked environment/package %s", sQuote(f),     sQuote(getPackageName(db)))
#: R/Methods.R:0
msgid "cannot remove methods for %s in locked environment/package %s"
msgstr ""
"non è possibile rimuovere i metodi per %s in un ambiente/pacchetto bloccato "
"%s"

#. R/BasicClasses.R: stop("cannot specify arguments for 'array()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'array()' method when specifying '.Data'"
msgstr "non è possibile specificare gli argomenti array() specificando '.Data'"

#. R/BasicClasses.R: stop("cannot specify arguments for 'matrix()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'matrix()' method when specifying '.Data'"
msgstr ""
"non è possibile specificare gli argomenti matrix() specificando '.Data'"

#. R/trace.R: gettext("cannot untrace method for %s; no method defined for this signature: %s",     domain = "R-methods")
#: R/trace.R:0
msgid "cannot untrace method for %s; no method defined for this signature: %s"
msgstr ""
"non è possibile annullare il tracing del metodo per %s; nessun metodo "
"definito per questa firma: %s"

#. R/trace.R: stop("cannot use 'at' argument unless the function body has the form '{ ... }'")
#: R/trace.R:0
msgid ""
"cannot use 'at' argument unless the function body has the form '{ ... }'"
msgstr ""
"non si può utilizzare l'argomento 'at' a meno che il corpo della funzione "
"non abbia la forma '{...}'"

#. R/trace.R: stop("cannot use 'at' argument without a trace expression")
#: R/trace.R:0
msgid "cannot use 'at' argument without a trace expression"
msgstr ""
"non è possibile utilizzare l'argomento 'at' senza un'espressione di traccia"

#. R/SClasses.R: gettextf("cannot use object of class %s in new(): class %s does not extend that class",     dQuote(Classi), dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"cannot use object of class %s in new(): class %s does not extend that class"
msgstr ""
"non è possibile utilizzare l'oggetto della classe %s in new(): la classe %s "
"non la estende"

#. R/is.R: gettextf("class %s cannot extend class %s", dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid "class %s cannot extend class %s"
msgstr "la classe %s non può estendere la classe %s"

#. R/RClassUtils.R: gettextf("class %s does not have a data part (a .Data slot) defined", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "class %s does not have a data part (a .Data slot) defined"
msgstr "la classe %s non ha una parte dati definita (uno slot .Data)"

#. R/BasicClasses.R: gettextf("class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent",     dQuote(class(from)))
#: R/BasicClasses.R:0
msgid ""
"class %s does not have an S3 data part, and so is of type \"S4\"; no S3 "
"equivalent"
msgstr ""
"la classe %s non ha una parte dati S3, quindi è di tipo \"S4\"; nessun "
"equivalente S3"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class (%s)", dQuote(name), dQuote(cl))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class (%s)"
msgstr "la classe %s estende una classe non definita (%s)"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class, %s", dQuote(ClassDef@className), dQuote(what))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class, %s"
msgstr "la classe %s estende una classe non definita, %s"

#. R/refClass.R: gettextf("class %s for field %s is not defined", dQuote(thisField), sQuote(thisName))
#: R/refClass.R:0
msgid "class %s for field %s is not defined"
msgstr "la classe %s per il campo %s non è definita"

#. R/RClassUtils.R: gettextf("class %s has a locked definition in package %s", dQuote(Class), sQuote(getPackageName(where)))
#: R/RClassUtils.R:0
msgid "class %s has a locked definition in package %s"
msgstr "la classe %s una definizione bloccata nel pacchetto %s"

#. R/SClasses.R: gettextf("class %s has multiple definitions visible; only the first removed", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s has multiple definitions visible; only the first removed"
msgstr "la classe %s ha più definizioni visibili; solo il primo rimosso"

#. R/is.R: gettextf("class %s has no visible definition from package or environment %s", dQuote(class2),     sQuote(getPackageName(where)))
#: R/is.R:0
msgid "class %s has no visible definition from package or environment %s"
msgstr ""
"la classe %s non ha una definizione visibile dal pacchetto o dall'ambiente %s"

#. R/BasicClasses.R: gettextf("class %s is VIRTUAL; not meaningful to create an S4 object from this class",     dQuote(cl))
#: R/BasicClasses.R:0
msgid ""
"class %s is VIRTUAL; not meaningful to create an S4 object from this class"
msgstr ""
"la classe %s è VIRTUALE; non è significativo creare un oggetto S4 da questa "
"classe"

#. R/as.R: gettextf("class %s is a class union: 'coerce' relations to a class union are not meaningful",     dQuote(to))
#: R/as.R:0
msgid ""
"class %s is a class union: 'coerce' relations to a class union are not "
"meaningful"
msgstr ""
"la classe %s è una classe union: le relazioni \"coerce\" con una classe "
"unione non sono significative"

#. R/is.R: gettextf("class %s is defined (with package slot %s) but no metadata object found to revise %s information---not imported?  Making a copy in package %s",     .dQ(class), sQuote(classDef@package), purpose, sQuote(getPackageName(where, FALSE)))
#: R/is.R:0
#, fuzzy
msgid ""
"class %s is defined (with package slot %s) but no metadata object found to "
"revise %s information---not imported?  Making a copy in package %s"
msgstr ""
"la classe %s è definita (con lo slot del pacchetto %s), ma non è stato "
"trovato alcun oggetto metadati per rivedere le informazioni %s --- non "
"esportato? Si fa una copia nel pacchetto %s"

#. R/refClass.R: gettextf("class %s is defined but is not a reference class", dQuote(Class))
#: R/refClass.R:0
msgid "class %s is defined but is not a reference class"
msgstr "la classe %s è definita ma non è una riferimento"

#. R/SClasses.R: gettextf("class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)",     dQuote(Class), sQuote(classDef@package))
#: R/SClasses.R:0
msgid ""
"class %s is defined, with package %s, but no corresponding metadata object "
"was found (not exported?)"
msgstr ""
"la classe %s è definita, con il pacchetto %s, ma non è stato trovato alcun "
"oggetto metadata corrispondente (non esportato?)"

#. R/RClassUtils.R: gettext("class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"class %s is inheriting an inconsistent superclass structure from class %s, "
"inconsistent with %s"
msgstr ""
"la classe %s eredita una struttura di superclasse incoerente dalla classe "
"%s, incompatibile con %s"

#. R/as.R: gettextf("class %s is not defined in this environment", dQuote(to))
#: R/as.R:0
msgid "class %s is not defined in this environment"
msgstr "la classe %s non è definita in questo ambiente"

#. R/SClasses.R: gettextf("class %s is sealed; 'resetClass' will have no effect", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s is sealed; 'resetClass' will have no effect"
msgstr "la classe %s è protetta; 'resetClass' non avrà alcun effetto"

#. R/is.R: gettextf("class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'",     dQuote(class1))
#: R/is.R:0
msgid ""
"class %s is sealed; new superclasses can not be defined, except by "
"'setClassUnion'"
msgstr ""
"la classe %s è protetta; nuove superclassi non possono essere definite, "
"tranne che da 'setClassUnion'"

#. R/RClassUtils.R: gettextf("class %s may not contain itself: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not contain itself: it contains class %s, with a circular "
"relation back to %s"
msgstr ""

#. R/RClassUtils.R: gettextf("class %s may not have itself as a subclass: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not have itself as a subclass: it contains class %s, with a "
"circular relation back to %s"
msgstr ""

#. R/SClasses.R: gettextf("class %s not found on %s; 'resetClass' will have no effect", dQuote(Class),     sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "class %s not found on %s; 'resetClass' will have no effect"
msgstr ""
"la classe %s non è stata trovata su %s; 'resetClass' non avrà alcun effetto"

#. R/RClassUtils.R: stop("class cannot have both an ordinary and hidden data type")
#: R/RClassUtils.R:0
msgid "class cannot have both an ordinary and hidden data type"
msgstr "la classe non può avere sia un tipo di dati ordinario che nascosto"

#. R/SClasses.R: gettext("class definition cannot extend more than one of these data types:", domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "class definition cannot extend more than one of these data types:"
msgstr ""
"la definizione della classe non può estendere più di uno di questi tipi di "
"dati: %s"

#. R/SClasses.R: gettextf("class definition for %s not found (no action taken)", dQuote(Class))
#: R/SClasses.R:0
msgid "class definition for %s not found (no action taken)"
msgstr ""
"non è stata trovata alcuna definizione di classe per %s (nessuna azione "
"intrapresa)"

#. R/MethodsListClass.R: gettextf("class generator function for class %s from package %s", dQuote(object@className),     sQuote(object@package), domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "class generator function for class %s from package %s"
msgstr "funzione generatore di classe per la classe %s dal pacchetto %s"

#. R/refClass.R: gettextf("class must be a reference class representation or a character string; got an object of class %s",     dQuote(class(Class)))
#: R/refClass.R:0
msgid ""
"class must be a reference class representation or a character string; got an "
"object of class %s"
msgstr ""
"la classe dev'essere una rappresentazione di classe riferimento o una "
"stringa di caratteri; si è ottenuto un oggetto di classe %s"

#. R/refClass.R: gettextf("code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)",     dQuote(Class), sQuote("codetools"))
#: R/refClass.R:0
msgid ""
"code for methods in class %s was not checked for suspicious field "
"assignments (recommended package %s not available?)"
msgstr ""
"il codice per i metodi nella classe %s non è stato verificato per "
"assegnazioni di campo sospette (il pacchetto consigliato %s non è "
"disponibile?)"

#. R/RClassUtils.R: gettextf("conflicting definition of data part: .Data = %s, superclass implies %s",     dQuote(elNamed(properties, ".Data")), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "conflicting definition of data part: .Data = %s, superclass implies %s"
msgstr ""
"definizione in conflitto sulla parte dati: .Data =%s, la superclasse implica "
"%s"

#. R/MethodsList.R: gettextf("default method must be a method definition, a primitive or NULL: got an object of class %s",     dQuote(class(method)))
#: R/MethodsList.R:0
msgid ""
"default method must be a method definition, a primitive or NULL: got an "
"object of class %s"
msgstr ""
"il metodo predefinito dev'essere una definizione di metodo, una primitiva o "
"NULL: si è ottenuto un oggetto della classe %s"

#. R/Methods.R: stop("defunct methods list search", domain = "R-Methods")
#: R/Methods.R:0
msgid "defunct methods list search"
msgstr ""

#. R/refClass.R: stop("direct calls to 'callSuper()' are invalid: should only be called from another method")
#: R/refClass.R:0
#, fuzzy
msgid ""
"direct calls to 'callSuper()' are invalid: should only be called from "
"another method"
msgstr ""
"le chiamate dirette a callSuper() non sono valide: devono essere chiamate "
"solo da un altro metodo"

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- value' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- "
"value' instead"
msgstr ""

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' "
"instead"
msgstr ""

#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#: R/RClassUtils.R:0
msgid "distance %d"
msgstr ""

#. R/trace.R: gettextf("does not seem to be a method table for generic %s in tracing environment",     sQuote(what))
#: R/trace.R:0
msgid ""
"does not seem to be a method table for generic %s in tracing environment"
msgstr ""
"non sembra essere una tabella metodi per %s generico nell'ambiente di tracing"

#. R/zzz.R: gettext(" done", domain = "R-methods")
#: R/zzz.R:0
msgid "done"
msgstr ""

#. R/SClasses.R: gettext("duplicate class names among superclasses: %s", domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicate class names among superclasses: %s"
msgstr "nomi di classi duplicati tra le superclassi: %s"

#. R/MethodsList.R: gettextf("duplicate element names in 'MethodsList' at level %d: %s", level, paste(dQuote(unique(mnames[duplicated(mnames)])),     collapse = ", "), domain = "R-methods")
#: R/MethodsList.R:0
msgid "duplicate element names in 'MethodsList' at level %d: %s"
msgstr "nomi di elementi duplicati in \"MethodsList\" a livello %d: %s"

#. R/MethodsList.R: gettextf("element %d at level %d (class %s) cannot be interpreted as a function or named list",     i, level, dQuote(class(eli)))
#: R/MethodsList.R:0
msgid ""
"element %d at level %d (class %s) cannot be interpreted as a function or "
"named list"
msgstr ""
"l'elemento %d al livello %d (classe %s) non può essere interpretato come una "
"funzione o una lista nominata"

#. R/SClasses.R: gettextf("element %d of the representation was not a single character string", i)
#: R/SClasses.R:0
msgid "element %d of the representation was not a single character string"
msgstr ""
"l'elemento %d della rappresentazione non era una singola stringa di caratteri"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to remove definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to remove definition "
"from %s"
msgstr ""
"errore nelle classi contenute (%s) per la classe %s e non è possibile "
"rimuovere la definizione da %s"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to restore previous definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to restore previous "
"definition from %s"
msgstr ""
"errore nelle classi contenute (%s) per la classe %s e non è possibile "
"ripristinare la definizione precedente da %s"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; class definition removed from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; class definition removed from "
"%s"
msgstr ""
"errore nelle classi contenute (%s) per la classe %s; definizione di classe "
"rimossa da %s"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; previous definition restored to %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; previous definition restored "
"to %s"
msgstr ""
"errore nelle classi contenute (%s) per la classe %s; definizione precedente "
"ripristinata in %s"

#. R/RMethodUtils.R: gettextf("error in load action %s for package %s: %s: %s", aname, getPackageName(where),     callString, value$message)
#: R/RMethodUtils.R:0
msgid "error in load action %s for package %s: %s: %s"
msgstr "errore nell'azione di caricamento %s per il pacchetto %s: %s: %s"

#. R/Methods.R: gettextf("error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)",     sQuote(f), dQuote(class(fdef)))
#: R/Methods.R:0
msgid ""
"error in updating S4 generic function %s; the function definition is not an "
"S4 generic function (class %s)"
msgstr ""
"errore durante l'aggiornamento della funzione generica S4 %s; la definizione "
"della funzione non è una funzione generica S4 (classe%s)"

#. R/RMethodUtils.R: gettext("expanding the signature to include omitted arguments in definition: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "expanding the signature to include omitted arguments in definition: %s"
msgstr ""
"espandere la firma per includere gli argomenti omessi nella definizione: %s"

#. R/addedFunctions.R: gettextf("expected a non-empty character string for argument 'name'")
#: R/addedFunctions.R:0
#, fuzzy
msgid "expected a non-empty character string for argument 'name'"
msgstr "prevista una stringa di caratteri non-vuota per il nome dell'argomento"

#. R/Methods.R: gettextf("expected a non-empty character string for argument name")
#: R/Methods.R:0
msgid "expected a non-empty character string for argument name"
msgstr "prevista una stringa di caratteri non-vuota per il nome dell'argomento"

#. R/oldClass.R: gettext("explicit coercion of old-style class (%s) is not defined", domain = "R-methods")
#: R/oldClass.R:0
msgid "explicit coercion of old-style class (%s) is not defined"
msgstr ""
"l'esplicita coercizione di una classe (%s) vecchio-stile non è definita"

#. R/oldClass.R: gettextf("explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s",     to, dQuote(class(from)[1L]))
#: R/oldClass.R:0
msgid ""
"explicit replacement not defined for as(x, \"%s\") <- value for old-style "
"class %s"
msgstr ""
"sostituzione esplicita non definita per as(x, \"%s\") <- value per la classe "
"vecchio-stile %s"

#. R/methodsTable.R: stop("failed to find expected group generic function: ", what)
#: R/methodsTable.R:0
msgid "failed to find expected group generic function:"
msgstr "non è possibile trovare la funzione generica prevista del gruppo:"

#. R/refClass.R: gettextf("field %s is already locked", sQuote(what))
#: R/refClass.R:0
msgid "field %s is already locked"
msgstr "il campo %s è già bloccato"

#. R/refClass.R: gettextf("field %s of class %s has a non-default binding and cannot be locked", sQuote(what),     dQuote(className))
#: R/refClass.R:0
msgid "field %s of class %s has a non-default binding and cannot be locked"
msgstr ""
"il campo %s della classe %s ha un binding non-predefinito e non può essere "
"bloccato"

#. R/refClass.R: gettextf("field %s was supplied as an object of class %s; must be a class name or a binding function",     sQuote(thisName), dQuote(class(thisField)))
#: R/refClass.R:0
msgid ""
"field %s was supplied as an object of class %s; must be a class name or a "
"binding function"
msgstr ""
"il campo %s è stato passato come oggetto della classe %s; dev'essere un nome "
"di classe o una funzione di binding"

#. R/Methods.R: gettextf("first argument should be the names of one of more generic functions (got object of class %s)",     dQuote(class(f)))
#: R/Methods.R:0
msgid ""
"first argument should be the names of one of more generic functions (got "
"object of class %s)"
msgstr ""
"il primo argomento dovrebbe essere il nome di una o più funzioni generiche "
"(si è ottenuto un oggetto della classe %s)"

#. R/RClassUtils.R: gettextf("for function %s: %s", f, message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "for function %s: %s"
msgstr "nessuna funzione %s trovata"

#. R/RMethodUtils.R: gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature",     bad2)
#: R/RMethodUtils.R:0
msgid ""
"formal arguments (%s) omitted in the method definition cannot be in the "
"signature"
msgstr ""
"gli argomenti formali (%s) omessi nella definizione del metodo non possono "
"essere presenti nella firma"

#. R/Methods.R: gettext("formal arguments differ (in default values?)", domain = "R-methods")
#: R/Methods.R:0
msgid "formal arguments differ (in default values?)"
msgstr "gli argomenti formali differiscono (nei valori predefiniti?)"

#. R/Methods.R: gettextf("formal arguments differ: (%s), (%s)", paste(a1, collapse = ", "), paste(a2,     collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "formal arguments differ: (%s), (%s)"
msgstr "gli argomenti formali differiscono: (%s), (%s)"

#. R/RMethodUtils.R: stop(.renderSignature(f, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#. R/RMethodUtils.R: stop(.renderSignature(generic@generic, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#: R/RMethodUtils.R:0
msgid "formal arguments in method and generic do not appear in the same order"
msgstr ""
"gli argomenti formali nel metodo e nel generico non compaiono nello stesso "
"ordine"

#. R/RMethodUtils.R: gettext(" found on: %s; using the first one", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "found on: %s; using the first one"
msgstr "più corrispondenze dirette: %s; utilizzando il primo di questi"

#. R/Methods.R: gettextf("function %s appears to be a generic function, but with generic name %s",     sQuote(f), sQuote(gen))
#: R/Methods.R:0
msgid "function %s appears to be a generic function, but with generic name %s"
msgstr ""
"la funzione %s sembra essere una funzione generica, ma con il nome generico "
"%s"

#. R/Methods.R: stop("function supplied as argument 'f' must be a generic")
#: R/Methods.R:0
msgid "function supplied as argument 'f' must be a generic"
msgstr "la funzione fornita come argomento 'f' dev'essere generica"

#. R/Methods.R: gettextf("generic function %s not found for removal", sQuote(f))
#: R/Methods.R:0
msgid "generic function %s not found for removal"
msgstr "la funzione generica %s non è stata trovata per la rimozione"

#. R/Methods.R: gettextf("generic function supplied was not created for %s", sQuote(name))
#: R/Methods.R:0
msgid "generic function supplied was not created for %s"
msgstr "la funzione generica fornita non è stata creata per %s"

#. R/Methods.R: gettextf("generic names differ: %s, %s", .dQ(f1@generic), .dQ(f2@generic), domain = "R-methods")
#: R/Methods.R:0
msgid "generic names differ: %s, %s"
msgstr "i nomi generici differiscono:%s,%s"

#. R/RClassUtils.R: gettext("get rid of variables in definition %s (%s); they conflict with the needed change to argument names (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"get rid of variables in definition %s (%s); they conflict with the needed "
"change to argument names (%s)"
msgstr ""

#. R/RMethodUtils.R: stop("got a negative maximum number of frames to look at")
#: R/RMethodUtils.R:0
msgid "got a negative maximum number of frames to look at"
msgstr "ottenuto un numero massimo negativo di frame da guardare"

#. R/Methods.R: gettextf("groups differ: %s, %s", .dQ(gpString(f1@group)), .dQ(gpString(f2@group)),     domain = "R-methods")
#: R/Methods.R:0
msgid "groups differ: %s, %s"
msgstr "i gruppi differiscono: %s, %s"

#. R/methodsTable.R: gettext(" have best ones", domain = "R-methods")
#: R/methodsTable.R:0
msgid "have best ones"
msgstr ""

#. R/Methods.R: gettextf("if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default",     name)
#: R/Methods.R:0
msgid ""
"if the 'def' argument is supplied, it must be a function that calls "
"standardGeneric(\"%s\") or is the default"
msgstr ""
"se viene fornito l'argomento 'def', dev'essere una funzione che chiama "
"standardGeneric (\"%s\") o la predefinita"

#. R/RMethodUtils.R: gettext("in changing formal arguments in %s, some of the old names are not in fact arguments: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"in changing formal arguments in %s, some of the old names are not in fact "
"arguments: %s"
msgstr ""
"nel cambiare argomenti formali in%s, alcuni dei vecchi nomi non sono di "
"fatto argomenti: %s"

#. R/RClassUtils.R: gettext("in constructing the prototype for class %s, slots in prototype and not in class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s, slots in prototype and not in "
"class: %s"
msgstr ""
"nella costruzione del prototipo per la classe %s, gli slot nel prototipo e "
"non nella classe: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s",     dQuote(className), dQuote(.class1(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s: prototype has class %s, but the "
"data part specifies class %s"
msgstr ""
"nella costruzione del prototipo per la classe %s: il prototipo ha la classe "
"%s, ma la parte dati specifica la classe %s"

#. R/RClassUtils.R: gettextf("in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)",     dQuote(name), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in defining class %s, the supplied data part class, %s is not valid (must be "
"a basic class or a virtual class combining basic classes)"
msgstr ""
"nella definizione della classe %s, la classe della parte di dati fornita, %s "
"non è valida (dev'essere una classe base o una classe virtuale che combina "
"quelle base)"

#. R/RClassUtils.R: gettextf("in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")",     dQuote(ClassDef@className), dQuote(what), dQuote(class(exti)))
#: R/RClassUtils.R:0
msgid ""
"in definition of class %s, information for superclass %s is of class %s "
"(expected \"SClassExtension\")"
msgstr ""
"nella definizione della classe %s, le informazioni per la superclasse %s "
"sono della classe %s (prevista \"SClassExtension\")"

#. R/RClassUtils.R: gettext("in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in making the prototype for class %s elements of the prototype failed to "
"match the corresponding slot class: %s"
msgstr ""
"nel realizzare il prototipo per gli elementi della classe %s del prototipo "
"non è stato possibile far combaciare la corrispondente classe di slot: %s"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s (maybe mixing old and new classes?)",     dQuote(cl))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s (maybe mixing old and new "
"classes?)"
msgstr ""
"informazioni incoerenti sulle classi vecchio-stile per %s (forse mischiando "
"vecchie e nuove classi?)"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part",     dQuote(cl), dQuote(prevClass))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s; the class is defined but "
"does not extend %s and is not valid as the data part"
msgstr ""
"informazioni incoerenti sulla classe vecchio-stile per %s; la classe è "
"definita ma non estende %s e non è valida come parte dati"

#. R/zzz.R: gettext("initializing class and method definitions ...", domain = "R-methods")
#: R/zzz.R:0
msgid "initializing class and method definitions ..."
msgstr ""

#. R/RClassUtils.R: gettextf("initializing objects from class %s with these arguments is not supported",     dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"initializing objects from class %s with these arguments is not supported"
msgstr ""
"non è supportata l'inizializzazione degli oggetti nella classe %s con questi "
"argomenti"

#. R/MethodsList.R: stop("inserting method corresponding to empty signature")
#: R/MethodsList.R:0
msgid "inserting method corresponding to empty signature"
msgstr "metodo di inserimento corrispondente alla firma vuota"

#. R/MethodsList.R: gettextf("inserting method into non-methods-list object (class %s)", dQuote(.class1(mlist)))
#: R/MethodsList.R:0
msgid "inserting method into non-methods-list object (class %s)"
msgstr "inserimento del metodo nell'oggetto non-lista-metodi (classe %s)"

#. R/MethodsList.R: gettextf("inserting method with invalid signature matching argument '...' to class %s",     dQuote(signature[[1L]]))
#: R/MethodsList.R:0
msgid ""
"inserting method with invalid signature matching argument '...' to class %s"
msgstr ""
"metodo di inserimento con argomento di corrispondenza della firma non valido "
"'...' alla classe %s"

#. R/RMethodUtils.R: gettextf("internal error: Bad methods list object in fixing methods for primitive function %s",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"internal error: Bad methods list object in fixing methods for primitive "
"function %s"
msgstr ""
"l'ambiente %s è bloccato; non è possibile assegnare metodi per la funzione %s"

#. R/SClasses.R: sprintf("internal error: definition of class %s not properly assigned", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "internal error: definition of class %s not properly assigned"
msgstr "nessuna definizione trovata per la classe %s"

#. R/Methods.R: sprintf("internal error: did not get a valid generic function object for function %s",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid ""
"internal error: did not get a valid generic function object for function %s"
msgstr "Creazione di una funzione generica dalla funzione %s in %s"

#. R/as.R: sprintf("internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the metadata asserts that the 'is' relation is FALSE",     dQuote(thisClass), Class)
#: R/as.R:0
msgid ""
"internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the "
"metadata asserts that the 'is' relation is FALSE"
msgstr ""

#. R/refClass.R: stop("invalid 'Class' argument:  should be a single string")
#: R/refClass.R:0
msgid "invalid 'Class' argument:  should be a single string"
msgstr "argomento 'Class' non valido:  dovrebbe essere una stringa singola"

#. R/show.R: gettextf("invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s",     dQuote(class(ignore)))
#: R/show.R:0
msgid ""
"invalid 'ignore' argument; should be a class definition or a character "
"vector, got an object of class %s"
msgstr ""
"argomento 'ignore' non valido; dovrebbe essere una definizione di classe o "
"un vettore di caratteri, si è ottenuto un oggetto di classe %s"

#. R/MethodsList.R: stop("invalid 'package' slot or attribute, wrong length")
#: R/MethodsList.R:0
msgid "invalid 'package' slot or attribute, wrong length"
msgstr "slot o attributo del 'package' non valido, lunghezza errata"

#. R/trace.R: gettextf("invalid 'source' argument: expected file names or a connection but got an object of class %s",     dQuote(class(source)[[1L]]))
#: R/trace.R:0
msgid ""
"invalid 'source' argument: expected file names or a connection but got an "
"object of class %s"
msgstr ""
"argomento 'source' non valido: erano attesi nomi file o una connessione, ma "
"si è ottenuto un oggetto della classe %s"

#. R/oldClass.R: gettext("invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s",     domain = "R-methods")
#: R/oldClass.R:0
msgid ""
"invalid S4 class corresponding to S3 class: slots in  S4 version must extend "
"corresponding slots in S3 version: fails for %s"
msgstr ""
"classe S4 non valida corrispondente alla classe S3: gli slot nella versione "
"S4 devono estendere gli slot corrispondenti nella versione S3: non è "
"possibile per %s"

#. R/Methods.R: gettextf("invalid argument 'name': %s", .isSingleName(name))
#: R/Methods.R:0
msgid "invalid argument 'name': %s"
msgstr "argomento 'name' non valido: %s"

#. R/refClass.R: gettextf("invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)",     sQuote(fieldName), dQuote(fieldClass), dQuote(class(value)))
#: R/refClass.R:0
msgid ""
"invalid assignment for reference class field %s, should be from class %s or "
"a subclass (was class %s)"
msgstr ""
"l'assegnazione non valida per il campo della classe riferimento %s, dovrebbe "
"appartenere alla classe %s o a una sottoclasse (era la classe %s)"

#. R/RMethodUtils.R: gettextf("invalid call in method dispatch to '%s' (no default method)", name)
#: R/RMethodUtils.R:0
msgid "invalid call in method dispatch to '%s' (no default method)"
msgstr ""
"chiamata non valida nel dispatch del metodo a '%s' (nessun metodo "
"predefinito)"

#. R/show.R: gettextf("invalid call passed to 'classLabel': expected a name or a class definition, got an object of class %s",     classLabel(class(Class)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid call passed to 'classLabel': expected a name or a class definition, "
"got an object of class %s"
msgstr ""
"chiamata non valida a 'classLabel': previsto un nome o una definizione di "
"classe, si è ottenuto un oggetto di classe %s"

#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "invalid class %s object:"
msgstr "oggetto classe %s non valido"

#. R/MethodsList.R: gettextf("invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name",     i)
#: R/MethodsList.R:0
msgid ""
"invalid element in a list for \"signature\" argument; element %d is neither "
"a class definition nor a class name"
msgstr ""
"elemento non valido in un elenco per argomento \"signature\"; elemento %d "
"non è né una definizione di classe né un nome di classe"

#. R/RMethodUtils.R: gettextf("invalid element in the \"groupMembers\" slot (class %s)", dQuote(class(x)))
#: R/RMethodUtils.R:0
msgid "invalid element in the \"groupMembers\" slot (class %s)"
msgstr "elemento non valido nello slot \"groupMembers\" (classe %s)"

#. R/MethodsList.R: stop("invalid first argument: should be the name of the first argument in the dispatch")
#: R/MethodsList.R:0
msgid ""
"invalid first argument: should be the name of the first argument in the "
"dispatch"
msgstr ""
"primo argomento non valido: dovrebbe essere il nome del primo argomento nel "
"dispatch"

#. R/methodsTable.R: gettextf("invalid group generic function in search for inherited method (class %s)",     dQuote(class(gen)))
#: R/methodsTable.R:0
msgid ""
"invalid group generic function in search for inherited method (class %s)"
msgstr ""
"funzione generica di gruppo non valida nella ricerca del metodo ereditato "
"(classe %s)"

#. R/languageEl.R: stop("invalid index for function argument")
#: R/languageEl.R:0
msgid "invalid index for function argument"
msgstr "indice non valido per l'argomento della funzione"

#. R/Methods.R: gettextf("invalid method definition: expected a function, got an object of class %s",     dQuote(class(definition)))
#: R/Methods.R:0
msgid ""
"invalid method definition: expected a function, got an object of class %s"
msgstr ""
"definizione del metodo non valida: prevista una funzione, si è ottenuto un "
"oggetto della classe %s"

#. R/MethodsList.R: stop("invalid method sublist")
#: R/MethodsList.R:0
msgid "invalid method sublist"
msgstr "elenco secondario metodo non valido"

#. R/methodsTable.R: stop("invalid methods table request")
#: R/methodsTable.R:0
msgid "invalid methods table request"
msgstr "richiesta alla tabella metodi non valida"

#. R/methodsTable.R: gettextf("invalid mlist element for signature %s at level %d (should be MethodDefinition or .Primitive, had class %s)",     sQuote(classes[[j]]), i, dQuote(class(el)))
#: R/methodsTable.R:0
msgid ""
"invalid mlist element for signature %s at level %d (should be "
"MethodDefinition or .Primitive, had class %s)"
msgstr ""
"elemento mlist non valido per la firma %s al livello %d (dovrebbe essere "
"MethodDefinition o .Primitive, con classe %s)"

#. R/MethodsListClass.R: gettextf("invalid object for formal method definition: type %s", dQuote(typeof(def)))
#: R/MethodsListClass.R:0
msgid "invalid object for formal method definition: type %s"
msgstr "oggetto non valido per la definizione formale del metodo: tipo %s"

#. R/SClasses.R: gettextf("invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or extend class \"%s\"",     slotNames[[i]], Class, class(sloti)[[1L]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or "
"extend class \"%s\""
msgstr "slot %s: la classe %s dovrebbe estendere la classe %s"

#. R/methodsTable.R: gettextf("invalid object in meta table of methods for %s, label %s, had class %s",     sQuote(generic@generic), sQuote(what), dQuote(class(obj)))
#: R/methodsTable.R:0
msgid "invalid object in meta table of methods for %s, label %s, had class %s"
msgstr ""
"oggetto non valido nella tabella meta dei metodi per %s, etichetta %s, con "
"classe %s"

#. R/methodsTable.R: gettextf("invalid object in methods table (%s), expected a method, got an object of class %s",     sQuote(what), dQuote(class(method)))
#: R/methodsTable.R:0
msgid ""
"invalid object in methods table (%s), expected a method, got an object of "
"class %s"
msgstr ""
"oggetto non valido nella tabella metodi (%s), atteso un metodo, si è "
"ottenuto un oggetto della classe %s"

#. R/methodsTable.R: gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid "invalid or unset methods table in generic function %s"
msgstr "tabella metodi non valida o non impostata nella funzione generica %s"

#. R/refClass.R: gettextf("invalid replacement: reference class field %s is read-only", sQuote(fieldName))
#: R/refClass.R:0
msgid "invalid replacement: reference class field %s is read-only"
msgstr ""
"sostituzione non valida: il campo della classe di riferimento %s è di sola "
"lettura"

#. R/RMethodUtils.R: gettextf("invalid value from generic function %s, class %s, expected one of %s",     sQuote(fname), dQuote(class(object)), paste(dQuote(classes), collapse = ", "))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid value from generic function %s, class %s, expected one of %s"
msgstr "valore non valido dalla funzione generica %s, classe %s, attesa %s"

#. R/refClass.R: gettextf("local assignment to field name will not change the field:\n    %s\n Did you mean to use \"<<-\"? ( in method %s for class %s)",     paste(unlist(assigned$locals)[localsAreFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"local assignment to field name will not change the field:\n"
"    %s\n"
" Did you mean to use \"<<-\"? ( in method %s for class %s)"
msgstr ""
"l'assegnazione locale al nome campo non cambierà il campo:\n"
"     %s\n"
"  Intendevi usare \"<< -\"? (nel metodo %s per la classe %s)"

#. R/RMethodUtils.R: gettextf("making a generic for special function %s", sQuote(f), domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "making a generic for special function %s"
msgstr "creando una generico per una  funzione speciale %s"

#. R/trace.R: warning("making a traced version of a special; arguments may be altered")
#: R/trace.R:0
msgid "making a traced version of a special; arguments may be altered"
msgstr ""
"fare una versione tracciata di uno speciale; gli argomenti potrebbero essere "
"alterati"

#. R/debug.R: warning("method is not being debugged")
#: R/debug.R:0
msgid "method is not being debugged"
msgstr "il metodo non è a punto (debugged)"

#. R/RMethodUtils.R: gettextf("methods can add arguments to the generic %s only if '...' is an argument to the generic",     sQuote(generic@generic))
#: R/RMethodUtils.R:0
msgid ""
"methods can add arguments to the generic %s only if '...' is an argument to "
"the generic"
msgstr ""
"i metodi possono aggiungere argomenti al %s generico solo se '...' è un "
"argomento al generico"

#. R/as.R: gettextf("methods currently exist for coercing from %s to %s; they will be replaced.",     dQuote(from), dQuote(to))
#: R/as.R:0
msgid ""
"methods currently exist for coercing from %s to %s; they will be replaced."
msgstr ""
"esistono attualmente metodi per convertire da %s a %s; saranno sostituiti."

#. R/refClass.R: gettext("methods declared in usingMethods() but not found: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "methods declared in usingMethods() but not found: %s"
msgstr "metodi dichiarati in usingMethods() ma non trovati: %s"

#. R/BasicFunsList.R: gettextf("methods may not be defined for primitive function %s in this version of R",     sQuote(f))
#: R/BasicFunsList.R:0
msgid ""
"methods may not be defined for primitive function %s in this version of R"
msgstr ""
"i metodi non possono essere definiti per la funzione primitiva %s in questa "
"versione di R"

#. R/Defunct.R: stop("methods:::bind_activation() is defunct;\n rather provide methods for cbind2() / rbind2()")
#: R/Defunct.R:0
msgid ""
"methods:::bind_activation() is defunct;\n"
" rather provide methods for cbind2() / rbind2()"
msgstr ""
"methods:::bind_activation() è rimossa;\n"
"  meglio fornire metodi per cbind2() / rbind2()"

#. R/RMethodUtils.R: gettextf("missing function for load action: %s", what)
#: R/RMethodUtils.R:0
msgid "missing function for load action: %s"
msgstr "funzione mancante per l'azione di caricamento: %s"

#. R/MethodsListClass.R: gettextf("missing package slot (%s) in object of class %s (package info added)",     packageSlot(co), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
msgid "missing package slot (%s) in object of class %s (package info added)"
msgstr ""
"slot del pacchetto mancante (%s) nell'oggetto della classe %s (aggiunte "
"informazioni sul pacchetto)"

#. R/MethodsList.R: gettextf("more elements in the method signature (%d) than in the generic signature (%d) for function %s",     length(signature), length(anames), sQuote(fun@generic))
#: R/MethodsList.R:0
msgid ""
"more elements in the method signature (%d) than in the generic signature "
"(%d) for function %s"
msgstr ""
"ci sono più elementi nella firma del metodo (%d) rispetto alla firma "
"generica (%d) per la funzione %s"

#. R/RClassUtils.R: gettextf("more than one possible class for the data part: using %s rather than %s",     .dQ(prevDataPartClass), .dQ(value))
#: R/RClassUtils.R:0
msgid "more than one possible class for the data part: using %s rather than %s"
msgstr ""
"più di una possibile classe per la parte di dati: utilizzado %s anziché %s"

#. R/SClasses.R: gettext("multiple class definitions for class %s from packages: %s; picking the first",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple class definitions for class %s from packages: %s; picking the first"
msgstr ""
"definizioni multiple di classi per %s dai pacchetti: %s; si utilizza il primo"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s, but the supplied package (%s) is "
"not one of them (%s)"
msgstr ""
"esistono più definizioni per la classe %s, ma il pacchetto fornito (%s) non "
"è uno di questi (%s)"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s; should specify one of them (%s), e."
"g. by className()"
msgstr ""
"esistono più definizioni per la classe %s; bisognerebbe specificarne uno "
"(%s), ad es. di className()"

#. R/promptClass.R: gettextf("multiple definitions of %s found; using the one on %s", dQuote(clName),     whereClass)
#: R/promptClass.R:0
msgid "multiple definitions of %s found; using the one on %s"
msgstr "trovate multiple definizioni di %s; si utilizza quello su %s"

#. R/RMethodUtils.R: gettextf("multiple direct matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple direct matches: %s; using the first of these"
msgstr "più corrispondenze dirette: %s; utilizzando il primo di questi"

#. R/RMethodUtils.R: gettextf("multiple equivalent inherited matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple equivalent inherited matches: %s; using the first of these"
msgstr "più corrispondenze ereditate equivalenti: %s; si utilizza il primo"

#. R/trace.R: gettextf("multiple generics match pattern, using table %s", table)
#: R/trace.R:0
msgid "multiple generics match pattern, using table %s"
msgstr ""
"modello di corrispondenza per generici multipli, si utilizza la tabella %s"

#. R/Methods.R: gettextf("must provide an environment table; got class %s", dQuote(class(what)))
#: R/Methods.R:0
msgid "must provide an environment table; got class %s"
msgstr "bisogna fornire una tabella di ambiente; si è ottenuta la classe%s"

#. R/Methods.R: gettextf("must supply a function skeleton for %s, explicitly or via an existing function",     sQuote(name))
#: R/Methods.R:0
msgid ""
"must supply a function skeleton for %s, explicitly or via an existing "
"function"
msgstr ""
"bisogna fornire uno skeleton di funzione per %s, esplicitamente o tramite "
"una funzione esistente"

#. R/RMethodUtils.R: gettextf("must supply either a generic function or a function as default for %s",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "must supply either a generic function or a function as default for %s"
msgstr ""
"deve fornire una funzione generica o una funzione come predefinita per %s"

#. R/method.skeleton.R: stop("need a definition for the method here")
#: R/method.skeleton.R:0
msgid "need a definition for the method here"
msgstr "richiesta una definizione per questo metodo"

#. R/RClassUtils.R: gettextf("needed the supplied labels vector of length %d, got %d", length(nodes),     length(short))
#: R/RClassUtils.R:0
msgid "needed the supplied labels vector of length %d, got %d"
msgstr ""
"necessario il vettore di etichette fornito con lunghezza %d, si è ottenuto %d"

#. R/RClassUtils.R: gettextf("no '.Data' slot defined for class %s", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "no '.Data' slot defined for class %s"
msgstr "nessun '.Data' slot definito per la classe %s"

#. R/ClassExtensions.R: gettextf("no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s",     to, dQuote(class(from)))
#: R/ClassExtensions.R:0
msgid ""
"no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s"
msgstr ""
"nessun metodo 'replace' è stato definito per 'as (x, \"%s\") <- value' per "
"la classe %s"

#. R/Methods.R: gettext("no applicable functions", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no applicable functions"
msgstr "non entrambe le funzioni!"

#. R/trace.R: gettextf("no definition for object %s found in tracing environment", sQuote(what),     source)
#: R/trace.R:0
msgid "no definition for object %s found in tracing environment"
msgstr "nessuna definizione per l'oggetto %s trovato nell'ambiente di tracing"

#. R/fixPrevious.R: gettextf("no definition for the class of %s (class %s) found", sQuote(what), dQuote(class))
#: R/fixPrevious.R:0
msgid "no definition for the class of %s (class %s) found"
msgstr "non è stata trovata alcuna definizione per la classe di %s (classe %s)"

#. R/RMethodUtils.R: gettextf("no definition found for class %s", dQuote(classi), domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "no definition found for class %s"
msgstr "nessuna definizione trovata per la classe %s"

#. R/refClass.R: gettext("no definition found for inherited class: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "no definition found for inherited class: %s"
msgstr "nessuna definizione trovata per la classe ereditata:%s"

#. R/SClasses.R: gettextf("no definition of %s to use for %s", dQuote(Class), unique)
#: R/SClasses.R:0
msgid "no definition of %s to use for %s"
msgstr "nessuna definizione di %s da usare per %s"

#. R/promptClass.R: gettextf("no definition of class %s found", dQuote(clName))
#: R/promptClass.R:0
msgid "no definition of class %s found"
msgstr "nessuna definizione trovata per la classe %s"

#. R/RClassUtils.R: gettextf("no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s",     .dQ(what), .dQ(def2@className), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"no definition of inheritance from %s to %s, though the relation was implied "
"by the setIs() from %s"
msgstr ""
"nessuna definizione di ereditarietà da %s a %s, sebbene la relazione fosse "
"implicita con setIs () da %s"

#. R/RClassUtils.R: gettextf("no definition was found for superclass %s in the specification of class %s",     dQuote(cl), dQuote(name))
#: R/RClassUtils.R:0
msgid ""
"no definition was found for superclass %s in the specification of class %s"
msgstr ""
"non è stata trovata alcuna definizione per la superclasse %s nella "
"specificazione di classe %s"

#. R/Methods.R: gettextf("  no direct match found to signature (%s)", paste(signature, collapse = ", "),     domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no direct match found to signature (%s)"
msgstr "nessun metodo trovato per la firma %s"

#. R/Methods.R: gettextf("no environment or package corresponding to argument where=%s", deparse(where))
#: R/Methods.R:0
msgid "no environment or package corresponding to argument where=%s"
msgstr "nessun ambiente o pacchetto corrispondente all'argomento where =%s"

#. R/Methods.R: gettextf("no existing definition for function %s", sQuote(f))
#: R/Methods.R:0
msgid "no existing definition for function %s"
msgstr "nessuna definizione esistente per la funzione %s"

#. R/addedFunctions.R: gettextf("no function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no function %s found"
msgstr "nessuna funzione %s trovata"

#. R/trace.R: gettextf("no function definition for %s found", sQuote(what))
#: R/trace.R:0
msgid "no function definition for %s found"
msgstr "nessuna definizione di funzione trovata per %s"

#. R/method.skeleton.R: gettextf("no function definition found for %s", sQuote(generic))
#: R/method.skeleton.R:0
msgid "no function definition found for %s"
msgstr "nessuna definizione di funzione trovata per %s"

#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#: R/Methods.R:0
msgid "no generic function %s found"
msgstr "non è stata trovata alcuna funzione generica %s"

#. R/MethodsList.R: gettextf("no generic function found corresponding to %s", sQuote(f))
#: R/MethodsList.R:0
msgid "no generic function found corresponding to %s"
msgstr "non è stata trovata alcuna funzione generica corrispondente a %s"

#. R/Methods.R: gettextf("no generic function found for %s", sQuote(f))
#. R/RMethodUtils.R: gettextf("no generic function found for %s", sQuote(f))
#: R/Methods.R:0 R/RMethodUtils.R:0
msgid "no generic function found for %s"
msgstr "non è stata trovata alcuna funzione generica per '%s'"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for package %s",     sQuote(name), sQuote(package), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for package %s"
msgstr ""
"non è ammessa alcuna versione generica di %s nel pacchetto %s;\n"
"   una nuova generica sarà assegnata per %s"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for the global environment",     sQuote(name), sQuote(package))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for the global environment"
msgstr ""
"non è ammessa alcuna versione generica di %s nel pacchetto %s;\n"
"   una nuova generica sarà assegnata per %s"

#. R/Methods.R: gettextf("no method for %s matches class %s", sQuote("..."), dQuote(signature))
#: R/Methods.R:0
msgid "no method for %s matches class %s"
msgstr "nessun metodo per %s corrisponde alla classe %s"

#. R/Methods.R: gettext("no method found for function %s and signature %s", domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for function %s and signature %s"
msgstr "nessun metodo trovato per la funzione %s e firma %s"

#. R/Methods.R: gettext("no method found for function '%s' and signature %s", domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for function '%s' and signature %s"
msgstr "nessun metodo trovato per la funzione %s e firma %s"

#. R/Methods.R: gettextf("no method found for signature %s", paste(signature, collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for signature %s"
msgstr "nessun metodo trovato per la firma %s"

#. R/trace.R: gettextf("no method in methods table for %s for signature %s", sQuote(what), sQuote(signature))
#: R/trace.R:0
msgid "no method in methods table for %s for signature %s"
msgstr "nessun metodo nella tabella per %s con firma %s"

#. R/as.R: gettextf("no method or default for 'as()' function replacement of %s with class=\"%s\"",     dQuote(thisClass), Class)
#: R/as.R:0
#, fuzzy
msgid ""
"no method or default for 'as()' function replacement of %s with class=\"%s\""
msgstr ""
"nessun metodo o valore predefinito per una sostituzione as() di %s con Class="
"\"%s\""

#. R/RMethodUtils.R: gettextf("no method or default matching the \"...\" arguments in %s", deparse(sys.call(sys.parent()),     nlines = 1))
#: R/RMethodUtils.R:0
msgid "no method or default matching the \"...\" arguments in %s"
msgstr ""
"nessun metodo o impostazione predefinita corrisponde agli argomenti \"...\" "
"in %s"

#. R/as.R: gettextf("no method or default scheme for coercing %s to %s", dQuote(thisClass),     dQuote(Class))
#: R/as.R:0
#, fuzzy
msgid "no method or default scheme for coercing %s to %s"
msgstr "nessun metodo o predefinito per la coercizione di %s in %s"

#. R/RMethodUtils.R: gettextf("no methods found for %s; cacheGenericsMetaData() will have no effect",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "no methods found for %s; cacheGenericsMetaData() will have no effect"
msgstr ""
"nessun metodo trovato per %s; cacheGenericsMetaData() non avrà alcun effetto"

#. R/methodsTable.R: gettextf("no methods table for generic %s from package %s in package %s", sQuote(generic@generic),     sQuote(generic@package), sQuote(getPackageName(where)))
#: R/methodsTable.R:0
msgid "no methods table for generic %s from package %s in package %s"
msgstr ""
"nessuna tabella metodi per la generica %s dal pacchetto %s nel pacchetto %s"

#. R/addedFunctions.R: gettextf("no non-generic function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no non-generic function %s found"
msgstr "non è stata trovata alcuna funzione %s non-generica"

#. R/SClasses.R: gettextf("no package name supplied and no class definition found for class %s", dQuote(className))
#: R/SClasses.R:0
#, fuzzy
msgid "no package name supplied and no class definition found for class %s"
msgstr ""
"non si è fornito alcun nome pacchetto e non è stata trovata alcuna "
"definizione di classe per %s"

#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#: R/RMethodUtils.R:0
msgid "no suitable arguments to dispatch methods in this function"
msgstr "nessun argomento adatto per il dispatch di metodi in questa funzione"

#. R/RMethodUtils.R: gettext("non-empty string; got \"\"")
#: R/RMethodUtils.R:0
msgid "non-empty string; got \"\""
msgstr ""

#. R/RMethodUtils.R: gettextf("non-function action: %s", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "non-function action: %s"
msgstr "azione non-funzione: %s"

#. R/Methods.R: gettextf("non-generic function '%s' given to findMethods()", f)
#: R/Methods.R:0
msgid "non-generic function '%s' given to findMethods()"
msgstr "la funzione non-generica '%s' passata a findMethods()"

#. R/refClass.R: gettextf("non-local assignment to method names is not allowed\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsInMethods], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to method names is not allowed\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"l'assegnazione non-locale ai nomi dei metodi non è consentita\n"
"     %s\n"
"(nel metodo %s per la classe %s)"

#. R/refClass.R: gettextf("non-local assignment to non-field names (possibly misspelled?)\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsNotFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to non-field names (possibly misspelled?)\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"assegnazione non-locale a nomi non-campo (probabilmente errata?)\n"
"     %s\n"
"(nel metodo %s per la classe %s)"

#. R/trace.R: stop("none of the objects in the source code could be found:  need to attach or specify the package")
#: R/trace.R:0
msgid ""
"none of the objects in the source code could be found:  need to attach or "
"specify the package"
msgstr ""
"non è stato trovato alcun oggetto presente nel codice sorgente:  è "
"necessario allegare o specificare il pacchetto"

#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#: R/refClass.R:0
msgid "not a reference class: %s"
msgstr "non un riferimento di classe: %s"

#. R/oldClass.R: stop("not allowed to have test==TRUE and an S4Class definition")
#: R/oldClass.R:0
msgid "not allowed to have test==TRUE and an S4Class definition"
msgstr "non è ammesso avere test==TRUE e una definizione S4Class"

#. R/Methods.R: gettext("not both functions!", domain = "R-methods")
#: R/Methods.R:0
msgid "not both functions!"
msgstr "non entrambe le funzioni!"

#. R/fixPrevious.R: gettextf("object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)",     sQuote(what))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it does not appear to be from a version of R earlier "
"than 1.8.0)"
msgstr ""
"l'oggetto %s non è cambiato (non sembra provenire da una versione di R "
"precedente alla 1.8.0)"

#. R/fixPrevious.R: gettextf("object %s not changed (it is not consistent with the current definition of class %s from %s)",     sQuote(what), dQuote(Class), sQuote(ClassDef@package))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it is not consistent with the current definition of "
"class %s from %s)"
msgstr ""
"l'oggetto %s non è cambiato (non è coerente con la definizione corrente "
"della classe %s da %s)"

#. R/fixPrevious.R: gettextf("object %s was not found", sQuote(what))
#: R/fixPrevious.R:0
#, fuzzy
msgid "object %s was not found"
msgstr "oggetto %s non trovato"

#. R/BasicClasses.R: gettextf("object must be a valid data part for class %s; not true of type %s", dQuote(cl),     dQuote(class(data)))
#: R/BasicClasses.R:0
msgid "object must be a valid data part for class %s; not true of type %s"
msgstr ""
"l'oggetto dev'essere una valida parte di dati per la classe %s; non è vero "
"per il tipo %s"

#. R/MethodsList.R: gettextf("object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object",     sQuote(fun@generic), length(sigClasses), length(signature))
#: R/MethodsList.R:0
msgid ""
"object to use as a method signature for function %s does not look like a "
"legitimate signature (a vector of single class names): there were %d class "
"names, but %d elements in the signature object"
msgstr ""
"l'oggetto da utilizzare come firma del metodo per la funzione %s non sembra "
"una firma legittima (un vettore di nomi di singola classe): c'erano %d nomi "
"di classi, ma %d elementi nell'oggetto firma"

#. R/trace.R: gettext("objects found in multiple packages: using %s and ignoring %s", domain = "R-methods")
#: R/trace.R:0
msgid "objects found in multiple packages: using %s and ignoring %s"
msgstr "oggetti trovati in più pacchetti: usando%s e ignorando %s"

#. R/Methods.R: gettextf("only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)",     inherited)
#: R/Methods.R:0
msgid ""
"only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)"
msgstr ""
"solo FALSE è significativo per \"inherited\", quando 'where' è passato (si è "
"ottenuto %s)"

#. R/SClasses.R: stop("only arguments 'Class' and 'where' can be supplied when argument 'representation' is a \"classRepresentation\" object")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only arguments 'Class' and 'where' can be supplied when argument "
"'representation' is a \"classRepresentation\" object"
msgstr ""
"solo gli argomenti 'Class' e 'where' possono essere passati quando "
"l'argomento 'representation' è un oggetto 'classRepresentation'"

#. R/SClasses.R: stop("only one data object (unnamed argument passed to 'prototype()' function) allowed")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only one data object (unnamed argument passed to 'prototype()' function) "
"allowed"
msgstr ""
"è ammesso solo un oggetto dati (argomento non nominato per il prototipo)"

#. R/Methods.R: gettext("original function is prohibited as a generic function", domain = "R-methods")
#: R/Methods.R:0
msgid "original function is prohibited as a generic function"
msgstr "la funzione originale è vietata come funzione generica"

#. R/trace.R: gettextf("package %s is not attached and no namespace found for it", sQuote(package))
#: R/trace.R:0
msgid "package %s is not attached and no namespace found for it"
msgstr "il pacchetto %s non è attaccato e non è stato trovato il suo namespace"

#. R/methodsTable.R: gettext("package slot missing from signature for generic %s\n and classes %s\ncannot use with duplicate class names (the package may need to be re-installed)",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"package slot missing from signature for generic %s\n"
" and classes %s\n"
"cannot use with duplicate class names (the package may need to be re-"
"installed)"
msgstr ""

#. R/Methods.R: gettextf("package slots  differ: %s, %s", .dQ(gpString(f1@package)), .dQ(gpString(f2@package)),     domain = "R-methods")
#: R/Methods.R:0
msgid "package slots  differ: %s, %s"
msgstr "gli slots di pacchetto  differiscono: %s, %s"

#. R/RClassUtils.R: gettext("potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"potential cycle in class inheritance: %s has duplicates in superclasses and "
"subclasses (%s)"
msgstr ""
"ciclo potenziale nell'eredità di classe: %s ha duplicati in superclassi e "
"sottoclassi (%s)"

#. R/Methods.R: stop("primitive functions cannot be methods; they must be enclosed in a regular function")
#: R/Methods.R:0
msgid ""
"primitive functions cannot be methods; they must be enclosed in a regular "
"function"
msgstr ""
"le funzioni primitive non possono essere metodi; devono essere racchiuse in "
"una normale funzione"

#. R/RClassUtils.R: warning("prototype is a list with named elements (could be ambiguous): better to use function 'prototype()' to avoid trouble.")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"prototype is a list with named elements (could be ambiguous): better to use "
"function 'prototype()' to avoid trouble."
msgstr ""
"prototype è una lista con elementi nominati (potrebbe essere ambiguo): "
"meglio utilizzare la funzione prototype() per evitare problemi."

#. R/ClassExtensions.R: gettextf("replacement value must be of class %s, got one of class %s", dQuote(CLASS),     dQuote(class(value)[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must be of class %s, got one of class %s"
msgstr ""
"il valore di sostituzione dev'essere una classe %s, si è ottenuto uno di "
"classe %s"

#. R/ClassExtensions.R: gettextf("replacement value must extend class %s, got %s", dQuote(needClass), dQuote(S3Class[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must extend class %s, got %s"
msgstr ""
"il valore di sostituzione deve estendere la classe %s, si è ottenuto %s"

#. R/oldClass.R: gettextf("restoring definition of class %s", dQuote(cl))
#: R/oldClass.R:0
msgid "restoring definition of class %s"
msgstr "ripristino della definizione di classe %s"

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
msgid ""
"selectMethod(): mlist is not an environment or NULL :\n"
"** should no longer happen!"
msgstr ""

#. R/trace.R: gettextf("setting a method over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(getPackageName(where)))
#: R/trace.R:0
msgid ""
"setting a method over the binding of symbol %s in environment/package %s"
msgstr ""
"impostando un metodo sul binding del simbolo %s nell'ambiente/pacchetto %s"

#. R/Methods.R: gettextf("signatures differ:  (%s), (%s)", paste(f1@signature, collapse = ", "),     paste(f2@signature, collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "signatures differ:  (%s), (%s)"
msgstr "le firme differiscono:  (%s), (%s)"

#. R/RMethodUtils.R: gettextf("single string; got a character vector of length %d", length(what))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "single string; got a character vector of length %d"
msgstr ""
"è necessario un singolo nome di classe per il campo %s, si è ottenuto un "
"vettore di caratteri di lunghezza %d"

#. R/RMethodUtils.R: gettextf("single string; got an object of class %s", dQuote(class(what)[[1L]]))
#: R/RMethodUtils.R:0
msgid "single string; got an object of class %s"
msgstr "stringa singola; si è ottenuto un oggetto di classe %s"

#. R/MethodsList.R: gettext("skipping methods list element %s of unexpected class %s\n\n", domain = "R-methods")
#: R/MethodsList.R:0
msgid "skipping methods list element %s of unexpected class %s"
msgstr "si omette l'elemento della lista metodi %s della classe imprevista %s"

#. R/oldClass.R: gettextf("slot %s: class %s should extend class %s", sQuote(what), dQuote(slots1[[what]]),     dQuote(slots2[[what]]))
#: R/oldClass.R:0
msgid "slot %s: class %s should extend class %s"
msgstr "slot %s: la classe %s dovrebbe estendere la classe %s"

#. R/SClasses.R: gettext("slots in class definition but not in object:")
#: R/SClasses.R:0
msgid "slots in class definition but not in object:"
msgstr ""

#. R/RMethodUtils.R: gettext("some actions are missing: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "some actions are missing: %s"
msgstr "alcune funzioni sono mancanti: %s"

#. R/methodsTable.R: gettextf("something weird: inconsistent number of args in methods table strings: %s (using the largest value)",     paste(nargs, collapse = ", "), domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"something weird: inconsistent number of args in methods table strings: %s "
"(using the largest value)"
msgstr ""

#. R/SClasses.R: gettextf("superclass \"%s\" not defined in the environment of the object's class",     superClass)
#: R/SClasses.R:0
#, fuzzy
msgid "superclass \"%s\" not defined in the environment of the object's class"
msgstr "la classe %s non è definita in questo ambiente"

#. R/trace.R: gettextf("supplied package, %s, differs from package inferred from source, %s", sQuote(package),     sQuote(envPackage))
#: R/trace.R:0
msgid "supplied package, %s, differs from package inferred from source, %s"
msgstr ""
"il pacchetto fornito,%s, differisce dal pacchetto dedotto dalla fonte, %s"

#. R/methodsTable.R: gettextf("the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s",     dQuote(class(condAction)))
#: R/methodsTable.R:0
msgid ""
"the \"ambiguousMethodSelection\" option should be a function to be called as "
"the condition action; got an object of class %s"
msgstr ""
"l'opzione \"ambiguousMethodSelection\" dovrebbe essere una funzione da "
"chiamare come azione condizionale; si è ottenuto un oggetto della classe %s"

#. R/RMethodUtils.R: gettextf("the %s argument must be NULL or a generic function object; got an object of class %s",     sQuote("genericFunction"), dQuote(class(genericFunction)))
#: R/RMethodUtils.R:0
msgid ""
"the %s argument must be NULL or a generic function object; got an object of "
"class %s"
msgstr ""
"l'argomento %s dev'essere un NULL o un oggetto funzione generica; si è "
"ottenuto un oggetto della classe %s"

#. R/RClassUtils.R: gettextf("the '%s' list for class %s, includes an undefined class %s", if (superClassCase) "superClass" else "subClass",     dQuote(className), dQuote(.className(by)))
#: R/RClassUtils.R:0
msgid "the '%s' list for class %s, includes an undefined class %s"
msgstr "la lista '%s' per la classe %s, include una classe non definita %s"

#. R/ClassExtensions.R: gettextf("the 'S3Class' argument must be a superclass of %s: not true of class %s",     dQuote(class(object)), dQuote(S3Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "the 'S3Class' argument must be a superclass of %s: not true of class %s"
msgstr ""
"l'argomento 'S3Class' dev'essere una superclasse di %s: non è vero per la "
"classe %s"

#. R/ClassExtensions.R: gettextf("the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s",     dQuote(class(coerce)))
#: R/ClassExtensions.R:0
msgid ""
"the 'coerce' argument to 'setIs' should be a function of one argument, got "
"an object of class %s"
msgstr ""
"l'argomento 'coerce' in 'setIs' dovrebbe essere una funzione con un "
"argomento, si è ottenuto un oggetto della classe %s"

#. R/refClass.R: gettextf("the 'contains' argument should be the names of superclasses:  got an element of class %s",     dQuote(class(what)))
#: R/refClass.R:0
msgid ""
"the 'contains' argument should be the names of superclasses:  got an element "
"of class %s"
msgstr ""
"l'argomento 'contains' dovrebbe essere il nome delle superclassi: si è "
"ottenuto un elemento della classe %s"

#. R/show.R: gettext("the 'oldMethods' argument is deprecated, as it has been unused since R 1.7.0",     domain = "R-methods")
#: R/show.R:0
msgid ""
"the 'oldMethods' argument is deprecated, as it has been unused since R 1.7.0"
msgstr ""

#. R/ClassExtensions.R: gettextf("the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s",     dQuote(class(replace)))
#: R/ClassExtensions.R:0
msgid ""
"the 'replace' argument to setIs() should be a function of 2 or 3 arguments, "
"got an object of class %s"
msgstr ""
"l'argomento 'replace' di setIs() dovrebbe essere una funzione di 2 o 3 "
"argomenti, si è ottenuto un oggetto della classe %s"

#. R/Methods.R: gettextf("the 'where' environment (%s) is a locked namespace; cannot assign methods there",     getPackageName(where))
#: R/Methods.R:0
msgid ""
"the 'where' environment (%s) is a locked namespace; cannot assign methods "
"there"
msgstr ""
"l'ambiente 'where' (%s) è un namespace bloccato; non è possibile assegnarli "
"metodi"

#. R/oldClass.R: gettextf("the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")",     .class1(prototype), mainClass)
#: R/oldClass.R:0
msgid ""
"the S3 class of the prototype, \"%s\", is undefined; only allowed when this "
"is the S3 class being registered (\"%s\")"
msgstr ""
"la classe S3 del prototipo, \"%s\", non è definita; è ammessa solo quando "
"questa è la classe S3 registrata (\"%s\")"

#. R/RMethodUtils.R: gettextf("the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!",     sQuote(fname), paste(as.character(x[[2L]]), collapse = "\n"))
#: R/RMethodUtils.R:0
msgid ""
"the body of the generic function for %s calls 'standardGeneric' to dispatch "
"on a different name (\"%s\")!"
msgstr ""
"il corpo della funzione generica per %s chiama 'standardGeneric' per il "
"dispatch di un nome differente (\"%s\")!"

#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#: R/refClass.R:0
msgid ""
"the class of field %s in the object is not compatible with the desired class "
"%s in the target"
msgstr ""
"la classe del campo %s nell'oggetto non è compatibile con la classe "
"desiderata %s nella destinazione"

#. R/ClassExtensions.R: gettextf("the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)\n",     TO, dQuote(FROM), TO, dQuote(class(value)))
#: R/ClassExtensions.R:0
msgid ""
"the computation: 'as(object,\"%s\") <- value' is valid when object has class "
"%s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)"
msgstr ""
"la computazione: 'as(object, \"%s\") <- value' valida quando l'oggetto ha la "
"classe %s solo se 'is(value, \"%s\")' è TRUE ('classe (value)' era %s )"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid ""
"the definition of class %s in package %s is locked so fields may not be "
"modified"
msgstr ""
"la definizione della classe %s nel pacchetto %s è bloccata, perciò i campi "
"potrebbero non essere modificabili"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked, methods may not be redefined",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid ""
"the definition of class %s in package %s is locked, methods may not be "
"redefined"
msgstr ""
"la definizione della classe %s nel pacchetto %s è bloccata, i metodi "
"potrebbero non essere ridefiniti"

#. R/trace.R: stop("the editing in trace() can only change the body of the function, not the arguments or defaults")
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function, not the "
"arguments or defaults"
msgstr ""
"la modifica in trace() può solo cambiare il corpo della funzione, non gli "
"argomenti o i valori predefiniti"

#. R/trace.R: gettextf("the editing in trace() can only change the body of the function; got an object of class %s",     dQuote(class(def2)))
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function; got an "
"object of class %s"
msgstr ""
"la modifica in trace() può solo cambiare il corpo della funzione; si è "
"ottenuto un oggetto della classe %s"

#. R/Methods.R: gettextf("the environment %s is locked; cannot assign methods for function %s", sQuote(getPackageName(where)),     sQuote(f))
#: R/Methods.R:0
msgid "the environment %s is locked; cannot assign methods for function %s"
msgstr ""
"l'ambiente %s è bloccato; non è possibile assegnare metodi per la funzione %s"

#. R/RMethodUtils.R: gettextf("the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed",     what, sQuote(f))
#: R/RMethodUtils.R:0
msgid ""
"the function being used as %s in making a generic function for %s is "
"currently traced; the function used will have tracing removed"
msgstr ""
"la funzione utilizzata come %s per creare una funzione generica per %s è "
"attualmente tracciata; la funzione utilizzata avrà la traccia rimossa"

#. R/ClassUnion.R: gettext("the member classes must be defined: not true of %s", domain = "R-methods")
#: R/ClassUnion.R:0
msgid "the member classes must be defined: not true of %s"
msgstr "le classi membro devono essere definite: non è vero per %s"

#. R/trace.R: gettextf("the method for %s for this signature was not being traced", sQuote(what))
#: R/trace.R:0
msgid "the method for %s for this signature was not being traced"
msgstr "il metodo per %s per questa firma non è stato tracciato"

#. R/Methods.R: gettextf("the method for function %s and signature %s is sealed and cannot be re-defined",     sQuote(f), .signatureString(fdef, signature))
#: R/Methods.R:0
msgid ""
"the method for function %s and signature %s is sealed and cannot be re-"
"defined"
msgstr ""
"il metodo per la funzione %s e la firma %s è protetto e non può essere "
"ridefinito"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match %s's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match %s's arguments (%s)"
msgstr ""
"i nomi nella firma per il metodo (%s) non corrispondono agli argomenti di %s "
"(%s)"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match function's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid ""
"the names in signature for method (%s) do not match function's arguments (%s)"
msgstr ""
"i nomi nella firma per il metodo (%s) non corrispondono agli argomenti della "
"funzione (%s)"

#. R/refClass.R: gettextf("the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")",     value[[field]], sQuote(field), fieldList[[field]])
#: R/refClass.R:0
msgid ""
"the overriding class (\"%s\") of field %s is not a subclass of the existing "
"field definition (\"%s\")"
msgstr ""
"la classe dominante (\"%s\") del campo %s non è una sottoclasse della "
"definizione di campo esistente (\"%s\")"

#. R/MethodsList.R: gettextf("there are named arguments (%s) in the method signature that ambiguously match the generic signature, for function %s",     paste(sQuote(names(sigList)[ambig]), collapse = ", "), sQuote(fun@generic), domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"there are named arguments (%s) in the method signature that ambiguously "
"match the generic signature, for function %s"
msgstr ""
"ci sono più elementi nella firma del metodo (%d) rispetto alla firma "
"generica (%d) per la funzione %s"

#. R/MethodsList.R: gettextf("there are named arguments (%s) in the method signature that are missing from the generic signature, for function %s",     paste(sQuote(names(sigList)[is.na(argmatches)]), collapse = ", "), sQuote(fun@generic),     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"there are named arguments (%s) in the method signature that are missing from "
"the generic signature, for function %s"
msgstr ""
"ci sono più elementi nella firma del metodo (%d) rispetto alla firma "
"generica (%d) per la funzione %s"

#. R/ClassExtensions.R: gettextf("there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error",     to, dQuote(Class))
#: R/ClassExtensions.R:0
msgid ""
"there is no automatic definition for 'as(object, \"%s\") <- value' when "
"object has class %s and no 'replace' argument was supplied; replacement will "
"be an error"
msgstr ""
"non esiste una definizione automatica per 'as (object, \"%s\") <- value' "
"quando l'oggetto ha la classe %s e non è stato fornito alcun argomento "
"'replace'; la sostituzione darà un errore"

#. R/refClass.R: gettextf("topic %s is not a method name in class %s\nThe class definition follows\n",     sQuote(topic), dQuote(className), domain = "R-methods")
#: R/refClass.R:0
msgid ""
"topic %s is not a method name in class %s\n"
"The class definition follows"
msgstr ""
"argomento %s non è un nome metodo nella classe %s\n"
"Segue la definizione della classe"

#. R/trace.R: gettextf("tracing the internal function %s is not allowed", sQuote(what))
#: R/trace.R:0
msgid "tracing the internal function %s is not allowed"
msgstr "non è ammesso fare il tracing della funzione interna %s"

#. R/RClassUtils.R: gettextf("trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object",     dQuote(class(def)), dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"trying to assign an object of class %s as the definition of class %s: must "
"supply a \"classRepresentation\" object"
msgstr ""
"cercando di assegnare un oggetto della classe %s come definizione di classe "
"%s: bisogna fornire un oggetto \"classRepresentation\""

#. R/RClassUtils.R: gettext("trying to change the argument list of %s with %d arguments to have arguments (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"trying to change the argument list of %s with %d arguments to have arguments "
"(%s)"
msgstr ""
"cercando di cambiare gli argomenti formali in %s, ma il numero di argomenti "
"esistenti è inferiore al numero di nuovi argomenti: (%s) vs (%s)"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s in an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s in an object of class %s; "
"expected a function definition"
msgstr ""
"cercando di cambiare gli argomenti formali in %s in un oggetto della classe "
"%s; attesa una definizione di funzione"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but getting the new formals "
"from an object of class %s; expected a function definition"
msgstr ""
"cercando di cambiare gli argomenti formali in %s, ma ricevendo nuovi formali "
"da un oggetto della classe %s; attesa una definizione di funzione"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is greater than the number of new arguments (the extra arguments "
"won't be used): (%s) vs (%s)"
msgstr ""
"cercando di cambiare gli argomenti formali in %s, ma il numero di argomenti "
"esistenti è maggiore del numero di nuovi argomenti (gli argomenti extra non "
"saranno utilizzati): (%s) vs (%s)"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is less than the number of new arguments: (%s) vs (%s)"
msgstr ""
"cercando di cambiare gli argomenti formali in %s, ma il numero di argomenti "
"esistenti è inferiore al numero di nuovi argomenti: (%s) vs (%s)"

#. R/methodsTable.R: gettext("trying to check signature length of generic %s, but it is not a generic function: i = %d, funs = %s, gnames = %s",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of generic %s, but it is not a generic "
"function: i = %d, funs = %s, gnames = %s"
msgstr ""
"cercando di controllare la lunghezza della firma del generico '%s', ma non è "
"una funzione generica: i =%d, funs =%s, gnames =%s"

#. R/methodsTable.R: gettextf("trying to check signature length of group generic %s, but it is not a group generic",     sQuote(what))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of group generic %s, but it is not a group "
"generic"
msgstr ""
"cercando di controllare la lunghezza della firma del gruppo generico '%s', "
"ma non è un gruppo generico"

#. R/methodsTable.R: stop("trying to find a methods table in a non-generic function")
#: R/methodsTable.R:0
msgid "trying to find a methods table in a non-generic function"
msgstr "cercando di trovare una tabella metodi in una funzione non-generica"

#. R/MethodsList.R: gettextf("trying to match a method signature of class %s; expects a list or a character vector",     dQuote(class(signature)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature of class %s; expects a list or a "
"character vector"
msgstr ""
"cercando di abbinare una firma del metodo della classe%s; si aspetta un "
"elenco o un vettore di caratteri"

#. R/MethodsList.R: gettextf("trying to match a method signature to an object (of class %s) that is not a generic function",     dQuote(class(fun)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature to an object (of class %s) that is not a "
"generic function"
msgstr ""
"cercando di far corrispondere una firma del metodo a un oggetto (della "
"classe %s) che non è una funzione generica"

#. R/as.R: gettextf("trying to set an 'as' relation from %s to itself", dQuote(.class1(from)))
#: R/as.R:0
msgid "trying to set an 'as' relation from %s to itself"
msgstr "cercando di impostare una relazione 'as' da %s a se stesso"

#. R/ClassUnion.R: gettext("unable to create union class: could not set members %s", domain = "R-methods")
#: R/ClassUnion.R:0
#, fuzzy
msgid "unable to create union class: could not set members %s"
msgstr ""
"non è possibile creare la classe union:  non è possibile impostare i membri "
"%s"

#. R/RClassUtils.R: gettext("unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"unable to find a consistent ordering of superclasses for class %s: order "
"chosen is inconsistent with the superclasses of %s"
msgstr ""
"non è possibile trovare un ordinamento coerente di superclassi per la classe "
"%s: l'ordine scelto non è coerente con le superclassi di %s"

#. R/RClassUtils.R: gettextf("unable to find an environment containing class %s", dQuote(Class))
#: R/RClassUtils.R:0
msgid "unable to find an environment containing class %s"
msgstr "non è possibile trovare un ambiente contenente la classe %s"

#. R/methodsTable.R: gettextf("unable to find an inherited method for function %s for signature %s", sQuote(fdef@generic),     sQuote(cnames))
#: R/methodsTable.R:0
msgid "unable to find an inherited method for function %s for signature %s"
msgstr ""
"non è possibile trovare un metodo ereditato per la funzione %s per la firma "
"%s"

#. R/RClassUtils.R: gettextf("unable to find required package %s", sQuote(package))
#: R/RClassUtils.R:0
msgid "unable to find required package %s"
msgstr "non è possibile trovare il pacchetto richiesto %s"

#. R/as.R: stop("undefined 'coerce' method")
#: R/as.R:0
msgid "undefined 'coerce' method"
msgstr "metodo 'coerce' non definito"

#. R/SClasses.R: gettextf("undefined class for slot '%s' (\"%s\")", slotNames[[i]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid "undefined class for slot '%s' (\"%s\")"
msgstr "classi slot non definite nella definizione di %s: %s"

#. R/methodsTable.R: gettext("undefined classes (%s) will be ignored for argument %s", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "undefined classes (%s) will be ignored for argument %s"
msgstr "le classi non definite (%s) saranno ignorate per l'argomento '%s'"

#. R/RClassUtils.R: gettext("undefined slot classes in definition of %s: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "undefined slot classes in definition of %s: %s"
msgstr "classi slot non definite nella definizione di %s: %s"

#. R/RClassUtils.R: gettextf("undefined subclass %s of class %s; definition not updated", .dQ(what),     .dQ(def@className))
#: R/RClassUtils.R:0
msgid "undefined subclass %s of class %s; definition not updated"
msgstr ""
"sottoclasse non definita %s della classe %s; definizione non aggiornata"

#. R/zzz.R: message("unloading 'methods' package ...")
#: R/zzz.R:0
msgid "unloading 'methods' package ..."
msgstr "scaricamento pacchetto 'methods' ..."

#. R/BasicClasses.R: gettextf("unnamed argument must extend either the S3 class or the class of the data part; not true of class %s",     dQuote(Classi))
#: R/BasicClasses.R:0
msgid ""
"unnamed argument must extend either the S3 class or the class of the data "
"part; not true of class %s"
msgstr ""
"l'argomento senza nome deve estendere la classe S3 o la classe della parte "
"dati; non vero per la classe%s"

#. R/BasicClasses.R: gettextf("unnamed argument passed to 'initialize()' for S3 class must have a class definition; %s does not",     dQuote(Classi))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'initialize()' for S3 class must have a class "
"definition; %s does not"
msgstr ""
"l'argomento non nominato per initialize() di una classe S3 deve avere una "
"definizione di classe; %s non lo fa"

#. R/BasicClasses.R: stop("unnamed argument passed to 'new()' method must be an environment for the new object")
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'new()' method must be an environment for the new "
"object"
msgstr ""
"l'argomento non nominato per new() dev'essere un ambiente per il nuovo "
"oggetto"

#. R/refClass.R: gettextf("unnamed arguments to $new() must be objects from a reference class; got an object of class %s",     dQuote(class(super)))
#: R/refClass.R:0
msgid ""
"unnamed arguments to $new() must be objects from a reference class; got an "
"object of class %s"
msgstr ""
"gli argomenti non nominati di $new() devono essere oggetti di una classe "
"riferimento; si è ottenuto un oggetto della classe %s"

#. R/RClassUtils.R: gettextf("validity method for class \"%s\"", Class)
#: R/RClassUtils.R:0
#, fuzzy
msgid "validity method for class \"%s\""
msgstr "nessun metodo per %s corrisponde alla classe %s"

#. R/SClasses.R: stop("validity method must be NULL or a function of one argument")
#: R/SClasses.R:0
msgid "validity method must be NULL or a function of one argument"
msgstr "il metodo di validità dev'essere NULL o una funzione di un argomento"

#. R/Methods.R: gettextf("value classes differ: %s, %s", .dQ(gpString(f1@valueClass)), .dQ(gpString(f2@valueClass)))
#: R/Methods.R:0
msgid "value classes differ: %s, %s"
msgstr "le classi di valore differiscono:%s,%s"

#. R/methodsTable.R: ngettext(length(pkgs), "  (%d methods defined for this signature, with different packages)\n",     "  (%d methods defined for this signature, with different packages)\n", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "  (%d methods defined for this signature, with different packages)\n"
msgid_plural ""
"  (%d methods defined for this signature, with different packages)\n"
msgstr[0] "il metodo per %s per questa firma non è stato tracciato"
msgstr[1] "il metodo per %s per questa firma non è stato tracciato"

#. R/methodsTable.R: ngettext(length(candidates), "Choosing method %s from %d ambiguous possibility",     "Choosing method %s from %d ambiguous possibilities", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Choosing method %s from %d ambiguous possibility"
msgid_plural "Choosing method %s from %d ambiguous possibilities"
msgstr[0] "Scelta del metodo %s da %d possibilità ambigua"
msgstr[1] "Scelta del metodo %s da %d possibilità ambigue"

#. R/MethodsListClass.R: ngettext(nreport, "Reported %d ambiguous selection out of %d for function %s", "Reported %d ambiguous selections out of %d for function %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "Reported %d ambiguous selection out of %d for function %s"
msgid_plural "Reported %d ambiguous selections out of %d for function %s"
msgstr[0] "Segnalata %d selezione ambigua su %d per funzione %s\n"
msgstr[1] "Segnalate %d selezioni ambigue su %d per funzione %s\n"

#. R/methodsTable.R: ngettext(which2, "Selecting %d method of minimum distance", "Selecting %d methods of minimum distance",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d method of minimum distance"
msgid_plural "Selecting %d methods of minimum distance"
msgstr[0] "Selezione di %d metodo di distanza minima"
msgstr[1] "Selezione di %d metodi di distanza minima"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d non-group method", "Selecting %d non-group methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d non-group method"
msgid_plural "Selecting %d non-group methods"
msgstr[0] "Selezione di %d metodo non-gruppo"
msgstr[1] "Selezione di %d metodi non-gruppo"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d partially exact-matching method", "Selecting %d partially exact-matching methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d partially exact-matching method"
msgid_plural "Selecting %d partially exact-matching methods"
msgstr[0] "Selezione di %d metodo di corrispondenza parzialmente esatta"
msgstr[1] "Selezione di %d metodi di corrispondenza parzialmente esatta"

#. R/is.R: ngettext(sum(is.na(match(n2, n1))), "class %s is missing slot from class %s (%s), and no coerce method was supplied",     "class %s is missing slots from class %s (%s), and no coerce method was supplied",     domain = "R-methods")
#: R/is.R:0
msgid ""
"class %s is missing slot from class %s (%s), and no coerce method was "
"supplied"
msgid_plural ""
"class %s is missing slots from class %s (%s), and no coerce method was "
"supplied"
msgstr[0] ""
"Nella classe %s manca lo slot della classe %s (%s) e non è stato fornito "
"alcun metodo di coercizione"
msgstr[1] ""
"Nella classe %s mancano gli slot della classe %s (%s) e non è stato fornito "
"alcun metodo di coercizione"

#. R/SClasses.R: ngettext(length(dslots), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#. R/SClasses.R: ngettext(length(duplicated(snames)), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicated slot name: %s"
msgid_plural "duplicated slot names: %s"
msgstr[0] "nomi slot duplicati: %s"
msgstr[1] "nomi slot duplicati: %s"

#. R/methodsTable.R: ngettext(length(methods), "found %d equally good next method", "found %d equally good next methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "found %d equally good next method"
msgid_plural "found %d equally good next methods"
msgstr[0] "trovato %d metodo next ugualmente buono"
msgstr[1] "trovati %d metodi next ugualmente buoni"

#. R/MethodsList.R: ngettext(sum(is.na(which)), "in the method signature for function %s invalid argument name in the signature: %s",     "in the method signature for function %s invalid argument names in the signature: %s",     domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"in the method signature for function %s invalid argument name in the "
"signature: %s"
msgid_plural ""
"in the method signature for function %s invalid argument names in the "
"signature: %s"
msgstr[0] ""
"nella firma del metodo per la funzione %s nome argomento non valido nella "
"firma:%s"
msgstr[1] ""
"nella firma del metodo per la funzione %s nomi argomento non validi nella "
"firma:%s"

#. R/SClasses.R: ngettext(sum(is.na(which)), "invalid name for slot of class %s: %s", "invalid names for slots of class %s: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "invalid name for slot of class %s: %s"
msgid_plural "invalid names for slots of class %s: %s"
msgstr[0] "nome non valido per lo slot di classe %s: %s"
msgstr[1] "nomi non validi per gli slot di classe %s: %s"

#. R/SClasses.R: ngettext(length(pkgs), "multiple definition of class %s visible (%s); using the definition\n   in package %s for %s",     "multiple definitions of class %s visible (%s); using the definition\n   in package %s for %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"multiple definition of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgid_plural ""
"multiple definitions of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgstr[0] ""
"definizione multipla visibile della classe %s (%s); si utilizza la "
"definizione\n"
"    nel pacchetto %s per %s"
msgstr[1] ""
"definizioni multiple visibili della classe %s (%s); si utilizza la "
"definizione\n"
"    nel pacchetto %s per %s"

#. R/RClassUtils.R: ngettext(sum(is.na(match(pnames, slots))), "named elements of prototype do not correspond to slot name: %s",     "named elements of prototype do not correspond to slot names: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "named elements of prototype do not correspond to slot name: %s"
msgid_plural "named elements of prototype do not correspond to slot names: %s"
msgstr[0] ""
"gli elementi nominati del prototipo non corrispondono al nome dello slot: %s"
msgstr[1] ""
"gli elementi nominati del prototipo non corrispondono ai nomi degli slot: %s"

#. R/MethodsList.R: ngettext(length(unknown), "no definition for class %s", "no definition for classes %s",     domain = "R-methods")
#: R/MethodsList.R:0
msgid "no definition for class %s"
msgid_plural "no definition for classes %s"
msgstr[0] "nessuna definizione per la classe %s"
msgstr[1] "nessuna definizione per le classi %s"

#. R/promptClass.R: ngettext(length(whereClass), "no definition of class %s in the specified position, %s, definition on : %s",     "no definition of class %s in the specified position, %s, definitions on : %s",     domain = "R-methods")
#: R/promptClass.R:0
msgid ""
"no definition of class %s in the specified position, %s, definition on : %s"
msgid_plural ""
"no definition of class %s in the specified position, %s, definitions on : %s"
msgstr[0] ""
"non è stata trovata alcuna definizione per la classe %s nella posizione "
"specificata, %s, definizione su: %s"
msgstr[1] ""
"non è stata trovata alcuna definizione per la classe %s nella posizione "
"specificata, %s, definizioni su: %s"

#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s", "non-arguments found in the signature: %s",     domain = "R-methods")
#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s", "non-arguments found in the signature: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "non-argument found in the signature: %s"
msgid_plural "non-arguments found in the signature: %s"
msgstr[0] "trovato un non-argomento nella firma: %s"
msgstr[1] "trovati non-argomenti nella firma: %s"

#. R/is.R: ngettext(length(bad), "slot in class %s must extend corresponding slot in class %s: fails for %s",     "slots in class %s must extend corresponding slots in class %s: fails for %s",     domain = "R-methods")
#: R/is.R:0
msgid ""
"slot in class %s must extend corresponding slot in class %s: fails for %s"
msgid_plural ""
"slots in class %s must extend corresponding slots in class %s: fails for %s"
msgstr[0] ""
"lo slot nella classe %s deve estendere quello corrispondente nella classe "
"%s: non funziona per %s"
msgstr[1] ""
"gli slot nella classe %s devono estendere quelli corrispondenti nella classe "
"%s: non funziona per %s"

#. R/RMethodUtils.R: ngettext(length(fdef), "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)",     "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"the formal argument of the generic function for %s (%s) differs from that of "
"the non-generic to be used as the default (%s)"
msgid_plural ""
"the formal arguments of the generic function for %s (%s) differ from those "
"of the non-generic to be used as the default (%s)"
msgstr[0] ""
"l'argomento formale della funzione generica per %s (%s) differisce da quello "
"del non-generico da utilizzare come predefinito (%s)"
msgstr[1] ""
"l'argomento formale della funzione generica per %s (%s) differisce da quelli "
"dei non-generici da utilizzare come predefinito (%s)"

#~ msgid "no generic function found for '%s'"
#~ msgstr "non è stata trovata alcuna funzione generica per '%s'"

#~ msgid "must supply 'generic.function' or 'class'"
#~ msgstr "bisogna fornire 'generic.function' o \"class\""

#~ msgid "From .checkSubclasses(): subclass %s of class %s is not local and"
#~ msgstr ""
#~ "Da .checkSubclasses (): la sottoclasse %s della classe %s non è locale e"

#~ msgid "is not updated for new inheritance information currently;"
#~ msgstr ""
#~ "non è attualmente aggiornata per le nuove informazioni sull'eredità;"

#~ msgid "[where=%s, where2=%s]"
#~ msgstr "[where=%s, where2=%s]"

#~ msgid ""
#~ "Debugging .checkSubclasses(): assignClassDef(what=\"%s\", *, where=%s, "
#~ "force=TRUE);"
#~ msgstr ""
#~ "Debug .checkSubclasses(): assignClassDef(what = \"%s\", *, where =%s, "
#~ "force = TRUE);"

#~ msgid "E := environment(): %s; parent.env(E): %s"
#~ msgstr "E := environment(): %s; parent.env(E): %s"

#~ msgid "duplicated slot names: %s"
#~ msgstr "nomi slot duplicati: %s"

#~ msgid "move the file or remove the class/method"
#~ msgstr "sposta il file o rimuovi la classe/metodo"
