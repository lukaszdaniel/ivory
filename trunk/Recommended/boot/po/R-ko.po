# Korean translation for R boot package
# Recommended/boot/po/R-ko.po
# Maintainer: Brian Ripley <ripley@stats.ox.ac.uk>
#
# This file is distributed under the same license as the R boot package.
# Chel Hee Lee <chl948@mail.usask.ca>, 2013-2015.
#
# Reviewing process is completed (26-JAN-2015)
# The original source code is reviewed (26-JAN-2015)
# QC: PASS
# Freezing on 06-FEB-2015 for R-3.1.3
#
msgid ""
msgstr ""
"Project-Id-Version: boot 1.3-6\n"
"POT-Creation-Date: 2015-02-13 16:25\n"
"PO-Revision-Date: 2015-02-06 21:56-0600\n"
"Last-Translator:Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language-Team: Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. R/bootfuns.q: gettextf("%s distribution not supported: using normal instead", sQuote(qdist))
#: R/bootfuns.q:0
msgid "%s distribution not supported: using normal instead"
msgstr "%s 분포가 지원되지 않기 때문에 정규분포를 대신 사용합니다."

#. R/bootfuns.q: stop("'F.surv' is required but missing")
#: R/bootfuns.q:0
msgid "'F.surv' is required but missing"
msgstr "'F.surv'이 필요한데 이를 찾을 수 없습니다."

#. R/bootfuns.q: stop("'G.surv' is required but missing")
#: R/bootfuns.q:0
msgid "'G.surv' is required but missing"
msgstr "'G.surv'가 필요한데 이를 찾을 수 없습니다."

#. R/bootfuns.q: gettextf("'K' has been set to %f", K)
#: R/bootfuns.q:0
msgid "'K' has been set to %f"
msgstr "'K'는 %f로 설정되었습니다."

#. R/bootfuns.q: stop("'K' outside allowable range")
#: R/bootfuns.q:0
msgid "'K' outside allowable range"
msgstr "'K'는 허용범위 밖에 존재합니다."

#. R/bootfuns.q: stop("'R' and 'alpha' have incompatible lengths")
#: R/bootfuns.q:0
msgid "'R' and 'alpha' have incompatible lengths"
msgstr "'R'과 'alpha'의 길이가 서로 맞지 않습니다."

#. R/bootfuns.q: stop("'R' and 'theta' have incompatible lengths")
#: R/bootfuns.q:0
msgid "'R' and 'theta' have incompatible lengths"
msgstr "'R'과 'theta'의 길이가 서로 맞지 않습니다."

#. R/bootfuns.q: stop("'R' must be positive")
#: R/bootfuns.q:0
msgid "'R' must be positive"
msgstr "'R'은 반드시 양수이어야 합니다."

#. R/bootfuns.q: warning("'alpha' ignored; R[1L] = 0")
#: R/bootfuns.q:0
msgid "'alpha' ignored; R[1L] = 0"
msgstr "입력된 'alpha'의 값이 무시되었으며 R[1L] = 0이 적용됩니다."

#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")
#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")
#: R/bootfuns.q:0
msgid "'data' must be a matrix with at least 2 columns"
msgstr "'data'는 반드시 적어도 2개의 열을 가지는 행렬이어야 합니다."

#. R/bootfuns.q: stop("'index' must contain 2 elements")
#: R/bootfuns.q:0
msgid "'index' must contain 2 elements"
msgstr "'index'는 반드시 2개의 요소를 가지고 있어야 합니다."

#. R/bootfuns.q: warning("'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so ignored")
#: R/bootfuns.q:0
msgid ""
"'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so "
"ignored"
msgstr ""
"'simple=TRUE'은 오로지 'sim=\"ordinary\", stype=\"i\", n=0'의 경우에만 유효하"
"게 사용할 수 있으므로 무시됩니다."

#. R/bootfuns.q: stop("'strata' of wrong length")
#: R/bootfuns.q:0
msgid "'strata' of wrong length"
msgstr "'strata'의 길이가 올바르지 않습니다."

#. R/bootfuns.q: stop("'stype' must be \"w\" for type=\"inf\"")
#: R/bootfuns.q:0
msgid "'stype' must be \"w\" for type=\"inf\""
msgstr "type 인자가 \"inf\"을 가지는 경우 'stype'는 반드시 \"w\"이어야 합니다."

#. R/bootfuns.q: stop("'t' and 't0' must be supplied together")
#: R/bootfuns.q:0
msgid "'t' and 't0' must be supplied together"
msgstr "'t'와 't0'는 반드시 함께 입력되어야 합니다."

#. R/bootfuns.q: gettextf("'t' must of length %d", boot.out$R)
#: R/bootfuns.q:0
msgid "'t' must of length %d"
msgstr "'t'의 길이는 반드시 %d이어야 합니다."

#. R/bootfuns.q: stop("'theta' must be supplied if R[1L] = 0")
#: R/bootfuns.q:0
msgid "'theta' must be supplied if R[1L] = 0"
msgstr "만약 R[1L] = 0이라면 'theta'의 값이 반드시 주어져야 합니다."

#. R/bootfuns.q: stop("'theta' or 'lambda' required")
#: R/bootfuns.q:0
msgid "'theta' or 'lambda' required"
msgstr "'theta' 또는 'lambda'가 필요합니다."

#. R/bootfuns.q: stop("'u' must be a function")
#: R/bootfuns.q:0
msgid "'u' must be a function"
msgstr "'u'는 반드시 함수이어야 합니다."

#. R/bootfuns.q: stop("0 elements not allowed in 'q'")
#: R/bootfuns.q:0
msgid "0 elements not allowed in 'q'"
msgstr "'q'의 구성요소는 0 값일 수 없습니다."

#. R/bootfuns.q: gettext("0 will terminate the function", domain = "R-boot")
#: R/bootfuns.q:0
msgid "0 will terminate the function"
msgstr ""

#. R/bootfuns.q: gettext("5, 10, 16, 50, 84, 90, 95 percentiles of (T*-t)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "5, 10, 16, 50, 84, 90, 95 percentiles of (T*-t)"
msgstr ""

#. R/bootfuns.q: gettext("ANTITHETIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "ANTITHETIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettextf("All values of t are equal to %s", mean(t, na.rm = TRUE), domain = "R-boot")
#: R/bootfuns.q:0
msgid "All values of t are equal to %s"
msgstr ""

#. R/bootfuns.q: gettextf("All values of t* are equal to %s", mean(t, na.rm = TRUE))
#: R/bootfuns.q:0
msgid "All values of t* are equal to %s"
msgstr ""

#. R/bootfuns.q: gettextf("Average Block Length of %s", boot.out$l, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Average Block Length of %s"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED TILTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED TILTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("BALANCED WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BALANCED WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("      BCa          ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BCa"
msgstr ""

#. R/bootfuns.q: warning("BCa intervals not defined for time series bootstraps")
#: R/bootfuns.q:0
msgid "BCa intervals not defined for time series bootstraps"
msgstr ""
"시계열 붓스트랩(time series bootstraps)을 위하여 정의된 BCa 구간(intervals)"
"이 아닙니다."

#. R/bootfuns.q: gettext("BLOCK BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BLOCK BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS", domain = "R-boot")
#: R/bootfuns.q:0
msgid "BOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS"
msgstr ""

#. R/bootfuns.q: gettextf("Based on %d bootstrap replicates", R, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Based on %d bootstrap replicates"
msgstr ""

#. R/bootfuns.q: gettext("     Basic         ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Basic"
msgstr ""

#. R/bootfuns.q: gettext("Bootstrap Statistics:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Bootstrap Statistics:"
msgstr ""

#. R/bootfuns.q: gettext("CALL:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CALL:"
msgstr ""

#. R/bootfuns.q: gettext("CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("CONDITIONAL BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CONDITIONAL BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("Calculations and Intervals on Original Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations and Intervals on Original Scale"
msgstr ""

#. R/bootfuns.q: gettext("Calculations and Intervals on Transformed Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations and Intervals on Transformed Scale"
msgstr ""

#. R/bootfuns.q: gettext("Calculations on Original Scale but Intervals Transformed", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations on Original Scale but Intervals Transformed"
msgstr ""

#. R/bootfuns.q: gettext("Calculations on Transformed Scale; Intervals on Original Scale", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Calculations on Transformed Scale; Intervals on Original Scale"
msgstr ""

#. R/bootfuns.q: gettext("Call:", domain = "R-boot")
#. R/bootfuns.q: gettext("Call: ", domain = "R-boot")
#. R/bootfuns.q: gettext("Call:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Call:"
msgstr ""

#. R/bootfuns.q: gettext("Cannot calculate confidence intervals", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Cannot calculate confidence intervals"
msgstr ""

#. R/bootfuns.q: gettext("Case", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Case"
msgstr ""

#. R/bootfuns.q: gettext("Cook statistic", domain = "R-boot")
#. R/bootfuns.q: gettext("Cook statistic", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Cook statistic"
msgstr ""

#. R/bootfuns.q: gettext("DATA PERMUTATION", domain = "R-boot")
#: R/bootfuns.q:0
msgid "DATA PERMUTATION"
msgstr ""

#. R/bootfuns.q: gettext("Exponential tilting used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Exponential tilting used"
msgstr ""

#. R/bootfuns.q: gettextf("Fixed Block Length of %s", boot.out$l, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Fixed Block Length of %s"
msgstr ""

#. R/bootfuns.q: gettext("Frequency Smoothing used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Frequency Smoothing used"
msgstr ""

#. R/bootfuns.q: gettextf("Interactive Identification for screen %d", num, domain = "R-boot")
#: R/bootfuns.q:0
msgid "Interactive Identification for screen %d"
msgstr ""

#. R/bootfuns.q: gettext("Intervals:", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Intervals:"
msgstr ""

#. R/bootfuns.q: gettext("Iteration limit exceeded without finding solution", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Iteration limit exceeded without finding solution"
msgstr ""

#. R/bootfuns.q: gettext("Level", domain = "R-boot")
#. R/bootfuns.q: gettext("Level", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Level"
msgstr ""

#. R/bootfuns.q: gettext("Linear Programming Results", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Linear Programming Results"
msgstr ""

#. R/bootfuns.q: gettext("Linear predictor", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Linear predictor"
msgstr ""

#. R/bootfuns.q: gettext("Lugananni-Rice approximations used", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Lugananni-Rice approximations used"
msgstr ""

#. R/bootfuns.q: gettext("MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("MODEL BASED BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "MODEL BASED BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("Maximization Problem with Objective Function Coefficients", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Maximization Problem with Objective Function Coefficients"
msgstr ""

#. R/bootfuns.q: gettext("Minimization Problem with Objective Function Coefficients", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Minimization Problem with Objective Function Coefficients"
msgstr ""

#. R/bootfuns.q: gettext("No feasible solution could be found", domain = "R-boot")
#: R/bootfuns.q:0
msgid "No feasible solution could be found"
msgstr ""

#. R/bootfuns.q: gettext("     Normal        ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Normal"
msgstr ""

#. R/bootfuns.q: gettext("Normal margins used.", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Normal margins used."
msgstr ""

#. R/bootfuns.q: gettext("ORDINARY NONPARAMETRIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "ORDINARY NONPARAMETRIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("Observed margins used.", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Observed margins used."
msgstr ""

#. R/bootfuns.q: gettext("Optimal solution has the following values", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Optimal solution has the following values"
msgstr ""

#. R/bootfuns.q: gettext("Ordered deviance residuals")
#: R/bootfuns.q:0
msgid "Ordered deviance residuals"
msgstr ""

#. R/bootfuns.q: gettext("PARAMETRIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "PARAMETRIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("PHASE SCRAMBLED BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "PHASE SCRAMBLED BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("POST-BLACKENED BLOCK BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "POST-BLACKENED BLOCK BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("POST-BLACKENED STATIONARY BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "POST-BLACKENED STATIONARY BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("    Percentile     ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Percentile"
msgstr ""

#. R/bootfuns.q: gettext("Percentiles of (T*-t)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Percentiles of (T*-t)"
msgstr ""

#. R/bootfuns.q: gettext("Please Input a screen number (1,2,3 or 4)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Please Input a screen number (1,2,3 or 4)"
msgstr ""

#. R/bootfuns.q: gettextf("Quantiles of Chi-squared(%d)", df)
#: R/bootfuns.q:0
msgid "Quantiles of Chi-squared(%d)"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of Standard Normal")
#: R/bootfuns.q:0
msgid "Quantiles of Standard Normal"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of standard normal")
#: R/bootfuns.q:0
msgid "Quantiles of standard normal"
msgstr ""

#. R/bootfuns.q: gettext("Quantiles of the Distribution", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Quantiles of the Distribution"
msgstr ""

#. R/bootfuns.q: stop("R[1L] must be positive for frequency smoothing")
#: R/bootfuns.q:0
msgid "R[1L] must be positive for frequency smoothing"
msgstr ""
"빈도 스무딩(frequency smoothing)을 사용하기 위해서는 반드시 R[1L]의 값은 양수"
"이어야 합니다."

#. R/bootfuns.q: gettext("Residuals", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Residuals"
msgstr ""

#. R/bootfuns.q: gettext("STATIONARY BOOTSTRAP FOR TIME SERIES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STATIONARY BOOTSTRAP FOR TIME SERIES"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED ANTITHETIC BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED ANTITHETIC BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CASE RESAMPLING BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CONDITIONAL BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CONDITIONAL BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED CONDITIONAL BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED DATA PERMUTATION", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED DATA PERMUTATION"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED MODEL BASED BOOTSTRAP FOR COX REGRESSION MODEL"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIGHTED BALANCED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIGHTED BALANCED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("STRATIFIED WEIRD BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "STRATIFIED WEIRD BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("Saddlepoint Distribution Approximations", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Saddlepoint Distribution Approximations"
msgstr ""

#. R/bootfuns.q: gettextf("Smoothing spline used %d points in the range %s to %s.", nrow(sad.d$points),     rg[1L], rg[2L], domain = "R-boot")
#: R/bootfuns.q:0
msgid "Smoothing spline used %d points in the range %s to %s."
msgstr ""

#. R/bootfuns.q: gettext("Some BCa intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some BCa intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some basic intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some basic intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some percentile intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some percentile intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("Some studentized intervals may be unstable", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Some studentized intervals may be unstable"
msgstr ""

#. R/bootfuns.q: gettext("   Studentized     ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Studentized"
msgstr ""

#. R/bootfuns.q: gettext("TILTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "TILTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("TIME SERIES BOOTSTRAP USING SUPPLIED INDICES", domain = "R-boot")
#: R/bootfuns.q:0
msgid "TIME SERIES BOOTSTRAP USING SUPPLIED INDICES"
msgstr ""

#. R/bootfuns.q: gettext("The coefficient values at termination were", domain = "R-boot")
#: R/bootfuns.q:0
msgid "The coefficient values at termination were"
msgstr ""

#. R/bootfuns.q: gettextf("The objective function value was %s.", simp.out$value, domain = "R-boot")
#: R/bootfuns.q:0
msgid "The objective function value was %s."
msgstr ""

#. R/bootfuns.q: gettextf("The optimal value of the objective function is %s.", simp.out$value, domain = "R-boot")
#: R/bootfuns.q:0
msgid "The optimal value of the objective function is %s."
msgstr ""

#. R/bootfuns.q: gettextf("WARNING: All values of %s are NA", paste("t", j, "*", sep = ""), domain = "R-boot")
#: R/bootfuns.q:0
msgid "WARNING: All values of %s are NA"
msgstr ""

#. R/bootfuns.q: gettext("WEIGHTED BOOTSTRAP", domain = "R-boot")
#: R/bootfuns.q:0
msgid "WEIGHTED BOOTSTRAP"
msgstr ""

#. R/bootfuns.q: gettext("WEIRD BOOTSTRAP FOR CENSORED DATA", domain = "R-boot")
#: R/bootfuns.q:0
msgid "WEIRD BOOTSTRAP FOR CENSORED DATA"
msgstr ""

#. R/bootfuns.q: gettext("Warning: BCa Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: BCa Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Basic Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Basic Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Percentile Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Percentile Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: gettext("Warning: Studentized Intervals used Extreme Quantiles", domain = "R-boot")
#: R/bootfuns.q:0
msgid "Warning: Studentized Intervals used Extreme Quantiles"
msgstr ""

#. R/bootfuns.q: stop("arguments are not all the same type of \"boot\" object")
#: R/bootfuns.q:0
msgid "arguments are not all the same type of \"boot\" object"
msgstr "입력된 인자들 중 적어도 하나 이상이 \"boot\" 클래스의 객체가 아닙니다."

#. R/bootfuns.q: stop("array cannot be found for parametric bootstrap")
#: R/bootfuns.q:0
msgid "array cannot be found for parametric bootstrap"
msgstr "모수적 붓스트랩(parameteric bootstrap)을 위한 배열을 찾을 수 없습니다."

#. R/bootfuns.q: gettext(" bias  ", domain = "R-boot")
#. R/bootfuns.q: gettext(" bias  ", domain = "R-boot")
#: R/bootfuns.q:0
msgid "bias"
msgstr ""

#. R/bootfuns.q: stop("boot.array not implemented for this object")
#: R/bootfuns.q:0
msgid "boot.array not implemented for this object"
msgstr "boot.array 함수는 이 객체를 위하여 구현된 것이 아닙니다."

#. R/bootfuns.q: stop("bootstrap object needed for type=\"reg\"")
#: R/bootfuns.q:0
msgid "bootstrap object needed for type=\"reg\""
msgstr "type 인자가 \"reg\"를 가지는 경우 붓스트랩 객체가 필요합니다."

#. R/bootfuns.q: stop("bootstrap output matrix missing")
#: R/bootfuns.q:0
msgid "bootstrap output matrix missing"
msgstr "붓스트랩의 결과를 담고 있는 행렬을 찾을 수 없습니다."

#. R/bootfuns.q: stop("bootstrap output object or 't0' required")
#: R/bootfuns.q:0
msgid "bootstrap output object or 't0' required"
msgstr "붓스트랩으로부터 생성된 객체 또는 't0'가 필요합니다."

#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#. R/bootfuns.q: stop("bootstrap replicates must be supplied")
#: R/bootfuns.q:0
msgid "bootstrap replicates must be supplied"
msgstr "붓스트랩 반복수(bootstrap replicates)는 반드시 주어져야 합니다."

#. R/bootfuns.q: warning("bootstrap variances needed for studentized intervals")
#: R/bootfuns.q:0
msgid "bootstrap variances needed for studentized intervals"
msgstr ""
"스튜던트화된 구간(studentized intervals)에 필요한 붓스트랩 분산(boostrap "
"variances)입니다."

#. R/bootfuns.q: stop("control methods undefined when 'boot.out' has weights")
#: R/bootfuns.q:0
msgid "control methods undefined when 'boot.out' has weights"
msgstr ""
"'boot.out'가 가중치(weights)를 가지는 경우에 대한 제어방법(control methods)"
"가 정의되지 않았습니다."

#. R/bootfuns.q: stop("dimensions of 'R' and 'weights' do not match")
#: R/bootfuns.q:0
msgid "dimensions of 'R' and 'weights' do not match"
msgstr "'R'과 'weights'의 차원이 서로 일치하지 않습니다."

#. R/bootfuns.q: stop("either 'A' and 'u' or 'K.adj' and 'K2' must be supplied")
#: R/bootfuns.q:0
msgid "either 'A' and 'u' or 'K.adj' and 'K2' must be supplied"
msgstr ""
"'A'와 'u' 또는 'K.adj'와 'K2' 둘 중의 한 쌍은 반드시 제공되어야 합니다."

#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootfuns.q: stop("either 'boot.out' or 'w' must be specified.")
#: R/bootfuns.q:0
msgid "either 'boot.out' or 'w' must be specified."
msgstr "'boot.out' 또는 'w' 중 하나는 반드시 주어져야 합니다."

#. R/bootfuns.q: stop("estimated adjustment 'a' is NA")
#: R/bootfuns.q:0
msgid "estimated adjustment 'a' is NA"
msgstr "추정된 보정값(adjustment) 'a'이 유한하지 않습니다."

#. R/bootfuns.q: stop("estimated adjustment 'w' is infinite")
#: R/bootfuns.q:0
msgid "estimated adjustment 'w' is infinite"
msgstr "추정된 보정값(adjustment) 'w'가 유한하지 않습니다."

#. R/bootfuns.q: warning("extreme order statistics used as endpoints")
#: R/bootfuns.q:0
msgid "extreme order statistics used as endpoints"
msgstr ""
"종점(endpoints)으로 사용된 극단적 순서통계량(extreme order statistics)입니다."

#. R/bootfuns.q: warning("extreme values used for quantiles")
#: R/bootfuns.q:0
msgid "extreme values used for quantiles"
msgstr "분위수(quantiles)에 사용된 극단값(extreme values)들입니다."

#. R/bootfuns.q: stop("function 'u' missing")
#: R/bootfuns.q:0
msgid "function 'u' missing"
msgstr "함수 'u'가 입력되지 않았습니다."

#. R/bootfuns.q: stop("index array not defined for model-based resampling")
#: R/bootfuns.q:0
msgid "index array not defined for model-based resampling"
msgstr ""
"모델기반의 리샘플링(model-based resampling)을 위하여 정의된 인덱스 배열"
"(index array)가 아닙니다."

#. R/bootfuns.q: warning("index out of bounds; minimum index only used.")
#: R/bootfuns.q:0
msgid "index out of bounds; minimum index only used."
msgstr ""
"인덱스의 범위를 벗어났기 때문에 인덱스가 가지는 가장 작은 값(minimum index)"
"을 사용합니다."

#. R/bootfuns.q: stop("indices are incompatible with 'ncol(data)'")
#: R/bootfuns.q:0
msgid "indices are incompatible with 'ncol(data)'"
msgstr "인덱스의 길이가 'ncol(data)'와 일치하지 않습니다."

#. R/bootfuns.q: gettext("infinitesimal jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "infinitesimal jackknife value"
msgstr ""

#. R/bootfuns.q: stop("influence values cannot be found from a parametric bootstrap")
#: R/bootfuns.q:0
msgid "influence values cannot be found from a parametric bootstrap"
msgstr ""
"모수적 붓스트랩(parametric bootstrap)으로부터 영향치(influence values)들을 찾"
"을 수 없습니다."

#. R/bootfuns.q: warning("input 't' ignored; type=\"inf\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"inf\""
msgstr "입력 't'가 무시되었으며 type=\"inf\"가 적용됩니다."

#. R/bootfuns.q: warning("input 't' ignored; type=\"jack\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"jack\""
msgstr "입력 't'가 무시되었으며 type=\"jack\"가 적용됩니다."

#. R/bootfuns.q: warning("input 't' ignored; type=\"pos\"")
#: R/bootfuns.q:0
msgid "input 't' ignored; type=\"pos\""
msgstr "입력 't'가 무시되었으며 type=\"pos\"가 적용됩니다."

#. R/bootfuns.q: warning("input 't0' ignored: neither 't' nor 'L' supplied")
#: R/bootfuns.q:0
msgid "input 't0' ignored: neither 't' nor 'L' supplied"
msgstr "'t'와 'L' 두 가지 모두가 입력되지 않아 입력 't0'는 무시되었습니다."

#. R/bootfuns.q: stop("invalid value of 'l'")
#: R/bootfuns.q:0
msgid "invalid value of 'l'"
msgstr "'l'의 값이 올바르지 않습니다."

#. R/bootfuns.q: stop("invalid value of 'sim' supplied")
#: R/bootfuns.q:0
msgid "invalid value of 'sim' supplied"
msgstr "'sim'에 주어진 값이 올바르지 않습니다."

#. R/bootfuns.q: gettext("jackknife value")
#. R/bootfuns.q: gettext("jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("left button = Identify, center button = Exit", domain = "R-boot")
#: R/bootfuns.q:0
msgid "left button = Identify, center button = Exit"
msgstr ""

#. R/bootfuns.q: stop("length of 'm' incompatible with 'strata'")
#: R/bootfuns.q:0
msgid "length of 'm' incompatible with 'strata'"
msgstr "'m'의 길이가 'strata'의 개수와 일치하지 않습니다."

#. R/bootpracs.q: gettextf("likelihood exceeds %f at only one point", lim)
#: R/bootpracs.q:0
msgid "likelihood exceeds %f at only one point"
msgstr "우도(likelihood)가 오로지 한 점에서만 %f를 넘어섭니다."

#. R/bootpracs.q: gettextf("likelihood never exceeds %f", lim)
#: R/bootpracs.q:0
msgid "likelihood never exceeds %f"
msgstr "우도(likelhiood)가 %f를 절대로 넘지 않습니다."

#. R/bootfuns.q: gettext("mean")
#: R/bootfuns.q:0
msgid "mean"
msgstr ""

#. R/bootfuns.q: gettext(" mean(t*)", domain = "R-boot")
#: R/bootfuns.q:0
msgid "mean(t*)"
msgstr ""

#. R/bootfuns.q: stop("missing values not allowed in 'data'")
#: R/bootfuns.q:0
msgid "missing values not allowed in 'data'"
msgstr "'data'에는 결측치가 있어서는 안됩니다."

#. R/bootfuns.q: stop("multivariate time series not allowed")
#: R/bootfuns.q:0
msgid "multivariate time series not allowed"
msgstr "다변량 시계열(multivariate time series)는 허용되지 않습니다."

#. R/bootfuns.q: stop("negative value of 'm' supplied")
#: R/bootfuns.q:0
msgid "negative value of 'm' supplied"
msgstr "'m'에 음수가 입력되었습니다."

#. R/bootfuns.q: stop("neither 'data' nor bootstrap object specified")
#: R/bootfuns.q:0
msgid "neither 'data' nor bootstrap object specified"
msgstr "'data'와 붓스트랩 객체 모두 입력되지 않았습니다."

#. R/bootfuns.q: stop("neither 'statistic' nor bootstrap object specified")
#: R/bootfuns.q:0
msgid "neither 'statistic' nor bootstrap object specified"
msgstr "'statistic'과 붓스트랩 객체 모두 입력되지 않았습니다."

#. R/bootfuns.q: warning("no coefficients in Cox model -- model ignored")
#: R/bootfuns.q:0
msgid "no coefficients in Cox model -- model ignored"
msgstr "Cox 모델에 계수(coefficients)들이 없으므로 모델이 무시되었습니다"

#. R/bootfuns.q: stop("no data in call to 'boot'")
#: R/bootfuns.q:0
msgid "no data in call to 'boot'"
msgstr "'boot'에 호출중인 데이터가 없습니다."

#. R/bootfuns.q: gettextf("number of columns of 'A' (%d) not equal to length of 'u' (%d)", d, length(u))
#: R/bootfuns.q:0
msgid "number of columns of 'A' (%d) not equal to length of 'u' (%d)"
msgstr "'A'의 열의 개수 (%d)가 'u'의 길이 (%d)와 일치하지 않습니다."

#. R/bootfuns.q: stop("one of 't' or 't0' required")
#: R/bootfuns.q:0
msgid "one of 't' or 't0' required"
msgstr "'t' 또는 't0' 중 하나가 필요합니다."

#. R/bootfuns.q: gettextf("only columns %s and %s of 'data' used", index[1L], index[2L])
#: R/bootfuns.q:0
msgid "only columns %s and %s of 'data' used"
msgstr "'data'의 %s와 %s 번째 열만이 사용되었습니다."

#. R/bootfuns.q: warning("only first 2 elements of 'index' used")
#: R/bootfuns.q:0
msgid "only first 2 elements of 'index' used"
msgstr "오로지 'index'의 첫번째 2개 요소들만을 사용합니다."

#. R/bootfuns.q: warning("only first column of 't' used")
#: R/bootfuns.q:0
msgid "only first column of 't' used"
msgstr "오로지 't'의 첫번째 열만이 사용됩니다."

#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#: R/bootfuns.q:0
msgid "only first element of 'index' used"
msgstr "'index'의 첫번째 요소만이 사용되었습니다."

#. R/bootfuns.q: warning("only first element of 'index' used in 'abc.ci'")
#: R/bootfuns.q:0
msgid "only first element of 'index' used in 'abc.ci'"
msgstr "'index'의 첫번째 요소만이 'abc.ci'에 사용되었습니다."

#. R/bootfuns.q: gettext("original", domain = "R-boot")
#. R/bootfuns.q: gettext("original", domain = "R-boot")
#: R/bootfuns.q:0
msgid "original"
msgstr ""

#. R/bootfuns.q: gettext("regression jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "regression jackknife value"
msgstr ""

#. R/bootfuns.q: stop("sim = \"weird\" cannot be used with a \"coxph\" object")
#: R/bootfuns.q:0
msgid "sim = \"weird\" cannot be used with a \"coxph\" object"
msgstr ""
"sim 인자는 \"coxph\"라는 객체를 입력받는 경우에 \"weird\"이라는 값을 가질 수 "
"없습니다."

#. R/bootfuns.q: gettext("standardized infinitesimal jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized infinitesimal jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("standardized jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("standardized regression jackknife value", domain = "R-boot")
#: R/bootfuns.q:0
msgid "standardized regression jackknife value"
msgstr ""

#. R/bootfuns.q: gettext("std. error")
#. R/bootfuns.q: gettext(" std. error", domain = "R-boot")
#. R/bootfuns.q: gettext(" std. error", domain = "R-boot")
#: R/bootfuns.q:0
msgid "std. error"
msgstr ""

#. R/bootfuns.q: stop("this type not implemented for Binary")
#: R/bootfuns.q:0
msgid "this type not implemented for Binary"
msgstr ""
"본 유형(type)은 이진데이터(Binary)의 경우에는 아직 구현되지 않았습니다."

#. R/bootfuns.q: stop("this type not implemented for Poisson")
#: R/bootfuns.q:0
msgid "this type not implemented for Poisson"
msgstr "본 유형(type)은 포아송(Poisson)의 경우에는 아직 구현되지 않았습니다."

#. R/bootfuns.q: warning("unable to achieve requested overall error rate")
#: R/bootfuns.q:0
msgid "unable to achieve requested overall error rate"
msgstr "요청한 전체적인 오류률(overall error rate)을 계산할 수 없습니다."

#. R/bootfuns.q: stop("unable to calculate 'var.t0'")
#: R/bootfuns.q:0
msgid "unable to calculate 'var.t0'"
msgstr "'var.t0'를 계산할 수 없습니다."

#. R/bootfuns.q: gettextf("unable to find multiplier for %f", theta[i])
#: R/bootfuns.q:0
msgid "unable to find multiplier for %f"
msgstr "%f에 대한 계수(multiplier)를 찾을 수 없습니다."

#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#: R/bootfuns.q:0
msgid "unable to find range"
msgstr "범위(range)를 구할 수 없습니다."

#. R/bootfuns.q: stop("unknown value of 'sim'")
#: R/bootfuns.q:0
msgid "unknown value of 'sim'"
msgstr "'sim'의 값을 알 수 없습니다."

#. R/bootfuns.q: stop("unrecognized value of 'sim'")
#: R/bootfuns.q:0
msgid "unrecognized value of 'sim'"
msgstr "'sim'의 값을 알 수 없습니다."

#. R/bootfuns.q: stop("use 'boot.ci' for scalar parameters")
#: R/bootfuns.q:0
msgid "use 'boot.ci' for scalar parameters"
msgstr "스칼라 파라미터(scalar parameters)인 경우 'boot.ci'를 사용하세요"

#. R/bootfuns.q: warning("variance required for studentized intervals")
#: R/bootfuns.q:0
msgid "variance required for studentized intervals"
msgstr "스튜던트화된 구간(studentized intervals)에 요구되는 분산입니다."

#. R/bootfuns.q: ngettext(R[2L], "First %d replicate tilted to %s", "First %d replicates tilted to %s")
#: R/bootfuns.q:0
msgid "First %d replicate tilted to %s"
msgid_plural "First %d replicates tilted to %s"
msgstr[0] ""

#. R/bootfuns.q: ngettext(R[1L], "First %d replicate untilted", "First %d replicates untilted")
#: R/bootfuns.q:0
msgid "First %d replicate untilted"
msgid_plural "First %d replicates untilted"
msgstr[0] ""

#. R/bootfuns.q: ngettext(R[j + 1L], "Next %d replicate tilted to %s", "Next %d replicates tilted to %s")
#: R/bootfuns.q:0
msgid "Next %d replicate tilted to %s"
msgid_plural "Next %d replicates tilted to %s"
msgstr[0] ""
