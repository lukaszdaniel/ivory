# Traditional Chinese translations for R package.
# Copyright (C) 2005 The R Foundation
# This file is distributed under the same license as the R package.
# 陈斐 <feic@normipaiva.com>, 2005, 06.
# Wei-Lun Chao <bluebat@member.fsf.org>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: R 3.5.1\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2021-03-18 20:00\n"
"PO-Revision-Date: 2018-09-16 23:38+0800\n"
"Last-Translator: Wei-Lun Chao <bluebat@member.fsf.org>\n"
"Language-Team: Chinese (traditional) <zh-l10n@linux.org.tw>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. R/RMethodUtils.R: warning("\"MethodsList\" is defunct; allMethods now are empty")
#: R/RMethodUtils.R:0
msgid "\"MethodsList\" is defunct; allMethods now are empty"
msgstr "\"MethodsList\" 已失去功能；目前 allMethods 為空"

#. R/MethodsList.R: gettext("## Signature:", domain = "R-methods")
#: R/MethodsList.R:0
msgid "## Signature:"
msgstr ""

#. R/MethodsListClass.R: gettext("%d: target %s: chose %s (others: %s)", domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "%d: target %s: chose %s (others: %s)"
msgstr "%d: 目標\"%s\": 選擇\"%s\" (其他：%s)"

#. R/MethodsList.R: gettextf("%f is not a valid generic function: methods list was an object of class %s",     sQuote(f), dQuote(class(mlist)))
#: R/MethodsList.R:0
msgid ""
"%f is not a valid generic function: methods list was an object of class %s"
msgstr "%f 不是正確的泛型函式: 方法串列是類別為 %s 的物件"

#. R/RMethodUtils.R: gettextf("%s arguments (%s) after %s in the generic must appear in the method, in the same place at the end of the argument list",     .renderSignature(generic@generic, signature), paste(sQuote(trailingArgs), collapse = ", "),     sQuote("..."))
#: R/RMethodUtils.R:0
msgid ""
"%s arguments (%s) after %s in the generic must appear in the method, in the "
"same place at the end of the argument list"
msgstr ""

#. R/Methods.R: gettextf("%s dispatches internally;  methods can be defined, but the generic function is implicit, and cannot be changed.",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s dispatches internally;  methods can be defined, but the generic function "
"is implicit, and cannot be changed."
msgstr ""
"%s 為內部派送 ; 能夠為其設定方法，但泛型函式是隱含定義的，無法對之進行改動。"

#. R/Methods.R: gettextf("%s has no methods defined", sQuote(f))
#: R/Methods.R:0
msgid "%s has no methods defined"
msgstr "%s 沒有設定任何方法"

#. R/Methods.R: gettextf("%s is a primitive function; its generic form cannot be redefined", sQuote(name))
#: R/Methods.R:0
msgid "%s is a primitive function; its generic form cannot be redefined"
msgstr "%s 是基元函式；其泛型形式是不能被重新定義的"

#. R/SClasses.R: gettextf("%s is not a defined class", dQuote(Class))
#: R/SClasses.R:0
msgid "%s is not a defined class"
msgstr "%s 不是有定義的類別"

#. R/refClass.R: gettextf("%s is not a defined class in this environment", dQuote(Class))
#: R/refClass.R:0
msgid "%s is not a defined class in this environment"
msgstr "%s 在這個環境裡沒有類別定義"

#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(field), dQuote(thisClass@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(def@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(className))
#: R/refClass.R:0
msgid "%s is not a field in class %s"
msgstr "%s 不是在 %s 類別裡的場"

#. R/refClass.R: gettextf("%s is not a field in this class", sQuote(name))
#: R/refClass.R:0
msgid "%s is not a field in this class"
msgstr "%s 不是這個類別裡的場"

#. R/RMethodUtils.R: gettextf("%s is not a generic function (or not visible here)", sQuote(f))
#: R/RMethodUtils.R:0
msgid "%s is not a generic function (or not visible here)"
msgstr "%s 不是泛型函式(或從這兒看不到)"

#. R/trace.R: gettextf("%s is not a method for reference class %s", sQuote(as.character(if (is.symbol(thisName)) thisName else what)),     dQuote(class(where)))
#: R/trace.R:0
msgid "%s is not a method for reference class %s"
msgstr "%s 不是適用於參照類別 %s 的方法"

#. R/refClass.R: gettextf("%s is not a reference class", dQuote(Class))
#. R/refClass.R: gettextf("%s is not a reference class", dQuote(def@className))
#: R/refClass.R:0
msgid "%s is not a reference class"
msgstr "%s 不是參照類別"

#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#: R/SClasses.R:0
msgid "%s is not a slot in class %s"
msgstr "%s 不是在 %s 類別裡的槽"

#. R/refClass.R: gettextf("%s is not a valid field or method name for reference class %s", sQuote(field),     dQuote(thisClass@className))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for reference class %s"
msgstr "\"%s\"場要麼無效，要麼參照類別 %s 的方法名稱無效"

#. R/refClass.R: gettextf("%s is not a valid field or method name for this class", sQuote(what))
#: R/refClass.R:0
msgid "%s is not a valid field or method name for this class"
msgstr "%s 不是個有效的場，也不是這個類別的方法名稱"

#. R/Methods.R: gettextf("%s is not an S4 generic function in %s; methods not removed", sQuote(f),     sQuote(getPackageName(where)))
#: R/Methods.R:0
msgid "%s is not an S4 generic function in %s; methods not removed"
msgstr "%s 不是在 %s 裡的 S4 泛型函式；因此方法沒有被刪除掉"

#. R/Methods.R: gettextf("%s is not currently a generic:  define it first to create a non-default implicit form",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s is not currently a generic:  define it first to create a non-default "
"implicit form"
msgstr "%s 目前不是泛型函式：請先將之定義以建立一個非較默隱含形式 "

#. R/RClassUtils.R: gettextf("%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)",     dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"%s is not eligible to be the data part of another class (must be a basic "
"class or a virtual class with no slots)"
msgstr ""
"%s 不可以成為另外一個類別的資料部分(必須是沒有槽的基本類別或虛擬類別才可以)"

#. R/addedFunctions.R: gettextf("%s is not one of the element names", sQuote(name))
#: R/addedFunctions.R:0
msgid "%s is not one of the element names"
msgstr "%s 不是單元名稱中的一個"

#. R/MethodsList.R: gettextf("%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s",     sQuote("useInherited"), dQuote(class(useInherited)))
#: R/MethodsList.R:0
msgid ""
"%s must be TRUE, FALSE, or a named logical vector of those values; got an "
"object of class %s"
msgstr ""
"%s 的值必須為 TRUE，FALSE，或是個帶名稱的邏輯向量 ; 現在得到的卻是類別為 %s "
"的物件"

#. R/trace.R: gettextf("%s() is not a generic function in the target environment -- methods will not be inserted",     f)
#: R/trace.R:0
msgid ""
"%s() is not a generic function in the target environment -- methods will not "
"be inserted"
msgstr "%s()不是在目標環境裡的泛型函式 -- 因此方法沒有被插入"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is defunct.",     dQuote(this), domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is defunct."
msgstr "%s 和其他 \"MethodsList\" 後設資料目標物件都已經不推薦使用了。"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is deprecated.",     dQuote(this), domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is "
"deprecated."
msgstr "%s 和其他\"MethodsList\"後設資料目標物件都已經不推薦使用了"

#. R/Methods.R: gettextf("'%s' is not a known generic function {and 'package' not specified}", f)
#: R/Methods.R:0
msgid "'%s' is not a known generic function {and 'package' not specified}"
msgstr "沒有 '%s' 這樣一個泛型函式，{也沒有設定 'package'}"

#. R/Methods.R: gettextf("'%s' or '%s' argument must be supplied", "generic.function", "class")
#: R/Methods.R:0
#, fuzzy
msgid "'%s' or '%s' argument must be supplied"
msgstr "沒有提供 %s 名稱"

#. R/RClassUtils.R: stop("'Class' argument must be a valid class definition or class")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'Class' argument must be a valid class definition or class"
msgstr "'Class' 必須是有效的類別名稱或類別定義"

#. R/oldClass.R: gettextf("'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s",     dQuote(class(object)))
#: R/oldClass.R:0
msgid ""
"'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true "
"of class %s"
msgstr ""
"'S3Class' 只能指派給擴充\"oldClass\"類別的 S4 目標物件；不適用於類別 %s"

#. R/oldClass.R: gettextf("'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s",     dQuote("oldClass"), dQuote(class(object)))
#: R/oldClass.R:0
msgid ""
"'S3Class' only defined for extensions of %s or classes with a data part:  "
"not true of class %s"
msgstr "'S3Class' 只能定義於為 %s 擴充或帶資料部分的類別，不適用於類別 %s"

#. R/ClassExtensions.R: gettextf("'S3Part()' method is only defined for classes set up by 'setOldCLass()' method, basic classes or subclasses of these: not true of class %s",     dQuote(class(object)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"'S3Part()' method is only defined for classes set up by 'setOldCLass()' "
"method, basic classes or subclasses of these: not true of class %s"
msgstr ""
"S3Part()只適用於由 setOldCLass()，基本類別，或基本類別或這些類別的子類別 %s "
"類別不是這種情況"

#. R/as.R: gettext("'as' method should have one argument, or match the arguments of 'coerce()' function: got (%s)",     domain = "R-methods")
#: R/as.R:0
#, fuzzy
msgid ""
"'as' method should have one argument, or match the arguments of 'coerce()' "
"function: got (%s)"
msgstr "'as' 方法必須有一個引數，或同 coerce()相對應，得到的卻是(%s)"

#. R/Methods.R: stop("'callGeneric()' function must be called from within a method body")
#: R/Methods.R:0
#, fuzzy
msgid "'callGeneric()' function must be called from within a method body"
msgstr "callGeneric() 只能從方法之中呼叫"

#. R/RClassUtils.R: stop("'class' is a reserved slot name and cannot be redefined")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'class' is a reserved slot name and cannot be redefined"
msgstr "\"class\"是為保留槽名稱，不可以重新被定義"

#. R/is.R: stop("'class1' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class1' must be the name of a class or a class definition"
msgstr "'class1' 必須是類別名稱或類別定義"

#. R/is.R: stop("'class2' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class2' must be the name of a class or a class definition"
msgstr "'class2' 必須是類別名稱或類別定義"

#. R/RClassUtils.R: stop("'externalptr' objects cannot be initialized from function 'new()'")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'externalptr' objects cannot be initialized from function 'new()'"
msgstr "'externalptr' 物件無法從 new() 裡來進行初始化"

#. R/Methods.R: stop("'file' must be a character string or a connection")
#. R/Methods.R: stop("'file' must be a character string or a connection")
#: R/Methods.R:0
msgid "'file' must be a character string or a connection"
msgstr "'file' 必須是字串或聯結"

#. R/MethodsListClass.R: gettext("'initialize' method returned an object of class %s instead of the required class %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid ""
"'initialize' method returned an object of class %s instead of the required "
"class %s"
msgstr "'initialize' 方法回復了類別為 %s 的物件而不是所要求的 %s 此一類別"

#. R/MethodsListClass.R: gettextf("(All objects are from package %s)", unique(sQuote(pkg)), domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "(All objects are from package %s)"
msgstr ""

#. R/show.R: gettext("(This generic function excludes non-simple inheritance; see '?setIs')")
#: R/show.R:0
msgid "(This generic function excludes non-simple inheritance; see '?setIs')"
msgstr ""

#. R/RClassUtils.R: gettextf("(class %s)", .dQ(slotDefs[match(pnames[check], slotNames)]))
#. R/RClassUtils.R: gettextf("(class %s)", .dQ(unlist(properties, recursive = FALSE)[undefClasses]))
#: R/RClassUtils.R:0
msgid "(class %s)"
msgstr "(類別 %s)"

#. R/methodsTable.R: gettextf("(definition from function %s)", sQuote(m@generic), domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "(definition from function %s)"
msgstr "函式 %s 沒有定義"

#. R/methodsTable.R: gettextf("(inherited from: %s)", sigString(d), domain = "R-methods")
#: R/methodsTable.R:0
msgid "(inherited from: %s)"
msgstr ""

#. R/trace.R: gettext("(to see original from package, look at object@original)", domain = "R-methods")
#: R/trace.R:0
msgid "(to see original from package, look at object@original)"
msgstr ""

#. R/trace.R: gettext("(to see the tracing code, look at body(object))", domain = "R-methods")
#: R/trace.R:0
msgid "(to see the tracing code, look at body(object))"
msgstr ""

#. R/Methods.R: gettextf("* mlist environment with %d potential methods", length(mlist), domain = "R-methods")
#: R/Methods.R:0
msgid "* mlist environment with %d potential methods"
msgstr ""

#. R/methodsTable.R: gettext("** final methods' distances: (%s)", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** final methods' distances: (%s)"
msgstr ""

#. R/methodsTable.R: gettext("** individual arguments' distances:", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** individual arguments' distances:"
msgstr ""

#. R/RMethodUtils.R: gettextf("--- caching class %s", dQuote(cl))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "--- caching class %s"
msgstr "(類別 %s)"

#. R/RMethodUtils.R: gettextf("--- done caching class %s", dQuote(cl))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "--- done caching class %s"
msgstr "(類別 %s)"

#. R/RMethodUtils.R: gettextf("--- done getting generic %s", sQuote(f))
#: R/RMethodUtils.R:0
msgid "--- done getting generic %s"
msgstr ""

#. R/RMethodUtils.R: gettextf("--- getting generic %s (and methods)", sQuote(f))
#: R/RMethodUtils.R:0
msgid "--- getting generic %s (and methods)"
msgstr ""

#. R/methodsTable.R: gettextf(" .. method %d: length(sig) = %d < nArg = %d\n", i, length(sig), nArg, domain = "R-methods")
#: R/methodsTable.R:0
msgid ".. method %d: length(sig) = %d < nArg = %d"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: about to assign or setMethod", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: about to assign or setMethod"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: after computing what, whereF", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: after computing what, whereF"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: untrace case", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: untrace case"
msgstr ""

#. R/MethodsList.R: gettext("<Empty Methods List>", domain = "R-methods")
#: R/MethodsList.R:0
msgid "<Empty Methods List>"
msgstr ""

#. R/methodsTable.R: gettext("<No methods>\n\n", domain = "R-methods")
#: R/methodsTable.R:0
msgid "<No methods>"
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the connection %s."
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the file %s.\n", sQuote(filename),     domain = "R-methods")
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the file %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the connection %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the file %s.\n", sQuote(filename))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the file %s."
msgstr ""

#. R/SClasses.R: gettext("All %s names must be distinct in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be distinct in:\n"
"(%s)"
msgstr ""
"所有 %s 的名稱都必須是不同的：\n"
"(%s)"

#. R/SClasses.R: gettext("All %s names must be nonempty in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be nonempty in:\n"
"(%s)"
msgstr ""
"所有 %s 的名稱都不能是空的：\n"
"(%s)"

#. R/RClassUtils.R: gettextf("Also defined by %s", paste(sQuote(pkgs[-1]), collapse = " "))
#: R/RClassUtils.R:0
#, fuzzy
msgid "Also defined by %s"
msgstr "同時被定義自"

#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(cl), domain = "R-methods")
#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", classLabel(cl), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", dQuote(class(object)))
#. R/trace.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0 R/trace.R:0
msgid "An object of class %s"
msgstr "為類別為 %s 的物件"

#. R/trace.R: gettextf("An object of class %s, from source:", dQuote(class(object)), domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "An object of class %s, from source:"
msgstr "為類別為 %s 的物件"

#. R/MethodsListClass.R: gettextf("An object of class %s:", dQuote(class(object)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "An object of class %s:"
msgstr "為類別為 %s 的物件"

#. R/trace.R: gettextf("An object with tracing code, class %s\nOriginal definition:\n", dQuote(class(object)),     domain = "R-methods")
#: R/trace.R:0
msgid ""
"An object with tracing code, class %s\n"
"Original definition:"
msgstr ""

#. R/SClasses.R: stop("Argument 'representation' cannot be used if argument 'slots' is supplied")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"Argument 'representation' cannot be used if argument 'slots' is supplied"
msgstr "如果已經提供了\"slots\"引數的話，\"representation\"引數就不能用了"

#. R/RClassUtils.R: gettextf("Calling function 'new()' on an undefined and non-basic class (\"%s\")",     Class)
#: R/RClassUtils.R:0
msgid "Calling function 'new()' on an undefined and non-basic class (\"%s\")"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s"
msgstr "(類別 %s)"

#. R/show.R: gettextf("Class %s (from package %s)", dQuote(className), sQuote(packageName))
#: R/show.R:0
msgid "Class %s (from package %s)"
msgstr ""

#. R/show.R: gettextf("Class %s (from the global environment)", dQuote(className))
#: R/show.R:0
msgid "Class %s (from the global environment)"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s [in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s [package in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s consists of following classes: ", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s consists of following classes:"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s", dQuote(class(object)),     dQuote(nam), sQuote(object@package), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Class %s for generic %s defined from package %s"
msgstr "套件\"%2$s\"裡用於\"%1$s\"此一類別的類別產生函式"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s"
msgstr "在 %3$s 程式套件中程式套件 %2$s 裡的泛型 %1$s 沒有方法列表"

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n  defined with value class: %s\n",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s\n"
"  defined with value class: %s"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s\n  defined with value class: %s\n",     dQuote(class(object)), dQuote(nam), sQuote(object@package), dQuote(object@valueClass),     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  defined with value class: %s"
msgstr "在 %3$s 程式套件中程式套件 %2$s 裡的泛型 %1$s 沒有方法列表"

#. R/SClasses.R: gettextf("Class %s has a sealed class definition and cannot be redefined", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "Class %s has a sealed class definition and cannot be redefined"
msgstr "%s 的類別定義被封閉了，因此無法重新被定義"

#. R/refClass.R: gettextf("Class %s is not a subclass of %s; functional semantics not defined for this class",     dQuote(class(object)), dQuote("envRefClass"))
#: R/refClass.R:0
msgid ""
"Class %s is not a subclass of %s; functional semantics not defined for this "
"class"
msgstr "%s 類別不是 %s 的子類別；這沒有功能語義定義"

#. R/refClass.R: gettextf("Class %s is not one of the reference super classes for this object", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "Class %s is not one of the reference super classes for this object"
msgstr "%s 不是該物件的參照超類別之一"

#. R/RClassUtils.R: gettextf("Class %s, by class %s", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, by class %s"
msgstr "類別 %s 無法擴充類別 %s"

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit coerce", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test and coerce", dQuote(what[i]),     tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test and coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test and coerce", dQuote(what[i]),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test and coerce"
msgstr ""

#. R/refClass.R: gettext("Class Methods: ", domain = "R-methods")
#: R/refClass.R:0
msgid "Class Methods:"
msgstr ""

#. R/refClass.R: gettext("Class fields:", domain = "R-methods")
#: R/refClass.R:0
msgid "Class fields:"
msgstr ""

#. R/refClass.R: gettextf("Class method definition (class %s) for method %s", dQuote(cl), sQuote(paste(object@name,     "()", collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition (class %s) for method %s"
msgstr "套件\"%2$s\"裡用於\"%1$s\"此一類別的類別產生函式"

#. R/refClass.R: gettextf("Class method definition for method %s", sQuote(paste(object@name, "()",     collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition for method %s"
msgstr "這裡需要方法定義"

#. R/ClassUnion.R: gettext("Class must be an empty virtual class with NULL prototype")
#: R/ClassUnion.R:0
msgid "Class must be an empty virtual class with NULL prototype"
msgstr ""

#. R/RClassUtils.R: gettext("Class:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class:"
msgstr ""

#. R/trace.R: sprintf("Constructing traceable class %s", dQuote(traceClassName))
#: R/trace.R:0
msgid "Constructing traceable class %s"
msgstr ""

#. R/Methods.R: gettextf("Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)",     sQuote(f), sQuote(getPackageName(where)), sQuote(getPackageName(gwhere)))
#: R/Methods.R:0
msgid ""
"Copying the generic function %s to environment %s, because the previous "
"version was in a sealed namespace (%s)"
msgstr ""
"因為前版本是封閉的命名空間(%3$s) ，所以將泛型函式 %1$s 拷貝到 %2$s 環境裡"

#. R/refClass.R: stop("Could not find local object in supplied environment")
#: R/refClass.R:0
msgid "Could not find local object in supplied environment"
msgstr "無法在所提供的環境找到本地物件"

#. R/packageName.R: gettextf("Created a package name, %s, when none found", sQuote(pkg))
#: R/packageName.R:0
msgid "Created a package name, %s, when none found"
msgstr "建立了程輯封包名稱: %s，因為找不到其他名稱"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in package %s (from the saved implicit definition)",     sQuote(name), sQuote(package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in package %s (from the saved "
"implicit definition)"
msgstr " %3$s 裡的從 %2$s 為 %1$s 建立新的泛型函式(從儲存的隱含定義)"

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in the global environment (from the saved implicit definition)",     sQuote(name), sQuote(package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in the global environment (from "
"the saved implicit definition)"
msgstr " %3$s 裡的從 %2$s 為 %1$s 建立新的泛型函式(從儲存的隱含定義)"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in package %s", sQuote(f),     sQuote(fdef@package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function for %s from package %s in package %s"
msgstr "從 %3$s 裡的套件 %2$s 為 %1$s 建立新的泛型函式"

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in the global environment",     sQuote(f), sQuote(fdef@package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from package %s in the global environment"
msgstr "從 %3$s 裡的套件 %2$s 為 %1$s 建立新的泛型函式"

#. R/Methods.R: gettextf("Creating a generic function from function %s in package %s", sQuote(f),     sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in package %s"
msgstr "用 %s 裡的函式 %s 來建立新的泛型函式"

#. R/Methods.R: gettextf("Creating a generic function from function %s in the global environment",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in the global environment"
msgstr "用 %s 裡的函式 %s 來建立新的泛型函式"

#. R/Methods.R: gettextf("Creating a new generic function for %s in package %s", sQuote(name), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in package %s"
msgstr "為 %2$s 裡的 %1$s 建立新的泛型函式"

#. R/Methods.R: gettextf("Creating a new generic function for %s in the global environment", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in the global environment"
msgstr "為 %2$s 裡的 %1$s 建立新的泛型函式"

#. R/RClassUtils.R: stop("Data part ('.Data' slot) is undefined for general S4 object")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Data part ('.Data' slot) is undefined for general S4 object"
msgstr "沒有定義一般 S4 物件的資料部分"

#. R/RClassUtils.R: gettextf("Definition of slot %s, in class %s, as %s conflicts with definition, inherited from class %s, as %s",     sQuote(dup), dQuote(name), dQuote(elNamed(allProps, dup)), dQuote(cl), dQuote(elNamed(theseProperties,         dup)))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Definition of slot %s, in class %s, as %s conflicts with definition, "
"inherited from class %s, as %s"
msgstr ""
"類別 %s 裡的槽 %s 目前被定義為(或繼承於)\"%s\"，這與類別 %s 裡所繼承的定義相"
"互有矛盾"

#. R/RMethodUtils.R: message("Empty function name in .getGeneric", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "Empty function name in .getGeneric"
msgstr ".getGeneric 裡不能有空的函式名稱"

#. R/trace.R: gettextf("Environment of class %s is locked; using global environment for new class",     dQuote(className))
#: R/trace.R:0
msgid ""
"Environment of class %s is locked; using global environment for new class"
msgstr "類別為 %s 的環境被鎖住了；為新的類別用全域環境"

#. R/show.R: gettext("Excluded from nextMethod:", domain = "R-methods")
#: R/show.R:0
msgid "Excluded from nextMethod:"
msgstr ""

#. R/show.R: gettextf("Extended class definition (%s)", classLabel(class(object)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Extended class definition (%s)"
msgstr "在 %s 的定義中不存在這種槽類別: %s"

#. R/refClass.R: gettextf("Field %s:", dQuote(fi), domain = "R-methods")
#: R/refClass.R:0
msgid "Field %s:"
msgstr ""

#. R/Methods.R: gettextf("For function %s, signature %s: argument in method definition changed from (%s) to (%s)",     sQuote(f), sQuote(signature), mnames, fnames)
#: R/Methods.R:0
msgid ""
"For function %s, signature %s: argument in method definition changed from "
"(%s) to (%s)"
msgstr "%s 函式，%s 標記：方法定義中的引數由(%s)改成(%s)"

#. R/trace.R: gettextf("For package %s", sQuote(object@packageName), domain = "R-methods")
#: R/trace.R:0
msgid "For package %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Found more than one class %s in cache; using the first, from namespace '%s'",     dQuote(value[[1]]@className), pkgs[1])
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Found more than one class %s in cache; using the first, from namespace '%s'"
msgstr "在快取中找到一個以上的類別 \"%s\"；使用來自命名空間 '%s' 的第一個"

#. R/trace.R: gettextf("From source file %s", sQuote(object@sourceFile), domain = "R-methods")
#: R/trace.R:0
msgid "From source file %s"
msgstr ""

#. R/Methods.R: gettextf("Function %s is a group generic; do not call it directly", sQuote(name))
#: R/Methods.R:0
msgid "Function %s is a group generic; do not call it directly"
msgstr "函式 %s 是群體泛型函式；不能直接調用"

#. R/Methods.R: gettextf("Function %s is already a group generic; no change", sQuote(name))
#: R/Methods.R:0
msgid "Function %s is already a group generic; no change"
msgstr "函式 %s 已經是群體泛型函式了；沒有變動"

#. R/Methods.R: gettextf("Function %s:\n<not an S4 generic function>", sQuote(f), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Function %s:\n"
"<not an S4 generic function>"
msgstr "函式必須是 S4 泛型"

#. R/debug.R: stop("Function must be an S4 generic")
#: R/debug.R:0
msgid "Function must be an S4 generic"
msgstr "函式必須是 S4 泛型"

#. R/methodsTable.R: gettextf("Function: %s (package %s)", func, pkg, domain = "R-methods")
#: R/methodsTable.R:0
msgid "Function: %s (package %s)"
msgstr ""

#. R/refClass.R: gettext("Generator for class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Generator for class"
msgstr "類別 %s 的定義不存在"

#. R/methodsTable.R: gettext(" Group generics: ", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Group generics:"
msgstr ""

#. R/MethodsList.R: gettextf("In command %s: use of \"MethodsList\" metadata objects is defunct.", deparse(this),     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "In command %s: use of \"MethodsList\" metadata objects is defunct."
msgstr "%s 裡：\"MethodsList\" 後設資料目標物件已經不推薦使用了。"

#. R/MethodsList.R: gettextf("In command %s: use of \"MethodsList\" metadata objects is deprecated.",     sQuote(deparse(this)), domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "In command %s: use of \"MethodsList\" metadata objects is deprecated."
msgstr "%s 裡：\"MethodsList\"後設資料目標物件已經不推薦使用了。"

#. R/RMethodUtils.R: gettextf("In method for %s with signature %s: ", sQuote(f), msig, domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "In method for %s with signature %s:"
msgstr "帶 %s 標記的 %s 的方法："

#. R/SClasses.R: gettextf("In slot '%s' of class \"%s\": %s", slotNames[[i]], class(sloti), errori)
#: R/SClasses.R:0
#, fuzzy
msgid "In slot '%s' of class \"%s\": %s"
msgstr "類別 %s 的槽的名稱不對：%s"

#. R/refClass.R: gettext(" Insert trace debugging for the specified method.  The arguments are the same as for the trace() function in package \"base\".  The first argument should be the name of the method to be traced, quoted or not.\n\n The additional argument classMethod= can be supplied as TRUE (by name only) in order to trace a method in a generator object (e.g., \"new\") rather than in the objects generated from that class.")
#: R/refClass.R:0
msgid ""
"Insert trace debugging for the specified method.  The arguments are the same "
"as for the trace() function in package \"base\".  The first argument should "
"be the name of the method to be traced, quoted or not.\n"
"\n"
" The additional argument classMethod= can be supplied as TRUE (by name only) "
"in order to trace a method in a generator object (e.g., \"new\") rather than "
"in the objects generated from that class."
msgstr ""

#. R/methodsTable.R: stop("Internal error in finding inherited methods; didn't return a unique method",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Internal error in finding inherited methods; didn't return a unique method"
msgstr ""

#. R/RClassUtils.R: gettext("Known Subclasses: ", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Known Subclasses:"
msgstr ""

#. R/refClass.R: gettext("Locked Fields", domain = "R-methods")
#: R/refClass.R:0
msgid "Locked Fields"
msgstr ""

#. R/show.R: gettextf("Method Definition (Class %s):", dQuote(classLabel(cl)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition (Class %s):"
msgstr "類別 %s 的定義不存在"

#. R/show.R: gettext("Method Definition:", domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition:"
msgstr "找不到 %s 這個方法"

#. R/trace.R: gettext("Methods inserted for function %s(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Methods inserted for function %s(): %s"
msgstr "為函式 %s()插入了方法: %s"

#. R/RMethodUtils.R: gettextf("Methods list objects are not maintained in this version of R:  request for function %s may return incorrect information",     sQuote(fdef@generic))
#: R/RMethodUtils.R:0
msgid ""
"Methods list objects are not maintained in this version of R:  request for "
"function %s may return incorrect information"
msgstr ""

#. R/show.R: gettext("Methods may be defined for arguments: %s\nUse 'showMethods(\"%s\")' for currently available ones.",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Methods may be defined for arguments: %s\n"
"Use 'showMethods(\"%s\")' for currently available ones."
msgstr ""

#. R/refClass.R: gettextf("Methods not found: %s", paste(dQuote(methods[missing]), collapse = ", "))
#: R/refClass.R:0
msgid "Methods not found: %s"
msgstr "找不到 %s 這個方法"

#. R/refClass.R: gettext("Methods used: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Methods used:"
msgstr "找不到 %s 這個方法"

#. R/trace.R: gettext("Modified functions inserted through trace(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Modified functions inserted through trace(): %s"
msgstr "用 trace()插入修改過的函式: %s"

#. R/RClassUtils.R: gettext("NOTE: arguments in definition %s changed from (%s) to (%s)", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "NOTE: arguments in definition %s changed from (%s) to (%s)"
msgstr "%s 函式，%s 標記：方法定義中的引數由(%s)改成(%s)"

#. R/RClassUtils.R: gettext("Name:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Name:"
msgstr ""

#. R/trace.R: gettext("New functions are not currently inserted (not untraceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "New functions are not currently inserted (not untraceable): %s"
msgstr "目前沒有插入新函式(不可追溯): %s"

#. R/SClasses.R: gettextf("No %s names supplied", what)
#: R/SClasses.R:0
msgid "No %s names supplied"
msgstr "沒有提供 %s 名稱"

#. R/refClass.R: gettext("No Class Methods", domain = "R-methods")
#: R/refClass.R:0
msgid "No Class Methods"
msgstr ""

#. R/refClass.R: gettext("No fields defined", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "No fields defined"
msgstr "同時被定義自"

#. R/NextMethod.R: stop("No next method available")
#: R/NextMethod.R:0
msgid "No next method available"
msgstr "沒有下一個方法可用"

#. R/methodsTable.R: gettextf("No simply inherited methods found for function %s; using non-simple method",     sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid ""
"No simply inherited methods found for function %s; using non-simple method"
msgstr "找不到適用於函式 %s 的簡單方法；用複雜方法"

#. R/RClassUtils.R: gettextf("No slots, prototype of class %s", dQuote(.class1(ClassDef@prototype)),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "No slots, prototype of class %s"
msgstr ""

#. R/trace.R: gettext("Non-function objects are not currently inserted (not traceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Non-function objects are not currently inserted (not traceable): %s"
msgstr "目前沒有插入非函式物件(不可追溯): %s"

#. R/methodsTable.R: gettext("Note: method with signature %s chosen for function %s,\n target signature %s.\n %s would also be valid",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Note: method with signature %s chosen for function %s,\n"
" target signature %s.\n"
" %s would also be valid"
msgstr ""
"注意: 為函式\"%2$s\"選擇了帶\"%1$s\"標籤的方法 ,\n"
" 目標標籤為\"%3$s\".\n"
" %4$s 應該是有效的"

#. R/RClassUtils.R: gettextf("Note: some superclasses of class %s in package %s have duplicate definitions. This definition is not being treated as equivalent to that from package %s",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: some superclasses of class %s in package %s have duplicate "
"definitions. This definition is not being treated as equivalent to that from "
"package %s"
msgstr ""
"在程式套件 %2$s 中類別 %1$s 的某些超類別有重複的定義。這個定義不同於程式套件 "
"%3$s 裡的定義"

#. R/RClassUtils.R: gettextf("Note: the specification for class %s in package %s seems equivalent to one from package %s and is not turning on duplicate class definitions for this class",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Note: the specification for class %s in package %s seems equivalent to one "
"from package %s and is not turning on duplicate class definitions for this "
"class"
msgstr ""
"程式套件 %2$s 裡的 %1$s 類別定義似乎與程式套件 %3$s 裡的類別定義相當，因此不"
"開啟重複的類別定義"

#. R/MethodsListClass.R: gettextf("Notes: %s.", notei, domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Notes: %s."
msgstr "記錄：%s。"

#. R/BasicClasses.R: gettextf("OOPS: something wrong with '.OldClassesPrototypes[[%d]]'", i)
#: R/BasicClasses.R:0
msgid "OOPS: something wrong with '.OldClassesPrototypes[[%d]]'"
msgstr "啊呀：'.OldClassesPrototypes[[%d]]' 那裡發生錯誤了"

#. R/MethodsListClass.R: gettext("Object:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Object:"
msgstr ""

#. R/MethodsListClass.R: gettext("Package:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Package:"
msgstr ""

#. R/trace.R: gettextf("Pretend we inserted class %s", class)
#: R/trace.R:0
#, fuzzy
msgid "Pretend we inserted class %s"
msgstr "繼承類別的定義不存在: %s"

#. R/refClass.R: gettext("Prototypical reference class object", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Prototypical reference class object"
msgstr "非參照類別: %s"

#. R/methodsTable.R: stop(gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic)),     damain = "R-methods")
#: R/methodsTable.R:0
msgid "R-methods"
msgstr ""

#. R/refClass.R: gettext("Reference Class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Class"
msgstr "非參照類別: %s"

#. R/refClass.R: gettext("Reference Superclasses: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Superclasses:"
msgstr "非參照類別: %s"

#. R/refClass.R: gettextf("Reference class object of class %s", classLabel(class(.self)), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference class object of class %s"
msgstr "為類別為 %s 的物件"

#. R/refClass.R: gettext(" Reference methods used by this method are named as the arguments  either quoted or unquoted.  In the code analysis phase of installing the  the present method, the declared methods will be included.  It is essntial  to declare any methods used in a nonstandard way (e.g., via an apply function). Methods called directly do not need to be declared, but it is harmless to do so. $usingMethods() does nothing at run time.")
#: R/refClass.R:0
msgid ""
"Reference methods used by this method are named as the arguments  either "
"quoted or unquoted.  In the code analysis phase of installing the  the "
"present method, the declared methods will be included.  It is essntial  to "
"declare any methods used in a nonstandard way (e.g., via an apply function). "
"Methods called directly do not need to be declared, but it is harmless to do "
"so. $usingMethods() does nothing at run time."
msgstr ""

#. R/refClass.R: gettextf("Reference superclasses must come from the same package for the environment to be defined:  got %s and %s",     .nQuote(clRefMethods$.objectPackage), .nQuote(pkg))
#: R/refClass.R:0
msgid ""
"Reference superclasses must come from the same package for the environment "
"to be defined:  got %s and %s"
msgstr "參照超類別必須來自要定義的環境中相同的套件： 卻得到 %s 和 %s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s", message, target)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method %s not defined for signature %s"
msgstr "無法將 %s 刪除追蹤；此一標記沒有與之相對應的方法：%s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s, required for signature %s",     message, target, defined)
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Required method %s not defined for signature %s, required for signature %s"
msgstr "無法將 %s 刪除追蹤；此一標記沒有與之相對應的方法：%s"

#. R/RClassUtils.R: gettextf("Required method not defined: %s", message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method not defined: %s"
msgstr "找不到 %s 這個方法"

#. R/Methods.R: gettextf("Restoring default function definition of %s", sQuote(f))
#: R/Methods.R:0
msgid "Restoring default function definition of %s"
msgstr "重存 %s 的預設函式定義"

#. R/MethodsList.R: gettext("See ?MethodsList.", domain = "R-methods")
#: R/MethodsList.R:0
msgid "See ?MethodsList."
msgstr ""

#. R/MethodsList.R: gettext("See ?MethodsList. (This warning is shown once per session.)", domain = "R-methods")
#: R/MethodsList.R:0
msgid "See ?MethodsList. (This warning is shown once per session.)"
msgstr ""

#. R/show.R: gettext("Signatures:", domain = "R-methods")
#: R/show.R:0
msgid "Signatures:"
msgstr ""

#. R/method.skeleton.R: gettextf("Skeleton of method written to %s", sQuote(file))
#: R/method.skeleton.R:0
msgid "Skeleton of method written to %s"
msgstr "方法骨架寫於 %s "

#. R/method.skeleton.R: message("Skeleton of method written to connection", domain = "R-methods")
#: R/method.skeleton.R:0
#, fuzzy
msgid "Skeleton of method written to connection"
msgstr "方法骨架寫於 %s "

#. R/BasicClasses.R: gettextf("Slot %s:", dQuote(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", deparse(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", dQuote(s), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0
msgid "Slot %s:"
msgstr ""

#. R/RClassUtils.R: gettext("Slots:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Slots:"
msgstr ""

#. R/trace.R: gettextf("Source environment created %s", format(object@dateCreated), domain = "R-methods")
#: R/trace.R:0
msgid "Source environment created %s"
msgstr ""

#. R/refClass.R: gettextf("The definition of class %s follows.", dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "The definition of class %s follows."
msgstr "類別 %s 的定義不存在"

#. R/RClassUtils.R: gettextf("The prototype for class %s has undefined slot(s): %s", dQuote(name), paste0("'",     undefinedPrototypeSlots, "'", collapse = ", "))
#: R/RClassUtils.R:0
#, fuzzy
msgid "The prototype for class %s has undefined slot(s): %s"
msgstr "類別為 %2$s 的 '%1$s' 串列，包含不存在的類別 %3$s"

#. R/trace.R: gettext("Tracing ", domain = "R-methods")
#: R/trace.R:0
msgid "Tracing"
msgstr ""

#. R/refClass.R: gettext("Usage:  $help(topic) where topic is the name of a method (quoted or not)")
#: R/refClass.R:0
msgid ""
"Usage:  $help(topic) where topic is the name of a method (quoted or not)"
msgstr ""

#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead), domain = "R-methods")
#. R/MethodsList.R: gettextf("Use %s instead. ", dQuote(instead), domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "Use %s instead."
msgstr "請用 %s。"

#. R/MethodsList.R: gettext("Use of the \"MethodsList\" meta data objects is defunct.", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "Use of the \"MethodsList\" meta data objects is defunct."
msgstr "%s 裡：\"MethodsList\" 後設資料目標物件已經不推薦使用了。"

#. R/MethodsList.R: gettext("Use of the \"MethodsList\" meta data objects is deprecated.", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "Use of the \"MethodsList\" meta data objects is deprecated."
msgstr "%s 裡：\"MethodsList\"後設資料目標物件已經不推薦使用了。"

#. R/RClassUtils.R: gettextf("Virtual Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s [in %s]"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s [package in %s]"
msgstr ""

#. R/trace.R: gettext("Warning: Tracing only in the namespace; to untrace you will need:", domain = "R-methods")
#: R/trace.R:0
msgid "Warning: Tracing only in the namespace; to untrace you will need:"
msgstr ""

#. R/as.R: gettextf("a 'replace' method definition in 'setAs' function must be a function of two arguments, got %d",     length(args))
#: R/as.R:0
#, fuzzy
msgid ""
"a 'replace' method definition in 'setAs' function must be a function of two "
"arguments, got %d"
msgstr "'setAs' 中的 'replace' 方法定義必須是帶兩個引數的函式，得到的卻是 %d"

#. R/refClass.R: gettextf("a call to 'superClass()' is in the method %s but there is no superclass definition of this method for class %s",     sQuote(me), dQuote(thisClass@className))
#: R/refClass.R:0
#, fuzzy
msgid ""
"a call to 'superClass()' is in the method %s but there is no superclass "
"definition of this method for class %s"
msgstr "在 %s 方法裡呼叫了 superClass()，但是 %s 類別裡無此方法的超類別定義"

#. R/NextMethod.R: gettextf("a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'",     sQuote(f))
#: R/NextMethod.R:0
msgid ""
"a call to callNextMethod() appears in a call to %s, but the call does not "
"seem to come from either a generic function or another 'callNextMethod'"
msgstr ""
"callNextMethod() 的呼叫是在調用 %s 時所要求的，但此一調用既不從泛型函式來，也"
"從另外一個 'callNextMethod' 中來"

#. R/Methods.R: stop("a function for argument 'f' must be a generic function")
#. R/trace.R: stop("a function for argument 'f' must be a generic function")
#: R/Methods.R:0 R/trace.R:0
msgid "a function for argument 'f' must be a generic function"
msgstr "為引數 'f' 提供的函式必須是泛型函式"

#. R/RClassUtils.R: gettextf("a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype@object)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype object was supplied with object slot of class %s, but the class "
"definition requires an object that is class %s"
msgstr "原型物件與類別為 %s 的物件槽同時被提供，但類別定義要求類別為 %s 的物件"

#. R/RClassUtils.R: gettextf("a prototype was supplied of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"a prototype was supplied of class %s, but the class definition requires an "
"object that is class %s"
msgstr "被提供的原型的類別為 %s，類別定義需要類別為 %s 的物件"

#. R/refClass.R: gettextf("a single class name is needed for field %s, got a character vector of length %d",     sQuote(thisName), length(thisField))
#: R/refClass.R:0
msgid ""
"a single class name is needed for field %s, got a character vector of length "
"%d"
msgstr "%s 場需要單一類別名稱，現在得到的是長度為 %d 的字串"

#. R/RClassUtils.R: gettextf("a validity method must be a function of one argument, got an object of class %s",     dQuote(class(validity)))
#: R/RClassUtils.R:0
msgid ""
"a validity method must be a function of one argument, got an object of class "
"%s"
msgstr "正確的方法必須的帶一個引數的函式，收到的卻是類別為 %s 的物件"

#. R/SClasses.R: gettextf("abnormal type %s is not supported as a superclass of a class definition",     dQuote(type))
#: R/SClasses.R:0
msgid "abnormal type %s is not supported as a superclass of a class definition"
msgstr "不支援做為一個類別定義的超類別 %s"

#. R/RMethodUtils.R: gettextf("action function %s has no arguments, should have at least 1", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "action function %s has no arguments, should have at least 1"
msgstr "作業函式 %s 沒有引數，至少應該有一個"

#. R/as.R: warning("ambiguous object (length != 1) to coerce to \"name\"")
#: R/as.R:0
msgid "ambiguous object (length != 1) to coerce to \"name\""
msgstr "物件不明確(長度！=1) 因此無法強制轉換成\"name\""

#. R/Methods.R: sprintf("apparent internal error: a generic function was found for \"%s\", but no corresponding object was found searching from \"%s\"",     f, getPackageName(where))
#: R/Methods.R:0
msgid ""
"apparent internal error: a generic function was found for \"%s\", but no "
"corresponding object was found searching from \"%s\""
msgstr ""

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\nmove the file or remove the class/method")
#: R/zzz.R:0
#, fuzzy
msgid ""
"apparently bad method or class metadata in saved environment;\n"
"move the file or remove the class/method"
msgstr "儲存的環境中出現了不良方法或類別後設資料；"

#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f1)), domain = "R-methods")
#. R/Methods.R: gettextf("argument %s is not S4", deparse1(substitute(f2)), domain = "R-methods")
#: R/Methods.R:0
msgid "argument %s is not S4"
msgstr "引數 %s 不是 S4"

#. R/Methods.R: gettextf("argument %s must be a generic function or a single character string; got an object of class %s",     sQuote("f"), dQuote(class(f)))
#: R/Methods.R:0
msgid ""
"argument %s must be a generic function or a single character string; got an "
"object of class %s"
msgstr ""
"引數 %s 要麼是泛型函式要麼是單一字串；現在得到的卻是類別為 %s 的目標物件物件"

#. R/SClasses.R: gettextf("argument %s must be a list or a character vector; got an object of class %s",     dQuote(what), dQuote(class(fields)))
#: R/SClasses.R:0
msgid ""
"argument %s must be a list or a character vector; got an object of class %s"
msgstr "引數 %s 要麼是串列要麼是單一字串；現在得到的卻是類別為 %s 的目標物件"

#. R/oldClass.R: gettextf("argument 'Classes' must be a vector of two classes; got an argument of length %d",     length(Classes))
#: R/oldClass.R:0
msgid ""
"argument 'Classes' must be a vector of two classes; got an argument of "
"length %d"
msgstr "引數 'classes' 必須是包含兩個類別的向量；現在得到的是長度為 %d 的引數"

#. R/oldClass.R: gettextf("argument 'S4Class' must be a class definition: got an object of class %s",     dQuote(class(S4Class)))
#: R/oldClass.R:0
msgid ""
"argument 'S4Class' must be a class definition: got an object of class %s"
msgstr "引數 'S4Class' 必須是類別定義：現在得到的卻是類別為 %s 的目標物件"

#. R/RClassUtils.R: stop("argument 'abbreviate' must be 0, 1, 2, or 3")
#: R/RClassUtils.R:0
msgid "argument 'abbreviate' must be 0, 1, 2, or 3"
msgstr "引數 'abbreviate' 必須為零，1，2，或 3 "

#. R/SClasses.R: stop("argument 'classDef' must be a class definition or the name of a class")
#: R/SClasses.R:0
msgid "argument 'classDef' must be a class definition or the name of a class"
msgstr "引數 'classDef' 必須是類別定義或是類別的名稱"

#. R/SClasses.R: gettextf("argument 'classDef' must be a string or a class representation; got an object of class %s",     dQuote(class(classDef)))
#: R/SClasses.R:0
msgid ""
"argument 'classDef' must be a string or a class representation; got an "
"object of class %s"
msgstr ""
"引數 'classDef' 要麼是個字串要麼是個類別表現；現在得到的卻是類別為 %s 的目標"
"物件"

#. R/Methods.R: gettextf("argument 'f' must be a generic function or %s", .notSingleString(f))
#: R/Methods.R:0
msgid "argument 'f' must be a generic function or %s"
msgstr "引數 'f' 必須是泛型函式，或為 %s"

#. R/RMethodUtils.R: stop("argument 'f' must be a string, generic function, or primitive: got an ordinary function")
#: R/RMethodUtils.R:0
msgid ""
"argument 'f' must be a string, generic function, or primitive: got an "
"ordinary function"
msgstr ""
"'f' 引數要麼是字元，要麼是泛型函式，要麼是原始函式：現在得到的卻是普通函式"

#. R/RClassUtils.R: stop("argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'")
#: R/RClassUtils.R:0
msgid ""
"argument 'includeSubclasses' must be a logical, either one value or a vector "
"of the same length as argument 'classes'"
msgstr ""
"引數 'includeSubclasses' 必須是邏輯值，要麼是單一值要麼是向量，其長度應同引"
"數 'classes' 相等"

#. R/trace.R: stop("argument 'signature' is not meaningful for tracing reference methods")
#: R/trace.R:0
msgid "argument 'signature' is not meaningful for tracing reference methods"
msgstr "'signature' 引數不能適用於參照追蹤方法"

#. R/Methods.R: warning("argument 'signature' is not meaningful with the current implementation and is ignored \n(extract a subset of the methods list instead)")
#: R/Methods.R:0
msgid ""
"argument 'signature' is not meaningful with the current implementation and "
"is ignored \n"
"(extract a subset of the methods list instead)"
msgstr ""
"'signature' 引數對目前的實作沒有意義，因此忽略不用\n"
"(解開方法串列子集)"

#. R/methodsTable.R: stop("argument 'signatures' must be a character matrix whose rows are method signatures")
#: R/methodsTable.R:0
msgid ""
"argument 'signatures' must be a character matrix whose rows are method "
"signatures"
msgstr "\"signatures\"引數必須為字元矩陣，每列裡都是標籤方法"

#. R/trace.R: stop("argument 'what' should be the name of a function")
#: R/trace.R:0
msgid "argument 'what' should be the name of a function"
msgstr "引數 'what' 必須是一個函式名稱"

#. R/RMethodUtils.R: stop("argument f must be a generic function with signature \"...\"")
#: R/RMethodUtils.R:0
msgid "argument f must be a generic function with signature \"...\""
msgstr "引數 f 必須是帶\"…\"標記的泛型函式"

#. R/as.R: gettextf("argument names in 'replace' method changed to agree with 'coerce<-' generic function:\n%s",     paste(deparse(replace), sep = "\n    "))
#: R/as.R:0
#, fuzzy
msgid ""
"argument names in 'replace' method changed to agree with 'coerce<-' generic "
"function:\n"
"%s"
msgstr ""
"'replace' 裡的引數名稱得到了修改使之與 'coerce<-' 泛型相符合:\n"
"%s"

#. R/MethodsList.R: stop("arguments 'names' and 'signature' must have the same length")
#: R/MethodsList.R:0
msgid "arguments 'names' and 'signature' must have the same length"
msgstr "'names' 和 'signature' 這兩個引數的長度必須相同"

#. R/refClass.R: stop("arguments must all be character string names of fields")
#: R/refClass.R:0
msgid "arguments must all be character string names of fields"
msgstr "引數必須是場名稱的字串"

#. R/refClass.R: stop("arguments to 'methods()' must be named, or one named list")
#: R/refClass.R:0
#, fuzzy
msgid "arguments to 'methods()' must be named, or one named list"
msgstr "methods() 裡的引數必須帶名稱，或是是帶名稱的串列"

#. R/RClassUtils.R: gettextf("assigning as %s a class representation with internal name %s", dQuote(Class),     dQuote(def@className))
#: R/RClassUtils.R:0
msgid "assigning as %s a class representation with internal name %s"
msgstr "無法將內部名稱為 %2$s 的類別表現指定成 %1$s"

#. R/trace.R: gettextf("assigning over the binding of symbol %s in environment/package %s", sQuote(what),     sQuote(pname))
#: R/trace.R:0
msgid "assigning over the binding of symbol %s in environment/package %s"
msgstr "在環境/程輯封包 %2$s 將符號 %1$s 的連結重新設定"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for @%s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"不可以在類別為 %3$s 的物件裡的@%2$s 槽指定類別為 %1$s 的物件；"
"is(value，\"%4$s\")的值不是 TRUE"

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for slot %s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""
"不可以在類別為 %3$s 的物件裡的 %2$s 槽指定類別為 %1$s 的物件；"
"is(value，\"%4$s\")的值不是 TRUE"

#. R/Methods.R: gettextf("bad class specified for element %d (should be a single character string)",     i)
#: R/Methods.R:0
msgid ""
"bad class specified for element %d (should be a single character string)"
msgstr "為單元 %d 所設定的類別不對(應當是條單字元字串)"

#. R/methodsTable.R: gettextf("bad method object stored in method table, class %s", dQuote(class(current)))
#: R/methodsTable.R:0
msgid "bad method object stored in method table, class %s"
msgstr "做為方法的物件(類別是 %s)發生錯誤"

#. R/NextMethod.R: gettextf("bad object found as method (class %s)", dQuote(class(method)))
#: R/NextMethod.R:0
msgid "bad object found as method (class %s)"
msgstr "做為方法的物件(類別 %s)發生錯誤"

#. R/RMethodUtils.R: stop("botched namespace: failed to find 'base' namespace in its parents", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "botched namespace: failed to find 'base' namespace in its parents"
msgstr ""

#. R/is.R: gettext("both classes must be defined")
#: R/is.R:0
msgid "both classes must be defined"
msgstr "兩個類別都得有定義"

#. R/NextMethod.R: stop("call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context")
#: R/NextMethod.R:0
msgid ""
"call to 'callNextMethod' does not appear to be in a 'method' or "
"'callNextMethod' context"
msgstr ""
"調用 'callNextMethod' 既不在 'method' 也不在 'callNextMethod' 的文脈中出現"

#. R/RMethodUtils.R: gettext("called 'doPrimitiveMethod()'", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "called 'doPrimitiveMethod()'"
msgstr ""

#. R/methodsTable.R: gettext(" can eliminate dominated ones,", domain = "R-methods")
#: R/methodsTable.R:0
msgid "can eliminate dominated ones,"
msgstr ""

#. R/is.R: gettextf("cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package",     dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid ""
"cannot create a 'setIs' relation when neither of the classes (%s and %s) is "
"local and modifiable in this package"
msgstr ""
"無法建立 'setIs' 這個關係，因為兩個類別 (%s 和 %s) 都不是局部性的，也不能在程"
"輯封包進行改動"

#. R/trace.R: gettextf("cannot find an environment corresponding to package name '%s'", package)
#: R/trace.R:0
#, fuzzy
msgid "cannot find an environment corresponding to package name '%s'"
msgstr "找不到對應的環境於程式套件 '%s\""

#. R/BasicClasses.R: stop("cannot have more than one unnamed argument as environment")
#: R/BasicClasses.R:0
msgid "cannot have more than one unnamed argument as environment"
msgstr "不能有超過一個的無名稱引數來做為環境用"

#. R/trace.R: gettext("cannot insert methods for these functions (methods table not found in source): %s",     domain = "R-methods")
#: R/trace.R:0
msgid ""
"cannot insert methods for these functions (methods table not found in "
"source): %s"
msgstr "無法為這些函式插入方法(原始碼裡找不到方法表):%s"

#. R/trace.R: gettext("cannot insert these (not found in source): %s", domain = "R-methods")
#: R/trace.R:0
msgid "cannot insert these (not found in source): %s"
msgstr "這些無法插入(在原始碼中找不到)：%s"

#. R/Methods.R: gettextf("cannot remove methods for %s in locked environment/package %s", sQuote(f),     sQuote(getPackageName(db)))
#: R/Methods.R:0
msgid "cannot remove methods for %s in locked environment/package %s"
msgstr "無法將鎖住的環境/程輯封包 %2$s 裡的 %1$s 方法刪除"

#. R/BasicClasses.R: stop("cannot specify arguments for 'array()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'array()' method when specifying '.Data'"
msgstr "在指定 '.Data' 時不能同時指定 array()引數"

#. R/BasicClasses.R: stop("cannot specify arguments for 'matrix()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'matrix()' method when specifying '.Data'"
msgstr "在指定 '.Data' 時不能同時指定 matrix()引數"

#. R/trace.R: gettext("cannot untrace method for %s; no method defined for this signature: %s",     domain = "R-methods")
#: R/trace.R:0
msgid "cannot untrace method for %s; no method defined for this signature: %s"
msgstr "無法將 %s 刪除追蹤；此一標記沒有與之相對應的方法：%s"

#. R/trace.R: stop("cannot use 'at' argument unless the function body has the form '{ ... }'")
#: R/trace.R:0
msgid ""
"cannot use 'at' argument unless the function body has the form '{ ... }'"
msgstr "不能用 'at' 這個引數，除非函式的主體有 '{ … }' 這樣的形式"

#. R/trace.R: stop("cannot use 'at' argument without a trace expression")
#: R/trace.R:0
msgid "cannot use 'at' argument without a trace expression"
msgstr "不能用 'at' 這個引數，因為沒有追蹤表式"

#. R/SClasses.R: gettextf("cannot use object of class %s in new(): class %s does not extend that class",     dQuote(Classi), dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"cannot use object of class %s in new(): class %s does not extend that class"
msgstr "無法在 new() 裡用類別為 %s 的物件；類別 %s 並不擴充此類別"

#. R/is.R: gettextf("class %s cannot extend class %s", dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid "class %s cannot extend class %s"
msgstr "類別 %s 無法擴充類別 %s"

#. R/RClassUtils.R: gettextf("class %s does not have a data part (a .Data slot) defined", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "class %s does not have a data part (a .Data slot) defined"
msgstr "類別 %s 沒有資料部分(.Data 槽)"

#. R/BasicClasses.R: gettextf("class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent",     dQuote(class(from)))
#: R/BasicClasses.R:0
msgid ""
"class %s does not have an S3 data part, and so is of type \"S4\"; no S3 "
"equivalent"
msgstr "類別 %s 不包含 S3 資料部分，因此其種類為 \"S4\"；而不是 S3 同變類別"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class (%s)", dQuote(name), dQuote(cl))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class (%s)"
msgstr "類別 %s 擴充不存在的類別(%s)"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class, %s", dQuote(ClassDef@className), dQuote(what))
#: R/RClassUtils.R:0
msgid "class %s extends an undefined class, %s"
msgstr "類別 %s 不能擴充不存在的類別 ,%s"

#. R/refClass.R: gettextf("class %s for field %s is not defined", dQuote(thisField), sQuote(thisName))
#: R/refClass.R:0
msgid "class %s for field %s is not defined"
msgstr "場 %2$s 的類別 %1$s 還沒有定義"

#. R/RClassUtils.R: gettextf("class %s has a locked definition in package %s", dQuote(Class), sQuote(getPackageName(where)))
#: R/RClassUtils.R:0
msgid "class %s has a locked definition in package %s"
msgstr "類別 %s 在程輯封包 %s 裡的定義被鎖住了"

#. R/SClasses.R: gettextf("class %s has multiple definitions visible; only the first removed", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s has multiple definitions visible; only the first removed"
msgstr "類別 %s 有多個定義；只刪除了第一個"

#. R/is.R: gettextf("class %s has no visible definition from package or environment %s", dQuote(class2),     sQuote(getPackageName(where)))
#: R/is.R:0
msgid "class %s has no visible definition from package or environment %s"
msgstr "類別 %s 在程輯封包或環境 %s 裡沒有看得見的定義"

#. R/BasicClasses.R: gettextf("class %s is VIRTUAL; not meaningful to create an S4 object from this class",     dQuote(cl))
#: R/BasicClasses.R:0
msgid ""
"class %s is VIRTUAL; not meaningful to create an S4 object from this class"
msgstr "%s 是虛擬類別；用這種類別來建立新的 S4 目標物件是沒有意義的"

#. R/as.R: gettextf("class %s is a class union: 'coerce' relations to a class union are not meaningful",     dQuote(to))
#: R/as.R:0
msgid ""
"class %s is a class union: 'coerce' relations to a class union are not "
"meaningful"
msgstr "類別 %s 是類別併集：類別併集的 'coerce' 關係在這裡沒有意義"

#. R/is.R: gettextf("class %s is defined (with package slot %s) but no metadata object found to revise %s information---not imported?  Making a copy in package %s",     .dQ(class), sQuote(classDef@package), purpose, sQuote(getPackageName(where, FALSE)))
#: R/is.R:0
#, fuzzy
msgid ""
"class %s is defined (with package slot %s) but no metadata object found to "
"revise %s information---not imported?  Making a copy in package %s"
msgstr ""
"%s 類別已經(在 %s 程式套件槽裡)被定義過了，但沒有可用於修改 %s 資訊的後設資料"
"物件 -- 沒有被匯出？在 %s 程式套件裡拷貝"

#. R/refClass.R: gettextf("class %s is defined but is not a reference class", dQuote(Class))
#: R/refClass.R:0
msgid "class %s is defined but is not a reference class"
msgstr "類別 %s 有定義但不是參照類別"

#. R/SClasses.R: gettextf("class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)",     dQuote(Class), sQuote(classDef@package))
#: R/SClasses.R:0
msgid ""
"class %s is defined, with package %s, but no corresponding metadata object "
"was found (not exported?)"
msgstr ""
"%s 類別已經在 %s 程式套件裡被定義過了，但沒有與之相對應的後設資料物件(有沒有"
"被匯出過？)"

#. R/RClassUtils.R: gettext("class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"class %s is inheriting an inconsistent superclass structure from class %s, "
"inconsistent with %s"
msgstr "%s 類別從 %s 繼承了有矛盾的超類別結構，與 %s 有矛盾"

#. R/as.R: gettextf("class %s is not defined in this environment", dQuote(to))
#: R/as.R:0
msgid "class %s is not defined in this environment"
msgstr "類別 %s 在這個環境裡沒有定義"

#. R/SClasses.R: gettextf("class %s is sealed; 'resetClass' will have no effect", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s is sealed; 'resetClass' will have no effect"
msgstr "類別 %s 被封閉了；因此 'resetClass' 沒有任何作用"

#. R/is.R: gettextf("class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'",     dQuote(class1))
#: R/is.R:0
msgid ""
"class %s is sealed; new superclasses can not be defined, except by "
"'setClassUnion'"
msgstr "類別 %s 被封閉了；除了 'setClassUnion' 之外無法設定新的父類別"

#. R/RClassUtils.R: gettextf("class %s may not contain itself: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not contain itself: it contains class %s, with a circular "
"relation back to %s"
msgstr ""

#. R/RClassUtils.R: gettextf("class %s may not have itself as a subclass: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not have itself as a subclass: it contains class %s, with a "
"circular relation back to %s"
msgstr ""

#. R/SClasses.R: gettextf("class %s not found on %s; 'resetClass' will have no effect", dQuote(Class),     sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "class %s not found on %s; 'resetClass' will have no effect"
msgstr "類別 %s 不存在於 %s 中；因此 'resetClass' 沒有任何作用"

#. R/RClassUtils.R: stop("class cannot have both an ordinary and hidden data type")
#: R/RClassUtils.R:0
msgid "class cannot have both an ordinary and hidden data type"
msgstr "類別不能同時具有普通的和暗藏的資料種類"

#. R/SClasses.R: gettext("class definition cannot extend more than one of these data types:", domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "class definition cannot extend more than one of these data types:"
msgstr "類別定義最多只能擴充這些資料種類中的一個: %s"

#. R/SClasses.R: gettextf("class definition for %s not found (no action taken)", dQuote(Class))
#: R/SClasses.R:0
msgid "class definition for %s not found (no action taken)"
msgstr "找不到 %s 類別定義(無效)"

#. R/MethodsListClass.R: gettextf("class generator function for class %s from package %s", dQuote(object@className),     sQuote(object@package), domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "class generator function for class %s from package %s"
msgstr "套件\"%2$s\"裡用於\"%1$s\"此一類別的類別產生函式"

#. R/refClass.R: gettextf("class must be a reference class representation or a character string; got an object of class %s",     dQuote(class(Class)))
#: R/refClass.R:0
msgid ""
"class must be a reference class representation or a character string; got an "
"object of class %s"
msgstr "類別必須是參照類別或字串；現在得到的卻是類別為 %s 的目標物件"

#. R/refClass.R: gettextf("code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)",     dQuote(Class), sQuote("codetools"))
#: R/refClass.R:0
msgid ""
"code for methods in class %s was not checked for suspicious field "
"assignments (recommended package %s not available?)"
msgstr ""
"沒有檢查 %s 類別方法程式碼可能不正確的場指派(是不是因為沒有推薦套件 %s？)"

#. R/RClassUtils.R: gettextf("conflicting definition of data part: .Data = %s, superclass implies %s",     dQuote(elNamed(properties, ".Data")), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid "conflicting definition of data part: .Data = %s, superclass implies %s"
msgstr "資料部分的定義相互有矛盾: .Data = %s，而父類別卻意味着 %s"

#. R/MethodsList.R: gettextf("default method must be a method definition, a primitive or NULL: got an object of class %s",     dQuote(class(method)))
#: R/MethodsList.R:0
msgid ""
"default method must be a method definition, a primitive or NULL: got an "
"object of class %s"
msgstr "預設方法必須是方法定義，原始方法或 NULL，得到的卻是類別為 %s 的物件"

#. R/Methods.R: stop("defunct methods list search", domain = "R-Methods")
#: R/Methods.R:0
msgid "defunct methods list search"
msgstr ""

#. R/refClass.R: stop("direct calls to 'callSuper()' are invalid: should only be called from another method")
#: R/refClass.R:0
#, fuzzy
msgid ""
"direct calls to 'callSuper()' are invalid: should only be called from "
"another method"
msgstr "不能直接呼叫 callSuper()：只能用其他的方法來呼叫它"

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- value' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- "
"value' instead"
msgstr ""

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' "
"instead"
msgstr ""

#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#: R/RClassUtils.R:0
msgid "distance %d"
msgstr ""

#. R/trace.R: gettextf("does not seem to be a method table for generic %s in tracing environment",     sQuote(what))
#: R/trace.R:0
msgid ""
"does not seem to be a method table for generic %s in tracing environment"
msgstr "在追溯環境裡找不到 %s 泛型函式的方法表"

#. R/zzz.R: gettext(" done", domain = "R-methods")
#: R/zzz.R:0
msgid "done"
msgstr ""

#. R/SClasses.R: gettext("duplicate class names among superclasses: %s", domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicate class names among superclasses: %s"
msgstr "父類別裡有重複的類別名稱: %s"

#. R/MethodsList.R: gettextf("duplicate element names in 'MethodsList' at level %d: %s", level, paste(dQuote(unique(mnames[duplicated(mnames)])),     collapse = ", "), domain = "R-methods")
#: R/MethodsList.R:0
msgid "duplicate element names in 'MethodsList' at level %d: %s"
msgstr "'MethodsList' 裡 %d: %s 水平上的單元名稱有重複"

#. R/MethodsList.R: gettextf("element %d at level %d (class %s) cannot be interpreted as a function or named list",     i, level, dQuote(class(eli)))
#: R/MethodsList.R:0
msgid ""
"element %d at level %d (class %s) cannot be interpreted as a function or "
"named list"
msgstr "水平 %2$d 上的 %1$d 單元(%3$s 類別)既不是函式也不是命名串列"

#. R/SClasses.R: gettextf("element %d of the representation was not a single character string", i)
#: R/SClasses.R:0
msgid "element %d of the representation was not a single character string"
msgstr "表現的 %d 單元不是單字元的字串"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to remove definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to remove definition "
"from %s"
msgstr "%2$s 類別裡包含的子類別(%1$s)不對，但無法將定義從 %3$s 中刪除"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to restore previous definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to restore previous "
"definition from %s"
msgstr "%2$s 類別裡包含的子類別(%1$s)不對，但無法將 %3$s 中原來的定義重新儲存"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; class definition removed from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; class definition removed from "
"%s"
msgstr "%2$s 類別裡包含的子類別(%1$s)不對；類別定義從 %3$s 中被刪除"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; previous definition restored to %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; previous definition restored "
"to %s"
msgstr "%2$s 類別裡包含的子類別(%1$s)不對；原來的定義重新儲存到 %3$s 中"

#. R/RMethodUtils.R: gettextf("error in load action %s for package %s: %s: %s", aname, getPackageName(where),     callString, value$message)
#: R/RMethodUtils.R:0
msgid "error in load action %s for package %s: %s: %s"
msgstr "為套件 %2$s 荷載作業 %1$s 時發生錯誤：%3$s: %4$s"

#. R/Methods.R: gettextf("error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)",     sQuote(f), dQuote(class(fdef)))
#: R/Methods.R:0
msgid ""
"error in updating S4 generic function %s; the function definition is not an "
"S4 generic function (class %s)"
msgstr "更新泛型函式 %s 時發生錯誤；函式定義不是泛型函式(類別為 %s)"

#. R/RMethodUtils.R: gettext("expanding the signature to include omitted arguments in definition: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "expanding the signature to include omitted arguments in definition: %s"
msgstr "在定義裡擴充標記來包括進忽略的引數：%s"

#. R/addedFunctions.R: gettextf("expected a non-empty character string for argument 'name'")
#: R/addedFunctions.R:0
#, fuzzy
msgid "expected a non-empty character string for argument 'name'"
msgstr "引數的名稱應該是非空字串"

#. R/Methods.R: gettextf("expected a non-empty character string for argument name")
#: R/Methods.R:0
msgid "expected a non-empty character string for argument name"
msgstr "引數的名稱應該是非空字串"

#. R/oldClass.R: gettext("explicit coercion of old-style class (%s) is not defined", domain = "R-methods")
#: R/oldClass.R:0
msgid "explicit coercion of old-style class (%s) is not defined"
msgstr "舊式類別(%s)的明確強制轉換沒有定義"

#. R/oldClass.R: gettextf("explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s",     to, dQuote(class(from)[1L]))
#: R/oldClass.R:0
msgid ""
"explicit replacement not defined for as(x, \"%s\") <- value for old-style "
"class %s"
msgstr "用於舊式類別 %2$s 的 as(x，\"%1$s\") <- value 的替換值沒有明確的定義"

#. R/methodsTable.R: stop("failed to find expected group generic function: ", what)
#: R/methodsTable.R:0
msgid "failed to find expected group generic function:"
msgstr "找不到需要的團體泛型函式："

#. R/refClass.R: gettextf("field %s is already locked", sQuote(what))
#: R/refClass.R:0
msgid "field %s is already locked"
msgstr "場 %s 已經被鎖住了"

#. R/refClass.R: gettextf("field %s of class %s has a non-default binding and cannot be locked", sQuote(what),     dQuote(className))
#: R/refClass.R:0
msgid "field %s of class %s has a non-default binding and cannot be locked"
msgstr "%1$s 類別的 %2$s 場有非預設的約束力，因此不能被鎖定"

#. R/refClass.R: gettextf("field %s was supplied as an object of class %s; must be a class name or a binding function",     sQuote(thisName), dQuote(class(thisField)))
#: R/refClass.R:0
msgid ""
"field %s was supplied as an object of class %s; must be a class name or a "
"binding function"
msgstr "場 %s 被提供了類別 %s 的物件 ; 但它必須是類別名稱或繫結函式"

#. R/Methods.R: gettextf("first argument should be the names of one of more generic functions (got object of class %s)",     dQuote(class(f)))
#: R/Methods.R:0
msgid ""
"first argument should be the names of one of more generic functions (got "
"object of class %s)"
msgstr "第一個引數應當為泛型函式的名稱 (現在卻是類別為 %s 的物件)"

#. R/RClassUtils.R: gettextf("for function %s: %s", f, message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "for function %s: %s"
msgstr "找不到 %s 此一函式"

#. R/RMethodUtils.R: gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature",     bad2)
#: R/RMethodUtils.R:0
msgid ""
"formal arguments (%s) omitted in the method definition cannot be in the "
"signature"
msgstr "方法定義裡所忽略的正式引數(%s)不能存在於標記"

#. R/Methods.R: gettext("formal arguments differ (in default values?)", domain = "R-methods")
#: R/Methods.R:0
msgid "formal arguments differ (in default values?)"
msgstr "正式引數不相對(預設值不一樣？)"

#. R/Methods.R: gettextf("formal arguments differ: (%s), (%s)", paste(a1, collapse = ", "), paste(a2,     collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "formal arguments differ: (%s), (%s)"
msgstr "正式引數不相對: (%s)，(%s)"

#. R/RMethodUtils.R: stop(.renderSignature(f, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#. R/RMethodUtils.R: stop(.renderSignature(generic@generic, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#: R/RMethodUtils.R:0
msgid "formal arguments in method and generic do not appear in the same order"
msgstr "方法正式引數和泛型方法正式引數的順序不同"

#. R/RMethodUtils.R: gettext(" found on: %s; using the first one", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "found on: %s; using the first one"
msgstr "有多個直接的匹配:%s；用第一個"

#. R/Methods.R: gettextf("function %s appears to be a generic function, but with generic name %s",     sQuote(f), sQuote(gen))
#: R/Methods.R:0
msgid "function %s appears to be a generic function, but with generic name %s"
msgstr "函式 %s 好像是泛型函式，卻有 %s 的泛型名稱"

#. R/Methods.R: stop("function supplied as argument 'f' must be a generic")
#: R/Methods.R:0
msgid "function supplied as argument 'f' must be a generic"
msgstr "給引數 'f' 所提供的函式必須是泛型函式"

#. R/Methods.R: gettextf("generic function %s not found for removal", sQuote(f))
#: R/Methods.R:0
msgid "generic function %s not found for removal"
msgstr "沒有 %s 這樣的泛型函式，因此不能將之刪除"

#. R/Methods.R: gettextf("generic function supplied was not created for %s", sQuote(name))
#: R/Methods.R:0
msgid "generic function supplied was not created for %s"
msgstr "所提供的泛型函式沒有為 %s 建立"

#. R/Methods.R: gettextf("generic names differ: %s, %s", .dQ(f1@generic), .dQ(f2@generic), domain = "R-methods")
#: R/Methods.R:0
msgid "generic names differ: %s, %s"
msgstr "泛型名稱不相對：%s，%s"

#. R/RClassUtils.R: gettext("get rid of variables in definition %s (%s); they conflict with the needed change to argument names (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"get rid of variables in definition %s (%s); they conflict with the needed "
"change to argument names (%s)"
msgstr ""

#. R/RMethodUtils.R: stop("got a negative maximum number of frames to look at")
#: R/RMethodUtils.R:0
msgid "got a negative maximum number of frames to look at"
msgstr "框的最大數不能是負值"

#. R/Methods.R: gettextf("groups differ: %s, %s", .dQ(gpString(f1@group)), .dQ(gpString(f2@group)),     domain = "R-methods")
#: R/Methods.R:0
msgid "groups differ: %s, %s"
msgstr "組不相對: %s，%s"

#. R/methodsTable.R: gettext(" have best ones", domain = "R-methods")
#: R/methodsTable.R:0
msgid "have best ones"
msgstr ""

#. R/Methods.R: gettextf("if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default",     name)
#: R/Methods.R:0
msgid ""
"if the 'def' argument is supplied, it must be a function that calls "
"standardGeneric(\"%s\") or is the default"
msgstr ""
"如果設定了 'def' 引數的話，它要麼是調用 standardGeneric(\"%s\")的函式，要麼是"
"預設值"

#. R/RMethodUtils.R: gettext("in changing formal arguments in %s, some of the old names are not in fact arguments: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"in changing formal arguments in %s, some of the old names are not in fact "
"arguments: %s"
msgstr "在 %s 中變更正式引數時，一些舊的引數名稱其實不是引數: %s"

#. R/RClassUtils.R: gettext("in constructing the prototype for class %s, slots in prototype and not in class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s, slots in prototype and not in "
"class: %s"
msgstr "為類別 %s 建立原型時發生錯誤，原型裡有槽但類別裡卻沒有: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s",     dQuote(className), dQuote(.class1(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in constructing the prototype for class %s: prototype has class %s, but the "
"data part specifies class %s"
msgstr ""
"為類別 %s 建立原型時發生錯誤：原型的類別是 %s，但資料部分設定的類別是 %s"

#. R/RClassUtils.R: gettextf("in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)",     dQuote(name), dQuote(dataPartClass))
#: R/RClassUtils.R:0
msgid ""
"in defining class %s, the supplied data part class, %s is not valid (must be "
"a basic class or a virtual class combining basic classes)"
msgstr ""
"是設定類別 %s 時，所提供的資料部分類別，%s 不正確(必須是基本類別或組合多個基"
"本類別的虛擬類別)"

#. R/RClassUtils.R: gettextf("in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")",     dQuote(ClassDef@className), dQuote(what), dQuote(class(exti)))
#: R/RClassUtils.R:0
msgid ""
"in definition of class %s, information for superclass %s is of class %s "
"(expected \"SClassExtension\")"
msgstr ""
"在類別 %s 的定義中有關於父類別 %s 的資訊的類別是 %s (所要求的則是"
"\"SClassExtension\")"

#. R/RClassUtils.R: gettext("in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"in making the prototype for class %s elements of the prototype failed to "
"match the corresponding slot class: %s"
msgstr "為類別\"%s\"建立原型時發生錯誤，原型的單元同槽的類別對應不上: %s"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s (maybe mixing old and new classes?)",     dQuote(cl))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s (maybe mixing old and new "
"classes?)"
msgstr "%s 舊式類別資訊有矛盾(會不會是將舊的和新的類別混在了一起用？)"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part",     dQuote(cl), dQuote(prevClass))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s; the class is defined but "
"does not extend %s and is not valid as the data part"
msgstr ""
"%s 舊式類別資訊有矛盾；雖然類別的定義是存在的，但它不擴充 %s 而且也不能當作資"
"料來用"

#. R/zzz.R: gettext("initializing class and method definitions ...", domain = "R-methods")
#: R/zzz.R:0
msgid "initializing class and method definitions ..."
msgstr ""

#. R/RClassUtils.R: gettextf("initializing objects from class %s with these arguments is not supported",     dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"initializing objects from class %s with these arguments is not supported"
msgstr "類別為 %s 的帶這些引數的物件無法被初始化"

#. R/MethodsList.R: stop("inserting method corresponding to empty signature")
#: R/MethodsList.R:0
msgid "inserting method corresponding to empty signature"
msgstr "無法插入相對應於空標記的方法"

#. R/MethodsList.R: gettextf("inserting method into non-methods-list object (class %s)", dQuote(.class1(mlist)))
#: R/MethodsList.R:0
msgid "inserting method into non-methods-list object (class %s)"
msgstr "無法將方法插入非方法串列物件(類別為 %s)"

#. R/MethodsList.R: gettextf("inserting method with invalid signature matching argument '...' to class %s",     dQuote(signature[[1L]]))
#: R/MethodsList.R:0
msgid ""
"inserting method with invalid signature matching argument '...' to class %s"
msgstr "無法插入標記不正確的方法其引數 '…' 同類別 %s 相對應"

#. R/RMethodUtils.R: gettextf("internal error: Bad methods list object in fixing methods for primitive function %s",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"internal error: Bad methods list object in fixing methods for primitive "
"function %s"
msgstr "環境 %s 被鎖住了；無法為函式 %s 指定方法"

#. R/SClasses.R: sprintf("internal error: definition of class %s not properly assigned", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "internal error: definition of class %s not properly assigned"
msgstr "類別 %s 的定義不存在"

#. R/Methods.R: sprintf("internal error: did not get a valid generic function object for function %s",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid ""
"internal error: did not get a valid generic function object for function %s"
msgstr "用 %s 裡的函式 %s 來建立新的泛型函式"

#. R/as.R: sprintf("internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the metadata asserts that the 'is' relation is FALSE",     dQuote(thisClass), Class)
#: R/as.R:0
msgid ""
"internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the "
"metadata asserts that the 'is' relation is FALSE"
msgstr ""

#. R/refClass.R: stop("invalid 'Class' argument:  should be a single string")
#: R/refClass.R:0
msgid "invalid 'Class' argument:  should be a single string"
msgstr "'Class' 引數不對：應當是單字元字串"

#. R/show.R: gettextf("invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s",     dQuote(class(ignore)))
#: R/show.R:0
msgid ""
"invalid 'ignore' argument; should be a class definition or a character "
"vector, got an object of class %s"
msgstr ""
"'ignore' 引數不對，它要麼是類別定義，要麼是字串；現在得到的卻是類別為 %s 的物"
"件"

#. R/MethodsList.R: stop("invalid 'package' slot or attribute, wrong length")
#: R/MethodsList.R:0
msgid "invalid 'package' slot or attribute, wrong length"
msgstr "'package' 槽或屬性發生錯誤，其長度無效"

#. R/trace.R: gettextf("invalid 'source' argument: expected file names or a connection but got an object of class %s",     dQuote(class(source)[[1L]]))
#: R/trace.R:0
msgid ""
"invalid 'source' argument: expected file names or a connection but got an "
"object of class %s"
msgstr "'source' 引數不對：應該是檔案名稱或鏈結，現在卻是類別為 %s 的物件"

#. R/oldClass.R: gettext("invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s",     domain = "R-methods")
#: R/oldClass.R:0
msgid ""
"invalid S4 class corresponding to S3 class: slots in  S4 version must extend "
"corresponding slots in S3 version: fails for %s"
msgstr ""
"與 S3 類別相對應的 S4 類別不對：S4 類別裡的槽必須擴充類別 S3 中相對的槽：%s "
"發生錯誤"

#. R/Methods.R: gettextf("invalid argument 'name': %s", .isSingleName(name))
#: R/Methods.R:0
msgid "invalid argument 'name': %s"
msgstr "引數 'name' 無效: %s"

#. R/refClass.R: gettextf("invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)",     sQuote(fieldName), dQuote(fieldClass), dQuote(class(value)))
#: R/refClass.R:0
msgid ""
"invalid assignment for reference class field %s, should be from class %s or "
"a subclass (was class %s)"
msgstr "參照類別欄位 %s 的賦值不對，應當是 %s 類別或子類別 (原來是 %s 類別)"

#. R/RMethodUtils.R: gettextf("invalid call in method dispatch to '%s' (no default method)", name)
#: R/RMethodUtils.R:0
msgid "invalid call in method dispatch to '%s' (no default method)"
msgstr "給 '%s' 進行方法指派時的呼叫發生錯誤(沒有預設方法)"

#. R/show.R: gettextf("invalid call passed to 'classLabel': expected a name or a class definition, got an object of class %s",     classLabel(class(Class)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid call passed to 'classLabel': expected a name or a class definition, "
"got an object of class %s"
msgstr ""
"'classLabel' 呼叫不對：需要的是個名稱或類別定義，但得到的卻是類別為 %s 的目標"
"物件"

#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid "invalid class %s object:"
msgstr "類別為 %s 的物件無效"

#. R/MethodsList.R: gettextf("invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name",     i)
#: R/MethodsList.R:0
msgid ""
"invalid element in a list for \"signature\" argument; element %d is neither "
"a class definition nor a class name"
msgstr ""
"\"signature\"引數裡串列元素發生錯誤；第 %d 個元素不是類別定義出不是類別名稱"

#. R/RMethodUtils.R: gettextf("invalid element in the \"groupMembers\" slot (class %s)", dQuote(class(x)))
#: R/RMethodUtils.R:0
msgid "invalid element in the \"groupMembers\" slot (class %s)"
msgstr "\"groupMembers\"槽裡的單元不對(類別為 %s)"

#. R/MethodsList.R: stop("invalid first argument: should be the name of the first argument in the dispatch")
#: R/MethodsList.R:0
msgid ""
"invalid first argument: should be the name of the first argument in the "
"dispatch"
msgstr "第一個引數不對: 應該是指派裡的第一引數的名稱"

#. R/methodsTable.R: gettextf("invalid group generic function in search for inherited method (class %s)",     dQuote(class(gen)))
#: R/methodsTable.R:0
msgid ""
"invalid group generic function in search for inherited method (class %s)"
msgstr "在找繼承方法時出現的團體泛型函式不對(類別 %s)"

#. R/languageEl.R: stop("invalid index for function argument")
#: R/languageEl.R:0
msgid "invalid index for function argument"
msgstr "函式引數的索引無效"

#. R/Methods.R: gettextf("invalid method definition: expected a function, got an object of class %s",     dQuote(class(definition)))
#: R/Methods.R:0
msgid ""
"invalid method definition: expected a function, got an object of class %s"
msgstr "方法定義不對：提供的應該是函式，現在卻是個類別為 %s 的物件"

#. R/MethodsList.R: stop("invalid method sublist")
#: R/MethodsList.R:0
msgid "invalid method sublist"
msgstr "方法子串列不正確"

#. R/methodsTable.R: stop("invalid methods table request")
#: R/methodsTable.R:0
msgid "invalid methods table request"
msgstr "方法表要求發生錯誤"

#. R/methodsTable.R: gettextf("invalid mlist element for signature %s at level %d (should be MethodDefinition or .Primitive, had class %s)",     sQuote(classes[[j]]), i, dQuote(class(el)))
#: R/methodsTable.R:0
msgid ""
"invalid mlist element for signature %s at level %d (should be "
"MethodDefinition or .Primitive, had class %s)"
msgstr ""
"無效的 mlist 元素的標籤 %s 的 %d 級 (應該是方法列表或方法，類別另是 %s)"

#. R/MethodsListClass.R: gettextf("invalid object for formal method definition: type %s", dQuote(typeof(def)))
#: R/MethodsListClass.R:0
msgid "invalid object for formal method definition: type %s"
msgstr "正式方法定義的物件不對: %s 種類"

#. R/SClasses.R: gettextf("invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or extend class \"%s\"",     slotNames[[i]], Class, class(sloti)[[1L]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or "
"extend class \"%s\""
msgstr "槽 %s：類別 %s 無法擴充類別 %s"

#. R/methodsTable.R: gettextf("invalid object in meta table of methods for %s, label %s, had class %s",     sQuote(generic@generic), sQuote(what), dQuote(class(obj)))
#: R/methodsTable.R:0
msgid "invalid object in meta table of methods for %s, label %s, had class %s"
msgstr "元方法表裡方法 %1$s，標籤 %2$s 的物件不對，類別不應該是 %3$s"

#. R/methodsTable.R: gettextf("invalid object in methods table (%s), expected a method, got an object of class %s",     sQuote(what), dQuote(class(method)))
#: R/methodsTable.R:0
msgid ""
"invalid object in methods table (%s), expected a method, got an object of "
"class %s"
msgstr "方法表 (%s)裡的物件定義不對：應該是方法，現在卻是個類別為 %s 的物件"

#. R/methodsTable.R: gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic))
#: R/methodsTable.R:0
msgid "invalid or unset methods table in generic function %s"
msgstr "泛型函式 %s 的方法表不對，或還沒有設置\""

#. R/refClass.R: gettextf("invalid replacement: reference class field %s is read-only", sQuote(fieldName))
#: R/refClass.R:0
msgid "invalid replacement: reference class field %s is read-only"
msgstr "無效的替換值：參照類別欄位 %s 為唯讀"

#. R/RMethodUtils.R: gettextf("invalid value from generic function %s, class %s, expected one of %s",     sQuote(fname), dQuote(class(object)), paste(dQuote(classes), collapse = ", "))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid value from generic function %s, class %s, expected one of %s"
msgstr "類別為 %2$s 的泛型函式 '%1$s' 的值不對，所要求的是 %3$s"

#. R/refClass.R: gettextf("local assignment to field name will not change the field:\n    %s\n Did you mean to use \"<<-\"? ( in method %s for class %s)",     paste(unlist(assigned$locals)[localsAreFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"local assignment to field name will not change the field:\n"
"    %s\n"
" Did you mean to use \"<<-\"? ( in method %s for class %s)"
msgstr ""
"場名稱本地指派不會變更場的內容：\n"
"    %1$s\n"
" 您意思是不是用\"<<-\"？ (在類別 %3$s 的 %2$s 方法裡)"

#. R/RMethodUtils.R: gettextf("making a generic for special function %s", sQuote(f), domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "making a generic for special function %s"
msgstr "為特殊函式 %s 製造泛型函式"

#. R/trace.R: warning("making a traced version of a special; arguments may be altered")
#: R/trace.R:0
msgid "making a traced version of a special; arguments may be altered"
msgstr "創造一個被追蹤的特殊函式版本；其引數可被變更"

#. R/debug.R: warning("method is not being debugged")
#: R/debug.R:0
msgid "method is not being debugged"
msgstr "方法未被除錯"

#. R/RMethodUtils.R: gettextf("methods can add arguments to the generic %s only if '...' is an argument to the generic",     sQuote(generic@generic))
#: R/RMethodUtils.R:0
msgid ""
"methods can add arguments to the generic %s only if '...' is an argument to "
"the generic"
msgstr "只有當 '…' 是泛型方法引數時方法才能給泛型 %s 加引數"

#. R/as.R: gettextf("methods currently exist for coercing from %s to %s; they will be replaced.",     dQuote(from), dQuote(to))
#: R/as.R:0
msgid ""
"methods currently exist for coercing from %s to %s; they will be replaced."
msgstr "目前存在着強制轉換 %s 成 %s 的方法；這些方法將會被替換掉。"

#. R/refClass.R: gettext("methods declared in usingMethods() but not found: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "methods declared in usingMethods() but not found: %s"
msgstr "usingMethods() 裡有方法的宣告，但找不到：%s"

#. R/BasicFunsList.R: gettextf("methods may not be defined for primitive function %s in this version of R",     sQuote(f))
#: R/BasicFunsList.R:0
msgid ""
"methods may not be defined for primitive function %s in this version of R"
msgstr "此版本的 R 沒有給基元函式 %s 定義方法"

#. R/Defunct.R: stop("methods:::bind_activation() is defunct;\n rather provide methods for cbind2() / rbind2()")
#: R/Defunct.R:0
msgid ""
"methods:::bind_activation() is defunct;\n"
" rather provide methods for cbind2() / rbind2()"
msgstr ""
"methods:::bind_activation() 失去功能；\n"
" 代之以提供 cbind2() / rbind2() 方法"

#. R/RMethodUtils.R: gettextf("missing function for load action: %s", what)
#: R/RMethodUtils.R:0
msgid "missing function for load action: %s"
msgstr "荷載作業時找不到函式：%s"

#. R/MethodsListClass.R: gettextf("missing package slot (%s) in object of class %s (package info added)",     packageSlot(co), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
msgid "missing package slot (%s) in object of class %s (package info added)"
msgstr "%2$s 類別的物件裡缺少程輯封包槽(%1$s)(加入了程輯封包資訊)"

#. R/MethodsList.R: gettextf("more elements in the method signature (%d) than in the generic signature (%d) for function %s",     length(signature), length(anames), sQuote(fun@generic))
#: R/MethodsList.R:0
msgid ""
"more elements in the method signature (%d) than in the generic signature "
"(%d) for function %s"
msgstr "用在函式 %3$s 上的方法標記(%1$d)裡元素比泛型標記(%2$d)裡的要多"

#. R/RClassUtils.R: gettextf("more than one possible class for the data part: using %s rather than %s",     .dQ(prevDataPartClass), .dQ(value))
#: R/RClassUtils.R:0
msgid "more than one possible class for the data part: using %s rather than %s"
msgstr "資料部分有多種類別：用 %s 而不用 %s"

#. R/SClasses.R: gettext("multiple class definitions for class %s from packages: %s; picking the first",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple class definitions for class %s from packages: %s; picking the first"
msgstr "程式套件:%2$s 裡有多個類別 %1$s 的定義；現在用第一個"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s, but the supplied package (%s) is "
"not one of them (%s)"
msgstr "%s 類別存在多個定義，但提供的套件(%s)不是其中之一(%s)"

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s; should specify one of them (%s), e."
"g. by className()"
msgstr "%s 類別存在多個定義；應該指定用一個(%s)，比如透過 className()"

#. R/promptClass.R: gettextf("multiple definitions of %s found; using the one on %s", dQuote(clName),     whereClass)
#: R/promptClass.R:0
msgid "multiple definitions of %s found; using the one on %s"
msgstr "%s 有多個定義；用 %s 此一個"

#. R/RMethodUtils.R: gettextf("multiple direct matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple direct matches: %s; using the first of these"
msgstr "有多個直接的匹配:%s；用第一個"

#. R/RMethodUtils.R: gettextf("multiple equivalent inherited matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
msgid "multiple equivalent inherited matches: %s; using the first of these"
msgstr "多條等價繼承安匹配: %s；用第一個"

#. R/trace.R: gettextf("multiple generics match pattern, using table %s", table)
#: R/trace.R:0
msgid "multiple generics match pattern, using table %s"
msgstr "有多個泛型同模式相匹配，用表 %s"

#. R/Methods.R: gettextf("must provide an environment table; got class %s", dQuote(class(what)))
#: R/Methods.R:0
msgid "must provide an environment table; got class %s"
msgstr "必須提供環境表；得到的是 %s 類別"

#. R/Methods.R: gettextf("must supply a function skeleton for %s, explicitly or via an existing function",     sQuote(name))
#: R/Methods.R:0
msgid ""
"must supply a function skeleton for %s, explicitly or via an existing "
"function"
msgstr "必須提供函式 %s 的骨架，要麼是明確地提供，要麼透過已存在的函式來提供"

#. R/RMethodUtils.R: gettextf("must supply either a generic function or a function as default for %s",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "must supply either a generic function or a function as default for %s"
msgstr "必須為 %s 提供一個作預設用的泛型函式或函式"

#. R/method.skeleton.R: stop("need a definition for the method here")
#: R/method.skeleton.R:0
msgid "need a definition for the method here"
msgstr "這裡需要方法定義"

#. R/RClassUtils.R: gettextf("needed the supplied labels vector of length %d, got %d", length(nodes),     length(short))
#: R/RClassUtils.R:0
msgid "needed the supplied labels vector of length %d, got %d"
msgstr "需要的是長度為 %d 而不是 %d 的標籤向量"

#. R/RClassUtils.R: gettextf("no '.Data' slot defined for class %s", dQuote(class(object)))
#: R/RClassUtils.R:0
msgid "no '.Data' slot defined for class %s"
msgstr "類別 %s 沒有 '.Data' 此一個槽"

#. R/ClassExtensions.R: gettextf("no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s",     to, dQuote(class(from)))
#: R/ClassExtensions.R:0
msgid ""
"no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s"
msgstr ""
"不存在 %2$s 此一類別用於 'as(x，\"%1$s\") <- value' 函式的 'replace' 方法"

#. R/Methods.R: gettext("no applicable functions", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no applicable functions"
msgstr "不能同時用於兩個函式！"

#. R/trace.R: gettextf("no definition for object %s found in tracing environment", sQuote(what),     source)
#: R/trace.R:0
msgid "no definition for object %s found in tracing environment"
msgstr "在追溯環境裡找不到 %s 物件的定義"

#. R/fixPrevious.R: gettextf("no definition for the class of %s (class %s) found", sQuote(what), dQuote(class))
#: R/fixPrevious.R:0
msgid "no definition for the class of %s (class %s) found"
msgstr "類別為 %s 的定義不存在 (類別 %s)"

#. R/RMethodUtils.R: gettextf("no definition found for class %s", dQuote(classi), domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "no definition found for class %s"
msgstr "類別 %s 的定義不存在"

#. R/refClass.R: gettext("no definition found for inherited class: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "no definition found for inherited class: %s"
msgstr "繼承類別的定義不存在: %s"

#. R/SClasses.R: gettextf("no definition of %s to use for %s", dQuote(Class), unique)
#: R/SClasses.R:0
msgid "no definition of %s to use for %s"
msgstr "%s 沒有定義，不能為 %s 可行"

#. R/promptClass.R: gettextf("no definition of class %s found", dQuote(clName))
#: R/promptClass.R:0
msgid "no definition of class %s found"
msgstr "類別 %s 的定義不存在"

#. R/RClassUtils.R: gettextf("no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s",     .dQ(what), .dQ(def2@className), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"no definition of inheritance from %s to %s, though the relation was implied "
"by the setIs() from %s"
msgstr "不存在從 %s 到\"%s\"類別的繼承定義，雖然 %s 的 setIs()暗示其存在"

#. R/RClassUtils.R: gettextf("no definition was found for superclass %s in the specification of class %s",     dQuote(cl), dQuote(name))
#: R/RClassUtils.R:0
msgid ""
"no definition was found for superclass %s in the specification of class %s"
msgstr "在定義 %2$s 裡不存在母類別 %1$s 的定義"

#. R/Methods.R: gettextf("  no direct match found to signature (%s)", paste(signature, collapse = ", "),     domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no direct match found to signature (%s)"
msgstr "標記 %s 裡不存在任何方法"

#. R/Methods.R: gettextf("no environment or package corresponding to argument where=%s", deparse(where))
#: R/Methods.R:0
msgid "no environment or package corresponding to argument where=%s"
msgstr "找不到與 where=%s 引數符合的環境或套件"

#. R/Methods.R: gettextf("no existing definition for function %s", sQuote(f))
#: R/Methods.R:0
msgid "no existing definition for function %s"
msgstr "函式 %s 沒有定義"

#. R/addedFunctions.R: gettextf("no function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no function %s found"
msgstr "找不到 %s 此一函式"

#. R/trace.R: gettextf("no function definition for %s found", sQuote(what))
#: R/trace.R:0
msgid "no function definition for %s found"
msgstr "沒有 %s 這樣一個函式定義"

#. R/method.skeleton.R: gettextf("no function definition found for %s", sQuote(generic))
#: R/method.skeleton.R:0
msgid "no function definition found for %s"
msgstr "沒有 %s 函式定義"

#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#: R/Methods.R:0
msgid "no generic function %s found"
msgstr "不存在 %s 此一泛型函式"

#. R/MethodsList.R: gettextf("no generic function found corresponding to %s", sQuote(f))
#: R/MethodsList.R:0
msgid "no generic function found corresponding to %s"
msgstr "%s 找不到泛型函式"

#. R/Methods.R: gettextf("no generic function found for %s", sQuote(f))
#. R/RMethodUtils.R: gettextf("no generic function found for %s", sQuote(f))
#: R/Methods.R:0 R/RMethodUtils.R:0
msgid "no generic function found for %s"
msgstr "為 '%s' 找不到泛型函式"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for package %s",     sQuote(name), sQuote(package), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for package %s"
msgstr ""
"程式套件 %2$s 不允許泛型版本的 %1$s；\n"
"一個新的泛型函式將會同程式套件 %3$s 一起被指派"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for the global environment",     sQuote(name), sQuote(package))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for the global environment"
msgstr ""
"程式套件 %2$s 不允許泛型版本的 %1$s；\n"
"一個新的泛型函式將會同程式套件 %3$s 一起被指派"

#. R/Methods.R: gettextf("no method for %s matches class %s", sQuote("..."), dQuote(signature))
#: R/Methods.R:0
msgid "no method for %s matches class %s"
msgstr "%2$s 類別裡沒有一個匹配 %1$s 的方法"

#. R/Methods.R: gettext("no method found for function %s and signature %s", domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for function %s and signature %s"
msgstr "找不到對函式 %s 和標記 %s 適用的方法"

#. R/Methods.R: gettext("no method found for function '%s' and signature %s", domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for function '%s' and signature %s"
msgstr "函式 '%s' 和標記 %s 找不到方法"

#. R/Methods.R: gettextf("no method found for signature %s", paste(signature, collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "no method found for signature %s"
msgstr "標記 %s 裡不存在任何方法"

#. R/trace.R: gettextf("no method in methods table for %s for signature %s", sQuote(what), sQuote(signature))
#: R/trace.R:0
msgid "no method in methods table for %s for signature %s"
msgstr "函式 %s 標記 %s 方法表裡沒有設定方法"

#. R/as.R: gettextf("no method or default for 'as()' function replacement of %s with class=\"%s\"",     dQuote(thisClass), Class)
#: R/as.R:0
#, fuzzy
msgid ""
"no method or default for 'as()' function replacement of %s with class=\"%s\""
msgstr "沒有可用於 Class=\"%2$s\"as()\"%1$s\"替換值的方法或預設函式"

#. R/RMethodUtils.R: gettextf("no method or default matching the \"...\" arguments in %s", deparse(sys.call(sys.parent()),     nlines = 1))
#: R/RMethodUtils.R:0
msgid "no method or default matching the \"...\" arguments in %s"
msgstr "%s 裡沒有同\"…\"引數符合的方法或預設值"

#. R/as.R: gettextf("no method or default scheme for coercing %s to %s", dQuote(thisClass),     dQuote(Class))
#: R/as.R:0
#, fuzzy
msgid "no method or default scheme for coercing %s to %s"
msgstr "沒有可以用來強制轉換 %s 成 %s 的方法或預設函式"

#. R/RMethodUtils.R: gettextf("no methods found for %s; cacheGenericsMetaData() will have no effect",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "no methods found for %s; cacheGenericsMetaData() will have no effect"
msgstr "%s 找不到方法；'cacheGenericsMetaData()' 沒有作用"

#. R/methodsTable.R: gettextf("no methods table for generic %s from package %s in package %s", sQuote(generic@generic),     sQuote(generic@package), sQuote(getPackageName(where)))
#: R/methodsTable.R:0
msgid "no methods table for generic %s from package %s in package %s"
msgstr "在 %3$s 程式套件中程式套件 %2$s 裡的泛型 %1$s 沒有方法列表"

#. R/addedFunctions.R: gettextf("no non-generic function %s found", sQuote(name))
#: R/addedFunctions.R:0
msgid "no non-generic function %s found"
msgstr "找不到 %s 此一非泛型函式"

#. R/SClasses.R: gettextf("no package name supplied and no class definition found for class %s", dQuote(className))
#: R/SClasses.R:0
#, fuzzy
msgid "no package name supplied and no class definition found for class %s"
msgstr "沒有套件也沒有給 %s 做的類別定義"

#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#: R/RMethodUtils.R:0
msgid "no suitable arguments to dispatch methods in this function"
msgstr "此函式裡沒有合適的引數可用來指派方法"

#. R/RMethodUtils.R: gettext("non-empty string; got \"\"")
#: R/RMethodUtils.R:0
msgid "non-empty string; got \"\""
msgstr ""

#. R/RMethodUtils.R: gettextf("non-function action: %s", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "non-function action: %s"
msgstr "非函式作業：%s"

#. R/Methods.R: gettextf("non-generic function '%s' given to findMethods()", f)
#: R/Methods.R:0
msgid "non-generic function '%s' given to findMethods()"
msgstr "findMethods()不適用於非泛型函式 '%s'"

#. R/refClass.R: gettextf("non-local assignment to method names is not allowed\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsInMethods], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to method names is not allowed\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"不行允許非本地指派方法名稱\n"
"    %1$s\n"
"(在類別 %3$s 的 %2$s 方法裡)"

#. R/refClass.R: gettextf("non-local assignment to non-field names (possibly misspelled?)\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsNotFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to non-field names (possibly misspelled?)\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""
"非本地指派非場名稱(是不是您寫錯了？)\n"
"    %1$s\n"
"(在類別 %3$s 的 %2$s 方法裡)"

#. R/trace.R: stop("none of the objects in the source code could be found:  need to attach or specify the package")
#: R/trace.R:0
msgid ""
"none of the objects in the source code could be found:  need to attach or "
"specify the package"
msgstr "在原始碼中找不到任何物件：需要附加或指定程式套件"

#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#: R/refClass.R:0
msgid "not a reference class: %s"
msgstr "非參照類別: %s"

#. R/oldClass.R: stop("not allowed to have test==TRUE and an S4Class definition")
#: R/oldClass.R:0
msgid "not allowed to have test==TRUE and an S4Class definition"
msgstr "test==TRUE 和 S4Class 定義不能同時存在"

#. R/Methods.R: gettext("not both functions!", domain = "R-methods")
#: R/Methods.R:0
msgid "not both functions!"
msgstr "不能同時用於兩個函式！"

#. R/fixPrevious.R: gettextf("object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)",     sQuote(what))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it does not appear to be from a version of R earlier "
"than 1.8.0)"
msgstr "物件 %s 沒有變動 (它不是從 R 版本 1.8.0 之前來的)"

#. R/fixPrevious.R: gettextf("object %s not changed (it is not consistent with the current definition of class %s from %s)",     sQuote(what), dQuote(Class), sQuote(ClassDef@package))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it is not consistent with the current definition of "
"class %s from %s)"
msgstr "物件 %1$s 沒有變動 (它與 %3$s 裡類別為 %2$s 的目前定義不相符合)"

#. R/fixPrevious.R: gettextf("object %s was not found", sQuote(what))
#: R/fixPrevious.R:0
#, fuzzy
msgid "object %s was not found"
msgstr "找不到 %s 這個物件"

#. R/BasicClasses.R: gettextf("object must be a valid data part for class %s; not true of type %s", dQuote(cl),     dQuote(class(data)))
#: R/BasicClasses.R:0
msgid "object must be a valid data part for class %s; not true of type %s"
msgstr "%s 類別的目標物件必須包含有效的資料部分；但 %s 種類不是這樣的"

#. R/MethodsList.R: gettextf("object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object",     sQuote(fun@generic), length(sigClasses), length(signature))
#: R/MethodsList.R:0
msgid ""
"object to use as a method signature for function %s does not look like a "
"legitimate signature (a vector of single class names): there were %d class "
"names, but %d elements in the signature object"
msgstr ""
"為函式 %1$s 做為方法標記而用的物件看來不像是合法的標記(單類別名稱向量) ：一共"
"有 %2$d 類別名稱，但標記物件裡只有 %3$d 個元素"

#. R/trace.R: gettext("objects found in multiple packages: using %s and ignoring %s", domain = "R-methods")
#: R/trace.R:0
msgid "objects found in multiple packages: using %s and ignoring %s"
msgstr "在多個程式套件中找到了物件：用 %s 而不用 %s"

#. R/Methods.R: gettextf("only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)",     inherited)
#: R/Methods.R:0
msgid ""
"only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)"
msgstr "用 'where' 時，只有 FALSE 對於 'inherited' 有意義，(卻得到 %s)"

#. R/SClasses.R: stop("only arguments 'Class' and 'where' can be supplied when argument 'representation' is a \"classRepresentation\" object")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only arguments 'Class' and 'where' can be supplied when argument "
"'representation' is a \"classRepresentation\" object"
msgstr ""
"當引數 'representation' 是 'classRepresentation' 物件時只能使用 'Class' 和 "
"'where' 引數"

#. R/SClasses.R: stop("only one data object (unnamed argument passed to 'prototype()' function) allowed")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"only one data object (unnamed argument passed to 'prototype()' function) "
"allowed"
msgstr "只能有一個資料物件(原型的引數沒具名字)"

#. R/Methods.R: gettext("original function is prohibited as a generic function", domain = "R-methods")
#: R/Methods.R:0
msgid "original function is prohibited as a generic function"
msgstr "原始函式是禁止做為泛型函式來用的"

#. R/trace.R: gettextf("package %s is not attached and no namespace found for it", sQuote(package))
#: R/trace.R:0
msgid "package %s is not attached and no namespace found for it"
msgstr "%s 程式套件沒有被附加，也找不到它的命名空間"

#. R/methodsTable.R: gettext("package slot missing from signature for generic %s\n and classes %s\ncannot use with duplicate class names (the package may need to be re-installed)",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"package slot missing from signature for generic %s\n"
" and classes %s\n"
"cannot use with duplicate class names (the package may need to be re-"
"installed)"
msgstr ""

#. R/Methods.R: gettextf("package slots  differ: %s, %s", .dQ(gpString(f1@package)), .dQ(gpString(f2@package)),     domain = "R-methods")
#: R/Methods.R:0
msgid "package slots  differ: %s, %s"
msgstr "套件槽不相對: %s，%s"

#. R/RClassUtils.R: gettext("potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"potential cycle in class inheritance: %s has duplicates in superclasses and "
"subclasses (%s)"
msgstr "類別繼承裡有可能有循環: %s 在父類別和子類別(%s)裡有重複"

#. R/Methods.R: stop("primitive functions cannot be methods; they must be enclosed in a regular function")
#: R/Methods.R:0
msgid ""
"primitive functions cannot be methods; they must be enclosed in a regular "
"function"
msgstr "基元函式不能是方法函式；它們必須被包含在一個正規函式裡"

#. R/RClassUtils.R: warning("prototype is a list with named elements (could be ambiguous): better to use function 'prototype()' to avoid trouble.")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"prototype is a list with named elements (could be ambiguous): better to use "
"function 'prototype()' to avoid trouble."
msgstr ""
"原型是帶名稱單元的串列(允許有歧義) ：最好用函式 prototype()以避免發生錯誤。"

#. R/ClassExtensions.R: gettextf("replacement value must be of class %s, got one of class %s", dQuote(CLASS),     dQuote(class(value)[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must be of class %s, got one of class %s"
msgstr "替換值的類別必須是 %s，但現在得到的類別是 %s"

#. R/ClassExtensions.R: gettextf("replacement value must extend class %s, got %s", dQuote(needClass), dQuote(S3Class[[1L]]))
#: R/ClassExtensions.R:0
msgid "replacement value must extend class %s, got %s"
msgstr "替換值必須擴充 %s 類別，但現在得到的是 %s"

#. R/oldClass.R: gettextf("restoring definition of class %s", dQuote(cl))
#: R/oldClass.R:0
msgid "restoring definition of class %s"
msgstr "恢復類別 %s 的定義"

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
msgid ""
"selectMethod(): mlist is not an environment or NULL :\n"
"** should no longer happen!"
msgstr ""

#. R/trace.R: gettextf("setting a method over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(getPackageName(where)))
#: R/trace.R:0
msgid ""
"setting a method over the binding of symbol %s in environment/package %s"
msgstr "在環境/程輯封包 %2$s 裡將符號 %1$s 的連結重新進行了方法設定"

#. R/Methods.R: gettextf("signatures differ:  (%s), (%s)", paste(f1@signature, collapse = ", "),     paste(f2@signature, collapse = ", "), domain = "R-methods")
#: R/Methods.R:0
msgid "signatures differ:  (%s), (%s)"
msgstr "標記不相對: (%s)，(%s)"

#. R/RMethodUtils.R: gettextf("single string; got a character vector of length %d", length(what))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "single string; got a character vector of length %d"
msgstr "%s 場需要單一類別名稱，現在得到的是長度為 %d 的字串"

#. R/RMethodUtils.R: gettextf("single string; got an object of class %s", dQuote(class(what)[[1L]]))
#: R/RMethodUtils.R:0
msgid "single string; got an object of class %s"
msgstr "單獨字串：不該是類別為 %s 的物件"

#. R/MethodsList.R: gettext("skipping methods list element %s of unexpected class %s\n\n", domain = "R-methods")
#: R/MethodsList.R:0
msgid "skipping methods list element %s of unexpected class %s"
msgstr "因為其類別 %2$s 沒有定義，忽略 %1$s 此一方法串列單元"

#. R/oldClass.R: gettextf("slot %s: class %s should extend class %s", sQuote(what), dQuote(slots1[[what]]),     dQuote(slots2[[what]]))
#: R/oldClass.R:0
msgid "slot %s: class %s should extend class %s"
msgstr "槽 %s：類別 %s 無法擴充類別 %s"

#. R/SClasses.R: gettext("slots in class definition but not in object:")
#: R/SClasses.R:0
msgid "slots in class definition but not in object:"
msgstr ""

#. R/RMethodUtils.R: gettext("some actions are missing: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "some actions are missing: %s"
msgstr "有些作業沒有：%s"

#. R/methodsTable.R: gettextf("something weird: inconsistent number of args in methods table strings: %s (using the largest value)",     paste(nargs, collapse = ", "), domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"something weird: inconsistent number of args in methods table strings: %s "
"(using the largest value)"
msgstr ""

#. R/SClasses.R: gettextf("superclass \"%s\" not defined in the environment of the object's class",     superClass)
#: R/SClasses.R:0
#, fuzzy
msgid "superclass \"%s\" not defined in the environment of the object's class"
msgstr "類別 %s 在這個環境裡沒有定義"

#. R/trace.R: gettextf("supplied package, %s, differs from package inferred from source, %s", sQuote(package),     sQuote(envPackage))
#: R/trace.R:0
msgid "supplied package, %s, differs from package inferred from source, %s"
msgstr "提供的程式套件，%s，與從來源推斷出的程式套件，%s，不一樣"

#. R/methodsTable.R: gettextf("the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s",     dQuote(class(condAction)))
#: R/methodsTable.R:0
msgid ""
"the \"ambiguousMethodSelection\" option should be a function to be called as "
"the condition action; got an object of class %s"
msgstr ""
"\"ambiguousMethodSelection\" 這個選項應該是做為條件來呼叫的函式；現在它卻是類"
"別為 %s 的物件"

#. R/RMethodUtils.R: gettextf("the %s argument must be NULL or a generic function object; got an object of class %s",     sQuote("genericFunction"), dQuote(class(genericFunction)))
#: R/RMethodUtils.R:0
msgid ""
"the %s argument must be NULL or a generic function object; got an object of "
"class %s"
msgstr "%s 的引數要麼是 NULL，要麼是泛型函式物件；現在卻是類別為 %s 的物件"

#. R/RClassUtils.R: gettextf("the '%s' list for class %s, includes an undefined class %s", if (superClassCase) "superClass" else "subClass",     dQuote(className), dQuote(.className(by)))
#: R/RClassUtils.R:0
msgid "the '%s' list for class %s, includes an undefined class %s"
msgstr "類別為 %2$s 的 '%1$s' 串列，包含不存在的類別 %3$s"

#. R/ClassExtensions.R: gettextf("the 'S3Class' argument must be a superclass of %s: not true of class %s",     dQuote(class(object)), dQuote(S3Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "the 'S3Class' argument must be a superclass of %s: not true of class %s"
msgstr "'S3Class' 引數必須是 %s 的母類別: %s 不是這種情況"

#. R/ClassExtensions.R: gettextf("the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s",     dQuote(class(coerce)))
#: R/ClassExtensions.R:0
msgid ""
"the 'coerce' argument to 'setIs' should be a function of one argument, got "
"an object of class %s"
msgstr ""
"'setIs' 的 'coerce' 引數值必須是單引數函式，而現在它卻是類別為 %s 的物件"

#. R/refClass.R: gettextf("the 'contains' argument should be the names of superclasses:  got an element of class %s",     dQuote(class(what)))
#: R/refClass.R:0
msgid ""
"the 'contains' argument should be the names of superclasses:  got an element "
"of class %s"
msgstr "'contains' 引數應當是超類別的名稱(現在卻是類別為 %s 的物件)"

#. R/show.R: gettext("the 'oldMethods' argument is deprecated, as it has been unused since R 1.7.0",     domain = "R-methods")
#: R/show.R:0
msgid ""
"the 'oldMethods' argument is deprecated, as it has been unused since R 1.7.0"
msgstr ""

#. R/ClassExtensions.R: gettextf("the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s",     dQuote(class(replace)))
#: R/ClassExtensions.R:0
msgid ""
"the 'replace' argument to setIs() should be a function of 2 or 3 arguments, "
"got an object of class %s"
msgstr ""
"setIs()的 'replace' 引數必須是個二或三引數的函式，現在得到的卻是類別為 %s 的"
"物件"

#. R/Methods.R: gettextf("the 'where' environment (%s) is a locked namespace; cannot assign methods there",     getPackageName(where))
#: R/Methods.R:0
msgid ""
"the 'where' environment (%s) is a locked namespace; cannot assign methods "
"there"
msgstr "'where' 所指的環境(%s)是個鎖住的命名空間；因此無法在其中指定方法"

#. R/oldClass.R: gettextf("the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")",     .class1(prototype), mainClass)
#: R/oldClass.R:0
msgid ""
"the S3 class of the prototype, \"%s\", is undefined; only allowed when this "
"is the S3 class being registered (\"%s\")"
msgstr ""
"S3 類別的原型，\"%s\"，沒有定義；只有在註冊這個 S3 類別時才允許這種情況(\"%s"
"\")"

#. R/RMethodUtils.R: gettextf("the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!",     sQuote(fname), paste(as.character(x[[2L]]), collapse = "\n"))
#: R/RMethodUtils.R:0
msgid ""
"the body of the generic function for %s calls 'standardGeneric' to dispatch "
"on a different name (\"%s\")!"
msgstr ""
"'%s' 泛型函式的程式部分調用 'standardGeneric' 來指派給一個不同的名稱(\"%s"
"\")！"

#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#: R/refClass.R:0
msgid ""
"the class of field %s in the object is not compatible with the desired class "
"%s in the target"
msgstr "%s 物件場類別不符合目標中 %s 類別的需要"

#. R/ClassExtensions.R: gettextf("the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)\n",     TO, dQuote(FROM), TO, dQuote(class(value)))
#: R/ClassExtensions.R:0
msgid ""
"the computation: 'as(object,\"%s\") <- value' is valid when object has class "
"%s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)"
msgstr ""
"運算發生錯誤：當 object 的類別是 %2$s 時，'as(object,\"%1$s\") <- value' 只能"
"在 'is(value，\"%3$s\")' 值為 TRUE 的時候才能用('class(value) ' 的值不能是 "
"%4$s)"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid ""
"the definition of class %s in package %s is locked so fields may not be "
"modified"
msgstr "套件 %2$s 中 %1$s 類別的定義封閉了，因此無法修改場的定義"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked, methods may not be redefined",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
msgid ""
"the definition of class %s in package %s is locked, methods may not be "
"redefined"
msgstr "套件 %2$s 中 %1$s 類別的定義封閉了，因此無法將方法重新定義"

#. R/trace.R: stop("the editing in trace() can only change the body of the function, not the arguments or defaults")
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function, not the "
"arguments or defaults"
msgstr "trace() 裡的編輯只能用來變更函式主體，不能用於引數預設值"

#. R/trace.R: gettextf("the editing in trace() can only change the body of the function; got an object of class %s",     dQuote(class(def2)))
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function; got an "
"object of class %s"
msgstr "trace() 裡的編輯只能用來變更函式主體；現在得到的卻是類別為 %s 的物件"

#. R/Methods.R: gettextf("the environment %s is locked; cannot assign methods for function %s", sQuote(getPackageName(where)),     sQuote(f))
#: R/Methods.R:0
msgid "the environment %s is locked; cannot assign methods for function %s"
msgstr "環境 %s 被鎖住了；無法為函式 %s 指定方法"

#. R/RMethodUtils.R: gettextf("the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed",     what, sQuote(f))
#: R/RMethodUtils.R:0
msgid ""
"the function being used as %s in making a generic function for %s is "
"currently traced; the function used will have tracing removed"
msgstr ""
"在為 %2$s 製造泛型函式時用的 %1$s 此一個函式現在已經被追蹤；因此刪除了對所用"
"函式的追蹤"

#. R/ClassUnion.R: gettext("the member classes must be defined: not true of %s", domain = "R-methods")
#: R/ClassUnion.R:0
msgid "the member classes must be defined: not true of %s"
msgstr "必須設定成員類別: %s 不明的設定"

#. R/trace.R: gettextf("the method for %s for this signature was not being traced", sQuote(what))
#: R/trace.R:0
msgid "the method for %s for this signature was not being traced"
msgstr "此標記的 %s 方法沒有被追蹤"

#. R/Methods.R: gettextf("the method for function %s and signature %s is sealed and cannot be re-defined",     sQuote(f), .signatureString(fdef, signature))
#: R/Methods.R:0
msgid ""
"the method for function %s and signature %s is sealed and cannot be re-"
"defined"
msgstr "函式 %s 的方法和 %s 標記都被封閉了，因此無法將之重新定義"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match %s's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match %s's arguments (%s)"
msgstr "方法(%s)標記裡的名稱同函式 %s 引數(%s)不相對應"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match function's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid ""
"the names in signature for method (%s) do not match function's arguments (%s)"
msgstr "方法 (%s) 標記裡的名稱與函式的引數 (%s) 不相符"

#. R/refClass.R: gettextf("the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")",     value[[field]], sQuote(field), fieldList[[field]])
#: R/refClass.R:0
msgid ""
"the overriding class (\"%s\") of field %s is not a subclass of the existing "
"field definition (\"%s\")"
msgstr "場 %2$s 的首要類別(\"%1$s\")不是已經存在的場定義的子類別(\"%3$s\")"

#. R/MethodsList.R: gettextf("there are named arguments (%s) in the method signature that ambiguously match the generic signature, for function %s",     paste(sQuote(names(sigList)[ambig]), collapse = ", "), sQuote(fun@generic), domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"there are named arguments (%s) in the method signature that ambiguously "
"match the generic signature, for function %s"
msgstr "用在函式 %3$s 上的方法標記(%1$d)裡元素比泛型標記(%2$d)裡的要多"

#. R/MethodsList.R: gettextf("there are named arguments (%s) in the method signature that are missing from the generic signature, for function %s",     paste(sQuote(names(sigList)[is.na(argmatches)]), collapse = ", "), sQuote(fun@generic),     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"there are named arguments (%s) in the method signature that are missing from "
"the generic signature, for function %s"
msgstr "用在函式 %3$s 上的方法標記(%1$d)裡元素比泛型標記(%2$d)裡的要多"

#. R/ClassExtensions.R: gettextf("there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error",     to, dQuote(Class))
#: R/ClassExtensions.R:0
msgid ""
"there is no automatic definition for 'as(object, \"%s\") <- value' when "
"object has class %s and no 'replace' argument was supplied; replacement will "
"be an error"
msgstr ""
"當物件的類別為 %2$s 而 'replace' 引數不存在的話，沒有自動定義的 "
"'as(object，\"%1$s\") <- value' 這樣一個函式；因此替換時將發生錯誤"

#. R/refClass.R: gettextf("topic %s is not a method name in class %s\nThe class definition follows\n",     sQuote(topic), dQuote(className), domain = "R-methods")
#: R/refClass.R:0
msgid ""
"topic %s is not a method name in class %s\n"
"The class definition follows"
msgstr ""
"%s 主題在 %s 類別裡不是方法名稱\n"
"類別定義在下面"

#. R/trace.R: gettextf("tracing the internal function %s is not allowed", sQuote(what))
#: R/trace.R:0
msgid "tracing the internal function %s is not allowed"
msgstr "不可以對內部函式 %s 進行追蹤"

#. R/RClassUtils.R: gettextf("trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object",     dQuote(class(def)), dQuote(Class))
#: R/RClassUtils.R:0
msgid ""
"trying to assign an object of class %s as the definition of class %s: must "
"supply a \"classRepresentation\" object"
msgstr ""
"無法將類別為 %s 的物件指定成類別 %s 的定義：必須提供\"classRepresentation\"這"
"種物件"

#. R/RClassUtils.R: gettext("trying to change the argument list of %s with %d arguments to have arguments (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"trying to change the argument list of %s with %d arguments to have arguments "
"(%s)"
msgstr ""
"無法在 %s 中變更正式引數，因為存在的引數數目比新的引數數目要小：(%s)比(%s)"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s in an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s in an object of class %s; "
"expected a function definition"
msgstr "%s 裡在類別為 %s 的物件中是不能變更其正式引數的；所需要的是函式定義"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but getting the new formals "
"from an object of class %s; expected a function definition"
msgstr ""
"無法在 %s 中變更正式引數，因為從類別為 %s 的物件裡得到的是新的正式引數；所需"
"要的是函式定義"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is greater than the number of new arguments (the extra arguments "
"won't be used): (%s) vs (%s)"
msgstr ""
"無法在 %s 中變更正式引數，因為存在的引數數目比新的引數數目要大(額外的變無是不"
"能用的): (%s)比(%s)"

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is less than the number of new arguments: (%s) vs (%s)"
msgstr ""
"無法在 %s 中變更正式引數，因為存在的引數數目比新的引數數目要小：(%s)比(%s)"

#. R/methodsTable.R: gettext("trying to check signature length of generic %s, but it is not a generic function: i = %d, funs = %s, gnames = %s",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of generic %s, but it is not a generic "
"function: i = %d, funs = %s, gnames = %s"
msgstr ""
"檢查泛型 '%s' 的標記長度，但它不是團體泛型 function: i = %d，funs = %s，"
"gnames = %s"

#. R/methodsTable.R: gettextf("trying to check signature length of group generic %s, but it is not a group generic",     sQuote(what))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of group generic %s, but it is not a group "
"generic"
msgstr "檢查團體泛型 '%s' 的標記長度，但它不是團體泛型"

#. R/methodsTable.R: stop("trying to find a methods table in a non-generic function")
#: R/methodsTable.R:0
msgid "trying to find a methods table in a non-generic function"
msgstr "在非泛型函式裡是找不到方法表的"

#. R/MethodsList.R: gettextf("trying to match a method signature of class %s; expects a list or a character vector",     dQuote(class(signature)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature of class %s; expects a list or a "
"character vector"
msgstr "無法同類別為 %s 的方法標記相對應 ; 必須用串列或字元向量"

#. R/MethodsList.R: gettextf("trying to match a method signature to an object (of class %s) that is not a generic function",     dQuote(class(fun)))
#: R/MethodsList.R:0
msgid ""
"trying to match a method signature to an object (of class %s) that is not a "
"generic function"
msgstr "無法將方法標記同一個不是泛型函式的物件(類別是 %s)相對應起來"

#. R/as.R: gettextf("trying to set an 'as' relation from %s to itself", dQuote(.class1(from)))
#: R/as.R:0
msgid "trying to set an 'as' relation from %s to itself"
msgstr "無法為 %s 與自己設立 'as' 關係"

#. R/ClassUnion.R: gettext("unable to create union class: could not set members %s", domain = "R-methods")
#: R/ClassUnion.R:0
#, fuzzy
msgid "unable to create union class: could not set members %s"
msgstr "無法建立併集類別: 無法設定 %s 成員"

#. R/RClassUtils.R: gettext("unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"unable to find a consistent ordering of superclasses for class %s: order "
"chosen is inconsistent with the superclasses of %s"
msgstr "無法為類別 %s 找到相容的超類別順序: 所選擇的順序同 %s 超類別不相容"

#. R/RClassUtils.R: gettextf("unable to find an environment containing class %s", dQuote(Class))
#: R/RClassUtils.R:0
msgid "unable to find an environment containing class %s"
msgstr "找不到包含類別 %s 的環境"

#. R/methodsTable.R: gettextf("unable to find an inherited method for function %s for signature %s", sQuote(fdef@generic),     sQuote(cnames))
#: R/methodsTable.R:0
msgid "unable to find an inherited method for function %s for signature %s"
msgstr "函式 %s 標籤 %s 找不到繼承方法"

#. R/RClassUtils.R: gettextf("unable to find required package %s", sQuote(package))
#: R/RClassUtils.R:0
msgid "unable to find required package %s"
msgstr "找不到所需要的程輯封包 %s"

#. R/as.R: stop("undefined 'coerce' method")
#: R/as.R:0
msgid "undefined 'coerce' method"
msgstr "沒有 'coerce' 方法"

#. R/SClasses.R: gettextf("undefined class for slot '%s' (\"%s\")", slotNames[[i]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid "undefined class for slot '%s' (\"%s\")"
msgstr "在 %s 的定義中不存在這種槽類別: %s"

#. R/methodsTable.R: gettext("undefined classes (%s) will be ignored for argument %s", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "undefined classes (%s) will be ignored for argument %s"
msgstr "引數 '%2$s' 裡沒有定義的類別(%1$s)會被忽略不用"

#. R/RClassUtils.R: gettext("undefined slot classes in definition of %s: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "undefined slot classes in definition of %s: %s"
msgstr "在 %s 的定義中不存在這種槽類別: %s"

#. R/RClassUtils.R: gettextf("undefined subclass %s of class %s; definition not updated", .dQ(what),     .dQ(def@className))
#: R/RClassUtils.R:0
msgid "undefined subclass %s of class %s; definition not updated"
msgstr "%2$s 類別的子類別 %1$s 沒有定義；因此沒有更新"

#. R/zzz.R: message("unloading 'methods' package ...")
#: R/zzz.R:0
msgid "unloading 'methods' package ..."
msgstr "卸載 'methods' 程式套件"

#. R/BasicClasses.R: gettextf("unnamed argument must extend either the S3 class or the class of the data part; not true of class %s",     dQuote(Classi))
#: R/BasicClasses.R:0
msgid ""
"unnamed argument must extend either the S3 class or the class of the data "
"part; not true of class %s"
msgstr ""
"沒具名字的引數要麼擴充 S3 類別，要麼擴充資料類別；%s 類別沒有做到此一點"

#. R/BasicClasses.R: gettextf("unnamed argument passed to 'initialize()' for S3 class must have a class definition; %s does not",     dQuote(Classi))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'initialize()' for S3 class must have a class "
"definition; %s does not"
msgstr ""
"給 S3 類別用的 initialize() 函式中沒具名字的引數必須有類別定義；但 %s 沒有"

#. R/BasicClasses.R: stop("unnamed argument passed to 'new()' method must be an environment for the new object")
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'new()' method must be an environment for the new "
"object"
msgstr "為新物件呼叫 new()時中的無名稱引數必須是環境"

#. R/refClass.R: gettextf("unnamed arguments to $new() must be objects from a reference class; got an object of class %s",     dQuote(class(super)))
#: R/refClass.R:0
msgid ""
"unnamed arguments to $new() must be objects from a reference class; got an "
"object of class %s"
msgstr ""
"$new() 裡沒具名字的引數必須是從參照類別來的物件；現在得到的卻是類別 %s 的物件"

#. R/RClassUtils.R: gettextf("validity method for class \"%s\"", Class)
#: R/RClassUtils.R:0
#, fuzzy
msgid "validity method for class \"%s\""
msgstr "%2$s 類別裡沒有一個匹配 %1$s 的方法"

#. R/SClasses.R: stop("validity method must be NULL or a function of one argument")
#: R/SClasses.R:0
msgid "validity method must be NULL or a function of one argument"
msgstr "正確的方法要麼是 NULL 要麼是帶一個引數的函式"

#. R/Methods.R: gettextf("value classes differ: %s, %s", .dQ(gpString(f1@valueClass)), .dQ(gpString(f2@valueClass)))
#: R/Methods.R:0
msgid "value classes differ: %s, %s"
msgstr "值類別不相對: %s，%s"

#. R/methodsTable.R: ngettext(length(pkgs), "  (%d methods defined for this signature, with different packages)\n",     "  (%d methods defined for this signature, with different packages)\n", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "  (%d methods defined for this signature, with different packages)\n"
msgid_plural ""
"  (%d methods defined for this signature, with different packages)\n"
msgstr[0] "此標記的 %s 方法沒有被追蹤"

#. R/methodsTable.R: ngettext(length(candidates), "Choosing method %s from %d ambiguous possibility",     "Choosing method %s from %d ambiguous possibilities", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Choosing method %s from %d ambiguous possibility"
msgid_plural "Choosing method %s from %d ambiguous possibilities"
msgstr[0] "從 %2$d 個歧義可能選擇中選 %1$s 方法"

#. R/MethodsListClass.R: ngettext(nreport, "Reported %d ambiguous selection out of %d for function %s", "Reported %d ambiguous selections out of %d for function %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "Reported %d ambiguous selection out of %d for function %s"
msgid_plural "Reported %d ambiguous selections out of %d for function %s"
msgstr[0] "函式 %3$s 裡 %2$d 個選擇有 %1$d 是歧義的\n"

#. R/methodsTable.R: ngettext(which2, "Selecting %d method of minimum distance", "Selecting %d methods of minimum distance",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d method of minimum distance"
msgid_plural "Selecting %d methods of minimum distance"
msgstr[0] "選用最小距離 %d 方法"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d non-group method", "Selecting %d non-group methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d non-group method"
msgid_plural "Selecting %d non-group methods"
msgstr[0] "選用 %d 非組方法"

#. R/methodsTable.R: ngettext(length(which), "Selecting %d partially exact-matching method", "Selecting %d partially exact-matching methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d partially exact-matching method"
msgid_plural "Selecting %d partially exact-matching methods"
msgstr[0] "選用 %d 部分精密匹配方法"

#. R/is.R: ngettext(sum(is.na(match(n2, n1))), "class %s is missing slot from class %s (%s), and no coerce method was supplied",     "class %s is missing slots from class %s (%s), and no coerce method was supplied",     domain = "R-methods")
#: R/is.R:0
msgid ""
"class %s is missing slot from class %s (%s), and no coerce method was "
"supplied"
msgid_plural ""
"class %s is missing slots from class %s (%s), and no coerce method was "
"supplied"
msgstr[0] "類別 %s 在類別 %s(%s)中缺少槽，找不到強制方法"

#. R/SClasses.R: ngettext(length(dslots), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#. R/SClasses.R: ngettext(length(duplicated(snames)), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicated slot name: %s"
msgid_plural "duplicated slot names: %s"
msgstr[0] "重複槽名稱: %s"

#. R/methodsTable.R: ngettext(length(methods), "found %d equally good next method", "found %d equally good next methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "found %d equally good next method"
msgid_plural "found %d equally good next methods"
msgstr[0] "找到了 %d 個同樣有效的方法"

#. R/MethodsList.R: ngettext(sum(is.na(which)), "in the method signature for function %s invalid argument name in the signature: %s",     "in the method signature for function %s invalid argument names in the signature: %s",     domain = "R-methods")
#: R/MethodsList.R:0
msgid ""
"in the method signature for function %s invalid argument name in the "
"signature: %s"
msgid_plural ""
"in the method signature for function %s invalid argument names in the "
"signature: %s"
msgstr[0] "在函式 %s 裡的方法標記中標記的引數名稱不對: %s"

#. R/SClasses.R: ngettext(sum(is.na(which)), "invalid name for slot of class %s: %s", "invalid names for slots of class %s: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "invalid name for slot of class %s: %s"
msgid_plural "invalid names for slots of class %s: %s"
msgstr[0] "類別 %s 的槽的名稱不對：%s"

#. R/SClasses.R: ngettext(length(pkgs), "multiple definition of class %s visible (%s); using the definition\n   in package %s for %s",     "multiple definitions of class %s visible (%s); using the definition\n   in package %s for %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"multiple definition of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgid_plural ""
"multiple definitions of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgstr[0] "看得到 %s 有多個定義(%s)；現在用程式套件 %s 中 %s 的定義"

#. R/RClassUtils.R: ngettext(sum(is.na(match(pnames, slots))), "named elements of prototype do not correspond to slot name: %s",     "named elements of prototype do not correspond to slot names: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "named elements of prototype do not correspond to slot name: %s"
msgid_plural "named elements of prototype do not correspond to slot names: %s"
msgstr[0] "原型的命名單元同槽的名稱對應不上: %s"

#. R/MethodsList.R: ngettext(length(unknown), "no definition for class %s", "no definition for classes %s",     domain = "R-methods")
#: R/MethodsList.R:0
msgid "no definition for class %s"
msgid_plural "no definition for classes %s"
msgstr[0] "類別 %s 的定義不存在"

#. R/promptClass.R: ngettext(length(whereClass), "no definition of class %s in the specified position, %s, definition on : %s",     "no definition of class %s in the specified position, %s, definitions on : %s",     domain = "R-methods")
#: R/promptClass.R:0
msgid ""
"no definition of class %s in the specified position, %s, definition on : %s"
msgid_plural ""
"no definition of class %s in the specified position, %s, definitions on : %s"
msgstr[0] "在指定的 %2$s 這個位置不存在類別 %1$s 的定義，定義在: %3$s"

#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s", "non-arguments found in the signature: %s",     domain = "R-methods")
#. R/RMethodUtils.R: ngettext(sum(not.s.in.a), "non-argument found in the signature: %s", "non-arguments found in the signature: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "non-argument found in the signature: %s"
msgid_plural "non-arguments found in the signature: %s"
msgstr[0] "標記裡出現了非引數：%s"

#. R/is.R: ngettext(length(bad), "slot in class %s must extend corresponding slot in class %s: fails for %s",     "slots in class %s must extend corresponding slots in class %s: fails for %s",     domain = "R-methods")
#: R/is.R:0
msgid ""
"slot in class %s must extend corresponding slot in class %s: fails for %s"
msgid_plural ""
"slots in class %s must extend corresponding slots in class %s: fails for %s"
msgstr[0] "類別 %s 裡的槽必須擴充類別 %s 中相對的槽：%s 發生錯誤"

#. R/RMethodUtils.R: ngettext(length(fdef), "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)",     "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"the formal argument of the generic function for %s (%s) differs from that of "
"the non-generic to be used as the default (%s)"
msgid_plural ""
"the formal arguments of the generic function for %s (%s) differ from those "
"of the non-generic to be used as the default (%s)"
msgstr[0] ""
"用於 %s 泛型函式(%s)的正式引數與將做為預設值(%s)來用的非泛型的正式引數不相符"
"合"

#~ msgid "no generic function found for '%s'"
#~ msgstr "找不到適合 '%s' 的泛型函式"

#~ msgid "must supply 'generic.function' or 'class'"
#~ msgstr "必須提供 'generic.function' 或 'class'"

#~ msgid "duplicated slot names: %s"
#~ msgstr "重複槽名稱: %s"

#~ msgid "move the file or remove the class/method"
#~ msgstr "移動檔案或刪除類別/方法"

#~ msgid ""
#~ "subclass %s of class %s is not local and cannot be updated for new "
#~ "inheritance information; consider setClassUnion()"
#~ msgstr ""
#~ "%2$s 類別的 %1$s 子類別不是區域性的，因此無法按新的繼承資訊進行更新；考慮"
#~ "用 setClassUnion()"
