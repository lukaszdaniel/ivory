# Portuguese translations for R package.
# Copyright (C) 2005 The R Foundation
# This file is distributed under the same license as the R package.
# Fernando Henrique Ferraz P. da Rosa <feferraz@ime.usp.br>, 2005.
msgid ""
msgstr ""
"Project-Id-Version: R 2.2.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2014-11-30 14:48\n"
"PO-Revision-Date: 2011-03-26 08:56-0300\n"
"Last-Translator: Fernando Henrique <pessoal@fernandohrosa.com.br>\n"
"Language-Team: http://www.feferraz.net/br/P/Projeto_Traducao_R_Portugues\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Pootle 2.0.5\n"

#. R/MethodsList.R: gettext("## Signature:", domain = "R-methods")
#: R/MethodsList.R:0
msgid "## Signature:"
msgstr ""

#. R/MethodsListClass.R: gettext("%d: target %s: chose %s (others: %s)", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "%d: target %s: chose %s (others: %s)"
msgstr ""

#. R/MethodsList.R: gettextf("%f is not a valid generic function: methods list was an object of class %s",     sQuote(f), dQuote(class(mlist)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"%f is not a valid generic function: methods list was an object of class %s"
msgstr ""
"'%f' não é uma função genérica válida: lista de métodos era um objeto de "
"classe \"%s\""

#. R/Methods.R: gettextf("%s has no methods defined", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "%s has no methods defined"
msgstr "\"%s\" não tem métodos definidos"

#. R/Methods.R: gettextf("%s is a primitive function;  methods can be defined, but the generic function is implicit, and cannot be changed.",     sQuote(name))
#: R/Methods.R:0
msgid ""
"%s is a primitive function;  methods can be defined, but the generic "
"function is implicit, and cannot be changed."
msgstr ""
"'%s' é uma função primitiva; métodos podem ser definidos, mas a função "
"genérica está implícita e não pode ser modificada"

#. R/Methods.R: gettextf("%s is a primitive function; its generic form cannot be redefined", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "%s is a primitive function; its generic form cannot be redefined"
msgstr ""
"\"%s\" é uma função primitiva; sua forma genérica não pode ser redefinida"

#. R/SClasses.R: gettextf("%s is not a defined class", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "%s is not a defined class"
msgstr "'%s' não é uma das funções básicas"

#. R/refClass.R: gettextf("%s is not a defined class in this environment", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a defined class in this environment"
msgstr "\"%s\" náo é uma classe definida nesse ambiente"

#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(field), dQuote(thisClass@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(def@className))
#. R/refClass.R: gettextf("%s is not a field in class %s", sQuote(what), dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a field in class %s"
msgstr "classe \"%s\" extende uma classe não definida, \"%s\""

#. R/refClass.R: gettextf("%s is not a field in this class", sQuote(name))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a field in this class"
msgstr "\"%s\" não é um campo definido nessa classe"

#. R/RMethodUtils.R: gettextf("%s is not a generic function (or not visible here)", sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "%s is not a generic function (or not visible here)"
msgstr "\"%s\" não é uma função genérica (ou não visível aqui)"

#. R/trace.R: gettextf("%s is not a method for reference class %s", sQuote(as.character(if (is.symbol(thisName)) thisName else what)),     dQuote(class(where)))
#: R/trace.R:0
#, fuzzy
msgid "%s is not a method for reference class %s"
msgstr "'%s' não é uma das funções básicas"

#. R/refClass.R: gettextf("%s is not a reference class", dQuote(Class))
#. R/refClass.R: gettextf("%s is not a reference class", dQuote(def@className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a reference class"
msgstr "'%s' não é uma das funções básicas"

#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#. R/SClasses.R: gettextf("%s is not a slot in class %s", sQuote(name), dQuote(cl))
#: R/SClasses.R:0
#, fuzzy
msgid "%s is not a slot in class %s"
msgstr "classe \"%s\" extende uma classe não definida, \"%s\""

#. R/refClass.R: gettextf("%s is not a valid field or method name for reference class %s", sQuote(field),     dQuote(thisClass@className))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a valid field or method name for reference class %s"
msgstr "classe \"%s\" extende uma classe não definida, \"%s\""

#. R/refClass.R: gettextf("%s is not a valid field or method name for this class", sQuote(what))
#: R/refClass.R:0
#, fuzzy
msgid "%s is not a valid field or method name for this class"
msgstr "\"%s\" não é um campo definido nessa classe"

#. R/Methods.R: gettextf("%s is not an S4 generic function in %s; methods not removed", sQuote(f),     sQuote(getPackageName(where)))
#: R/Methods.R:0
#, fuzzy
msgid "%s is not an S4 generic function in %s; methods not removed"
msgstr "\"%s\" não é uma função genérica S4 em \"%s\"; métodos não removidos"

#. R/Methods.R: gettextf("%s is not currently a generic:  define it first to create a non-default implicit form",     sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid ""
"%s is not currently a generic:  define it first to create a non-default "
"implicit form"
msgstr ""
"\"%s\" não é atualmente uma genérica:   defina primeiro para criar uma forma "
"implicita não-padrão"

#. R/RClassUtils.R: gettextf("%s is not eligible to be the data part of another class (must be a basic class or a virtual class with no slots)",     dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"%s is not eligible to be the data part of another class (must be a basic "
"class or a virtual class with no slots)"
msgstr ""
"\"%s\" não pode ser a parte de dados de outra classe (deve ser uma classe "
"básica ou uma classe virtual sem slots)"

#. R/addedFunctions.R: gettextf("%s is not one of the element names", sQuote(name))
#: R/addedFunctions.R:0
#, fuzzy
msgid "%s is not one of the element names"
msgstr "'%s' não é uma das funções básicas"

#. R/MethodsList.R: gettextf("%s must be TRUE, FALSE, or a named logical vector of those values; got an object of class %s",     sQuote("useInherited"), dQuote(class(useInherited)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"%s must be TRUE, FALSE, or a named logical vector of those values; got an "
"object of class %s"
msgstr ""
"'useInherited' deve ser TRUE, FALSE, ou um vetor lógico com nomes desses "
"valores; foi obtido um objeto de classe \"%s\""

#. R/trace.R: gettextf("%s() is not a generic function in the target environment -- methods will not be inserted",     f)
#: R/trace.R:0
#, fuzzy
msgid ""
"%s() is not a generic function in the target environment -- methods will not "
"be inserted"
msgstr ""
"%s() não é uma função genérica no ambiente alvo -- métodos não serão "
"inseridos"

#. R/MethodsList.R: gettextf("%s, along with other use of the \"MethodsList\" metadata objects, is deprecated.",     dQuote(this))
#: R/MethodsList.R:0
msgid ""
"%s, along with other use of the \"MethodsList\" metadata objects, is "
"deprecated."
msgstr ""
"%s, junto com outro uso de  \"MethodsList\" em objetos meta dados, está "
"obsoleto"

#. R/Methods.R: gettextf("'%s' is not a known generic function {and 'package' not specified}", f)
#: R/Methods.R:0
msgid "'%s' is not a known generic function {and 'package' not specified}"
msgstr ""
"'%s' não é uma função genérica conhecida {e 'package' não especificado}"

#. R/RClassUtils.R: stop("'Class' argument must be a valid class definition or class")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'Class' argument must be a valid class definition or class"
msgstr "'Class' deve ser uma definição válida de classe ou classe"

#. R/oldClass.R: gettextf("'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true of class %s",     dQuote(class(object)))
#: R/oldClass.R:0
msgid ""
"'S3Class' can only assign to S4 objects that extend \"oldClass\"; not true "
"of class %s"
msgstr ""

#. R/oldClass.R: gettextf("'S3Class' only defined for extensions of %s or classes with a data part:  not true of class %s",     dQuote("oldClass"), dQuote(class(object)))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"'S3Class' only defined for extensions of %s or classes with a data part:  "
"not true of class %s"
msgstr ""
"S3Part() só é definida para classes criadas por setOldCLass(), classes "
"básicas ou subclasses destas: não verdadeiro para classe \"%s\""

#. R/ClassExtensions.R: gettextf("'S3Part()' method is only defined for classes set up by 'setOldCLass()' method, basic classes or subclasses of these: not true of class %s",     dQuote(class(object)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"'S3Part()' method is only defined for classes set up by 'setOldCLass()' "
"method, basic classes or subclasses of these: not true of class %s"
msgstr ""
"S3Part() só é definida para classes criadas por setOldCLass(), classes "
"básicas ou subclasses destas: não verdadeiro para classe \"%s\""

#. R/as.R: gettext("'as' method should have one argument, or match the arguments of 'coerce()' function: got (%s)",     domain = "R-methods")
#: R/as.R:0
msgid ""
"'as' method should have one argument, or match the arguments of 'coerce()' "
"function: got (%s)"
msgstr ""

#. R/Methods.R: stop("'callGeneric' must be called from a generic function or method")
#: R/Methods.R:0
msgid "'callGeneric' must be called from a generic function or method"
msgstr ""
"'callGeneric' deve ser chamada a partir de uma função ou método genérico"

#. R/RClassUtils.R: stop("'class' is a reserved slot name and cannot be redefined")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'class' is a reserved slot name and cannot be redefined"
msgstr "\"class\" é um nome de slot reservado e não pode ser redefinido"

#. R/is.R: stop("'class1' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class1' must be the name of a class or a class definition"
msgstr ""

#. R/is.R: stop("'class2' must be the name of a class or a class definition")
#: R/is.R:0
msgid "'class2' must be the name of a class or a class definition"
msgstr ""

#. R/RClassUtils.R: stop("'externalptr' objects cannot be initialized from function 'new()'")
#: R/RClassUtils.R:0
#, fuzzy
msgid "'externalptr' objects cannot be initialized from function 'new()'"
msgstr "objetos 'externalptr' não podem ser inicializados a partir de new()"

#. R/Methods.R: stop("'file' must be a character string or a connection")
#. R/Methods.R: stop("'file' must be a character string or a connection")
#: R/Methods.R:0
msgid "'file' must be a character string or a connection"
msgstr "'file' deve ser uma cadeia de caracteres ou uma conexão"

#. R/MethodsListClass.R: gettext("'initialize' method returned an object of class %s instead of the required class %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid ""
"'initialize' method returned an object of class %s instead of the required "
"class %s"
msgstr ""
"inicialização do método retornou um objeto de classe \"%s\" ao invés da "
"classe necessária \"%s\""

#. R/MethodsListClass.R: gettextf("(All objects are from package %s)", unique(sQuote(pkg)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "(All objects are from package %s)"
msgstr "Argumento inválido  \"name\": %s"

#. R/show.R: gettext("(This generic function excludes non-simple inheritance; see '?setIs')")
#: R/show.R:0
msgid "(This generic function excludes non-simple inheritance; see '?setIs')"
msgstr ""

#. R/RClassUtils.R: gettextf("(class %s)", .dQ(slotDefs[match(pnames[check], slotNames)]))
#. R/RClassUtils.R: gettextf("(class %s)", .dQ(unlist(properties, recursive = FALSE)[undefClasses]))
#: R/RClassUtils.R:0
msgid "(class %s)"
msgstr ""

#. R/methodsTable.R: gettextf("(definition from function %s)", sQuote(m@generic), domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "(definition from function %s)"
msgstr "nenhuma definição existente para função \"%s\""

#. R/methodsTable.R: gettextf("(inherited from: %s)", sigString(d), domain = "R-methods")
#: R/methodsTable.R:0
msgid "(inherited from: %s)"
msgstr ""

#. R/trace.R: gettext("(to see original from package, look at object@original)", domain = "R-methods")
#: R/trace.R:0
msgid "(to see original from package, look at object@original)"
msgstr ""

#. R/trace.R: gettext("(to see the tracing code, look at body(object))", domain = "R-methods")
#: R/trace.R:0
msgid "(to see the tracing code, look at body(object))"
msgstr ""

#. R/Methods.R: gettextf("* mlist environment with %d potential methods", length(mlist), domain = "R-methods")
#: R/Methods.R:0
msgid "* mlist environment with %d potential methods"
msgstr ""

#. R/methodsTable.R: gettext("** final methods' distances: (%s)", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** final methods' distances: (%s)"
msgstr ""

#. R/methodsTable.R: gettext("** individual arguments' distances:", domain = "R-methods")
#: R/methodsTable.R:0
msgid "** individual arguments' distances:"
msgstr ""

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n", "** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
msgid "** should no longer happen!"
msgstr "** não deveria mais acontecer!"

#. R/methodsTable.R: gettextf(" .. method %d: length(sig) = %d < nArg = %d\n", i, length(sig), nArg, domain = "R-methods")
#: R/methodsTable.R:0
msgid ".. method %d: length(sig) = %d < nArg = %d"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: about to assign or setMethod", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: about to assign or setMethod"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: after computing what, whereF", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: after computing what, whereF"
msgstr ""

#. R/trace.R: message(".TraceWithMethods: untrace case", domain = "R-methods")
#: R/trace.R:0
msgid ".TraceWithMethods: untrace case"
msgstr ""

#. R/MethodsList.R: gettext("<Empty Methods List>", domain = "R-methods")
#: R/MethodsList.R:0
msgid "<Empty Methods List>"
msgstr ""

#. R/methodsTable.R: gettext("<No methods>\n\n", domain = "R-methods")
#: R/methodsTable.R:0
msgid "<No methods>"
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the connection %s."
msgstr ""

#. R/promptClass.R: gettextf("A shell of class documentation has been written to the file %s.\n", sQuote(filename),     domain = "R-methods")
#: R/promptClass.R:0
msgid "A shell of class documentation has been written to the file %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the connection %s.\n",     sQuote(summary(filename)$description))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the connection %s."
msgstr ""

#. R/MethodsList.R: gettextf("A shell of methods documentation has been written to the file %s.\n", sQuote(filename))
#: R/MethodsList.R:0
msgid "A shell of methods documentation has been written to the file %s."
msgstr ""

#. R/SClasses.R: gettext("All %s names must be distinct in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be distinct in:\n"
"(%s)"
msgstr ""

#. R/SClasses.R: gettext("All %s names must be nonempty in:\n(%s)", domain = "R-methods")
#: R/SClasses.R:0
msgid ""
"All %s names must be nonempty in:\n"
"(%s)"
msgstr ""

#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(cl), domain = "R-methods")
#. R/BasicClasses.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", cl, domain = "R-methods")
#. R/show.R: gettextf("An object of class %s", dQuote(class(object)))
#. R/trace.R: gettextf("An object of class %s", dQuote(class(object)), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0 R/trace.R:0
#, fuzzy
msgid "An object of class %s"
msgstr "Um objeto de classe \""

#. R/trace.R: gettextf("An object of class %s, from source:", dQuote(class(object)), domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "An object of class %s, from source:"
msgstr "Um objeto de classe \""

#. R/MethodsListClass.R: gettextf("An object of class %s:", dQuote(class(object)), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "An object of class %s:"
msgstr "Um objeto de classe \""

#. R/trace.R: gettextf("An object with tracing code, class %s\nOriginal definition:\n", dQuote(class(object)),     domain = "R-methods")
#: R/trace.R:0
msgid ""
"An object with tracing code, class %s\n"
"Original definition:"
msgstr ""

#. R/SClasses.R: stop("Argument 'representation' cannot be used if argument 'slots' is supplied")
#: R/SClasses.R:0
msgid ""
"Argument 'representation' cannot be used if argument 'slots' is supplied"
msgstr ""

#. R/RClassUtils.R: gettextf("Calling function 'new()' on an undefined and non-basic class (\"%s\")",     Class)
#: R/RClassUtils.R:0
msgid "Calling function 'new()' on an undefined and non-basic class (\"%s\")"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s"
msgstr "Classes: %s, %s"

#. R/show.R: gettextf("Class %s (from package %s)", dQuote(className), sQuote(packageName))
#: R/show.R:0
#, fuzzy
msgid "Class %s (from package %s)"
msgstr "Argumento inválido  \"name\": %s"

#. R/show.R: gettextf("Class %s (from the global environment)", dQuote(className))
#: R/show.R:0
msgid "Class %s (from the global environment)"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s [in %s]"
msgstr "Classes: %s, %s"

#. R/RClassUtils.R: gettextf("Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s [package in %s]"
msgstr "Argumento inválido  \"name\": %s"

#. R/RClassUtils.R: gettextf("Class %s consists of following classes: ", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s consists of following classes:"
msgstr ""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s", dQuote(class(object)),     dQuote(object@generic), sQuote(object@package), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Class %s for generic %s defined from package %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/show.R: gettext("Class %s for generic %s defined from package %s\n  belonging to group(s): %s\n  defined with value class: %s\n",     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  belonging to group(s): %s\n"
"  defined with value class: %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/show.R: gettextf("Class %s for generic %s defined from package %s\n  defined with value class: %s\n",     dQuote(class(object)), dQuote(object@generic), sQuote(object@package), dQuote(object@valueClass),     domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid ""
"Class %s for generic %s defined from package %s\n"
"  defined with value class: %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/SClasses.R: gettextf("Class %s has a sealed class definition and cannot be redefined", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "Class %s has a sealed class definition and cannot be redefined"
msgstr "\"class\" é um nome de slot reservado e não pode ser redefinido"

#. R/refClass.R: gettextf("Class %s is not a subclass of %s; functional semantics not defined for this class",     dQuote(class(object)), dQuote("envRefClass"))
#: R/refClass.R:0
msgid ""
"Class %s is not a subclass of %s; functional semantics not defined for this "
"class"
msgstr ""

#. R/refClass.R: gettextf("Class %s is not one of the reference super classes for this object", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "Class %s is not one of the reference super classes for this object"
msgstr "'%s' não é uma das funções básicas"

#. R/RClassUtils.R: gettextf("Class %s, by class %s", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, by class %s"
msgstr "Classes: %s, %s"

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit coerce", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test", dQuote(what[i]), tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, by class %s, with explicit test and coerce", dQuote(what[i]),     tmp_N, domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, by class %s, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, directly"
msgstr "Classes: %s, %s"

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, directly, with explicit test and coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, directly, with explicit test and coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class %s, from data part"
msgstr "Argumento inválido  \"name\": %s"

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit coerce", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit coerce"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test", dQuote(what[i]), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test"
msgstr ""

#. R/RClassUtils.R: gettextf("Class %s, from data part, with explicit test and coerce", dQuote(what[i]),     domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Class %s, from data part, with explicit test and coerce"
msgstr ""

#. R/refClass.R: gettext("Class Methods: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class Methods:"
msgstr "Classes: %s, %s"

#. R/refClass.R: gettext("Class fields:", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class fields:"
msgstr "Classes: %s, %s"

#. R/refClass.R: gettextf("Class method definition (class %s) for method %s", dQuote(cl), sQuote(paste(object@name,     "()", collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition (class %s) for method %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/refClass.R: gettextf("Class method definition for method %s", sQuote(paste(object@name, "()",     collapse = "")), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Class method definition for method %s"
msgstr "\"%s\" não tem métodos definidos"

#. R/ClassUnion.R: gettext("Class must be an empty virtual class with NULL prototype")
#: R/ClassUnion.R:0
msgid "Class must be an empty virtual class with NULL prototype"
msgstr ""

#. R/RClassUtils.R: gettext("Class:", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Class:"
msgstr "Classes: %s, %s"

#. R/trace.R: sprintf("Constructing traceable class %s", dQuote(traceClassName))
#: R/trace.R:0
msgid "Constructing traceable class %s"
msgstr ""

#. R/Methods.R: gettextf("Copying the generic function %s to environment %s, because the previous version was in a sealed namespace (%s)",     sQuote(f), sQuote(getPackageName(where)), sQuote(getPackageName(gwhere)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"Copying the generic function %s to environment %s, because the previous "
"version was in a sealed namespace (%s)"
msgstr ""
"copiando a função genérica \"%s\" para o ambiente \"%s\", porque a versão "
"anterior estava em um espaço de nomes selado (%s)"

#. R/refClass.R: stop("Could not find local object in supplied environment")
#: R/refClass.R:0
#, fuzzy
msgid "Could not find local object in supplied environment"
msgstr "\"%s\" náo é uma classe definida nesse ambiente"

#. R/packageName.R: gettextf("Created a package name, %s, when none found", sQuote(pkg))
#: R/packageName.R:0
msgid "Created a package name, %s, when none found"
msgstr ""

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in package %s (from the saved implicit definition)",     sQuote(name), sQuote(package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in package %s (from the saved "
"implicit definition)"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("Creating a generic function for %s from %s in the global environment (from the saved implicit definition)",     sQuote(name), sQuote(package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from %s in the global environment (from "
"the saved implicit definition)"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in package %s", sQuote(f),     sQuote(fdef@package), sQuote(thisPackage), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function for %s from package %s in package %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("Creating a generic function for %s from package %s in the global environment",     sQuote(f), sQuote(fdef@package), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Creating a generic function for %s from package %s in the global environment"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("Creating a generic function from function %s in package %s", sQuote(f),     sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in package %s"
msgstr "Criando uma nova função genérica a partir da função \"%s\""

#. R/Methods.R: gettextf("Creating a generic function from function %s in the global environment",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a generic function from function %s in the global environment"
msgstr "Criando uma nova função genérica a partir da função \"%s\""

#. R/Methods.R: gettextf("Creating a new generic function for %s in package %s", sQuote(name), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in package %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("Creating a new generic function for %s in the global environment", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Creating a new generic function for %s in the global environment"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/RClassUtils.R: stop("Data part ('.Data' slot) is undefined for general S4 object")
#: R/RClassUtils.R:0
msgid "Data part ('.Data' slot) is undefined for general S4 object"
msgstr ""

#. R/RMethodUtils.R: message("Empty function name in .getGeneric", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "Empty function name in .getGeneric"
msgstr ""

#. R/trace.R: gettextf("Environment of class %s is locked; using global environment for new class",     dQuote(className))
#: R/trace.R:0
msgid ""
"Environment of class %s is locked; using global environment for new class"
msgstr ""

#. R/show.R: gettext("Excluded from nextMethod:", domain = "R-methods")
#: R/show.R:0
msgid "Excluded from nextMethod:"
msgstr ""

#. R/show.R: gettextf("Extended class definition (%s)", classLabel(class(object)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Extended class definition (%s)"
msgstr "classes de slot não definidas na definição de \"%s\": %s"

#. R/refClass.R: gettextf("Field %s:", dQuote(fi), domain = "R-methods")
#: R/refClass.R:0
msgid "Field %s:"
msgstr ""

#. R/Methods.R: gettextf("For function %s, signature %s: argument in method definition changed from (%s) to (%s)",     sQuote(f), sQuote(signature), mnames, fnames)
#: R/Methods.R:0
#, fuzzy
msgid ""
"For function %s, signature %s: argument in method definition changed from "
"(%s) to (%s)"
msgstr ""
"Para a função \"%s\", assinatura \"%s\": argumento nadefinição do método "
"mudou de (%s) para (%s)"

#. R/trace.R: gettextf("For package %s", sQuote(object@packageName), domain = "R-methods")
#: R/trace.R:0
msgid "For package %s"
msgstr ""

#. R/trace.R: gettextf("From source file %s", sQuote(object@sourceFile), domain = "R-methods")
#: R/trace.R:0
msgid "From source file %s"
msgstr ""

#. R/Methods.R: gettextf("Function %s is a group generic; do not call it directly", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Function %s is a group generic; do not call it directly"
msgstr "função \"%s\" é um genérico de grupo; não chame-a diretamente"

#. R/Methods.R: gettextf("Function %s is already a group generic; no change", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "Function %s is already a group generic; no change"
msgstr "função \"%s\" já um genérico de grupo; nenhuma mudança"

#. R/Methods.R: gettextf("Function %s:\n<not an S4 generic function>", sQuote(f), domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid ""
"Function %s:\n"
"<not an S4 generic function>"
msgstr "nenhuma função genérica \"%s\" encontrada"

#. R/methodsTable.R: gettextf("Function: %s (package %s)", func, pkg, domain = "R-methods")
#: R/methodsTable.R:0
msgid "Function: %s (package %s)"
msgstr ""

#. R/refClass.R: gettext("Generator for class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Generator for class"
msgstr "nenhuma definição existente para função '%s'"

#. R/methodsTable.R: gettext(" Group generics: ", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Group generics:"
msgstr ""

#. R/RMethodUtils.R: gettextf("In method for %s with signature %s: ", sQuote(f), msig, domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "In method for %s with signature %s:"
msgstr "no método %s com assinatura %s:"

#. R/SClasses.R: gettextf("In slot '%s' of class \"%s\": %s", slotNames[[i]], class(sloti), errori)
#: R/SClasses.R:0
#, fuzzy
msgid "In slot '%s' of class \"%s\": %s"
msgstr "Um objeto de classe \""

#. R/refClass.R: gettext(" Insert trace debugging for the specified method.  The arguments are the same as for the trace() function in package \"base\".  The first argument should be the name of the method to be traced, quoted or not.\n\n The additional argument classMethod= can be supplied as TRUE (by name only) in order to trace a method in a generator object (e.g., \"new\") rather than in the objects generated from that class.")
#: R/refClass.R:0
msgid ""
"Insert trace debugging for the specified method.  The arguments are the same "
"as for the trace() function in package \"base\".  The first argument should "
"be the name of the method to be traced, quoted or not.\n"
"\n"
" The additional argument classMethod= can be supplied as TRUE (by name only) "
"in order to trace a method in a generator object (e.g., \"new\") rather than "
"in the objects generated from that class."
msgstr ""

#. R/methodsTable.R: stop("Internal error in finding inherited methods; didn't return a unique method",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"Internal error in finding inherited methods; didn't return a unique method"
msgstr ""

#. R/RClassUtils.R: gettext("Known Subclasses: ", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Known Subclasses:"
msgstr ""

#. R/refClass.R: gettext("Locked Fields", domain = "R-methods")
#: R/refClass.R:0
msgid "Locked Fields"
msgstr ""

#. R/show.R: gettextf("Method Definition (Class %s):", dQuote(classLabel(cl)), domain = "R-methods")
#: R/show.R:0
#, fuzzy
msgid "Method Definition (Class %s):"
msgstr "nenhuma definição existente para função '%s'"

#. R/show.R: gettext("Method Definition:", domain = "R-methods")
#: R/show.R:0
msgid "Method Definition:"
msgstr ""

#. R/trace.R: gettext("Methods inserted for function %s(): %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "Methods inserted for function %s(): %s"
msgstr "nenhum método encontrado para a função '%s' e assinatura %s"

#. R/RMethodUtils.R: gettextf("Methods list objects are not maintained in this version of R:  request for function %s may return incorrect information",     sQuote(fdef@generic))
#: R/RMethodUtils.R:0
msgid ""
"Methods list objects are not maintained in this version of R:  request for "
"function %s may return incorrect information"
msgstr ""

#. R/show.R: gettext("Methods may be defined for arguments: %s\nUse 'showMethods(\"%s\")' for currently available ones.",     domain = "R-methods")
#: R/show.R:0
msgid ""
"Methods may be defined for arguments: %s\n"
"Use 'showMethods(\"%s\")' for currently available ones."
msgstr ""

#. R/refClass.R: gettext("Methods used: ", domain = "R-methods")
#: R/refClass.R:0
msgid "Methods used:"
msgstr ""

#. R/trace.R: gettext("Modified functions inserted through trace(): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Modified functions inserted through trace(): %s"
msgstr ""

#. R/RClassUtils.R: gettext("NOTE: arguments in definition %s changed from (%s) to (%s)", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "NOTE: arguments in definition %s changed from (%s) to (%s)"
msgstr "argumentos nã definição mudaram de (%s) para (%s)"

#. R/RClassUtils.R: gettext("Name:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Name:"
msgstr ""

#. R/trace.R: gettext("New functions are not currently inserted (not untraceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "New functions are not currently inserted (not untraceable): %s"
msgstr ""

#. R/SClasses.R: gettextf("No %s names supplied", what)
#: R/SClasses.R:0
msgid "No %s names supplied"
msgstr ""

#. R/refClass.R: gettext("No Class Methods", domain = "R-methods")
#: R/refClass.R:0
msgid "No Class Methods"
msgstr ""

#. R/refClass.R: gettext("No fields defined", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "No fields defined"
msgstr "\"%s\" não tem métodos definidos"

#. R/methodsTable.R: gettextf("No simply inherited methods found for function %s; using non-simple method",     sQuote(fdef@generic))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"No simply inherited methods found for function %s; using non-simple method"
msgstr ""
"Nenhum método herdável de maneira simples encontrado para função \"%s\"; "
"usando método não-simples"

#. R/RClassUtils.R: gettextf("No slots, prototype of class %s", dQuote(.class1(ClassDef@prototype)),     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "No slots, prototype of class %s"
msgstr "Um objeto de classe \""

#. R/trace.R: gettext("Non-function objects are not currently inserted (not traceable): %s", domain = "R-methods")
#: R/trace.R:0
msgid "Non-function objects are not currently inserted (not traceable): %s"
msgstr ""

#. R/methodsTable.R: gettext("Note: method with signature %s chosen for function %s,\n target signature %s.\n %s would also be valid",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"Note: method with signature %s chosen for function %s,\n"
" target signature %s.\n"
" %s would also be valid"
msgstr ""
"o método para a função \"%s\" e assinatura %s está selado e não pode ser "
"redefinido"

#. R/RClassUtils.R: gettextf("Note: some superclasses of class %s in package %s have duplicate definitions. This definition is not being treated as equivalent to that from package %s",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
msgid ""
"Note: some superclasses of class %s in package %s have duplicate "
"definitions. This definition is not being treated as equivalent to that from "
"package %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Note: the specification for S3 class %s in package %s seems equivalent to one from package %s: not turning on duplicate class definitions for this class.",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
msgid ""
"Note: the specification for S3 class %s in package %s seems equivalent to "
"one from package %s: not turning on duplicate class definitions for this "
"class."
msgstr ""

#. R/RClassUtils.R: gettextf("Note: the specification for class %s in package %s seems equivalent to one from package %s and is not turning on duplicate class definitions for this class",     dQuote(def@className), sQuote(def@package), sQuote(prev@package))
#: R/RClassUtils.R:0
msgid ""
"Note: the specification for class %s in package %s seems equivalent to one "
"from package %s and is not turning on duplicate class definitions for this "
"class"
msgstr ""

#. R/MethodsListClass.R: gettextf("Notes: %s.", notei, domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Notes: %s."
msgstr ""

#. R/BasicClasses.R: gettextf("OOPS: something wrong with line %d in '.OldClassesPrototypes'", i)
#: R/BasicClasses.R:0
#, fuzzy
msgid "OOPS: something wrong with line %d in '.OldClassesPrototypes'"
msgstr "OOPS: algo errado com a linha"

#. R/MethodsListClass.R: gettext("Object:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Object:"
msgstr ""

#. R/MethodsListClass.R: gettext("Package:", domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Package:"
msgstr ""

#. R/trace.R: gettextf("Pretend we inserted class %s", class)
#: R/trace.R:0
#, fuzzy
msgid "Pretend we inserted class %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/refClass.R: gettext("Prototypical reference class object", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Prototypical reference class object"
msgstr "'%s' não é uma das funções básicas"

#. R/methodsTable.R: stop(gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic)),     damain = "R-methods")
#: R/methodsTable.R:0
msgid "R-methods"
msgstr ""

#. R/refClass.R: gettext("Reference Class", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Class"
msgstr "'%s' não é uma das funções básicas"

#. R/refClass.R: gettext("Reference Superclasses: ", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference Superclasses:"
msgstr "'%s' não é uma das funções básicas"

#. R/refClass.R: gettextf("Reference class object of class %s", classLabel(class(.self)), domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "Reference class object of class %s"
msgstr "Um objeto de classe \""

#. R/refClass.R: gettext(" Reference methods used by this method are named as the arguments  either quoted or unquoted.  In the code analysis phase of installing the  the present method, the declared methods will be included.  It is essntial  to declare any methods used in a nonstandard way (e.g., via an apply function). Methods called directly do not need to be declared, but it is harmless to do so. $usingMethods() does nothing at run time.")
#: R/refClass.R:0
msgid ""
"Reference methods used by this method are named as the arguments  either "
"quoted or unquoted.  In the code analysis phase of installing the  the "
"present method, the declared methods will be included.  It is essntial  to "
"declare any methods used in a nonstandard way (e.g., via an apply function). "
"Methods called directly do not need to be declared, but it is harmless to do "
"so. $usingMethods() does nothing at run time."
msgstr ""

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s", message, target)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method %s not defined for signature %s"
msgstr ""
"Não é possível desfazer histórico para \"%s\"; nenhum método definido para "
"essa assinatura: %s"

#. R/RClassUtils.R: gettextf("Required method %s not defined for signature %s, required for signature %s",     message, target, defined)
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"Required method %s not defined for signature %s, required for signature %s"
msgstr ""
"Não é possível desfazer histórico para \"%s\"; nenhum método definido para "
"essa assinatura: %s"

#. R/RClassUtils.R: gettextf("Required method not defined: %s", message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "Required method not defined: %s"
msgstr "classes de slot não definidas na definição de \"%s\": %s"

#. R/Methods.R: gettextf("Restoring default function definition of %s", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "Restoring default function definition of %s"
msgstr "restaurando a definição padrão da função \"%s\""

#. R/show.R: gettext("Signatures:", domain = "R-methods")
#: R/show.R:0
msgid "Signatures:"
msgstr ""

#. R/method.skeleton.R: gettextf("Skeleton of method written to %s", sQuote(file))
#: R/method.skeleton.R:0
msgid "Skeleton of method written to %s"
msgstr ""

#. R/method.skeleton.R: message("Skeleton of method written to connection", domain = "R-methods")
#: R/method.skeleton.R:0
msgid "Skeleton of method written to connection"
msgstr ""

#. R/BasicClasses.R: gettextf("Slot %s:", dQuote(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", deparse(what), domain = "R-methods")
#. R/show.R: gettextf("Slot %s:", dQuote(s), domain = "R-methods")
#: R/BasicClasses.R:0 R/show.R:0
msgid "Slot %s:"
msgstr ""

#. R/RClassUtils.R: gettext("Slots:", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Slots:"
msgstr ""

#. R/trace.R: gettextf("Source environment created %s", format(object@dateCreated), domain = "R-methods")
#: R/trace.R:0
msgid "Source environment created %s"
msgstr ""

#. R/refClass.R: gettextf("The definition of class %s follows.", dQuote(className))
#: R/refClass.R:0
#, fuzzy
msgid "The definition of class %s follows."
msgstr "nenhuma definição existente para função '%s'"

#. R/trace.R: gettext("Tracing ", domain = "R-methods")
#: R/trace.R:0
msgid "Tracing"
msgstr ""

#. R/refClass.R: gettext("Usage:  $help(topic) where topic is the name of a method (quoted or not)")
#: R/refClass.R:0
msgid ""
"Usage:  $help(topic) where topic is the name of a method (quoted or not)"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s", .dQ(Class), domain = "R-methods")
#: R/RClassUtils.R:0
msgid "Virtual Class %s"
msgstr ""

#. R/RClassUtils.R: gettextf("Virtual Class %s [in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Virtual Class %s [in %s]"
msgstr "Argumento inválido  \"name\": %s"

#. R/RClassUtils.R: gettextf("Virtual Class %s [package in %s]", .dQ(Class), sQuote(pkg), domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "Virtual Class %s [package in %s]"
msgstr "Argumento inválido  \"name\": %s"

#. R/trace.R: gettext("Warning: Tracing only in the namespace; to untrace you will need:", domain = "R-methods")
#: R/trace.R:0
msgid "Warning: Tracing only in the namespace; to untrace you will need:"
msgstr ""

#. R/Methods.R: message("Warning: using defunct methods list search", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "Warning: using defunct methods list search"
msgstr "Atenção:  usando lista de métodos extinta"

#. R/as.R: gettextf("a 'replace' method definition in 'setAs' function must be a function of two arguments, got %d",     length(args))
#: R/as.R:0
#, fuzzy
msgid ""
"a 'replace' method definition in 'setAs' function must be a function of two "
"arguments, got %d"
msgstr ""
"o argumento 'replace' para setIs() deve ser uma função de 2 ou 3 argumentos, "
"obtido de um objeto da classe \"%s\""

#. R/NextMethod.R: gettextf("a call to callNextMethod() appears in a call to %s, but the call does not seem to come from either a generic function or another 'callNextMethod'",     sQuote(f))
#: R/NextMethod.R:0
#, fuzzy
msgid ""
"a call to callNextMethod() appears in a call to %s, but the call does not "
"seem to come from either a generic function or another 'callNextMethod'"
msgstr ""
"uma chamada para callNextMethod() aparece em uma chamada para '%s', mas a "
"chamada não parece vir nem de uma função genérica nem de outro "
"'callNextMethod'"

#. R/refClass.R: gettextf("a call to superClass() is in the method %s but there is no superclass definition of this method for class %s",     sQuote(me), dQuote(thisClass@className))
#: R/refClass.R:0
msgid ""
"a call to superClass() is in the method %s but there is no superclass "
"definition of this method for class %s"
msgstr ""

#. R/Methods.R: stop("a function for argument 'f' must be a generic function")
#. R/trace.R: stop("a function for argument 'f' must be a generic function")
#: R/Methods.R:0 R/trace.R:0
#, fuzzy
msgid "a function for argument 'f' must be a generic function"
msgstr "Uma função para o argumento \"f\" deve ser uma função genérica"

#. R/RClassUtils.R: gettextf("a prototype object was supplied with object slot of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype@object)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"a prototype object was supplied with object slot of class %s, but the class "
"definition requires an object that is class %s"
msgstr ""
"um objeto protótipo foi especificado com um objeto slot de classe \"%s\", "
"mas a definição da classe requer um objeto que é de classe \"%s\""

#. R/RClassUtils.R: gettextf("a prototype was supplied of class %s, but the class definition requires an object that is class %s",     dQuote(class(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"a prototype was supplied of class %s, but the class definition requires an "
"object that is class %s"
msgstr ""
"um protótipo foi especificado para a classe \"%s\", mas a definição da "
"classe requer um objeto que é de classe \"%s\""

#. R/refClass.R: gettextf("a single class name is needed for field %s, got a character vector of length %d",     sQuote(thisName), length(thisField))
#: R/refClass.R:0
msgid ""
"a single class name is needed for field %s, got a character vector of length "
"%d"
msgstr ""

#. R/RClassUtils.R: gettextf("a validity method must be a function of one argument, got an object of class %s",     dQuote(class(validity)))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"a validity method must be a function of one argument, got an object of class "
"%s"
msgstr ""
"um método de validade deve ser uma função de um argumento, mas foi obtido um "
"objeto de classe \"%s\""

#. R/SClasses.R: gettextf("abnormal type %s is not supported as a superclass of a class definition",     dQuote(type))
#: R/SClasses.R:0
msgid "abnormal type %s is not supported as a superclass of a class definition"
msgstr ""

#. R/RMethodUtils.R: gettextf("action function %s has no arguments, should have at least 1", sQuote(fname))
#: R/RMethodUtils.R:0
msgid "action function %s has no arguments, should have at least 1"
msgstr ""

#. R/as.R: warning("ambiguous object (length != 1) to coerce to \"name\"")
#: R/as.R:0
msgid "ambiguous object (length != 1) to coerce to \"name\""
msgstr ""

#. R/Methods.R: sprintf("apparent inconsistency in the methods for function %s; argument %s in the signature corresponds to %s in the methods list object",     sQuote(.genericName(f)), sQuote(argNames[[i]]), sQuote(as.character(mlist@argument)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"apparent inconsistency in the methods for function %s; argument %s in the "
"signature corresponds to %s in the methods list object"
msgstr ""
"inconsistência aparente nos métodos da função \"%s\"; argumento \"%s\" na "
"assinatura corresponde a '%s' na lista de métodos do objeto"

#. R/Methods.R: sprintf("apparent internal error: a generic function was found for \"%s\", but no corresponding object was found searching from \"%s\"",     f, getPackageName(where))
#: R/Methods.R:0
msgid ""
"apparent internal error: a generic function was found for \"%s\", but no "
"corresponding object was found searching from \"%s\""
msgstr ""
"erro interno aparente: uma função genérica foi encontrada para \"%s\", mas "
"nenhum objeto correspondente foi encontrado ao procurar a partir de \"%s\""

#. R/zzz.R: warning("apparently bad method or class metadata in saved environment;\nmove the file or remove the class/method")
#: R/zzz.R:0
#, fuzzy
msgid ""
"apparently bad method or class metadata in saved environment;\n"
"move the file or remove the class/method"
msgstr "assinatura deve ser um vetor de classes ou um ambiente"

#. R/Methods.R: gettextf("argument %s is not S4", deparse(substitute(f1)))
#. R/Methods.R: gettextf("argument %s is not S4", deparse(substitute(f2)))
#: R/Methods.R:0
#, fuzzy
msgid "argument %s is not S4"
msgstr "argumento %s não é S4"

#. R/Methods.R: gettextf("argument %s must be a generic function or a single character string; got an object of class %s",     sQuote("f"), dQuote(class(f)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"argument %s must be a generic function or a single character string; got an "
"object of class %s"
msgstr ""
"argumento \"f\" deve ser uma função genérica ou um único caractere, mas foi "
"obtido um objeto de classe  \"%s\""

#. R/SClasses.R: gettextf("argument %s must be a list or a character vector; got an object of class %s",     dQuote(what), dQuote(class(fields)))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"argument %s must be a list or a character vector; got an object of class %s"
msgstr ""
"argumento \"f\" deve ser uma função genérica ou um único caractere, mas foi "
"obtido um objeto de classe  \"%s\""

#. R/oldClass.R: gettextf("argument 'Classes' must be a vector of two classes; got an argument of length %d",     length(Classes))
#: R/oldClass.R:0
msgid ""
"argument 'Classes' must be a vector of two classes; got an argument of "
"length %d"
msgstr ""

#. R/oldClass.R: gettextf("argument 'S4Class' must be a class definition: got an object of class %s",     dQuote(class(S4Class)))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"argument 'S4Class' must be a class definition: got an object of class %s"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/RClassUtils.R: stop("argument 'abbreviate' must be 0, 1, 2, or 3")
#: R/RClassUtils.R:0
msgid "argument 'abbreviate' must be 0, 1, 2, or 3"
msgstr ""

#. R/SClasses.R: stop("argument 'classDef' must be a class definition or the name of a class")
#: R/SClasses.R:0
#, fuzzy
msgid "argument 'classDef' must be a class definition or the name of a class"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/SClasses.R: gettextf("argument 'classDef' must be a string or a class representation; got an object of class %s",     dQuote(class(classDef)))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"argument 'classDef' must be a string or a class representation; got an "
"object of class %s"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/Methods.R: gettextf("argument 'f' must be a generic function or %s", .notSingleString(f))
#: R/Methods.R:0
#, fuzzy
msgid "argument 'f' must be a generic function or %s"
msgstr "argumento \"f\" deve ser uma função genérica ou %s"

#. R/RMethodUtils.R: stop("argument 'f' must be a string, generic function, or primitive: got an ordinary function")
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"argument 'f' must be a string, generic function, or primitive: got an "
"ordinary function"
msgstr "argumento \"f\" deve ser uma função genérica ou %s"

#. R/RClassUtils.R: stop("argument 'includeSubclasses' must be a logical, either one value or a vector of the same length as argument 'classes'")
#: R/RClassUtils.R:0
msgid ""
"argument 'includeSubclasses' must be a logical, either one value or a vector "
"of the same length as argument 'classes'"
msgstr ""

#. R/trace.R: stop("argument 'signature' is not meaningful for tracing reference methods")
#: R/trace.R:0
msgid "argument 'signature' is not meaningful for tracing reference methods"
msgstr ""

#. R/Methods.R: warning("argument 'signature' is not meaningful with the current implementation and is ignored \n(extract a subset of the methods list instead)")
#: R/Methods.R:0
#, fuzzy
msgid ""
"argument 'signature' is not meaningful with the current implementation and "
"is ignored \n"
"(extract a subset of the methods list instead)"
msgstr ""
"\"Assinatura\" do argumento não faz sentido quando a implementação atual é "
"ignorada \n"
"(tente extrair um subconjunto da lista de métodos)"

#. R/methodsTable.R: stop("argument 'signatures' must be a character matrix whose rows are method signatures")
#: R/methodsTable.R:0
msgid ""
"argument 'signatures' must be a character matrix whose rows are method "
"signatures"
msgstr ""

#. R/trace.R: stop("argument 'what' should be the name of a function")
#: R/trace.R:0
msgid "argument 'what' should be the name of a function"
msgstr ""

#. R/RMethodUtils.R: stop("argument f must be a generic function with signature \"...\"")
#: R/RMethodUtils.R:0
msgid "argument f must be a generic function with signature \"...\""
msgstr "argumento f deve ser uma função genérica com assinatura \"...\""

#. R/as.R: gettextf("argument names in 'replace' method changed to agree with 'coerce<-' generic function:\n%s",     paste(deparse(replace), sep = "\n    "))
#: R/as.R:0
msgid ""
"argument names in 'replace' method changed to agree with 'coerce<-' generic "
"function:\n"
"%s"
msgstr ""

#. R/MethodsList.R: stop("arguments 'names' and 'signature' must have the same length")
#: R/MethodsList.R:0
msgid "arguments 'names' and 'signature' must have the same length"
msgstr "argumentos 'names' e 'signature' devem ter o mesmo comprimento"

#. R/RMethodUtils.R: gettext("arguments (%s) after '...' in the generic must appear in the method, in the same place at the end of the argument list",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"arguments (%s) after '...' in the generic must appear in the method, in the "
"same place at the end of the argument list"
msgstr ""

#. R/refClass.R: stop("arguments must all be character string names of fields")
#: R/refClass.R:0
#, fuzzy
msgid "arguments must all be character string names of fields"
msgstr "'file' deve ser uma cadeia de caracteres ou uma conexão"

#. R/refClass.R: stop("arguments to 'methods()' must be named, or one named list")
#: R/refClass.R:0
#, fuzzy
msgid "arguments to 'methods()' must be named, or one named list"
msgstr "Argumento sem nome para new() deve ser um ambiente para o novo objeto"

#. R/RClassUtils.R: gettextf("assigning as %s a class representation with internal name %s", dQuote(Class),     dQuote(def@className))
#: R/RClassUtils.R:0
#, fuzzy
msgid "assigning as %s a class representation with internal name %s"
msgstr ""
"atribuição de \"%s\" como representação de classe com nome interno \"%s\""

#. R/trace.R: gettextf("assigning over the binding of symbol %s in environment/package %s", sQuote(what),     sQuote(pname))
#: R/trace.R:0
#, fuzzy
msgid "assigning over the binding of symbol %s in environment/package %s"
msgstr ""
"não é possível remover os métodos para \"%s\" no ambiente/pacote bloqueado "
"\"%s\""

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for @%s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for @%s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""

#. R/SClasses.R: gettextf("assignment of an object of class %s is not valid for slot %s in an object of class %s; is(value, \"%s\") is not TRUE",     dQuote(valueClass), sQuote(name), dQuote(cl), slotClass)
#: R/SClasses.R:0
msgid ""
"assignment of an object of class %s is not valid for slot %s in an object of "
"class %s; is(value, \"%s\") is not TRUE"
msgstr ""

#. R/Methods.R: gettextf("bad class specified for element %d (should be a single character string)",     i)
#: R/Methods.R:0
msgid ""
"bad class specified for element %d (should be a single character string)"
msgstr ""
"especificação de classe inválida para o elemento %d (deve ser uma única "
"string de caracteres)"

#. R/methodsTable.R: gettextf("bad method object stored in method table, class %s", dQuote(class(current)))
#: R/methodsTable.R:0
#, fuzzy
msgid "bad method object stored in method table, class %s"
msgstr "objeto inválido encontrado como método (classe \"%s\")"

#. R/NextMethod.R: gettextf("bad object found as method (class %s)", dQuote(class(method)))
#: R/NextMethod.R:0
#, fuzzy
msgid "bad object found as method (class %s)"
msgstr "objeto inválido encontrado como método (classe \"%s\")"

#. R/RMethodUtils.R: stop("botched namespace: failed to find 'base' namespace in its parents", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "botched namespace: failed to find 'base' namespace in its parents"
msgstr ""

#. R/is.R: gettext("both classes must be defined")
#: R/is.R:0
#, fuzzy
msgid "both classes must be defined"
msgstr "as classes membro devem estar definidas: isso não se aplica para %s"

#. R/NextMethod.R: stop("call to 'callNextMethod' does not appear to be in a 'method' or 'callNextMethod' context")
#: R/NextMethod.R:0
msgid ""
"call to 'callNextMethod' does not appear to be in a 'method' or "
"'callNextMethod' context"
msgstr ""
"chamada para 'callNextMethod' não parece estar em um contexto 'method' ou "
"'callNextMethod'"

#. R/RMethodUtils.R: gettext("called 'doPrimitiveMethod()'", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "called 'doPrimitiveMethod()'"
msgstr ""

#. R/methodsTable.R: gettext(" can eliminate dominated ones,", domain = "R-methods")
#: R/methodsTable.R:0
msgid "can eliminate dominated ones,"
msgstr ""

#. R/is.R: gettextf("cannot create a 'setIs' relation when neither of the classes (%s and %s) is local and modifiable in this package",     dQuote(class1), dQuote(class2))
#: R/is.R:0
msgid ""
"cannot create a 'setIs' relation when neither of the classes (%s and %s) is "
"local and modifiable in this package"
msgstr ""

#. R/trace.R: gettextf("cannot find an environment corresponding to package name '%s'", package)
#: R/trace.R:0
#, fuzzy
msgid "cannot find an environment corresponding to package name '%s'"
msgstr "não foi possível encontrar um ambiente contendo a classe \"%s\""

#. R/BasicClasses.R: stop("cannot have more than one unnamed argument as environment")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot have more than one unnamed argument as environment"
msgstr "Impossível ter mais de um argumento sem nome como ambiente"

#. R/trace.R: gettext("cannot insert methods for these functions (methods table not found in source): %s",     domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid ""
"cannot insert methods for these functions (methods table not found in "
"source): %s"
msgstr ""
"Não é possível inserir métodos para essas funções (tabela de métodos não "
"encontrada na fonte): %s"

#. R/trace.R: gettext("cannot insert these (not found in source): %s", domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "cannot insert these (not found in source): %s"
msgstr ""
"Não é possível inserir métodos para essas funções (tabela de métodos não "
"encontrada na fonte): %s"

#. R/Methods.R: gettextf("cannot remove methods for %s in locked environment/package %s", sQuote(f),     sQuote(getPackageName(db)))
#: R/Methods.R:0
#, fuzzy
msgid "cannot remove methods for %s in locked environment/package %s"
msgstr ""
"não é possível remover os métodos para \"%s\" no ambiente/pacote bloqueado "
"\"%s\""

#. R/BasicClasses.R: stop("cannot specify arguments for 'array()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'array()' method when specifying '.Data'"
msgstr "Impossível especificar argumentos array() enquanto especifica .Data"

#. R/BasicClasses.R: stop("cannot specify arguments for 'matrix()' method when specifying '.Data'")
#: R/BasicClasses.R:0
#, fuzzy
msgid "cannot specify arguments for 'matrix()' method when specifying '.Data'"
msgstr ""
"Não é possível especificar argumentos matrix() quando especificando .Data"

#. R/trace.R: gettext("cannot untrace method for %s; no method defined for this signature: %s",     domain = "R-methods")
#: R/trace.R:0
#, fuzzy
msgid "cannot untrace method for %s; no method defined for this signature: %s"
msgstr ""
"Não é possível desfazer histórico para \"%s\"; nenhum método definido para "
"essa assinatura: %s"

#. R/trace.R: stop("cannot use 'at' argument unless the function body has the form '{ ... }'")
#: R/trace.R:0
msgid ""
"cannot use 'at' argument unless the function body has the form '{ ... }'"
msgstr ""

#. R/trace.R: stop("cannot use 'at' argument without a trace expression")
#: R/trace.R:0
msgid "cannot use 'at' argument without a trace expression"
msgstr ""

#. R/SClasses.R: gettextf("cannot use object of class %s in new(): class %s does not extend that class",     dQuote(Classi), dQuote(Class))
#: R/SClasses.R:0
msgid ""
"cannot use object of class %s in new(): class %s does not extend that class"
msgstr ""

#. R/is.R: gettextf("class %s cannot extend class %s", dQuote(class1), dQuote(class2))
#: R/is.R:0
#, fuzzy
msgid "class %s cannot extend class %s"
msgstr ""
"a lista '%s' para a classe \"%s\", incluí uma classe não definida \"%s\""

#. R/RClassUtils.R: gettextf("class %s does not have a data part (a .Data slot) defined", dQuote(class(object)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "class %s does not have a data part (a .Data slot) defined"
msgstr "classe \"%s\" não tem uma parte de dados (um slot .Data) definida"

#. R/BasicClasses.R: gettextf("class %s does not have an S3 data part, and so is of type \"S4\"; no S3 equivalent",     dQuote(class(from)))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"class %s does not have an S3 data part, and so is of type \"S4\"; no S3 "
"equivalent"
msgstr ""
"Classe \"%s\" não tem uma parte de dados S3, e então é do tipo \"S4\"; não "
"há S3 equivalente"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class (%s)", dQuote(name), dQuote(cl))
#: R/RClassUtils.R:0
#, fuzzy
msgid "class %s extends an undefined class (%s)"
msgstr "classe \"%s\" extende uma classe indefinida (\"%s\")"

#. R/RClassUtils.R: gettextf("class %s extends an undefined class, %s", dQuote(ClassDef@className), dQuote(what))
#: R/RClassUtils.R:0
#, fuzzy
msgid "class %s extends an undefined class, %s"
msgstr "classe \"%s\" extende uma classe não definida, \"%s\""

#. R/refClass.R: gettextf("class %s for field %s is not defined", dQuote(thisField), sQuote(thisName))
#: R/refClass.R:0
#, fuzzy
msgid "class %s for field %s is not defined"
msgstr "'%s' não é uma das funções básicas"

#. R/RClassUtils.R: gettextf("class %s has a locked definition in package %s", dQuote(Class), sQuote(getPackageName(where)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "class %s has a locked definition in package %s"
msgstr "'Class' deve ser uma definição válida de classe ou classe"

#. R/SClasses.R: gettextf("class %s has multiple definitions visible; only the first removed", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s has multiple definitions visible; only the first removed"
msgstr ""

#. R/is.R: gettextf("class %s has no visible definition from package or environment %s", dQuote(class2),     sQuote(getPackageName(where)))
#: R/is.R:0
msgid "class %s has no visible definition from package or environment %s"
msgstr ""

#. R/BasicClasses.R: gettextf("class %s is VIRTUAL; not meaningful to create an S4 object from this class",     dQuote(cl))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"class %s is VIRTUAL; not meaningful to create an S4 object from this class"
msgstr ""
"Classe \"%s\" é VIRTUAL; não faz sentido criar um objeto S4 a partir dessa "
"classe"

#. R/as.R: gettextf("class %s is a class union: 'coerce' relations to a class union are not meaningful",     dQuote(to))
#: R/as.R:0
msgid ""
"class %s is a class union: 'coerce' relations to a class union are not "
"meaningful"
msgstr ""

#. R/is.R: gettextf("class %s is defined (with package slot %s) but no metadata object found to revise %s information---not exported?  Making a copy in package %s",     .dQ(class), sQuote(classDef@package), purpose, sQuote(getPackageName(where, FALSE)))
#: R/is.R:0
msgid ""
"class %s is defined (with package slot %s) but no metadata object found to "
"revise %s information---not exported?  Making a copy in package %s"
msgstr ""

#. R/refClass.R: gettextf("class %s is defined but is not a reference class", dQuote(Class))
#: R/refClass.R:0
#, fuzzy
msgid "class %s is defined but is not a reference class"
msgstr "'%s' não é uma das funções básicas"

#. R/SClasses.R: gettextf("class %s is defined, with package %s, but no corresponding metadata object was found (not exported?)",     dQuote(Class), sQuote(classDef@package))
#: R/SClasses.R:0
msgid ""
"class %s is defined, with package %s, but no corresponding metadata object "
"was found (not exported?)"
msgstr ""

#. R/RClassUtils.R: gettext("class %s is inheriting an inconsistent superclass structure from class %s, inconsistent with %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"class %s is inheriting an inconsistent superclass structure from class %s, "
"inconsistent with %s"
msgstr ""

#. R/as.R: gettextf("class %s is not defined in this environment", dQuote(to))
#: R/as.R:0
#, fuzzy
msgid "class %s is not defined in this environment"
msgstr "\"%s\" náo é uma classe definida nesse ambiente"

#. R/SClasses.R: gettextf("class %s is sealed; 'resetClass' will have no effect", dQuote(Class))
#: R/SClasses.R:0
msgid "class %s is sealed; 'resetClass' will have no effect"
msgstr ""

#. R/is.R: gettextf("class %s is sealed; new superclasses can not be defined, except by 'setClassUnion'",     dQuote(class1))
#: R/is.R:0
msgid ""
"class %s is sealed; new superclasses can not be defined, except by "
"'setClassUnion'"
msgstr ""

#. R/RClassUtils.R: gettextf("class %s may not contain itself: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not contain itself: it contains class %s, with a circular "
"relation back to %s"
msgstr ""

#. R/RClassUtils.R: gettextf("class %s may not have itself as a subclass: it contains class %s, with a circular relation back to %s",     dQuote(className), dQuote(exti@by), dQuote(className))
#: R/RClassUtils.R:0
msgid ""
"class %s may not have itself as a subclass: it contains class %s, with a "
"circular relation back to %s"
msgstr ""

#. R/SClasses.R: gettextf("class %s not found on %s; 'resetClass' will have no effect", dQuote(Class),     sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid "class %s not found on %s; 'resetClass' will have no effect"
msgstr ""

#. R/RClassUtils.R: stop("class cannot have both an ordinary and hidden data type")
#: R/RClassUtils.R:0
msgid "class cannot have both an ordinary and hidden data type"
msgstr ""

#. R/SClasses.R: gettext("class definition cannot extend more than one of these data types:", domain = "R-methods")
#: R/SClasses.R:0
msgid "class definition cannot extend more than one of these data types:"
msgstr ""

#. R/SClasses.R: gettextf("class definition for %s not found (no action taken)", dQuote(Class))
#: R/SClasses.R:0
msgid "class definition for %s not found (no action taken)"
msgstr ""

#. R/MethodsListClass.R: gettextf("class generator function for class %s from package %s", dQuote(object@className),     sQuote(object@package), domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid "class generator function for class %s from package %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/refClass.R: gettextf("class must be a reference class representation or a character string; got an object of class %s",     dQuote(class(Class)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"class must be a reference class representation or a character string; got an "
"object of class %s"
msgstr ""
"argumento \"f\" deve ser uma função genérica ou um único caractere, mas foi "
"obtido um objeto de classe  \"%s\""

#. R/refClass.R: gettextf("code for methods in class %s was not checked for suspicious field assignments (recommended package %s not available?)",     dQuote(Class), sQuote("codetools"))
#: R/refClass.R:0
msgid ""
"code for methods in class %s was not checked for suspicious field "
"assignments (recommended package %s not available?)"
msgstr ""

#. R/RClassUtils.R: gettextf("conflicting definition of data part: .Data = %s, superclass implies %s",     dQuote(elNamed(properties, ".Data")), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid "conflicting definition of data part: .Data = %s, superclass implies %s"
msgstr ""
"definição conflitante da parte de dados: .Data = \"%s\", superclasse implica "
"\"%s\""

#. R/MethodsList.R: gettextf("default method must be a method definition, a primitive or NULL: got an object of class %s",     dQuote(class(method)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"default method must be a method definition, a primitive or NULL: got an "
"object of class %s"
msgstr ""
"Método padrão deve ser uma definição de método, uma primitiva ou NULL; "
"obtido um objeto de classe %s"

#. R/refClass.R: stop("direct calls to 'callSuper()' are invalid: should only be called from another method")
#: R/refClass.R:0
msgid ""
"direct calls to 'callSuper()' are invalid: should only be called from "
"another method"
msgstr ""

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- value' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to)) <- "
"value' instead"
msgstr ""

#. R/as.R: warning("direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' instead",     domain = "R-methods")
#: R/as.R:0
msgid ""
"direct use of 'coerce()' method is deprecated: use 'as(from, class(to))' "
"instead"
msgstr ""

#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#. R/RClassUtils.R: gettextf("distance %d", eli@distance)
#: R/RClassUtils.R:0
msgid "distance %d"
msgstr ""

#. R/trace.R: gettextf("does not seem to be a method table for generic %s in tracing environment",     sQuote(what))
#: R/trace.R:0
msgid ""
"does not seem to be a method table for generic %s in tracing environment"
msgstr ""

#. R/zzz.R: gettext(" done", domain = "R-methods")
#: R/zzz.R:0
msgid "done"
msgstr ""

#. R/SClasses.R: gettext("duplicate class names among superclasses: %s", domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicate class names among superclasses: %s"
msgstr ""

#. R/MethodsList.R: gettextf("duplicate element names in 'MethodsList' at level %d: %s", level, paste(dQuote(unique(mnames[duplicated(mnames)])),     collapse = ", "), domain = "R-methods")
#: R/MethodsList.R:0
msgid "duplicate element names in 'MethodsList' at level %d: %s"
msgstr "nomes de elementos duplicados em 'MethodsList' no nível %d: %s"

#. R/BasicClasses.R: gettextf("duplicated level [%d] in factor", d)
#: R/BasicClasses.R:0
msgid "duplicated level [%d] in factor"
msgstr ""

#. R/MethodsList.R: gettextf("element %d at level %d (class %s) cannot be interpreted as a function or named list",     i, level, dQuote(class(eli)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"element %d at level %d (class %s) cannot be interpreted as a function or "
"named list"
msgstr ""
"elemento %d no nível %d (classe \"%s\") não pode ser interpretado como uma "
"função ou lista com nomes"

#. R/SClasses.R: gettextf("element %d of the representation was not a single character string", i)
#: R/SClasses.R:0
msgid "element %d of the representation was not a single character string"
msgstr ""

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to remove definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to remove definition "
"from %s"
msgstr ""

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s and unable to restore previous definition from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s and unable to restore previous "
"definition from %s"
msgstr ""

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; class definition removed from %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
#, fuzzy
msgid ""
"error in contained classes (%s) for class %s; class definition removed from "
"%s"
msgstr "subclasse %s da classe %s não definida; definição não atualizada"

#. R/SClasses.R: gettextf("error in contained classes (%s) for class %s; previous definition restored to %s",     msg, dQuote(Class), sQuote(getPackageName(where)))
#: R/SClasses.R:0
msgid ""
"error in contained classes (%s) for class %s; previous definition restored "
"to %s"
msgstr ""

#. R/RMethodUtils.R: gettextf("error in load action %s for package %s: %s: %s", aname, getPackageName(where),     callString, value$message)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "error in load action %s for package %s: %s: %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/Methods.R: gettextf("error in updating S4 generic function %s; the function definition is not an S4 generic function (class %s)",     sQuote(f), dQuote(class(fdef)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"error in updating S4 generic function %s; the function definition is not an "
"S4 generic function (class %s)"
msgstr ""
"erro na atualização da função genérica S4 \"%s\"; a definição da função não "
"é uma função genérica (classe \"%s\")"

#. R/RMethodUtils.R: gettext("expanding the signature to include omitted arguments in definition: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "expanding the signature to include omitted arguments in definition: %s"
msgstr ""

#. R/addedFunctions.R: gettextf("expected a non-empty character string for argument 'name'")
#: R/addedFunctions.R:0
#, fuzzy
msgid "expected a non-empty character string for argument 'name'"
msgstr "cadeia de caracteres não vazia esperada como nome do argumento"

#. R/Methods.R: gettextf("expected a non-empty character string for argument name")
#: R/Methods.R:0
msgid "expected a non-empty character string for argument name"
msgstr "cadeia de caracteres não vazia esperada como nome do argumento"

#. R/oldClass.R: gettext("explicit coercion of old-style class (%s) is not defined", domain = "R-methods")
#: R/oldClass.R:0
msgid "explicit coercion of old-style class (%s) is not defined"
msgstr ""

#. R/oldClass.R: gettextf("explicit replacement not defined for as(x, \"%s\") <- value for old-style class %s",     to, dQuote(class(from)[1L]))
#: R/oldClass.R:0
#, fuzzy
msgid ""
"explicit replacement not defined for as(x, \"%s\") <- value for old-style "
"class %s"
msgstr ""
"nenhum método 'replace' foi definido para as(x,\"%s\") <- valor para a "
"classe \"%s\""

#. R/BasicClasses.R: gettext("factor levels must be \"character\"")
#: R/BasicClasses.R:0
msgid "factor levels must be \"character\""
msgstr ""

#. R/methodsTable.R: stop("failed to find expected group generic function: ", what)
#: R/methodsTable.R:0
#, fuzzy
msgid "failed to find expected group generic function:"
msgstr "Tentando encontrar uma tabela de métodos em uma função não-genérica"

#. R/refClass.R: gettextf("field %s is already locked", sQuote(what))
#: R/refClass.R:0
msgid "field %s is already locked"
msgstr ""

#. R/refClass.R: gettextf("field %s of class %s has a non-default binding and cannot be locked", sQuote(what),     dQuote(className))
#: R/refClass.R:0
msgid "field %s of class %s has a non-default binding and cannot be locked"
msgstr ""

#. R/refClass.R: gettextf("field %s was supplied as an object of class %s; must be a class name or a binding function",     sQuote(thisName), dQuote(class(thisField)))
#: R/refClass.R:0
msgid ""
"field %s was supplied as an object of class %s; must be a class name or a "
"binding function"
msgstr ""

#. R/Methods.R: gettextf("first argument should be the names of one of more generic functions (got object of class %s)",     dQuote(class(f)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"first argument should be the names of one of more generic functions (got "
"object of class %s)"
msgstr ""
"primeiro argumento deve ser o(s) nome(s) de funções genérica (foi "
"especificado objeto de classe \"%s\""

#. R/RClassUtils.R: gettextf("for function %s: %s", f, message)
#: R/RClassUtils.R:0
#, fuzzy
msgid "for function %s: %s"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/RMethodUtils.R: gettextf("formal arguments (%s) omitted in the method definition cannot be in the signature",     bad2)
#: R/RMethodUtils.R:0
msgid ""
"formal arguments (%s) omitted in the method definition cannot be in the "
"signature"
msgstr ""

#. R/Methods.R: gettext("formal arguments differ (in default values?)")
#: R/Methods.R:0
#, fuzzy
msgid "formal arguments differ (in default values?)"
msgstr "Argumentos formais diferem (no valores padrão?)"

#. R/Methods.R: gettext("formal arguments differ: (%s), (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "formal arguments differ: (%s), (%s)"
msgstr "Argumentos formais diferem: (%s), (%s)"

#. R/RMethodUtils.R: stop(.renderSignature(f, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#. R/RMethodUtils.R: stop(.renderSignature(generic@generic, signature), "formal arguments in method and generic do not appear in the same order",     call. = FALSE)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "formal arguments in method and generic do not appear in the same order"
msgstr "argumentos 'names' e 'signature' devem ter o mesmo comprimento"

#. R/RMethodUtils.R: gettext(" found on: %s; using the first one", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "found on: %s; using the first one"
msgstr "nenhuma definição existente para função '%s'"

#. R/Methods.R: gettextf("function %s appears to be a generic function, but with generic name %s",     sQuote(f), sQuote(gen))
#: R/Methods.R:0
#, fuzzy
msgid "function %s appears to be a generic function, but with generic name %s"
msgstr ""
"função \"%s\" parece ser uma função genérica, mas com nome genérico \"%s\""

#. R/Methods.R: stop("function supplied as argument 'f' must be a generic")
#: R/Methods.R:0
#, fuzzy
msgid "function supplied as argument 'f' must be a generic"
msgstr "Função fornecida como argumento \"f\" deve ser genérica"

#. R/Methods.R: gettextf("generic function %s not found for removal", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "generic function %s not found for removal"
msgstr "função genérica \"%s\" não encontrada para remoção"

#. R/Methods.R: gettextf("generic function supplied was not created for %s", sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid "generic function supplied was not created for %s"
msgstr "função genérica fornecida não foi criada para \"%s\""

#. R/Methods.R: gettextf("generic names differ: %s, %s", .dQ(f1@generic), .dQ(f2@generic))
#: R/Methods.R:0
#, fuzzy
msgid "generic names differ: %s, %s"
msgstr "Nomes genéricos diferem: %s, %s"

#. R/RClassUtils.R: gettext("get rid of variables in definition %s (%s); they conflict with the needed change to argument names (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"get rid of variables in definition %s (%s); they conflict with the needed "
"change to argument names (%s)"
msgstr ""
"tire as variáveis da definição (%s); elas conflitam com as mudanças "
"necessárias dos nomes de argumentos (%s)"

#. R/RMethodUtils.R: stop("got a negative maximum number of frames to look at")
#: R/RMethodUtils.R:0
msgid "got a negative maximum number of frames to look at"
msgstr ""

#. R/Methods.R: gettextf("groups differ: %s, %s", .dQ(gpString(f1@group)), .dQ(gpString(f2@group)))
#: R/Methods.R:0
#, fuzzy
msgid "groups differ: %s, %s"
msgstr "Grupos diferem: %s, %s"

#. R/methodsTable.R: gettext(" have best ones", domain = "R-methods")
#: R/methodsTable.R:0
msgid "have best ones"
msgstr ""

#. R/Methods.R: gettextf("if the 'def' argument is supplied, it must be a function that calls standardGeneric(\"%s\") or is the default",     name)
#: R/Methods.R:0
#, fuzzy
msgid ""
"if the 'def' argument is supplied, it must be a function that calls "
"standardGeneric(\"%s\") or is the default"
msgstr ""
"se o argumento `def' for fornecido, ele deve ser uma função que chama "
"standardGeneric(\"%s\") para executar os métodos"

#. R/MethodsList.R: gettextf("in %s: use of \"MethodsList\" metadata objects is deprecated.", deparse(this))
#: R/MethodsList.R:0
#, fuzzy
msgid "in %s: use of \"MethodsList\" metadata objects is deprecated."
msgstr ""
"%s, junto com outro uso de  \"MethodsList\" em objetos meta dados, está "
"obsoleto"

#. R/RMethodUtils.R: gettext("in changing formal arguments in %s, some of the old names are not in fact arguments: %s",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"in changing formal arguments in %s, some of the old names are not in fact "
"arguments: %s"
msgstr ""

#. R/RClassUtils.R: gettext("in constructing the prototype for class %s, slots in prototype and not in class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"in constructing the prototype for class %s, slots in prototype and not in "
"class: %s"
msgstr ""
"na construção do protótipo para a classe \"%s\", slots no protótipo mas não "
"na classe: %s"

#. R/RClassUtils.R: gettextf("in constructing the prototype for class %s: prototype has class %s, but the data part specifies class %s",     dQuote(className), dQuote(.class1(prototype)), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"in constructing the prototype for class %s: prototype has class %s, but the "
"data part specifies class %s"
msgstr ""
"na construção do protótipo para a classe \"%s\": protótipo tem classe \"%s"
"\", mas a parte de dados especifíca a classe \"%s\""

#. R/RClassUtils.R: gettextf("in defining class %s, the supplied data part class, %s is not valid (must be a basic class or a virtual class combining basic classes)",     dQuote(name), dQuote(dataPartClass))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"in defining class %s, the supplied data part class, %s is not valid (must be "
"a basic class or a virtual class combining basic classes)"
msgstr ""
"não definição da classe \"%s\", a parte de dados da classe especificada, \"%s"
"\" não é válida (deve ser uma classe básica ou uma classe virtual combinando "
"classes básicas)"

#. R/RClassUtils.R: gettextf("in definition of class %s, information for superclass %s is of class %s (expected \"SClassExtension\")",     dQuote(ClassDef@className), dQuote(what), dQuote(class(exti)))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"in definition of class %s, information for superclass %s is of class %s "
"(expected \"SClassExtension\")"
msgstr ""
"na definição da classe \"%s\", informação para superclasse \"%s\" é da "
"classe \"%s\" (experado \"SClassExtension\")"

#. R/RClassUtils.R: gettext("in making the prototype for class %s elements of the prototype failed to match the corresponding slot class: %s",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"in making the prototype for class %s elements of the prototype failed to "
"match the corresponding slot class: %s"
msgstr ""
"na criação do protótipo para a classe \"%s\", elementos do protótipo "
"flaharam na correspondência com o classe do slot: %s"

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s (maybe mixing old and new classes?)",     dQuote(cl))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s (maybe mixing old and new "
"classes?)"
msgstr ""

#. R/oldClass.R: gettextf("inconsistent old-style class information for %s; the class is defined but does not extend %s and is not valid as the data part",     dQuote(cl), dQuote(prevClass))
#: R/oldClass.R:0
msgid ""
"inconsistent old-style class information for %s; the class is defined but "
"does not extend %s and is not valid as the data part"
msgstr ""

#. R/zzz.R: gettext("initializing class and method definitions ...", domain = "R-methods")
#: R/zzz.R:0
msgid "initializing class and method definitions ..."
msgstr ""

#. R/RClassUtils.R: gettextf("initializing objects from class %s with these arguments is not supported",     dQuote(Class))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"initializing objects from class %s with these arguments is not supported"
msgstr ""
"inicialização de objetos da classe \"%s\" com esses argumentos não é "
"suportada"

#. R/MethodsList.R: stop("inserting method corresponding to empty signature")
#: R/MethodsList.R:0
msgid "inserting method corresponding to empty signature"
msgstr "inserindo método correspondente a uma assinatura vazia"

#. R/MethodsList.R: gettextf("inserting method into non-methods-list object (class %s)", dQuote(.class1(mlist)))
#: R/MethodsList.R:0
#, fuzzy
msgid "inserting method into non-methods-list object (class %s)"
msgstr "inserindo método em uma lista de objetos não-método (classe \"%s\")"

#. R/MethodsList.R: gettextf("inserting method with invalid signature matching argument '...' to class %s",     dQuote(signature[[1L]]))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"inserting method with invalid signature matching argument '...' to class %s"
msgstr ""
"inserindo método com assinatura inválida pareando com o argumento '...' na "
"classe \"%s\""

#. R/RMethodUtils.R: gettextf("internal error: Bad methods list object in fixing methods for primitive function %s",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"internal error: Bad methods list object in fixing methods for primitive "
"function %s"
msgstr ""
"erro interno: não foi obtido um objeto de função genérica válido para a "
"função '%s'"

#. R/SClasses.R: sprintf("internal error: definition of class %s not properly assigned", dQuote(Class))
#: R/SClasses.R:0
#, fuzzy
msgid "internal error: definition of class %s not properly assigned"
msgstr "nenhuma definição existente para função '%s'"

#. R/Methods.R: sprintf("internal error: did not get a valid generic function object for function %s",     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid ""
"internal error: did not get a valid generic function object for function %s"
msgstr ""
"erro interno: não foi obtido um objeto de função genérica válido para a "
"função \"%s\""

#. R/as.R: sprintf("internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the metadata asserts that the 'is' relation is FALSE",     dQuote(thisClass), Class)
#: R/as.R:0
msgid ""
"internal problem in 'as()' function: %s is(object, \"%s\") is TRUE, but the "
"metadata asserts that the 'is' relation is FALSE"
msgstr ""

#. R/refClass.R: stop("invalid 'Class' argument:  should be a single string")
#: R/refClass.R:0
#, fuzzy
msgid "invalid 'Class' argument:  should be a single string"
msgstr "argumento de Class inválido:   deve ser uma única string"

#. R/show.R: gettextf("invalid 'ignore' argument; should be a class definition or a character vector, got an object of class %s",     dQuote(class(ignore)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid 'ignore' argument; should be a class definition or a character "
"vector, got an object of class %s"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/MethodsList.R: stop("invalid 'package' slot or attribute, wrong length")
#: R/MethodsList.R:0
msgid "invalid 'package' slot or attribute, wrong length"
msgstr ""

#. R/trace.R: gettextf("invalid 'source' argument: expected file names or a connection but got an object of class %s",     dQuote(class(source)[[1L]]))
#: R/trace.R:0
#, fuzzy
msgid ""
"invalid 'source' argument: expected file names or a connection but got an "
"object of class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/oldClass.R: gettext("invalid S4 class corresponding to S3 class: slots in  S4 version must extend corresponding slots in S3 version: fails for %s",     domain = "R-methods")
#: R/oldClass.R:0
msgid ""
"invalid S4 class corresponding to S3 class: slots in  S4 version must extend "
"corresponding slots in S3 version: fails for %s"
msgstr ""

#. R/Methods.R: gettextf("invalid argument 'name': %s", .isSingleName(name))
#: R/Methods.R:0
#, fuzzy
msgid "invalid argument 'name': %s"
msgstr "Argumento inválido  \"name\": %s"

#. R/refClass.R: gettextf("invalid assignment for reference class field %s, should be from class %s or a subclass (was class %s)",     sQuote(fieldName), dQuote(fieldClass), dQuote(class(value)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"invalid assignment for reference class field %s, should be from class %s or "
"a subclass (was class %s)"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/RMethodUtils.R: gettextf("invalid call in method dispatch to '%s' (no default method)", name)
#: R/RMethodUtils.R:0
msgid "invalid call in method dispatch to '%s' (no default method)"
msgstr ""

#. R/show.R: gettextf("invalid call passed to 'classLabel': expected a name or a class definition, got an object of class %s",     classLabel(class(Class)))
#: R/show.R:0
#, fuzzy
msgid ""
"invalid call passed to 'classLabel': expected a name or a class definition, "
"got an object of class %s"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#. R/SClasses.R: gettextf("invalid class %s object:", dQuote(Class), domain = "R-methods")
#: R/SClasses.R:0
msgid "invalid class %s object:"
msgstr ""

#. R/MethodsList.R: gettextf("invalid element in a list for \"signature\" argument; element %d is neither a class definition nor a class name",     i)
#: R/MethodsList.R:0
msgid ""
"invalid element in a list for \"signature\" argument; element %d is neither "
"a class definition nor a class name"
msgstr ""

#. R/RMethodUtils.R: gettextf("invalid element in the \"groupMembers\" slot (class %s)", dQuote(class(x)))
#: R/RMethodUtils.R:0
msgid "invalid element in the \"groupMembers\" slot (class %s)"
msgstr ""

#. R/MethodsList.R: stop("invalid first argument: should be the name of the first argument in the dispatch")
#: R/MethodsList.R:0
msgid ""
"invalid first argument: should be the name of the first argument in the "
"dispatch"
msgstr ""
"primeiro argumento inválido: deve ser o nome do primeiro argumento no "
"despacho"

#. R/methodsTable.R: gettextf("invalid group generic function in search for inherited method (class %s)",     dQuote(class(gen)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid group generic function in search for inherited method (class %s)"
msgstr ""
"'%f' não é uma função genérica válida: lista de métodos era um objeto de "
"classe \"%s\""

#. R/languageEl.R: stop("invalid index for function argument")
#: R/languageEl.R:0
msgid "invalid index for function argument"
msgstr ""

#. R/Methods.R: gettextf("invalid method definition: expected a function, got an object of class %s",     dQuote(class(definition)))
#: R/Methods.R:0
#, fuzzy
msgid ""
"invalid method definition: expected a function, got an object of class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/MethodsList.R: stop("invalid method sublist")
#: R/MethodsList.R:0
msgid "invalid method sublist"
msgstr "sublista de método inválida"

#. R/methodsTable.R: stop("invalid methods table request")
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid methods table request"
msgstr "sublista de método inválida"

#. R/methodsTable.R: gettextf("invalid mlist element for signature %s at level %d (should be methods list or method, had class %s)",     sQuote(classes[[j]]), i, dQuote(class(el)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid mlist element for signature %s at level %d (should be methods list "
"or method, had class %s)"
msgstr ""
"argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido um "
"objeto de classe  \"%s\""

#. R/MethodsListClass.R: gettextf("invalid object for formal method definition: type %s", dQuote(typeof(def)))
#: R/MethodsListClass.R:0
#, fuzzy
msgid "invalid object for formal method definition: type %s"
msgstr "objeto inválido para definição formal do método: tipo \"%s\""

#. R/SClasses.R: gettextf("invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or extend class \"%s\"",     slotNames[[i]], Class, class(sloti), classi)
#: R/SClasses.R:0
#, fuzzy
msgid ""
"invalid object for slot '%s' in class \"%s\": got class \"%s\", should be or "
"extend class \"%s\""
msgstr ""
"a lista '%s' para a classe \"%s\", incluí uma classe não definida \"%s\""

#. R/methodsTable.R: gettextf("invalid object in meta table of methods for %s, label %s, had class %s",     sQuote(generic@generic), sQuote(what), dQuote(class(obj)))
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid object in meta table of methods for %s, label %s, had class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/methodsTable.R: gettextf("invalid object in methods table (%s), expected a method, got an object of class %s",     sQuote(what), dQuote(class(method)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"invalid object in methods table (%s), expected a method, got an object of "
"class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/methodsTable.R: gettextf("invalid or unset methods table in generic function %s", sQuote(fdef@generic))
#: R/methodsTable.R:0
#, fuzzy
msgid "invalid or unset methods table in generic function %s"
msgstr "Tentando encontrar uma tabela de métodos em uma função não-genérica"

#. R/refClass.R: gettextf("invalid replacement: reference class field %s is read-only", sQuote(fieldName))
#: R/refClass.R:0
msgid "invalid replacement: reference class field %s is read-only"
msgstr ""

#. R/RMethodUtils.R: gettextf("invalid value from generic function %s, class %s, expected one of %s",     sQuote(fname), dQuote(class(object)), paste(dQuote(classes), collapse = ", "))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "invalid value from generic function %s, class %s, expected one of %s"
msgstr ""
"'%f' não é uma função genérica válida: lista de métodos era um objeto de "
"classe \"%s\""

#. R/refClass.R: gettextf("local assignment to field name will not change the field:\n    %s\n Did you mean to use \"<<-\"? ( in method %s for class %s)",     paste(unlist(assigned$locals)[localsAreFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"local assignment to field name will not change the field:\n"
"    %s\n"
" Did you mean to use \"<<-\"? ( in method %s for class %s)"
msgstr ""

#. R/RMethodUtils.R: gettextf("making a generic for special function %s", sQuote(f), domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "making a generic for special function %s"
msgstr "Criando uma nova função genérica a partir da função \"%s\""

#. R/trace.R: warning("making a traced version of a primitive; arguments will be treated as '...'")
#: R/trace.R:0
msgid ""
"making a traced version of a primitive; arguments will be treated as '...'"
msgstr ""

#. R/refClass.R: sprintf("method %s from class %s was not processed into a class method until being installed.  Possible corruption of the methods in the class.",     me, thisClass@className)
#: R/refClass.R:0
msgid ""
"method %s from class %s was not processed into a class method until being "
"installed.  Possible corruption of the methods in the class."
msgstr ""

#. R/RMethodUtils.R: gettextf("methods can add arguments to the generic %s only if '...' is an argument to the generic",     sQuote(generic@generic))
#: R/RMethodUtils.R:0
msgid ""
"methods can add arguments to the generic %s only if '...' is an argument to "
"the generic"
msgstr ""

#. R/RMethodUtils.R: gettextf("methods cannot be defined for the primitive function %s", sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "methods cannot be defined for the primitive function %s"
msgstr ""
"métodos não podem ser definidos para função primitiva '%s' nessa versão do R"

#. R/as.R: gettextf("methods currently exist for coercing from %s to %s; they will be replaced.",     dQuote(from), dQuote(to))
#: R/as.R:0
msgid ""
"methods currently exist for coercing from %s to %s; they will be replaced."
msgstr ""

#. R/refClass.R: gettext("methods declared in usingMethods() but not found: %s", domain = "R-methods")
#: R/refClass.R:0
msgid "methods declared in usingMethods() but not found: %s"
msgstr ""

#. R/BasicFunsList.R: gettextf("methods may not be defined for primitive function %s in this version of R",     sQuote(f))
#: R/BasicFunsList.R:0
#, fuzzy
msgid ""
"methods may not be defined for primitive function %s in this version of R"
msgstr ""
"métodos não podem ser definidos para função primitiva '%s' nessa versão do R"

#. R/RMethodUtils.R: gettextf("missing function for load action: %s", what)
#: R/RMethodUtils.R:0
#, fuzzy
msgid "missing function for load action: %s"
msgstr "nenhuma definição existente para função \"%s\""

#. R/MethodsListClass.R: gettextf("missing package slot (%s) in object of class %s (package info added)",     packageSlot(co), dQuote(class(.Object)))
#: R/MethodsListClass.R:0
#, fuzzy
msgid "missing package slot (%s) in object of class %s (package info added)"
msgstr ""
"faltando slot do pacote (%s) em objeto de classe \"%s\" (informações do "
"pacote acrescentadas)"

#. R/MethodsList.R: gettextf("more elements in the method signature (%d) than in the generic signature (%d) for function %s",     length(which), length(anames), sQuote(fun@generic))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"more elements in the method signature (%d) than in the generic signature "
"(%d) for function %s"
msgstr ""
"mais elementos na assinatura do método (%d) do que na assinatura genérica "
"(%d)"

#. R/RClassUtils.R: gettextf("more than one possible class for the data part: using %s rather than %s",     .dQ(prevDataPartClass), .dQ(value))
#: R/RClassUtils.R:0
msgid "more than one possible class for the data part: using %s rather than %s"
msgstr ""
"mais de uma possível classe para a parte de dados: usando %s ao invés de %s"

#. R/SClasses.R: gettext("multiple class definitions for class %s from packages: %s; picking the first",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple class definitions for class %s from packages: %s; picking the first"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s, but the supplied package (%s) is not one of them (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s, but the supplied package (%s) is "
"not one of them (%s)"
msgstr ""

#. R/RMethodUtils.R: gettext("multiple definitions exist for class %s; should specify one of them (%s), e.g. by className()",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"multiple definitions exist for class %s; should specify one of them (%s), e."
"g. by className()"
msgstr ""

#. R/promptClass.R: gettextf("multiple definitions of %s found; using the one on %s", dQuote(clName),     whereClass)
#: R/promptClass.R:0
#, fuzzy
msgid "multiple definitions of %s found; using the one on %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/RMethodUtils.R: gettextf("multiple direct matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "multiple direct matches: %s; using the first of these"
msgstr "nenhuma definição existente para função '%s'"

#. R/RMethodUtils.R: gettextf("multiple equivalent inherited matches: %s; using the first of these", .pasteC(classes))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "multiple equivalent inherited matches: %s; using the first of these"
msgstr "nenhuma definição existente para função '%s'"

#. R/trace.R: gettextf("multiple generics match pattern, using table %s", table)
#: R/trace.R:0
msgid "multiple generics match pattern, using table %s"
msgstr ""

#. R/Methods.R: gettextf("must provide an environment table; got class %s", dQuote(class(what)))
#: R/Methods.R:0
#, fuzzy
msgid "must provide an environment table; got class %s"
msgstr "É obrigatório fornecer uma tabela de ambiente; obtida classe \"%s\""

#. R/Methods.R: gettextf("must supply a function skeleton for %s, explicitly or via an existing function",     sQuote(name))
#: R/Methods.R:0
#, fuzzy
msgid ""
"must supply a function skeleton for %s, explicitly or via an existing "
"function"
msgstr ""
"deve ser especificado o esqueleto de uma funcão, explicitamente ou através "
"de uma função existente"

#. R/RMethodUtils.R: gettextf("must supply either a generic function or a function as default for %s",     sQuote(f))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "must supply either a generic function or a function as default for %s"
msgstr "a definição genérica de função fornecida para"

#. R/method.skeleton.R: stop("need a definition for the method here")
#: R/method.skeleton.R:0
#, fuzzy
msgid "need a definition for the method here"
msgstr "nenhuma definição existente para função '%s'"

#. R/RClassUtils.R: gettextf("needed the supplied labels vector of length %d, got %d", length(nodes),     length(short))
#: R/RClassUtils.R:0
msgid "needed the supplied labels vector of length %d, got %d"
msgstr ""

#. R/RClassUtils.R: gettextf("no '.Data' slot defined for class %s", dQuote(class(object)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "no '.Data' slot defined for class %s"
msgstr "nenhum slot '.Data' definido para a classe \"%s\""

#. R/ClassExtensions.R: gettextf("no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s",     to, dQuote(class(from)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"no 'replace' method was defined for 'as(x, \"%s\") <- value' for class %s"
msgstr ""
"nenhum método 'replace' foi definido para as(x,\"%s\") <- valor para a "
"classe \"%s\""

#. R/Methods.R: sprintf("no S4 method for function %s and signature %s; consider getS3method() if you wanted the S3 method",     sQuote(.genericName(f)), Classes)
#: R/Methods.R:0
#, fuzzy
msgid ""
"no S4 method for function %s and signature %s; consider getS3method() if you "
"wanted the S3 method"
msgstr ""
"nenhum método S4 disponível para a função \"%s\" e assinatura %s; considere "
"getS3method() se você queria o método S3"

#. R/Methods.R: gettext("no applicable functions", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no applicable functions"
msgstr "não são ambas funções!"

#. R/trace.R: gettextf("no definition for object %s found in tracing environment", sQuote(what),     source)
#: R/trace.R:0
msgid "no definition for object %s found in tracing environment"
msgstr ""

#. R/fixPrevious.R: gettextf("no definition for the class of %s (class %s) found", sQuote(what), dQuote(class))
#: R/fixPrevious.R:0
#, fuzzy
msgid "no definition for the class of %s (class %s) found"
msgstr "nenhuma definição existente para função '%s'"

#. R/RMethodUtils.R: gettextf("no definition found for class %s", dQuote(classi), domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "no definition found for class %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/refClass.R: gettext("no definition found for inherited class: %s", domain = "R-methods")
#: R/refClass.R:0
#, fuzzy
msgid "no definition found for inherited class: %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/SClasses.R: gettextf("no definition of %s to use for %s", dQuote(Class), unique)
#: R/SClasses.R:0
#, fuzzy
msgid "no definition of %s to use for %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/promptClass.R: gettextf("no definition of class %s found", dQuote(clName))
#: R/promptClass.R:0
#, fuzzy
msgid "no definition of class %s found"
msgstr "nenhuma definição existente para função '%s'"

#. R/RClassUtils.R: gettextf("no definition of inheritance from %s to %s, though the relation was implied by the setIs() from %s",     .dQ(what), .dQ(def2@className), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"no definition of inheritance from %s to %s, though the relation was implied "
"by the setIs() from %s"
msgstr ""

#. R/RClassUtils.R: gettextf("no definition was found for superclass %s in the specification of class %s",     dQuote(cl), dQuote(name))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"no definition was found for superclass %s in the specification of class %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/Methods.R: gettext("  no direct match found to signature (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no direct match found to signature (%s)"
msgstr "Nenhum método encontrado para a assinatura %s"

#. R/Methods.R: gettextf("no environment or package corresponding to argument where=%s", deparse(where))
#: R/Methods.R:0
msgid "no environment or package corresponding to argument where=%s"
msgstr "nenhum ambiente ou pacote correspondente ao argumento where=%s"

#. R/Methods.R: gettextf("no existing definition for function %s", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "no existing definition for function %s"
msgstr "nenhuma definição existente para função \"%s\""

#. R/addedFunctions.R: gettextf("no function %s found", sQuote(name))
#: R/addedFunctions.R:0
#, fuzzy
msgid "no function %s found"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/trace.R: gettextf("no function definition for %s found", sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid "no function definition for %s found"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/method.skeleton.R: gettextf("no function definition found for %s", sQuote(generic))
#: R/method.skeleton.R:0
#, fuzzy
msgid "no function definition found for %s"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#. R/Methods.R: gettextf("no generic function %s found", sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "no generic function %s found"
msgstr "nenhuma função genérica \"%s\" encontrada"

#. R/MethodsList.R: gettextf("no generic function found corresponding to %s", sQuote(f))
#: R/MethodsList.R:0
#, fuzzy
msgid "no generic function found corresponding to %s"
msgstr "Nenhuma função genérica correspondendo a \"%s\""

#. R/Methods.R: gettextf("no generic function found for %s", sQuote(f))
#. R/RMethodUtils.R: gettextf("no generic function found for %s", sQuote(f))
#: R/Methods.R:0 R/RMethodUtils.R:0
#, fuzzy
msgid "no generic function found for %s"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for package %s",     sQuote(name), sQuote(package), sQuote(thisPackage))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for package %s"
msgstr ""
"Nenhuma versão genérica de %s no pacote %s é pertimida;\n"
"   uma nova genérica será atribuída com o pacote %s"

#. R/Methods.R: gettextf("no generic version of %s on package %s is allowed; a new generic will be assigned for the global environment",     sQuote(name), sQuote(package))
#: R/Methods.R:0
#, fuzzy
msgid ""
"no generic version of %s on package %s is allowed; a new generic will be "
"assigned for the global environment"
msgstr ""
"Nenhuma versão genérica de %s no pacote %s é pertimida;\n"
"   uma nova genérica será atribuída com o pacote %s"

#. R/Methods.R: gettextf("no method defined in methods list object for function %s and signature %s",     sQuote(.genericName(f)), Classes)
#: R/Methods.R:0
#, fuzzy
msgid ""
"no method defined in methods list object for function %s and signature %s"
msgstr ""
"nenhum método definido no objeto de lista de métodos para a função '%s' e "
"assinatura %s"

#. R/Methods.R: gettextf("no method for %s matches class %s", sQuote("..."), dQuote(signature))
#: R/Methods.R:0
#, fuzzy
msgid "no method for %s matches class %s"
msgstr "Nenhum método para \"...\" corresponde à classe \"%s\""

#. R/Methods.R: gettext("no method found for function %s and signature %s", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no method found for function %s and signature %s"
msgstr "nenhum método encontrado para a função \"%s\" e assinatura %s"

#. R/Methods.R: gettext("no method found for function '%s' and signature %s", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no method found for function '%s' and signature %s"
msgstr "nenhum método encontrado para a função '%s' e assinatura %s"

#. R/Methods.R: gettext("no method found for signature %s", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "no method found for signature %s"
msgstr "Nenhum método encontrado para a assinatura %s"

#. R/trace.R: gettextf("no method in methods table for %s for signature %s", sQuote(what), sQuote(signature))
#: R/trace.R:0
#, fuzzy
msgid "no method in methods table for %s for signature %s"
msgstr "nenhum método definido para a função '%s' e assinatura %s"

#. R/as.R: gettextf("no method or default for 'as()' function replacement of %s with class=\"%s\"",     dQuote(thisClass), Class)
#: R/as.R:0
#, fuzzy
msgid ""
"no method or default for 'as()' function replacement of %s with class=\"%s\""
msgstr "nenhum método encontrado para a função \"%s\" e assinatura %s"

#. R/RMethodUtils.R: gettextf("no method or default matching the \"...\" arguments in %s", deparse(sys.call(sys.parent()),     nlines = 1))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "no method or default matching the \"...\" arguments in %s"
msgstr "nenhum método encontrado para a função \"%s\" e assinatura %s"

#. R/as.R: gettextf("no method or default scheme for coercing %s to %s", dQuote(thisClass),     dQuote(Class))
#: R/as.R:0
#, fuzzy
msgid "no method or default scheme for coercing %s to %s"
msgstr "nenhum método encontrado para a função \"%s\" e assinatura %s"

#. R/RMethodUtils.R: gettextf("no methods found for %s; cacheGenericsMetaData() will have no effect",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "no methods found for %s; cacheGenericsMetaData() will have no effect"
msgstr ""

#. R/methodsTable.R: gettextf("no methods table for generic %s from package %s in package %s", sQuote(generic@generic),     sQuote(generic@package), sQuote(getPackageName(where)))
#: R/methodsTable.R:0
#, fuzzy
msgid "no methods table for generic %s from package %s in package %s"
msgstr "Criando uma nova função genérica para \"%s\" em \"%s\""

#. R/addedFunctions.R: gettextf("no non-generic function %s found", sQuote(name))
#: R/addedFunctions.R:0
#, fuzzy
msgid "no non-generic function %s found"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/SClasses.R: gettextf("no package name supplied and no class definition found for class %s", dQuote(className))
#: R/SClasses.R:0
#, fuzzy
msgid "no package name supplied and no class definition found for class %s"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#. R/RMethodUtils.R: stop("no suitable arguments to dispatch methods in this function")
#: R/RMethodUtils.R:0
msgid "no suitable arguments to dispatch methods in this function"
msgstr ""

#. R/RMethodUtils.R: gettext("non-empty string; got \"\"")
#: R/RMethodUtils.R:0
msgid "non-empty string; got \"\""
msgstr ""

#. R/RMethodUtils.R: gettextf("non-function action: %s", sQuote(fname))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "non-function action: %s"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/Methods.R: gettextf("non-generic function '%s' given to findMethods()", f)
#: R/Methods.R:0
msgid "non-generic function '%s' given to findMethods()"
msgstr "função não-genérica '%s' fornecida para findMethods()"

#. R/refClass.R: gettextf("non-local assignment to method names is not allowed\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsInMethods], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to method names is not allowed\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""

#. R/refClass.R: gettextf("non-local assignment to non-field names (possibly misspelled?)\n    %s\n( in method %s for class %s)",     paste(unlist(assigned$globals)[globalsNotFields], collapse = "; "), methodName,     className)
#: R/refClass.R:0
msgid ""
"non-local assignment to non-field names (possibly misspelled?)\n"
"    %s\n"
"( in method %s for class %s)"
msgstr ""

#. R/trace.R: stop("none of the objects in the source code could be found:  need to attach or specify the package")
#: R/trace.R:0
msgid ""
"none of the objects in the source code could be found:  need to attach or "
"specify the package"
msgstr ""

#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#. R/refClass.R: gettextf("not a reference class: %s", ClassDef@name)
#: R/refClass.R:0
#, fuzzy
msgid "not a reference class: %s"
msgstr "'%s' não é uma das funções básicas"

#. R/oldClass.R: stop("not allowed to have test==TRUE and an S4Class definition")
#: R/oldClass.R:0
msgid "not allowed to have test==TRUE and an S4Class definition"
msgstr ""

#. R/Methods.R: gettext("not both functions!")
#: R/Methods.R:0
msgid "not both functions!"
msgstr "não são ambas funções!"

#. R/fixPrevious.R: gettextf("object %s not changed (it does not appear to be from a version of R earlier than 1.8.0)",     sQuote(what))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it does not appear to be from a version of R earlier "
"than 1.8.0)"
msgstr ""

#. R/fixPrevious.R: gettextf("object %s not changed (it is not consistent with the current definition of class %s from %s)",     sQuote(what), dQuote(Class), sQuote(ClassDef@package))
#: R/fixPrevious.R:0
msgid ""
"object %s not changed (it is not consistent with the current definition of "
"class %s from %s)"
msgstr ""

#. R/fixPrevious.R: gettextf("object %s was not found", sQuote(what))
#: R/fixPrevious.R:0
#, fuzzy
msgid "object %s was not found"
msgstr "nenhuma função genérica '%s' encontrada"

#. R/BasicClasses.R: gettextf("object must be a valid data part for class %s; not true of type %s", dQuote(cl),     dQuote(class(data)))
#: R/BasicClasses.R:0
#, fuzzy
msgid "object must be a valid data part for class %s; not true of type %s"
msgstr ""
"Objeto deve ser uma parte de dados válida para a classe \"%s\"; não "
"verdadeiro para o tipo \"%s\""

#. R/MethodsList.R: gettextf("object to use as a method signature for function %s does not look like a legitimate signature (a vector of single class names): there were %d class names, but %d elements in the signature object",     sQuote(fun@generic), length(sigClasses), length(signature))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"object to use as a method signature for function %s does not look like a "
"legitimate signature (a vector of single class names): there were %d class "
"names, but %d elements in the signature object"
msgstr ""
"objeto para usar como método da assinatura da função \"%s\" não parece uma "
"assinatura legítma (um vetor de nomes de classes simples): houve %d nomes de "
"classes, mas %d elementos na assinatura do objeto"

#. R/trace.R: gettext("objects found in multiple packages: using %s and ignoring %s", domain = "R-methods")
#: R/trace.R:0
msgid "objects found in multiple packages: using %s and ignoring %s"
msgstr ""

#. R/Methods.R: gettextf("only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)",     inherited)
#: R/Methods.R:0
#, fuzzy
msgid ""
"only FALSE is meaningful for 'inherited', when 'where' is supplied (got %s)"
msgstr ""
"Somente 'FALSE' faz sentido para 'inherited', quando 'where' é fornecido "
"(obtido"

#. R/SClasses.R: stop("only arguments 'Class' and 'where' can be supplied when argument 'representation' is a \"classRepresentation\" object")
#: R/SClasses.R:0
msgid ""
"only arguments 'Class' and 'where' can be supplied when argument "
"'representation' is a \"classRepresentation\" object"
msgstr ""

#. R/SClasses.R: stop("only one data object (unnamed argument passed to 'prototype()' function) allowed")
#: R/SClasses.R:0
msgid ""
"only one data object (unnamed argument passed to 'prototype()' function) "
"allowed"
msgstr ""

#. R/Methods.R: gettext("original function is prohibited as a generic function")
#: R/Methods.R:0
#, fuzzy
msgid "original function is prohibited as a generic function"
msgstr "Função original é proibida como função genérica"

#. R/trace.R: gettextf("package %s is not attached and no namespace found for it", sQuote(package))
#: R/trace.R:0
msgid "package %s is not attached and no namespace found for it"
msgstr ""

#. R/RMethodUtils.R: gettextf("package %s seems to have out-of-date methods; need to reinstall from source",     sQuote(getPackageName(where[[1L]])))
#: R/RMethodUtils.R:0
msgid ""
"package %s seems to have out-of-date methods; need to reinstall from source"
msgstr ""

#. R/methodsTable.R: gettext("package slot missing from signature for generic %s\n and classes %s\ncannot use with duplicate class names (the package may need to be re-installed)",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"package slot missing from signature for generic %s\n"
" and classes %s\n"
"cannot use with duplicate class names (the package may need to be re-"
"installed)"
msgstr ""

#. R/Methods.R: gettextf("package slots  differ: %s, %s", .dQ(gpString(f1@package)), .dQ(gpString(f2@package)))
#: R/Methods.R:0
#, fuzzy
msgid "package slots  differ: %s, %s"
msgstr "Slots dos pacotes      diferem: %s, %s"

#. R/RClassUtils.R: gettext("potential cycle in class inheritance: %s has duplicates in superclasses and subclasses (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"potential cycle in class inheritance: %s has duplicates in superclasses and "
"subclasses (%s)"
msgstr ""
"ciclo potencial na herança de classe: \"%s\" tem duplicatas nas superclasses "
"e subclasses (%s)"

#. R/Methods.R: stop("primitive functions cannot be methods; they must be enclosed in a regular function")
#: R/Methods.R:0
msgid ""
"primitive functions cannot be methods; they must be enclosed in a regular "
"function"
msgstr ""
"funções primitivas não podem ser métodos; elas devem estar dentro de uma "
"função regular"

#. R/RClassUtils.R: warning("prototype is a list with named elements (could be ambiguous): better to use function 'prototype()' to avoid trouble.")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"prototype is a list with named elements (could be ambiguous): better to use "
"function 'prototype()' to avoid trouble."
msgstr ""
"protótipo é uma lista com elementos nomeados (pode ser ambíguo): melhor usar "
"a função prototype() para evitar problemas"

#. R/ClassExtensions.R: gettextf("replacement value must be of class %s, got one of class %s", dQuote(CLASS),     dQuote(class(value)[[1L]]))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "replacement value must be of class %s, got one of class %s"
msgstr "Valor de reposição deve estender a classe \"%s\", sem a classe\"%s\""

#. R/ClassExtensions.R: gettextf("replacement value must extend class %s, got %s", dQuote(needClass), dQuote(S3Class[[1L]]))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "replacement value must extend class %s, got %s"
msgstr "Valor de reposição deve estender a classe \"%s\", sem a classe\"%s\""

#. R/oldClass.R: gettextf("restoring definition of class %s", dQuote(cl))
#: R/oldClass.R:0
#, fuzzy
msgid "restoring definition of class %s"
msgstr "nenhuma definição existente para função '%s'"

#. R/Methods.R: stop("selectMethod(): mlist is not an environment or NULL :\n", "** should no longer happen!",     domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "selectMethod(): mlist is not an environment or NULL :"
msgstr "selectMethod(): mlist não é um ambiente ou é NULL"

#. R/trace.R: gettextf("setting a method over the binding of symbol %s in environment/package %s",     sQuote(what), sQuote(getPackageName(where)))
#: R/trace.R:0
#, fuzzy
msgid ""
"setting a method over the binding of symbol %s in environment/package %s"
msgstr ""
"não é possível remover os métodos para \"%s\" no ambiente/pacote bloqueado "
"\"%s\""

#. R/Methods.R: gettext("signatures differ:  (%s), (%s)", domain = "R-methods")
#: R/Methods.R:0
#, fuzzy
msgid "signatures differ:  (%s), (%s)"
msgstr "Assinaturas diferem:  (%s), (%s)"

#. R/RMethodUtils.R: gettextf("single string; got a character vector of length %d", length(what))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "single string; got a character vector of length %d"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/RMethodUtils.R: gettextf("single string; got an object of class %s", dQuote(class(what)[[1L]]))
#: R/RMethodUtils.R:0
#, fuzzy
msgid "single string; got an object of class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/MethodsList.R: gettext("skipping methods list element %s of unexpected class %s\n\n", domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "skipping methods list element %s of unexpected class %s"
msgstr ""
"pulando o elemento %s da lista de métodos por ser de classe inesperada \"%s\""

#. R/RClassUtils.R: gettextf("slot %s in class %s currently defined (or inherited) as \"%s\", conflicts with an inherited definition in class %s",     sQuote(dup), dQuote(name), elNamed(allProps, dup), dQuote(cl))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"slot %s in class %s currently defined (or inherited) as \"%s\", conflicts "
"with an inherited definition in class %s"
msgstr ""
"slot \"%s\" na classe \"%s\" definido atualmente (ou herdado) como \"%s\", "
"conflita com uma definição herdada na classe \"%s\""

#. R/oldClass.R: gettextf("slot %s: class %s should extend class %s", sQuote(what), dQuote(elNamed(slots1,     what)), dQuote(elNamed(slots2, what)))
#: R/oldClass.R:0
#, fuzzy
msgid "slot %s: class %s should extend class %s"
msgstr ""
"a lista '%s' para a classe \"%s\", incluí uma classe não definida \"%s\""

#. R/SClasses.R: gettext("slots in class definition but not in object:")
#: R/SClasses.R:0
msgid "slots in class definition but not in object:"
msgstr ""

#. R/RMethodUtils.R: gettext("some actions are missing: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
msgid "some actions are missing: %s"
msgstr ""

#. R/methodsTable.R: gettext("something weird: inconsistent number of args in methods table strings: %s (using the largest value)",     domain = "R-methods")
#: R/methodsTable.R:0
msgid ""
"something weird: inconsistent number of args in methods table strings: %s "
"(using the largest value)"
msgstr ""

#. R/RMethodUtils.R: gettextf("special function %s has no known argument list; will assume '(x, ...)'",     sQuote(f))
#: R/RMethodUtils.R:0
msgid "special function %s has no known argument list; will assume '(x, ...)'"
msgstr ""

#. R/RMethodUtils.R: gettextf("special function %s is not permitted to have methods", sQuote(f))
#: R/RMethodUtils.R:0
msgid "special function %s is not permitted to have methods"
msgstr ""

#. R/RClassUtils.R: gettextf("subclass %s of class %s is not local and cannot be updated for new inheritance information; consider setClassUnion()",     .dQ(what), .dQ(class))
#: R/RClassUtils.R:0
msgid ""
"subclass %s of class %s is not local and cannot be updated for new "
"inheritance information; consider setClassUnion()"
msgstr ""

#. R/SClasses.R: gettextf("superclass \"%s\" not defined in the environment of the object's class",     superClass)
#: R/SClasses.R:0
#, fuzzy
msgid "superclass \"%s\" not defined in the environment of the object's class"
msgstr "\"%s\" náo é uma classe definida nesse ambiente"

#. R/trace.R: gettextf("supplied package, %s, differs from package inferred from source, %s", sQuote(package),     sQuote(envPackage))
#: R/trace.R:0
msgid "supplied package, %s, differs from package inferred from source, %s"
msgstr ""

#. R/methodsTable.R: gettextf("the \"ambiguousMethodSelection\" option should be a function to be called as the condition action; got an object of class %s",     dQuote(class(condAction)))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"the \"ambiguousMethodSelection\" option should be a function to be called as "
"the condition action; got an object of class %s"
msgstr ""
"o argumento 'coerce' para 'setId' deve ser uma função de um argumento, mas "
"foi especificado um objeto de classe \"%s\""

#. R/RMethodUtils.R: gettextf("the %s argument must be NULL or a generic function object; got an object of class %s",     sQuote("genericFunction"), dQuote(class(genericFunction)))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"the %s argument must be NULL or a generic function object; got an object of "
"class %s"
msgstr ""
"argumento \"f\" deve ser uma função genérica ou um único caractere, mas foi "
"obtido um objeto de classe  \"%s\""

#. R/RClassUtils.R: gettextf("the '%s' list for class %s, includes an undefined class %s", if (superClassCase) "superClass" else "subClass",     dQuote(className), dQuote(.className(by)))
#: R/RClassUtils.R:0
#, fuzzy
msgid "the '%s' list for class %s, includes an undefined class %s"
msgstr ""
"a lista '%s' para a classe \"%s\", incluí uma classe não definida \"%s\""

#. R/ClassExtensions.R: gettextf("the 'S3Class' argument must be a superclass of %s: not true of class %s",     dQuote(class(object)), dQuote(S3Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid "the 'S3Class' argument must be a superclass of %s: not true of class %s"
msgstr ""
"O argumento S3Class deve ser uma subclasse de\"%s\":  não se aplica à classe "
"\"%s\""

#. R/ClassExtensions.R: gettextf("the 'coerce' argument to 'setIs' should be a function of one argument, got an object of class %s",     dQuote(class(coerce)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"the 'coerce' argument to 'setIs' should be a function of one argument, got "
"an object of class %s"
msgstr ""
"o argumento 'coerce' para 'setId' deve ser uma função de um argumento, mas "
"foi especificado um objeto de classe \"%s\""

#. R/refClass.R: gettextf("the 'contains' argument should be the names of superclasses:  got an element of class %s",     dQuote(class(what)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the 'contains' argument should be the names of superclasses:  got an element "
"of class %s"
msgstr ""
"primeiro argumento deve ser o(s) nome(s) de funções genérica (foi "
"especificado objeto de classe \"%s\""

#. R/ClassExtensions.R: gettextf("the 'replace' argument to setIs() should be a function of 2 or 3 arguments, got an object of class %s",     dQuote(class(replace)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"the 'replace' argument to setIs() should be a function of 2 or 3 arguments, "
"got an object of class %s"
msgstr ""
"o argumento 'replace' para setIs() deve ser uma função de 2 ou 3 argumentos, "
"obtido de um objeto da classe \"%s\""

#. R/Methods.R: gettextf("the 'where' environment (%s) is a locked namespace; cannot assign methods there",     getPackageName(where))
#: R/Methods.R:0
msgid ""
"the 'where' environment (%s) is a locked namespace; cannot assign methods "
"there"
msgstr ""
"o ambiente 'where' (%s) é um espaços de nomes bloqueado; não é possível "
"atribuir métodos nele"

#. R/oldClass.R: gettextf("the S3 class of the prototype, \"%s\", is undefined; only allowed when this is the S3 class being registered (\"%s\")",     .class1(prototype), mainClass)
#: R/oldClass.R:0
msgid ""
"the S3 class of the prototype, \"%s\", is undefined; only allowed when this "
"is the S3 class being registered (\"%s\")"
msgstr ""

#. R/RMethodUtils.R: gettextf("the body of the generic function for %s calls 'standardGeneric' to dispatch on a different name (\"%s\")!",     sQuote(fname), paste(as.character(x[[2L]]), collapse = "\n"))
#: R/RMethodUtils.R:0
msgid ""
"the body of the generic function for %s calls 'standardGeneric' to dispatch "
"on a different name (\"%s\")!"
msgstr ""

#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#. R/refClass.R: gettextf("the class of field %s in the object is not compatible with the desired class %s in the target",     sQuote(field), dQuote(fieldClasses[[field]]))
#: R/refClass.R:0
msgid ""
"the class of field %s in the object is not compatible with the desired class "
"%s in the target"
msgstr ""

#. R/ClassExtensions.R: gettextf("the computation: 'as(object,\"%s\") <- value' is valid when object has class %s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)\n",     TO, dQuote(FROM), TO, dQuote(class(value)))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"the computation: 'as(object,\"%s\") <- value' is valid when object has class "
"%s only if 'is(value, \"%s\")' is TRUE ('class(value)' was %s)"
msgstr ""
"a instrução: as(object,\"%s\") <- valor é válido quando o objeto for da "
"classe  \"%s\" somente se is(value, \"%s\") for TRUE (class(value) for \"%s"
"\")"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#. R/refClass.R: gettextf("the definition of class %s in package %s is locked so fields may not be modified",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the definition of class %s in package %s is locked so fields may not be "
"modified"
msgstr ""
"o método para a função \"%s\" e assinatura %s está selado e não pode ser "
"redefinido"

#. R/refClass.R: gettextf("the definition of class %s in package %s is locked, methods may not be redefined",     dQuote(def@className), sQuote(def@package))
#: R/refClass.R:0
#, fuzzy
msgid ""
"the definition of class %s in package %s is locked, methods may not be "
"redefined"
msgstr ""
"o método para a função \"%s\" e assinatura %s está selado e não pode ser "
"redefinido"

#. R/trace.R: stop("the editing in trace() can only change the body of the function, not the arguments or defaults")
#: R/trace.R:0
msgid ""
"the editing in trace() can only change the body of the function, not the "
"arguments or defaults"
msgstr ""

#. R/trace.R: gettextf("the editing in trace() can only change the body of the function; got an object of class %s",     dQuote(class(def2)))
#: R/trace.R:0
#, fuzzy
msgid ""
"the editing in trace() can only change the body of the function; got an "
"object of class %s"
msgstr ""
"definição de método inválida: uma função era esperada, mas foi especificado "
"um objeto de classe \"%s\""

#. R/Methods.R: gettextf("the environment %s is locked; cannot assign methods for function %s", sQuote(getPackageName(where)),     sQuote(f))
#: R/Methods.R:0
#, fuzzy
msgid "the environment %s is locked; cannot assign methods for function %s"
msgstr ""
"o ambiente \"%s\" está travado; não é possível atribuir métodos para a "
"função \"%s\""

#. R/RMethodUtils.R: gettextf("the function being used as %s in making a generic function for %s is currently traced; the function used will have tracing removed",     what, sQuote(f))
#: R/RMethodUtils.R:0
msgid ""
"the function being used as %s in making a generic function for %s is "
"currently traced; the function used will have tracing removed"
msgstr ""

#. R/ClassUnion.R: gettext("the member classes must be defined: not true of %s", domain = "R-methods")
#: R/ClassUnion.R:0
msgid "the member classes must be defined: not true of %s"
msgstr "as classes membro devem estar definidas: isso não se aplica para %s"

#. R/trace.R: gettextf("the method for %s for this signature was not being traced", sQuote(what))
#: R/trace.R:0
#, fuzzy
msgid "the method for %s for this signature was not being traced"
msgstr "no método %s com assinatura %s:"

#. R/Methods.R: gettextf("the method for function %s and signature %s is sealed and cannot be re-defined",     sQuote(f), .signatureString(fdef, signature))
#: R/Methods.R:0
#, fuzzy
msgid ""
"the method for function %s and signature %s is sealed and cannot be re-"
"defined"
msgstr ""
"o método para a função \"%s\" e assinatura %s está selado e não pode ser "
"redefinido"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match %s's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "the names in signature for method (%s) do not match %s's arguments (%s)"
msgstr ""
"os nomes na assinatura do método (%s) não correspondem aos argumentos da "
"função %s (%s)"

#. R/MethodsListClass.R: gettext("the names in signature for method (%s) do not match function's arguments (%s)",     domain = "R-methods")
#: R/MethodsListClass.R:0
#, fuzzy
msgid ""
"the names in signature for method (%s) do not match function's arguments (%s)"
msgstr ""
"os nomes na assinatura do método (%s) não correspondem aos argumentos da "
"função %s (%s)"

#. R/refClass.R: gettextf("the overriding class (\"%s\") of field %s is not a subclass of the existing field definition (\"%s\")",     value[[field]], sQuote(field), fieldList[[field]])
#: R/refClass.R:0
msgid ""
"the overriding class (\"%s\") of field %s is not a subclass of the existing "
"field definition (\"%s\")"
msgstr ""

#. R/ClassExtensions.R: gettextf("there is no automatic definition for 'as(object, \"%s\") <- value' when object has class %s and no 'replace' argument was supplied; replacement will be an error",     to, dQuote(Class))
#: R/ClassExtensions.R:0
#, fuzzy
msgid ""
"there is no automatic definition for 'as(object, \"%s\") <- value' when "
"object has class %s and no 'replace' argument was supplied; replacement will "
"be an error"
msgstr ""
"não há definição automática para as(object, \"%s\") <- valor quando o objeto "
"for da classe \"%s\" e nenhum argumento 'replace' foi especificado; "
"substituição retornará um erro"

#. R/refClass.R: gettextf("topic %s is not a method name in class %s\nThe class definition follows\n",     sQuote(topic), dQuote(className), domain = "R-methods")
#: R/refClass.R:0
msgid ""
"topic %s is not a method name in class %s\n"
"The class definition follows"
msgstr ""

#. R/trace.R: gettextf("tracing the internal function %s is not allowed", sQuote(what))
#: R/trace.R:0
msgid "tracing the internal function %s is not allowed"
msgstr ""

#. R/RClassUtils.R: gettextf("trying to assign an object of class %s as the definition of class %s: must supply a \"classRepresentation\" object",     dQuote(class(def)), dQuote(Class))
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"trying to assign an object of class %s as the definition of class %s: must "
"supply a \"classRepresentation\" object"
msgstr ""
"tentativa de atribuir um objeto de classe \"%s\" como definição de classe "
"\"%s\": deve ser especificado um objeto \"classRepresentation\""

#. R/RClassUtils.R: gettext("trying to change the argument list of %s with %d arguments to have arguments (%s)",     domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid ""
"trying to change the argument list of %s with %d arguments to have arguments "
"(%s)"
msgstr ""
"tentando mudar a lista de argumentos de uma função com %d argumentos para "
"ter argumentos (%s)"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s in an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
#, fuzzy
msgid ""
"trying to change the formal arguments in %s in an object of class %s; "
"expected a function definition"
msgstr ""
"tentando parear com uma assinatura de método um objeto (de classe \"%s\") "
"que não é uma função genérica"

#. R/RMethodUtils.R: gettextf("trying to change the formal arguments in %s, but getting the new formals from an object of class %s; expected a function definition",     msg, dQuote(class(def)))
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but getting the new formals "
"from an object of class %s; expected a function definition"
msgstr ""

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is greater than the number of new arguments (the extra arguments won't be used): (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is greater than the number of new arguments (the extra arguments "
"won't be used): (%s) vs (%s)"
msgstr ""

#. R/RMethodUtils.R: gettext("trying to change the formal arguments in %s, but the number of existing arguments is less than the number of new arguments: (%s) vs (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"trying to change the formal arguments in %s, but the number of existing "
"arguments is less than the number of new arguments: (%s) vs (%s)"
msgstr ""

#. R/methodsTable.R: gettext("trying to check signature length of generic %s, but it is not a generic function: i = %d, funs = %s, gnames = %s",     domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of generic %s, but it is not a generic "
"function: i = %d, funs = %s, gnames = %s"
msgstr ""
"tentando parear com uma assinatura de método um objeto (de classe \"%s\") "
"que não é uma função genérica"

#. R/methodsTable.R: gettextf("trying to check signature length of group generic %s, but it is not a group generic",     sQuote(what))
#: R/methodsTable.R:0
#, fuzzy
msgid ""
"trying to check signature length of group generic %s, but it is not a group "
"generic"
msgstr ""
"tentando parear com uma assinatura de método um objeto (de classe \"%s\") "
"que não é uma função genérica"

#. R/RMethodUtils.R: warning("trying to execute load actions without 'methods' package")
#: R/RMethodUtils.R:0
msgid "trying to execute load actions without 'methods' package"
msgstr ""

#. R/methodsTable.R: stop("trying to find a methods table in a non-generic function")
#: R/methodsTable.R:0
#, fuzzy
msgid "trying to find a methods table in a non-generic function"
msgstr "Tentando encontrar uma tabela de métodos em uma função não-genérica"

#. R/MethodsList.R: gettextf("trying to match a method signature of class %s; expects a list or a character vector",     dQuote(class(signature)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"trying to match a method signature of class %s; expects a list or a "
"character vector"
msgstr ""
"tentando parear com uma assinatura de método de classe \"%s\"; uma lista ou "
"um vetor de caracteres são esperados"

#. R/MethodsList.R: gettextf("trying to match a method signature to an object (of class %s) that is not a generic function",     dQuote(class(fun)))
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"trying to match a method signature to an object (of class %s) that is not a "
"generic function"
msgstr ""
"tentando parear com uma assinatura de método um objeto (de classe \"%s\") "
"que não é uma função genérica"

#. R/as.R: gettextf("trying to set an 'as' relation from %s to itself", dQuote(.class1(from)))
#: R/as.R:0
msgid "trying to set an 'as' relation from %s to itself"
msgstr ""

#. R/ClassUnion.R: gettext("unable to create union class: could not set members %s", domain = "R-methods")
#: R/ClassUnion.R:0
#, fuzzy
msgid "unable to create union class: could not set members %s"
msgstr "impossível criar classe união: não foi possível definir os membros %s"

#. R/RClassUtils.R: gettext("unable to find a consistent ordering of superclasses for class %s: order chosen is inconsistent with the superclasses of %s",     domain = "R-methods")
#: R/RClassUtils.R:0
msgid ""
"unable to find a consistent ordering of superclasses for class %s: order "
"chosen is inconsistent with the superclasses of %s"
msgstr ""

#. R/RClassUtils.R: gettextf("unable to find an environment containing class %s", dQuote(Class))
#: R/RClassUtils.R:0
#, fuzzy
msgid "unable to find an environment containing class %s"
msgstr "não foi possível encontrar um ambiente contendo a classe \"%s\""

#. R/methodsTable.R: gettextf("unable to find an inherited method for function %s for signature %s", sQuote(fdef@generic),     sQuote(cnames))
#: R/methodsTable.R:0
#, fuzzy
msgid "unable to find an inherited method for function %s for signature %s"
msgstr "não foi possível encontrar um método de herança para a função \""

#. R/RClassUtils.R: gettextf("unable to find required package %s", sQuote(package))
#: R/RClassUtils.R:0
#, fuzzy
msgid "unable to find required package %s"
msgstr "impossível encontrar o pacote requerido '%s'"

#. R/as.R: stop("undefined 'coerce' method")
#: R/as.R:0
msgid "undefined 'coerce' method"
msgstr ""

#. R/SClasses.R: gettextf("undefined class for slot '%s' (\"%s\")", slotNames[[i]], classi)
#: R/SClasses.R:0
#, fuzzy
msgid "undefined class for slot '%s' (\"%s\")"
msgstr "classes de slot não definidas na definição de \"%s\": %s"

#. R/methodsTable.R: gettext("undefined classes (%s) will be ignored for argument %s", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "undefined classes (%s) will be ignored for argument %s"
msgstr "classes de slot não definidas na definição de \"%s\": %s"

#. R/RClassUtils.R: gettext("undefined slot classes in definition of %s: %s", domain = "R-methods")
#: R/RClassUtils.R:0
msgid "undefined slot classes in definition of %s: %s"
msgstr "classes de slot não definidas na definição de \"%s\": %s"

#. R/RClassUtils.R: gettextf("undefined subclass %s of class %s; definition not updated", .dQ(what),     .dQ(def@className))
#: R/RClassUtils.R:0
msgid "undefined subclass %s of class %s; definition not updated"
msgstr "subclasse %s da classe %s não definida; definição não atualizada"

#. R/zzz.R: message("unloading 'methods' package ...")
#: R/zzz.R:0
msgid "unloading 'methods' package ..."
msgstr ""

#. R/BasicClasses.R: gettextf("unnamed argument must extend either the S3 class or the class of the data part; not true of class %s",     dQuote(Classi))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument must extend either the S3 class or the class of the data "
"part; not true of class %s"
msgstr ""
"argumento sem nome deve estender a classe S3 ou a classe da parte de dados; "
"não é verdadeiro da classe \"%s\""

#. R/BasicClasses.R: gettextf("unnamed argument passed to 'initialize()' for S3 class must have a class definition; %s does not",     dQuote(Classi))
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'initialize()' for S3 class must have a class "
"definition; %s does not"
msgstr ""
"argumento não nomeado para initialize()  para classe S3 deve ter uma "
"definição de classe; \"%s\" não tem"

#. R/BasicClasses.R: stop("unnamed argument passed to 'new()' method must be an environment for the new object")
#: R/BasicClasses.R:0
#, fuzzy
msgid ""
"unnamed argument passed to 'new()' method must be an environment for the new "
"object"
msgstr "Argumento sem nome para new() deve ser um ambiente para o novo objeto"

#. R/refClass.R: gettextf("unnamed arguments to $new() must be objects from a reference class; got an object of class %s",     dQuote(class(super)))
#: R/refClass.R:0
#, fuzzy
msgid ""
"unnamed arguments to $new() must be objects from a reference class; got an "
"object of class %s"
msgstr ""
"argumento \"f\" deve ser uma função genérica ou um único caractere, mas foi "
"obtido um objeto de classe  \"%s\""

#. R/MethodsList.R: gettextf("use %s instead.", dQuote(instead))
#: R/MethodsList.R:0
msgid "use %s instead."
msgstr ""

#. R/RClassUtils.R: gettextf("validity method for class \"%s\"", Class)
#: R/RClassUtils.R:0
#, fuzzy
msgid "validity method for class \"%s\""
msgstr "Nenhum método para \"...\" corresponde à classe \"%s\""

#. R/SClasses.R: stop("validity method must be NULL or a function of one argument")
#: R/SClasses.R:0
msgid "validity method must be NULL or a function of one argument"
msgstr ""

#. R/Methods.R: gettextf("value classes differ: %s, %s", .dQ(gpString(f1@valueClass)), .dQ(gpString(f2@valueClass)))
#: R/Methods.R:0
#, fuzzy
msgid "value classes differ: %s, %s"
msgstr "Valores das classes difere: %s, %s"

#. R/methodsTable.R: ngettext(length(pkgs), "  (%d methods defined for this signature, with different packages)\n",     "  (%d methods defined for this signature, with different packages)\n", domain = "R-methods")
#: R/methodsTable.R:0
#, fuzzy
msgid "  (%d methods defined for this signature, with different packages)\n"
msgid_plural ""
"  (%d methods defined for this signature, with different packages)\n"
msgstr[0] "no método %s com assinatura %s:"
msgstr[1] "no método %s com assinatura %s:"

#. R/methodsTable.R: ngettext(length(candidates), "Choosing method %s from %d ambiguous possibility",     "Choosing method %s from %d ambiguous possibilities", domain = "R-methods")
#: R/methodsTable.R:0
msgid "Choosing method %s from %d ambiguous possibility"
msgid_plural "Choosing method %s from %d ambiguous possibilities"
msgstr[0] ""
msgstr[1] ""

#. R/MethodsListClass.R: ngettext(nreport, "Reported %d ambiguous selection out of %d for function %s", "Reported %d ambiguous selections out of %d for function %s",     domain = "R-methods")
#: R/MethodsListClass.R:0
msgid "Reported %d ambiguous selection out of %d for function %s"
msgid_plural "Reported %d ambiguous selections out of %d for function %s"
msgstr[0] ""
msgstr[1] ""

#. R/methodsTable.R: ngettext(which2, "Selecting %d method of minimum distance", "Selecting %d methods of minimum distance",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d method of minimum distance"
msgid_plural "Selecting %d methods of minimum distance"
msgstr[0] ""
msgstr[1] ""

#. R/methodsTable.R: ngettext(length(which), "Selecting %d non-group method", "Selecting %d non-group methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d non-group method"
msgid_plural "Selecting %d non-group methods"
msgstr[0] ""
msgstr[1] ""

#. R/methodsTable.R: ngettext(length(which), "Selecting %d partially exact-matching method", "Selecting %d partially exact-matching methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "Selecting %d partially exact-matching method"
msgid_plural "Selecting %d partially exact-matching methods"
msgstr[0] ""
msgstr[1] ""

#. R/is.R: ngettext(sum(is.na(match(n2, n1))), "class %s is missing slot from class %s (%s), and no coerce method was supplied",     "class %s is missing slots from class %s (%s), and no coerce method was supplied",     domain = "R-methods")
#: R/is.R:0
msgid ""
"class %s is missing slot from class %s (%s), and no coerce method was "
"supplied"
msgid_plural ""
"class %s is missing slots from class %s (%s), and no coerce method was "
"supplied"
msgstr[0] ""
msgstr[1] ""

#. R/SClasses.R: ngettext(length(dslots), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#. R/SClasses.R: ngettext(length(duplicated(snames)), "duplicated slot name: %s", "duplicated slot names: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "duplicated slot name: %s"
msgid_plural "duplicated slot names: %s"
msgstr[0] ""
msgstr[1] ""

#. R/methodsTable.R: ngettext(length(methods), "found %d equally good next method", "found %d equally good next methods",     domain = "R-methods")
#: R/methodsTable.R:0
msgid "found %d equally good next method"
msgid_plural "found %d equally good next methods"
msgstr[0] ""
msgstr[1] ""

#. R/MethodsList.R: ngettext(sum(is.na(which)), "in the method signature for function %s invalid argument name in the signature: %s",     "in the method signature for function %s invalid argument names in the signature: %s",     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid ""
"in the method signature for function %s invalid argument name in the "
"signature: %s"
msgid_plural ""
"in the method signature for function %s invalid argument names in the "
"signature: %s"
msgstr[0] ""
"na assinatura do método da função \"%s\" nomes de argumentos inválidos na "
"assinatura: %s"
msgstr[1] ""
"na assinatura do método da função \"%s\" nomes de argumentos inválidos na "
"assinatura: %s"

#. R/SClasses.R: ngettext(sum(is.na(which)), "invalid name for slot of class %s: %s", "invalid names for slots of class %s: %s",     domain = "R-methods")
#: R/SClasses.R:0
msgid "invalid name for slot of class %s: %s"
msgid_plural "invalid names for slots of class %s: %s"
msgstr[0] ""
msgstr[1] ""

#. R/SClasses.R: ngettext(length(pkgs), "multiple definition of class %s visible (%s); using the definition\n   in package %s for %s",     "multiple definitions of class %s visible (%s); using the definition\n   in package %s for %s",     domain = "R-methods")
#: R/SClasses.R:0
#, fuzzy
msgid ""
"multiple definition of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgid_plural ""
"multiple definitions of class %s visible (%s); using the definition\n"
"   in package %s for %s"
msgstr[0] "nenhuma definição existente para função '%s'"
msgstr[1] "nenhuma definição existente para função '%s'"

#. R/RClassUtils.R: ngettext(sum(is.na(match(pnames, slots))), "named elements of prototype do not correspond to slot name: %s",     "named elements of prototype do not correspond to slot names: %s", domain = "R-methods")
#: R/RClassUtils.R:0
#, fuzzy
msgid "named elements of prototype do not correspond to slot name: %s"
msgid_plural "named elements of prototype do not correspond to slot names: %s"
msgstr[0] ""
"elementos nomeados do protótipo não correspondem aos nomes do slot: %s"
msgstr[1] ""
"elementos nomeados do protótipo não correspondem aos nomes do slot: %s"

#. R/MethodsList.R: ngettext(length(unknown), "no definition for class %s", "no definition for classes %s",     domain = "R-methods")
#: R/MethodsList.R:0
#, fuzzy
msgid "no definition for class %s"
msgid_plural "no definition for classes %s"
msgstr[0] "nenhuma definição existente para função '%s'"
msgstr[1] "nenhuma definição existente para função '%s'"

#. R/promptClass.R: ngettext(length(whereClass), "no definition of class %s in the specified position, %s, definition on : %s",     "no definition of class %s in the specified position, %s, definitions on : %s",     domain = "R-methods")
#: R/promptClass.R:0
#, fuzzy
msgid ""
"no definition of class %s in the specified position, %s, definition on : %s"
msgid_plural ""
"no definition of class %s in the specified position, %s, definitions on : %s"
msgstr[0] "nenhuma definição existente para função '%s'"
msgstr[1] "nenhuma definição existente para função '%s'"

#. R/RMethodUtils.R: ngettext(sum(is.na(match(signature, args))), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s", domain = "R-methods")
#. R/RMethodUtils.R: ngettext(sum(is.na(match(signature, args))), "non-argument found in the signature: %s",     "non-arguments found in the signature: %s", domain = "R-methods")
#: R/RMethodUtils.R:0
#, fuzzy
msgid "non-argument found in the signature: %s"
msgid_plural "non-arguments found in the signature: %s"
msgstr[0] "Nenhum método encontrado para a assinatura %s"
msgstr[1] "Nenhum método encontrado para a assinatura %s"

#. R/is.R: ngettext(length(bad), "slot in class %s must extend corresponding slot in class %s: fails for %s",     "slots in class %s must extend corresponding slots in class %s: fails for %s",     domain = "R-methods")
#: R/is.R:0
msgid ""
"slot in class %s must extend corresponding slot in class %s: fails for %s"
msgid_plural ""
"slots in class %s must extend corresponding slots in class %s: fails for %s"
msgstr[0] ""
msgstr[1] ""

#. R/RMethodUtils.R: ngettext(length(fdef), "the formal argument of the generic function for %s (%s) differs from that of the non-generic to be used as the default (%s)",     "the formal arguments of the generic function for %s (%s) differ from those of the non-generic to be used as the default (%s)",     domain = "R-methods")
#: R/RMethodUtils.R:0
msgid ""
"the formal argument of the generic function for %s (%s) differs from that of "
"the non-generic to be used as the default (%s)"
msgid_plural ""
"the formal arguments of the generic function for %s (%s) differ from those "
"of the non-generic to be used as the default (%s)"
msgstr[0] ""
msgstr[1] ""

#~ msgid ""
#~ "'callGeneric' with a primitive needs explicit arguments (no formal args "
#~ "defined)"
#~ msgstr ""
#~ "'callGeneric' com uma primitiva requer argumentos explícitos (nenhum "
#~ "argumento formal definido)"

#~ msgid "no class %s found as expected in removing subclass %s"
#~ msgstr ""
#~ "nenhuma classe \"%s\" encontrada como esperado na remoção da subclasse %s"

#, fuzzy
#~ msgid "Object of class %s"
#~ msgstr "Um objeto de classe \""

#, fuzzy
#~ msgid "no generic function found for '%s'"
#~ msgstr "Nenhuma função genérica encontrada para \"%s\""

#~ msgid ","
#~ msgstr ","

#~ msgid "\""
#~ msgstr "\""

#~ msgid "replacement value is not a matrix"
#~ msgstr "valor de substituição não é uma matriz"

#, fuzzy
#~ msgid "defined with value class: \"%s\""
#~ msgstr "nenhuma definição existente para função '%s'"

#, fuzzy
#~ msgid "Methods may be defined for arguments:"
#~ msgstr ""
#~ "métodos não podem ser definidos para função primitiva '%s' nessa versão "
#~ "do R"

#, fuzzy
#~ msgid "An object of class \"%s\":"
#~ msgstr "Um objeto de classe \""

#, fuzzy
#~ msgid ""
#~ "argument 'fields' must be a list of the field classes or definitions or "
#~ "the names of the fields; got an object of class %s"
#~ msgstr ""
#~ "argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido "
#~ "um objeto de classe  \"%s\""

#~ msgid "in .OldClassesPrototypes"
#~ msgstr "em .OldClassesPrototypes"

#~ msgid "\", but it is not a  generic function: i ="
#~ msgstr "\", mas não é        uma função genérica: i ="

#, fuzzy
#~ msgid "\")"
#~ msgstr "\""

#~ msgid "Invalid object in methods table (\""
#~ msgstr "Objeto inválido na tabela de métodos(\""

#~ msgid "\"), expected a method, got an object of class \""
#~ msgstr "\"), esperando um método, obtido um objeto de classe\""

#, fuzzy
#~ msgid "Environment of class \""
#~ msgstr "Um objeto de classe \""

#~ msgid "Replacement value must be of class \""
#~ msgstr "valor de substituição deve ser da classe \""

#~ msgid "No method found for function \"%s\" and signature %s"
#~ msgstr "Nenhum método encontrado para a função \"%s\" e assinatura %s"

#~ msgid "no generic function \"'%s\" found"
#~ msgstr "nenhuma função genérica \"%s\" encontrada"

#~ msgid ""
#~ "Restoring the implicit generic function for %s from package %s\n"
#~ "    into package %s; the generic differs from the default conversion (%s)"
#~ msgstr ""
#~ "Restaurando a função genérica implícita para %s do pacote %s\n"
#~ " no pacote %s; o genérico difere da conversão padrão (%s)"

#~ msgid ""
#~ "Creating a generic for %s in package %s\n"
#~ "    (the supplied definition differs from and overrides the implicit "
#~ "generic\n"
#~ "    in package %s: %s)"
#~ msgstr ""
#~ "Criando um genérico para %s no pacote %s\n"
#~ " (a definição fornecida difere e substitui a da implícita e genérica\n"
#~ " no pacote %s: %s)"

#, fuzzy
#~ msgid ""
#~ "Value supplied for field \"%s\" (with class \"%s\") is not a subclass of "
#~ "required class \"%s\""
#~ msgstr ""
#~ "inicialização do método retornou um objeto de classe \"%s\" ao invés da "
#~ "classe necessária \"%s\""

#, fuzzy
#~ msgid ""
#~ "The fieldReadOnly argument must be the names of the read-only fields; got "
#~ "an object of class \"%s\""
#~ msgstr ""
#~ "primeiro argumento deve ser o(s) nome(s) de funções genérica (foi "
#~ "especificado objeto de classe \"%s\""

#, fuzzy
#~ msgid ")"
#~ msgstr "\""

#, fuzzy
#~ msgid "\"%s\" is not a known reference class"
#~ msgstr "'%s' não é uma das funções básicas"

#, fuzzy
#~ msgid ""
#~ "invalid argument 'f', expected a function or its name, got an object of "
#~ "class %s"
#~ msgstr ""
#~ "argumento 'f' inválido, esperada uma função ou seu nome, mas foi obtido "
#~ "um objeto de classe  \"%s\""

#, fuzzy
#~ msgid ""
#~ "in the method signature for function \"%s\" no definition for class: %s"
#~ msgid_plural ""
#~ "in the method signature for function \"%s\" no definition for classes: %s"
#~ msgstr[0] ""
#~ "na assinatura do método da função '%s' nomes de argumentos inválidos na "
#~ "assinatura: %s"
#~ msgstr[1] ""
#~ "na assinatura do método da função '%s' nomes de argumentos inválidos na "
#~ "assinatura: %s"

#, fuzzy
#~ msgid "Some of the superclasses in the definition of class \""
#~ msgstr "classes de slot não definidas na definição de \"%s\": %s"

#~ msgid "signature must be a vector of classes or an environment"
#~ msgstr "assinatura deve ser um vetor de classes ou um ambiente"

#~ msgid "no unique method corresponding to this signature"
#~ msgstr "nenhum método único correspondente a essa assinatura"

#~ msgid "unable to match signature to methods"
#~ msgstr "não foi possível parear a assinatura aos métodos"

#~ msgid "class \"%s\" cannot be used as the data part of another class"
#~ msgstr ""
#~ "classe \"%s\" não pode ser usada como parte de dados de outra classe"

#~ msgid ""
#~ "'NextMethod' not defined because the current method is not a "
#~ "'MethodDefinition' object"
#~ msgstr ""
#~ "'NextMethod' não definido por que o método atual não é um objeto 'Method "
#~ "Definition'"

#~ msgid "expected a list of signature objects, got \"%s\""
#~ msgstr "esperada uma lista de objetos de assinatura, obtido \"%s\""

#, fuzzy
#~ msgid ""
#~ "Unable to find package environment for class \"%s\" to revise subclass "
#~ "information"
#~ msgstr "não foi possível encontrar um ambiente contendo a classe \"%s\""

#, fuzzy
#~ msgid ""
#~ "the environment/package \"%s\" is locked; cannot remove methods data for "
#~ "\"%s\""
#~ msgstr ""
#~ "o ambiente/pacote '%s' está bloqueado; não é possível remover dados de "
#~ "métodos para '%s'"

#, fuzzy
#~ msgid "no methods found for generic \"%s\""
#~ msgstr "nenhum método encontrado para a genérica '%s'"

#, fuzzy
#~ msgid "\"%s\" is not one of the basic functions"
#~ msgstr "'%s' não é uma das funções básicas"

#, fuzzy
#~ msgid "cannot reset \"%s\", the definition is not a generic function object"
#~ msgstr ""
#~ "não foi possível restaurar '%s', a definição não é um objeto de função "
#~ "genérico"

#, fuzzy
#~ msgid "No nongeneric version of function \"%s\" exists to be restored"
#~ msgstr "nenhuma função genérica '%s' encontrada"

#, fuzzy
#~ msgid "\"%s\" from \"%s\" is a non-generic function; no methods available"
#~ msgstr "'%s' não é uma função genérica em '%s'; métodos não removidos"

#, fuzzy
#~ msgid ""
#~ "invalid 'fdef' for \"%s\" in 'getAllMethods'; expected either a "
#~ "'genericFunction object' or a primitive function, got an object of class "
#~ "\"%s\""
#~ msgstr ""
#~ "definição de método inválida: uma função era esperada, mas foi "
#~ "especificado um objeto de classe \"%s\""

#, fuzzy
#~ msgid "Methods list for generic \""
#~ msgstr "nenhum método encontrado para a genérica '%s'"

#, fuzzy
#~ msgid "Package \"%s\" is not loaded"
#~ msgstr "Pacote '%s' não está carregado"
