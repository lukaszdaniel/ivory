# Translation of vr/R-nnet.pot to German
# Copyright (C) 2007-2009 The R Foundation
# This file is distributed under the same license as the lattice R package.
# Chris Leick <c.leick@vollbio.de>, 2009-2012.
# Detlef Steuer <steuer@hsu-hh.de>, 2012.
#
msgid ""
msgstr ""
"Project-Id-Version: R 2.15.2 / nnet 7.3-5\n"
"Report-Msgid-Bugs-To: bugs@r-project.org\n"
"POT-Creation-Date: 2015-02-13 16:25\n"
"PO-Revision-Date: 2012-10-11 21:08+0200\n"
"Last-Translator: Chris Leick <c.leick@vollbio.de>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. R/multinom.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("multinom"))
#. R/multinom.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("multinom"))
#. R/multinom.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("multinom"))
#. R/nnet.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("nnet"))
#. R/nnet.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("nnet"))
#: R/multinom.R:0 R/nnet.R:0
#, fuzzy
msgid "'%s' argument is not an object of class %s"
msgstr "Objekt nicht aus der Klasse \"nnet\""

#. R/multinom.R: stop("'scope' is not a subset of term labels")
#: R/multinom.R:0
msgid "'scope' is not a subset of term labels"
msgstr "'scope' ist keine Untermenge der Termbeschriftungen."

#. R/nnet.R: stop("'softmax = TRUE' requires at least two response categories")
#: R/nnet.R:0
msgid "'softmax = TRUE' requires at least two response categories"
msgstr "'softmax = TRUE' benötigt mindestens zwei Antwortkategorien"

#. R/multinom.R: gettext("AIC: ", domain = "R-nnet")
#. R/multinom.R: gettext("AIC: ", domain = "R-nnet")
#: R/multinom.R:0
msgid "AIC:"
msgstr ""

#. R/multinom.R: gettext("Call:", domain = "R-nnet")
#. R/multinom.R: gettext("Call:", domain = "R-nnet")
#: R/multinom.R:0
msgid "Call:"
msgstr ""

#. R/multinom.R: gettext("Coefficients:", domain = "R-nnet")
#. R/multinom.R: gettext("Coefficients:", domain = "R-nnet")
#: R/multinom.R:0
msgid "Coefficients:"
msgstr ""

#. R/multinom.R: gettext("Correlation of Coefficients:", domain = "R-nnet")
#: R/multinom.R:0
msgid "Correlation of Coefficients:"
msgstr ""

#. R/multinom.R: gettext("Likelihood ratio tests of Multinomial Models\n", domain = "R-nnet")
#: R/multinom.R:0
msgid "Likelihood ratio tests of Multinomial Models"
msgstr ""

#. R/multinom.R: gettext("Residual Deviance: ", domain = "R-nnet")
#. R/multinom.R: gettext("Residual Deviance: ", domain = "R-nnet")
#: R/multinom.R:0
msgid "Residual Deviance:"
msgstr ""

#. R/multinom.R: gettextf("Response: %s", paste(rsp, collapse = ""), domain = "R-nnet")
#: R/multinom.R:0
msgid "Response: %s"
msgstr ""

#. R/multinom.R: gettext("Std. Errors:", domain = "R-nnet")
#: R/multinom.R:0
msgid "Std. Errors:"
msgstr ""

#. R/multinom.R: gettext("Value/SE (Wald statistics):", domain = "R-nnet")
#: R/multinom.R:0
msgid "Value/SE (Wald statistics):"
msgstr ""

#. R/nnet.R: gettextf("a %s network with %d weights", paste(x$n[1L], "-", x$n[2L], "-", x$n[3L],     collapse = ""), length(x$wts), domain = "R-nnet")
#. R/nnet.R: gettextf("a %s network with %d weights", paste(x$n[1L], "-", x$n[2L], "-", x$n[3L],     collapse = ""), length(x$wts), domain = "R-nnet")
#: R/nnet.R:0
msgid "a %s network with %d weights"
msgstr ""

#. R/multinom.R: stop("anova is not implemented for a single \"multinom\" object")
#: R/multinom.R:0
msgid "anova is not implemented for a single \"multinom\" object"
msgstr ""
"Varianzanalyse ist nicht für ein einzelnes \"multinom\"-Objekt implementiert"

#. R/nnet.R: gettextf(" decay=%s", x$decay[1L], domain = "R-nnet")
#. R/nnet.R: gettextf(" decay=%s", x$decay[1L], domain = "R-nnet")
#: R/nnet.R:0
msgid "decay=%s"
msgstr ""

#. R/nnet.R: stop("dims of 'x' and 'y' must match")
#: R/nnet.R:0
msgid "dims of 'x' and 'y' must match"
msgstr "Dimensionen von 'x' und 'y' müssen übereinstimmen"

#. R/nnet.R: stop("entropy fit only for logistic units")
#: R/nnet.R:0
msgid "entropy fit only for logistic units"
msgstr "Entropie passt nur für logistische Einheiten"

#. R/nnet.R: gettext(" entropy fitting ", domain = "R-nnet")
#. R/nnet.R: gettext(" entropy fitting ", domain = "R-nnet")
#: R/nnet.R:0
msgid "entropy fitting"
msgstr ""

#. R/nnet.R: stop("inappropriate fit for class")
#: R/nnet.R:0
msgid "inappropriate fit for class"
msgstr "unangemessene Passform für die Klasse"

#. R/nnet.R: stop("incorrect length of 'mask'")
#: R/nnet.R:0
msgid "incorrect length of 'mask'"
msgstr "falsche Länge von 'mask'"

#. R/nnet.R: gettextf("inputs: %s\noutput(s): %s", x$coefnames, deparse(formula(x)[[2L]], backtick = TRUE),     domain = "R-nnet")
#: R/nnet.R:0
msgid ""
"inputs: %s\n"
"output(s): %s"
msgstr ""

#. R/nnet.R: stop("invalid weights vector")
#. R/nnet.R: stop("invalid weights vector")
#: R/nnet.R:0
msgid "invalid weights vector"
msgstr "ungültiger Gewichtsvektor"

#. R/nnet.R: gettext(" linear output units ", domain = "R-nnet")
#. R/nnet.R: gettext(" linear output units ", domain = "R-nnet")
#: R/nnet.R:0
msgid "linear output units"
msgstr ""

#. R/nnet.R: stop("missing values in 'x'")
#. R/nnet.R: stop("missing values in 'x'")
#: R/nnet.R:0
msgid "missing values in 'x'"
msgstr "fehlende Werte in 'x'"

#. R/nnet.R: stop("missing values in 'y'")
#: R/nnet.R:0
msgid "missing values in 'y'"
msgstr "fehlende Werte in 'y'"

#. R/multinom.R: stop("models were not all fitted to the same size of dataset")
#: R/multinom.R:0
msgid "models were not all fitted to the same size of dataset"
msgstr ""
"Nicht alle Modelle wurden an die gleiche Größe wie die des Datensatzes "
"angepasst."

#. R/multinom.R: stop("ncol(offset) is wrong")
#: R/multinom.R:0
msgid "ncol(offset) is wrong"
msgstr "ncol(Versatz) ist falsch"

#. R/multinom.R: stop("need two or more classes to fit a multinom model")
#: R/multinom.R:0
msgid "need two or more classes to fit a multinom model"
msgstr "zwei oder mehr Klassen sind nötig, um multinomiales Modell anzupassen"

#. R/multinom.R: stop("no terms in 'scope' for adding to object")
#: R/multinom.R:0
msgid "no terms in 'scope' for adding to object"
msgstr "keine Terme in 'scope', um ein Objekt hinzuzufügen"

#. R/nnet.R: stop("no weights to fit")
#: R/nnet.R:0
msgid "no weights to fit"
msgstr "keine Gewichte für Anpassung"

#. R/multinom.R: stop("not all objects are of class \"multinom\"")
#: R/multinom.R:0
#, fuzzy
msgid "not all objects are of class \"multinom\""
msgstr "nicht alle Objekte gehören zur Klasse \"multinom\""

#. R/nnet.R: stop("nrows of 'x' and 'y' must match")
#: R/nnet.R:0
msgid "nrows of 'x' and 'y' must match"
msgstr "nrows von 'x' und 'y' müssen übereinstimmen"

#. R/multinom.R: stop("number of rows in use has changed: remove missing values?")
#. R/multinom.R: stop("number of rows in use has changed: remove missing values?")
#: R/multinom.R:0
msgid "number of rows in use has changed: remove missing values?"
msgstr "Zahl der benutzten Zeilen hat sich geändert: fehlende Werte entfernen?"

#. R/nnet.R: gettext("options were:", domain = "R-nnet")
#. R/nnet.R: gettext("options were:", domain = "R-nnet")
#: R/nnet.R:0
msgid "options were:"
msgstr ""

#. R/nnet.R: gettext(" skip-layer connections ", domain = "R-nnet")
#. R/nnet.R: gettext(" skip-layer connections ", domain = "R-nnet")
#: R/nnet.R:0
msgid "skip-layer connections"
msgstr ""

#. R/nnet.R: gettext(" softmax modelling ", domain = "R-nnet")
#. R/nnet.R: gettext(" softmax modelling ", domain = "R-nnet")
#: R/nnet.R:0
msgid "softmax modelling"
msgstr ""

#. R/multinom.R: stop("some case has no observations")
#: R/multinom.R:0
msgid "some case has no observations"
msgstr "irgendein Fall hat keine Beobachtungen"

#. R/nnet.R: gettextf("too many (%d) weights", nwts)
#: R/nnet.R:0
msgid "too many (%d) weights"
msgstr "zu viele (%d) Gewichte"

#. R/multinom.R: gettextf("trying + %s", tt, domain = "R-nnet")
#: R/multinom.R:0
msgid "trying + %s"
msgstr ""

#. R/multinom.R: gettextf("trying - %s", tt, domain = "R-nnet")
#: R/multinom.R:0
msgid "trying - %s"
msgstr ""

#. R/nnet.R: stop("weights vector of incorrect length")
#: R/nnet.R:0
msgid "weights vector of incorrect length"
msgstr "Gewichtsvektor von falscher Länge"

#. R/multinom.R: ngettext(length(empty), "group %s is empty", "groups %s are empty", domain = "R-nnet")
#. R/nnet.R: ngettext(length(empty), "group %s is empty", "groups %s are empty", domain = "R-nnet")
#: R/multinom.R:0 R/nnet.R:0
msgid "group %s is empty"
msgid_plural "groups %s are empty"
msgstr[0] "Gruppe %s ist leer"
msgstr[1] "Gruppen %s sind leer"

#~ msgid "not a \"multinom\" fit"
#~ msgstr "keine \"multinom\"-Anpassungsgüte"

#, fuzzy
#~ msgid "'object' argument is not an object of class \"nnet\""
#~ msgstr "Objekt nicht aus der Klasse \"nnet\""

#~ msgid "object not of class \"nnet\""
#~ msgstr "Objekt nicht aus der Klasse \"nnet\""

#~ msgid "not a legitimate neural net fit"
#~ msgstr "keine rechtmäßige neuronale Netz-Güte"
