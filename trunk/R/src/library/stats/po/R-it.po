msgid ""
msgstr ""
"Project-Id-Version: R 2.3.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2014-12-28 16:59\n"
"PO-Revision-Date: 2005-04-14 18:07+0200\n"
"Last-Translator: stefano iacus <>\n"
"Language-Team: Italian <it@li.org>\n"
"Language: it\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. R/mlm.R: stop("\"mlm\" objects with weights are not supported")
#: R/mlm.R:0
#, fuzzy
msgid "\"mlm\" objects with weights are not supported"
msgstr "oggetti 'mlm' con pesi non sono supportati"

#. R/aov.R: gettextf("%d out of %d effects not estimable", nc - rank, nc, domain = "R-stats")
#: R/aov.R:0
msgid "%d out of %d effects not estimable"
msgstr ""

#. R/smooth.R: gettextf("%s Tukey smoother resulting from %s", attr(x, "kind"), sQuote(paste(deparse(attr(x,     "call")), collapse = "")), domain = "R-stats")
#. R/smooth.R: gettextf("%s Tukey smoother resulting from %s", attr(object, "kind"), sQuote(paste(deparse(attr(object,     "call")), collapse = "")), domain = "R-stats")
#: R/smooth.R:0
msgid "%s Tukey smoother resulting from %s"
msgstr ""

#. R/ansari.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)))
#. R/bartlett.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/binom.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(n)), domain = "R-stats")
#. R/chisq.test.R: gettextf("%s and %s", paste(DNAME, collapse = "\n"), paste(DNAME2, collapse = "\n"))
#. R/cor.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/cor.test.R: gettextf("%s and %s", names(mf[1]), names(mf[2]))
#. R/fisher.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)), domain = "R-stats")
#. R/fligner.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/kruskal.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/ks.test.R: gettextf("%s and %s", paste(DNAME, collapse = ""), paste(deparse(substitute(y)),     collapse = ""))
#. R/mcnemar.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/mood.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#. R/oneway.test.R: gettextf("%s and %s", dp[[2L]], dp[[3L]], domain = "R-stats")
#. R/pairwise.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(g)),     collapse = ""))
#. R/pairwise.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(g)), domain = "R-stats")
#. R/t.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)))
#. R/var.test.R: gettextf("%s and %s", deparse(substitute(x)), deparse(substitute(y)), domain = "R-stats")
#. R/wilcox.test.R: gettextf("%s and %s", paste(deparse(substitute(x)), collapse = ""), paste(deparse(substitute(y)),     collapse = ""), domain = "R-stats")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/binom.test.R:0 R/chisq.test.R:0
#: R/cor.test.R:0 R/fisher.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#: R/ks.test.R:0 R/mcnemar.test.R:0 R/mood.test.R:0 R/oneway.test.R:0
#: R/pairwise.R:0 R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0
msgid "%s and %s"
msgstr ""

#. R/friedman.test.R: gettextf("%s and %s and %s", DNAME, deparse(substitute(groups)), deparse(substitute(blocks)))
#. R/friedman.test.R: gettextf("%s and %s and %s", names(mf[1]), names(mf[2]), names(mf[3]))
#. R/mantelhaen.test.R: gettextf("%s and %s and %s", deparse(substitute(x)), deparse(substitute(y)), deparse(substitute(z)),     domain = "R-stats")
#. R/quade.test.R: gettextf("%s and %s and %s", DNAME, deparse(substitute(groups)), deparse(substitute(blocks)))
#. R/quade.test.R: gettextf("%s and %s and %s", names(mf[1]), names(mf[2]), names(mf[3]), domain = "R-stats")
#: R/friedman.test.R:0 R/mantelhaen.test.R:0 R/quade.test.R:0
msgid "%s and %s and %s"
msgstr ""

#. R/xtabs.R: gettextf("%s applies only to two-way tables", "xtabs(*, sparse=TRUE)")
#: R/xtabs.R:0
#, fuzzy
msgid "%s applies only to two-way tables"
msgstr "PCA si applica solo a variabili numeriche"

#. R/ansari.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/bartlett.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/fligner.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/kruskal.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/mood.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/t.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]))
#. R/var.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]), domain = "R-stats")
#. R/wilcox.test.R: gettextf("%s by %s", names(mf[1]), names(mf[2]), domain = "R-stats")
#: R/ansari.test.R:0 R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#: R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0 R/wilcox.test.R:0
msgid "%s by %s"
msgstr ""

#. R/family.R: gettextf("%s link not recognised", sQuote(link))
#: R/family.R:0
#, fuzzy
msgid "%s link not recognised"
msgstr "link non riconosciuta"

#. R/stl.R: gettextf("%s must be 0 or 1", degname)
#: R/stl.R:0
#, fuzzy
msgid "%s must be 0 or 1"
msgstr "deve essere 0 o 1"

#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/contrast.R: gettextf("%s needs package 'Matrix' correctly installed", "contr*(.., sparse=TRUE)")
#. R/xtabs.R: gettextf("%s needs package 'Matrix' correctly installed", "xtabs(*, sparse=TRUE)")
#: R/contrast.R:0 R/xtabs.R:0
msgid "%s needs package 'Matrix' correctly installed"
msgstr ""

#. R/interaction.plot.R: gettextf("%s of %s", paste(deparse(substitute(fun)), collapse = ""), paste(deparse(substitute(response)),     collapse = ""))
#: R/interaction.plot.R:0
msgid "%s of %s"
msgstr ""

#. R/pairwise.R: gettextf("%s out of %s", deparse(substitute(x)), deparse(substitute(n)), domain = "R-stats")
#. R/prop.test.R: gettextf("%s out of %s", DNAME, deparse(substitute(n)), domain = "R-stats")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "%s out of %s"
msgstr ""

#. R/prop.trend.test.R: gettextf("%s out of %s,\n using scores: %s", deparse(substitute(x)), deparse(substitute(n)),     paste(score, collapse = " "), domain = "R-stats")
#: R/prop.trend.test.R:0
msgid ""
"%s out of %s,\n"
" using scores: %s"
msgstr ""

#. R/htest.R: gettextf("%s percent confidence interval:", format(100 * attr(x$conf.int, "conf.level")),     domain = "R-stats")
#: R/htest.R:0
#, fuzzy
msgid "%s percent confidence interval:"
msgstr ""
"impossibile calcolare intervalli di confidenza esatti in presenza di ties"

#. R/poisson.test.R: gettextf("%s time base: %s", deparse(substitute(x)), deparse(substitute(T)), domain = "R-stats")
#: R/poisson.test.R:0
msgid "%s time base: %s"
msgstr ""

#. R/integrate.R: gettextf("%s with absolute error < %s", format(x$value, digits = digits), format(x$abs.error,     digits = 2L), domain = "R-stats")
#: R/integrate.R:0
msgid "%s with absolute error < %s"
msgstr ""

#. R/TukeyHSD.R: gettextf("%s%% family-wise confidence level", format(100 * attr(x, "conf.level"),     2), domain = "R-stats")
#. R/TukeyHSD.R: gettextf("%s%% family-wise confidence level", format(100 * attr(x, "conf.level"),     digits = 2L), domain = "R-stats")
#: R/TukeyHSD.R:0
#, fuzzy
msgid "%s%% family-wise confidence level"
msgstr ""
"impossibile calcolare intervalli di confidenza esatti in presenza di ties"

#. R/aov.R: gettextf("'%s' and '%s' arguments must have the same length", "coef", "contrast.obj")
#. R/aov.R: gettextf("'%s' and '%s' arguments must have the same length", "coef", "contrast.obj")
#. R/bartlett.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/chisq.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/chisq.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "p")
#. R/cor.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/density.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "weights")
#. R/fisher.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/fligner.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/kruskal.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "g")
#. R/loglin.R: gettextf("'%s' and '%s' arguments must have the same length", "start", "table")
#. R/mcnemar.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#. R/pairwise.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "n")
#. R/prop.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "n")
#. R/weighted.mean.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "w")
#. R/wilcox.test.R: gettextf("'%s' and '%s' arguments must have the same length", "x", "y")
#: R/aov.R:0 R/bartlett.test.R:0 R/chisq.test.R:0 R/cor.test.R:0 R/density.R:0
#: R/fisher.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0 R/loglin.R:0
#: R/mcnemar.test.R:0 R/pairwise.R:0 R/prop.test.R:0 R/weighted.mean.R:0
#: R/wilcox.test.R:0
#, fuzzy
msgid "'%s' and '%s' arguments must have the same length"
msgstr "gli argomenti devono avere la stessa lunghezza"

#. R/hclust.R: gettextf("'%s' argument cannot be coerced to class %s", "x", dQuote("hclust"))
#: R/hclust.R:0
#, fuzzy
msgid "'%s' argument cannot be coerced to class %s"
msgstr "l'argomento 'x' non puÃ² essere trasformato di classe \"hclust\""

#. R/nlsFunc.R: gettextf("'%s' argument cannot be of mode '%s'", substitute(object), mode(object))
#: R/nlsFunc.R:0
#, fuzzy
msgid "'%s' argument cannot be of mode '%s'"
msgstr "'%s' non puÃ² essere in modalitÃ  '%s'"

#. R/cancor.R: gettextf("'%s' argument has rank 0", "x")
#. R/cancor.R: gettextf("'%s' argument has rank 0", "y")
#: R/cancor.R:0
#, fuzzy
msgid "'%s' argument has rank 0"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/kernel.R: gettextf("'%s' argument is less than %d", "r", 1)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "m", 1)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "r", 0)
#. R/kernel.R: gettextf("'%s' argument is less than %d", "m", 1)
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument is less than %d"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/aggregate.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ansari.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/bartlett.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/cor.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/fligner.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/friedman.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ftable.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/ftable.R: gettextf("'%s' argument is missing or incorrect", "col.vars")
#. R/kruskal.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/mood.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/oneway.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/quade.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/t.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/var.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/wilcox.test.R: gettextf("'%s' argument is missing or incorrect", "formula")
#. R/xtabs.R: gettextf("'%s' argument is missing or incorrect", "formula")
#: R/aggregate.R:0 R/ansari.test.R:0 R/bartlett.test.R:0 R/cor.test.R:0
#: R/fligner.test.R:0 R/friedman.test.R:0 R/ftable.R:0 R/kruskal.test.R:0
#: R/mood.test.R:0 R/oneway.test.R:0 R/quade.test.R:0 R/t.test.R:0
#: R/var.test.R:0 R/wilcox.test.R:0 R/xtabs.R:0
#, fuzzy
msgid "'%s' argument is missing or incorrect"
msgstr "'col.var' mancante o non corretto"

#. R/kernel.R: gettextf("'%s' argument is not a kernel", "k")
#. R/kernel.R: gettextf("'%s' argument is not a kernel", "x")
#. R/kernel.R: gettextf("'%s' argument is not a kernel", "k")
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument is not a kernel"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/dist.R: gettextf("'%s' argument is not a square matrix", "m")
#: R/dist.R:0
#, fuzzy
msgid "'%s' argument is not a square matrix"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/diffinv.R: gettextf("'%s' argument is not a vector", "x")
#. R/diffinv.R: gettextf("'%s' argument is not a vector", "x")
#. R/kernel.R: gettextf("'%s' argument is not a vector", "x")
#: R/diffinv.R:0 R/kernel.R:0
#, fuzzy
msgid "'%s' argument is not a vector"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/diffinv.R: gettextf("'%s' argument is not a vector or matrix", "x")
#. R/embed.R: gettextf("'%s' argument is not a vector or matrix", "x")
#: R/diffinv.R:0 R/embed.R:0
#, fuzzy
msgid "'%s' argument is not a vector or matrix"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/lag.R: gettextf("'%s' argument is not an integer", "k")
#: R/lag.R:0
#, fuzzy
msgid "'%s' argument is not an integer"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/ftable.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("ftable"))
#. R/loess.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("loess"))
#. R/smspline.R: gettextf("'%s' argument is not an object of class %s", "object", dQuote("smooth.spline"))
#: R/ftable.R:0 R/loess.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument is not an object of class %s"
msgstr "'centers' deve essere un numero o una matrice"

#. R/density.R: gettextf("'%s' argument is not positive", "bw")
#: R/density.R:0
#, fuzzy
msgid "'%s' argument is not positive"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/arima.R: gettextf("'%s' argument is of the wrong length", "fixed")
#. R/arima.R: gettextf("'%s' argument is of the wrong length", "init")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "seasonal")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "fixed")
#. R/arma0.R: gettextf("'%s' argument is of the wrong length", "init")
#. R/contr.poly.R: gettextf("'%s' argument is of the wrong length", "scores")
#. R/hclust.R: gettextf("'%s' argument is of the wrong length", "height", domain = "R-stats")
#. R/hclust.R: gettextf("'%s' argument is of the wrong length", "order", domain = "R-stats")
#. R/kernel.R: gettextf("'%s' argument is of the wrong length", "coef")
#. R/nls-profile.R: gettextf("'%s' argument is of the wrong length", "params")
#. R/nls-profile.R: gettextf("'%s' argument is of the wrong length", "varying")
#. R/reshape.R: gettextf("'%s' argument is of the wrong length", "times")
#: R/arima.R:0 R/arma0.R:0 R/contr.poly.R:0 R/hclust.R:0 R/kernel.R:0
#: R/nls-profile.R:0 R/reshape.R:0
#, fuzzy
msgid "'%s' argument is of the wrong length"
msgstr "argomento 'scores' di lunghezza sbagliata"

#. R/biplot.R: gettextf("'%s' argument is outside [0,1]", "scale")
#. R/biplot.R: gettextf("'%s' argument is outside [0,1]", "scale")
#. R/quantile.R: gettextf("'%s' argument is outside [0,1]", "probs")
#: R/biplot.R:0 R/quantile.R:0
#, fuzzy
msgid "'%s' argument is outside [0,1]"
msgstr "'scale' oltre [0,1]"

#. R/loess.R: gettextf("'%s' argument must be 0, 1 or 2", "degree")
#. R/nlm.R: gettextf("'%s' argument must be 0, 1 or 2", "print.level")
#: R/loess.R:0 R/nlm.R:0
#, fuzzy
msgid "'%s' argument must be 0, 1 or 2"
msgstr "l'argomento 'x' deve essere numerico"

#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 0)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 0)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#. R/ar.R: gettextf("'%s' argument must be >= %d", "order.max", 1)
#: R/ar.R:0
#, fuzzy
msgid "'%s' argument must be >= %d"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/ftable.R: gettextf("'%s' argument must be a character string or connection", "file")
#: R/ftable.R:0
#, fuzzy
msgid "'%s' argument must be a character string or connection"
msgstr "'file' deve essere una stringa di caratteri o una connessione"

#. R/dendrogram.R: gettextf("'%s' argument must be a character vector of length '%s'", "ColSideColors",     "ncol(x)")
#. R/dendrogram.R: gettextf("'%s' argument must be a character vector of length '%s'", "RowSideColors",     "nrow(x)")
#: R/dendrogram.R:0
#, fuzzy
msgid "'%s' argument must be a character vector of length '%s'"
msgstr "'ColSideColors' deve essere un vettore carattere di lunghezza ncol(x)"

#. R/model.tables.R: gettextf("'%s' argument must be a function", "na.action")
#: R/model.tables.R:0
#, fuzzy
msgid "'%s' argument must be a function"
msgstr "l'argomento 'x' deve essere numerico"

#. R/aggregate.R: gettextf("'%s' argument must be a list", "by")
#. R/aov.R: gettextf("'%s' argument must be a list", "split")
#. R/ts.R: gettextf("'%s' argument must be a list", "model")
#: R/aggregate.R:0 R/aov.R:0 R/ts.R:0
#, fuzzy
msgid "'%s' argument must be a list"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/lm.R: gettextf("'%s' argument must be a matrix", "x")
#. R/lm.R: gettextf("'%s' argument must be a matrix", "x")
#: R/lm.R:0
#, fuzzy
msgid "'%s' argument must be a matrix"
msgstr "l'argomento 'x' deve essere numerico"

#. R/cor.test.R: gettextf("'%s' argument must be a numeric vector", "x")
#. R/cor.test.R: gettextf("'%s' argument must be a numeric vector", "y")
#. R/glm.R: gettextf("'%s' argument must be a numeric vector", "weights")
#. R/lm.R: gettextf("'%s' argument must be a numeric vector", "weights")
#. R/smspline.R: gettextf("'%s' argument must be a numeric vector", "y")
#: R/cor.test.R:0 R/glm.R:0 R/lm.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be a numeric vector"
msgstr "l'argomento 'x' deve essere numerico"

#. R/ansari.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/binom.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "p")
#. R/binom.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/cor.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/fisher.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/mantelhaen.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/prop.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/t.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/var.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#. R/wilcox.test.R: gettextf("'%s' argument must be a single number between 0 and 1", "conf.level")
#: R/ansari.test.R:0 R/binom.test.R:0 R/cor.test.R:0 R/fisher.test.R:0
#: R/mantelhaen.test.R:0 R/prop.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
#, fuzzy
msgid "'%s' argument must be a single number between 0 and 1"
msgstr "'conf.level' deve essere un numero tra 0 e 1"

#. R/poisson.test.R: gettextf("'%s' argument must be a single positive number", "r")
#. R/var.test.R: gettextf("'%s' argument must be a single positive number", "ratio")
#: R/poisson.test.R:0 R/var.test.R:0
#, fuzzy
msgid "'%s' argument must be a single positive number"
msgstr "'ratio' deve essere un numero positivo"

#. R/kernel.R: gettextf("'%s' argument must be a vector", "coef")
#: R/kernel.R:0
#, fuzzy
msgid "'%s' argument must be a vector"
msgstr "l'argomento 'x' deve essere numerico"

#. R/addmargins.R: gettextf("'%s' argument must be an array or table", "A")
#: R/addmargins.R:0
#, fuzzy
msgid "'%s' argument must be an array or table"
msgstr "'x' deve essere una matrice o un data frame"

#. R/ftable.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("ftable"))
#. R/ftable.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("ftable"))
#. R/models.R: gettextf("'%s' argument must be an object of class %s", "termobj", dQuote("terms"))
#. R/plot.lm.R: gettextf("'%s' argument must be an object of class %s", "x", dQuote("lm"))
#: R/ftable.R:0 R/models.R:0 R/plot.lm.R:0
#, fuzzy
msgid "'%s' argument must be an object of class %s"
msgstr "'centers' deve essere un numero o una matrice"

#. R/acf.R: gettextf("'%s' argument must be at least %d", "lag.max", 0)
#. R/acf.R: gettextf("'%s' argument must be at least %d", "lag.max", 1)
#. R/approx.R: gettextf("'%s' argument must be at least %d", "n", 1)
#. R/ar.R: gettextf("'%s' argument must be at least %d", "n.ahead", 1)
#. R/contr.poly.R: gettextf("'%s' argument must be at least %d", "degree", 1)
#. R/smspline.R: gettextf("'%s' argument must be at least %d", "nknots", 1)
#: R/acf.R:0 R/approx.R:0 R/ar.R:0 R/contr.poly.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be at least %d"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/identify.hclust.R: gettextf("'%s' argument must be between %s and %s", "k", "2", length(tree$height))
#. R/smspline.R: gettextf("'%s' argument must be between %s and %s", "span", "0", "1")
#. R/spectrum.R: gettextf("'%s' argument must be between %s and %s", "p", "0", "0.5")
#. R/splinefun.R: gettextf("'%s' argument must be between %s and %s", "deriv", "0", "3")
#. R/splinefun.R: gettextf("'%s' argument must be between %s and %s", "deriv", "0", "3")
#. R/symnum.R: gettextf("'%s' argument must be between %s and %s", "x", "-1", "1")
#. R/symnum.R: gettextf("'%s' argument must be between %s and %s", "x", format(minc), format(maxc))
#: R/identify.hclust.R:0 R/smspline.R:0 R/spectrum.R:0 R/splinefun.R:0
#: R/symnum.R:0
#, fuzzy
msgid "'%s' argument must be between %s and %s"
msgstr "'x' deve essere tra %s e %s"

#. R/plot.lm.R: gettextf("'%s' argument must be in {1,..,%d}", "which", 6)
#. R/plot.lm.R: gettextf("'%s' argument must be in {1,..,%d}", "id.n", n, domain = "R-stats")
#: R/plot.lm.R:0
#, fuzzy
msgid "'%s' argument must be in {1,..,%d}"
msgstr "'id.n' deve essere in {1,..,%d}"

#. R/StructTS.R: gettextf("'%s' argument must be numeric", "x")
#. R/acf.R: gettextf("'%s' argument must be numeric", "x")
#. R/acf.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/ar.R: gettextf("'%s' argument must be numeric", "x")
#. R/arima.R: gettextf("'%s' argument must be numeric", "x")
#. R/arma0.R: gettextf("'%s' argument must be numeric", "x")
#. R/cor.R: gettextf("'%s' argument must be numeric", "x")
#. R/cor.R: gettextf("'%s' argument must be numeric", "y")
#. R/density.R: gettextf("'%s' argument must be numeric", "x")
#. R/ks.test.R: gettextf("'%s' argument must be numeric", "x")
#. R/models.R: gettextf("'%s' argument must be numeric", "offset")
#. R/wilcox.test.R: gettextf("'%s' argument must be numeric", "x")
#. R/wilcox.test.R: gettextf("'%s' argument must be numeric", "y")
#: R/StructTS.R:0 R/acf.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/cor.R:0
#: R/density.R:0 R/ks.test.R:0 R/models.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "'%s' argument must be numeric"
msgstr "l'argomento 'x' deve essere numerico"

#. R/biplot.R: gettextf("'%s' argument must be of length %d", "choices", 2)
#. R/biplot.R: gettextf("'%s' argument must be of length %d", "choices", 2)
#. R/nlm.R: gettextf("'%s' argument must be of length %d", "interval", 2)
#. R/relevel.R: gettextf("'%s' argument must be of length %d", "ref", 1)
#. R/smspline.R: gettextf("'%s' argument must be of length %d", "spar", 1)
#: R/biplot.R:0 R/nlm.R:0 R/relevel.R:0 R/smspline.R:0
#, fuzzy
msgid "'%s' argument must be of length %d"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/kmeans.R: gettextf("'%s' argument must be positive", "iter.max")
#. R/runmed.R: gettextf("'%s' argument must be positive", "k")
#: R/kmeans.R:0 R/runmed.R:0
#, fuzzy
msgid "'%s' argument must be positive"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/ARMAtheory.R: gettextf("'%s' argument must have length >= %d", "acf", 2)
#. R/stepfun.R: gettextf("'%s' argument must have length >= %d", "x", 1)
#: R/ARMAtheory.R:0 R/stepfun.R:0
#, fuzzy
msgid "'%s' argument must have length >= %d"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/nls.R: gettextf("'%s' argument will be ignored", "subset")
#. R/nls.R: gettextf("'%s' argument will be ignored", "na.action")
#: R/nls.R:0
#, fuzzy
msgid "'%s' argument will be ignored"
msgstr "l'argomento 'sides' deve essere 1 o 2"

#. R/symnum.R: gettextf("'%s' must be unique, but are = %s", "cutpoints", tmp_n)
#. R/symnum.R: gettextf("'%s' must be unique, but are = %s", "symbols", tmp_n)
#: R/symnum.R:0
#, fuzzy
msgid "'%s' must be unique, but are = %s"
msgstr "'cutpoints' devono essere distinti, ma sono="

#. R/friedman.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "y", "groups",     "blocks")
#. R/mantelhaen.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "x", "y", "z")
#. R/prop.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "x", "n", "p")
#. R/quade.test.R: gettextf("'%s', '%s' and '%s' arguments must have the same length", "y", "groups",     "blocks")
#: R/friedman.test.R:0 R/mantelhaen.test.R:0 R/prop.test.R:0 R/quade.test.R:0
#, fuzzy
msgid "'%s', '%s' and '%s' arguments must have the same length"
msgstr "'z', 'y' e 'z' devono avere la stessa lunghezza"

#. R/smspline.R: message("'.nknots.smspl()' is now exported; use it instead of 'n.knots()'")
#: R/smspline.R:0
msgid "'.nknots.smspl()' is now exported; use it instead of 'n.knots()'"
msgstr ""

#. R/anova.R: stop("'P.values' argument is TRUE, but 'has.Pvalue' argument is not")
#: R/anova.R:0
#, fuzzy
msgid "'P.values' argument is TRUE, but 'has.Pvalue' argument is not"
msgstr "'P.values' Ã¨ TRUE, but non 'has.Pvalue'"

#. R/poisson.test.R: stop("'T' argument must be nonnegative")
#: R/poisson.test.R:0
#, fuzzy
msgid "'T' argument must be nonnegative"
msgstr "'x' deve essere non negativo"

#. R/cor.R: stop("'V' is not a square numeric matrix")
#: R/cor.R:0
msgid "'V' is not a square numeric matrix"
msgstr "'V' non Ã¨ una matrice quadrata numerica"

#. R/mlm.R: stop("'X' does not define a subspace of 'M'")
#: R/mlm.R:0
#, fuzzy
msgid "'X' does not define a subspace of 'M'"
msgstr "X non definisce un sottospazio di M"

#. R/dendrogram.R: stop("'X' is not a dendrogram")
#: R/dendrogram.R:0
msgid "'X' is not a dendrogram"
msgstr "'X' non Ã¨ un dendrogramma"

#. R/lsfit.R: warning("'X' matrix was collinear")
#: R/lsfit.R:0
msgid "'X' matrix was collinear"
msgstr "la matrice 'X' Ã¨ collineare"

#. R/smspline.R: warning("'all.knots' argument is TRUE; 'nknots' specification is disregarded")
#: R/smspline.R:0
msgid "'all.knots' argument is TRUE; 'nknots' specification is disregarded"
msgstr ""

#. R/HoltWinters.R: stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
#: R/HoltWinters.R:0
#, fuzzy
msgid "'alpha', 'beta' and 'gamma' must be within the unit interval"
msgstr "'alpha', 'beta' e 'gamma' devono essere nel cerchio unitario."

#. R/nls.R: gettextf("'anova()' function is only defined for sequences of objects of class %s",     dQuote("nls"))
#. R/nls.R: gettextf("'anova()' function is only defined for sequences of objects of class %s",     dQuote("nls"))
#: R/nls.R:0
#, fuzzy
msgid "'anova()' function is only defined for sequences of objects of class %s"
msgstr "'anova' definita solo per successioni di oggetti \"nls\""

#. R/ts.R: stop("'ar' part of model is not stationary")
#: R/ts.R:0
msgid "'ar' part of model is not stationary"
msgstr "la parte 'ar' del modello non Ã¨ stazionaria"

#. R/arima.R: stop("'arima()' method is implemented only for univariate time series")
#: R/arima.R:0
#, fuzzy
msgid "'arima()' method is implemented only for univariate time series"
msgstr "implementato solo per serie storiche unidimensionali"

#. R/kmeans.R: stop("'centers' must be a number or a matrix")
#: R/kmeans.R:0
msgid "'centers' must be a number or a matrix"
msgstr "'centers' deve essere un numero o una matrice"

#. R/filter.R: stop("'circular' argument must be logical and not NA")
#: R/filter.R:0
#, fuzzy
msgid "'circular' argument must be logical and not NA"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/aov.R: stop("'coef' argument must define a contrast, i.e., sum to 0")
#. R/aov.R: stop("'coef' argument must define a contrast, i.e., sum to 0")
#: R/aov.R:0
#, fuzzy
msgid "'coef' argument must define a contrast, i.e., sum to 0"
msgstr "'coef' deve definire un contrasto, e.g., sommare a 0"

#. R/nlminb.R: stop("'control' argument must be a named list")
#. R/nls.R: stop("'control' argument must be a named list")
#: R/nlminb.R:0 R/nls.R:0
#, fuzzy
msgid "'control' argument must be a named list"
msgstr "l'argomento 'split' deve essere di tipo list"

#. R/nlminb.R: gettextf("'control' component '%s' = %g, is out of range", names(port_cpos)[B], v[iv1])
#: R/nlminb.R:0
msgid "'control' component '%s' = %g, is out of range"
msgstr ""

#. R/factanal.R: stop("'covmat' is not a valid covariance list")
#. R/princomp.R: stop("'covmat' is not a valid covariance list")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is not a valid covariance list"
msgstr "'covmat' non Ã¨ una lista di covarianze valida"

#. R/factanal.R: stop("'covmat' is of unknown type")
#. R/princomp.R: stop("'covmat' is of unknown type")
#: R/factanal.R:0 R/princomp.R:0
msgid "'covmat' is of unknown type"
msgstr "'covmat' Ã¨ di tipo sconosciuto"

#. R/cpgram.R: stop("'cpgram()' is implemented only for univariate time series")
#: R/cpgram.R:0
#, fuzzy
msgid "'cpgram()' is implemented only for univariate time series"
msgstr "implementato solo per serie storiche unidimensionali"

#. R/model.tables.R: stop("'cterms' argument must match terms in model object")
#: R/model.tables.R:0
msgid "'cterms' argument must match terms in model object"
msgstr "l'argomento 'cterms' deve far coincidre 'terms' nell'oggetto model"

#. R/symnum.R: gettextf("'cutpoints' must be unique in 0 < cuts < 1, but are = %s", tmp_n)
#: R/symnum.R:0
#, fuzzy
msgid "'cutpoints' must be unique in 0 < cuts < 1, but are = %s"
msgstr "'cutpoints' devono essere distinti in 0 < cuts < 1, ma sono ="

#. R/smspline.R: stop("'cv' argument must not be NA when 'df' argument is specified")
#: R/smspline.R:0
msgid "'cv' argument must not be NA when 'df' argument is specified"
msgstr ""

#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#. R/models.R: stop("'data' must be a data.frame, not a matrix or an array")
#: R/models.R:0
msgid "'data' must be a data.frame, not a matrix or an array"
msgstr "'data' deve essere un data.frame, non una matrice o un array"

#. R/nls.R: stop("'data' must be a list or an environment")
#: R/nls.R:0
#, fuzzy
msgid "'data' must be a list or an environment"
msgstr "'newdata' deve essere una matrice o un data frame"

#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#. R/contr.poly.R: stop("'degree' must be less than number of unique points")
#: R/contr.poly.R:0
#, fuzzy
msgid "'degree' must be less than number of unique points"
msgstr "'degree' deve essere inferiore al numero di punti"

#. R/ts.R: warning("'end' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'end' argument was not changed"
msgstr "valore di 'end' non cambiato"

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "'f()' values at end points are not of opposite sign"
#: R/nlm.R:0
#, fuzzy
msgid "'f()' values at end points are not of opposite sign"
msgstr "i valori di f() negli estremi hanno segno opposto"

#. R/nlm.R: stop("'f.lower = f(lower)' is NA")
#: R/nlm.R:0
msgid "'f.lower = f(lower)' is NA"
msgstr ""

#. R/nlm.R: stop("'f.upper = f(upper)' is NA")
#: R/nlm.R:0
msgid "'f.upper = f(upper)' is NA"
msgstr ""

#. R/glm.R: stop("'family' argument seems not to be a valid family object", call. = FALSE)
#: R/glm.R:0
msgid "'family' argument seems not to be a valid family object"
msgstr "l'argomento 'family' non sembra essere un oggetto family valido"

#. R/glm.R: stop("'family' argument was not recognized")
#: R/glm.R:0
#, fuzzy
msgid "'family' argument was not recognized"
msgstr "'family' non riconosciuta"

#. R/filter.R: stop("'filter' is longer than time series")
#: R/filter.R:0
msgid "'filter' is longer than time series"
msgstr "'filter' piÃ¹ lungo della serie storica"

#. R/bartlett.test.R: stop("'formula' argument should be of the form response ~ group")
#. R/fligner.test.R: stop("'formula' argument should be of the form response ~ group")
#. R/kruskal.test.R: stop("'formula' argument should be of the form response ~ group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
#, fuzzy
msgid "'formula' argument should be of the form response ~ group"
msgstr "formula '%s' deve essere della forma '~expr'"

#. R/ftable.R: stop("'formula' has '.' in both left and right hand sides")
#: R/ftable.R:0
#, fuzzy
msgid "'formula' has '.' in both left and right hand sides"
msgstr "'formula' contiene '.' sia nel membro di destra che di sinistra"

#. R/aggregate.R: stop("'formula' must have both left and right hand sides")
#. R/ftable.R: stop("'formula' must have both left and right hand sides")
#: R/aggregate.R:0 R/ftable.R:0
msgid "'formula' must have both left and right hand sides"
msgstr "'formula' deve avere sia il membro di destra che quello di sinistra"

#. R/ts.R: stop("'frequency' and 'deltat' arguments are both supplied and are inconsistent")
#: R/ts.R:0
#, fuzzy
msgid ""
"'frequency' and 'deltat' arguments are both supplied and are inconsistent"
msgstr ""
"'frequency' e 'deltat' sono stati specificati entrambi ma non consistenti"

#. R/ts.R: warning("'frequency' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'frequency' argument was not changed"
msgstr "Frequency non cambiata"

#. R/dendrogram.R: gettextf("'height' must be at least %g, the maximal height of its components", h.max)
#: R/dendrogram.R:0
msgid "'height' must be at least %g, the maximal height of its components"
msgstr ""

#. R/fisher.test.R: warning("'hybrid' argument is ignored for a 2 x 2 table")
#: R/fisher.test.R:0
#, fuzzy
msgid "'hybrid' argument is ignored for a 2 x 2 table"
msgstr "y Ã¨ vuota o contiene sonlo NA"

#. R/identify.hclust.R: stop("'k' and 'h' arguments must be a scalar")
#: R/identify.hclust.R:0
#, fuzzy
msgid "'k' and 'h' arguments must be a scalar"
msgstr "'k' e 'h' deve essere scalari"

#. R/runmed.R: gettextf("'k' is bigger than 'n'!  Changing 'k' to %d", k <- as.integer(1 + 2 * ((n -     1)%/%2)))
#: R/runmed.R:0
#, fuzzy
msgid "'k' is bigger than 'n'!  Changing 'k' to %d"
msgstr "'k' deve essere piÃ¹ grande di 'n'! Cambio 'k' in"

#. R/cmdscale.R: stop("'k' must be in {1, 2, ..  n - 1}")
#: R/cmdscale.R:0
msgid "'k' must be in {1, 2, ..  n - 1}"
msgstr "'k' deve essere in {1, 2, ..  n - 1}"

#. R/runmed.R: gettextf("'k' must be odd!  Changing 'k' to %d", k <- as.integer(1 + 2 * (k%/%2)))
#: R/runmed.R:0
#, fuzzy
msgid "'k' must be odd!  Changing 'k' to %d"
msgstr "'k' deve essere dispari! Cambio 'k' in"

#. R/kernel.R: stop("'kernapply' is not available for object 'x'")
#: R/kernel.R:0
msgid "'kernapply' is not available for object 'x'"
msgstr "'kernapply' non disponibile per l'oggetto 'x'"

#. R/logLik.R: gettextf("'log Lik.' %s (df=%s)", paste(format(c(x), digits = digits), collapse = ", "),     format(attr(x, "df")), domain = "R-stats")
#: R/logLik.R:0
msgid "'log Lik.' %s (df=%s)"
msgstr ""

#. R/logLik.R: stop("'logLik.lm()' does not support multiple responses")
#: R/logLik.R:0
#, fuzzy
msgid "'logLik.lm()' does not support multiple responses"
msgstr "'proj' non implementata per risposte multiple"

#. R/mad.R: stop("'low' and 'high' arguments cannot be both TRUE")
#: R/mad.R:0
#, fuzzy
msgid "'low' and 'high' arguments cannot be both TRUE"
msgstr "'low' e 'high' non possono essere entrambe TRUE"

#. R/optim.R: stop("'lower' and 'upper' arguments must be finite values")
#: R/optim.R:0
#, fuzzy
msgid "'lower' and 'upper' arguments must be finite values"
msgstr "'k' e 'h' deve essere scalari"

#. R/kernel.R: stop("'m' argument must be numeric vector with non-negative integers")
#: R/kernel.R:0
#, fuzzy
msgid "'m' argument must be numeric vector with non-negative integers"
msgstr "'x' deve essere un intero non negativo"

#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#. R/termplot.R: stop("'main' must be TRUE, FALSE, NULL or character (vector).")
#: R/termplot.R:0
msgid "'main' must be TRUE, FALSE, NULL or character (vector)."
msgstr "'main' deve essere TRUE, FALSE, NULL o un (vettore) character."

#. R/loglin.R: stop("'margin' argument must contain names or numbers corresponding to 'table' argument")
#: R/loglin.R:0
msgid ""
"'margin' argument must contain names or numbers corresponding to 'table' "
"argument"
msgstr ""

#. R/dendrogram.R: stop("'margins' must be a numeric vector of length 2")
#: R/dendrogram.R:0
#, fuzzy
msgid "'margins' must be a numeric vector of length 2"
msgstr "'margins' deve essere un vettore numerico di lunghezza 2"

#. R/hclust.R: gettext("'merge' component in dendrogram must be integer", domain = "R-stats")
#: R/hclust.R:0
msgid "'merge' component in dendrogram must be integer"
msgstr "la componente 'merge' del dendrogramma deve essere di tipo integer"

#. R/hclust.R: gettext("'merge' matrix has invalid contents", domain = "R-stats")
#: R/hclust.R:0
msgid "'merge' matrix has invalid contents"
msgstr ""

#. R/dendrogram.R: warning("'midcache()' of non-binary dendrograms only partly implemented")
#: R/dendrogram.R:0
#, fuzzy
msgid "'midcache()' of non-binary dendrograms only partly implemented"
msgstr "midcache() per dendrogrammi non binari implementata solo parzialmente"

#. R/ts.R: stop("'model$order' must be of length 3")
#: R/ts.R:0
#, fuzzy
msgid "'model$order' must be of length 3"
msgstr "'model$order' deve essere di lunghezza 3"

#. R/termplot.R: warning("'model' appears to involve interactions: see the help page", domain = "R-stats",     immediate. = TRUE)
#: R/termplot.R:0
msgid "'model' appears to involve interactions: see the help page"
msgstr ""

#. R/model.tables.R: stop("'model.tables()' is not implemented for multiple responses")
#: R/model.tables.R:0
#, fuzzy
msgid "'model.tables()' is not implemented for multiple responses"
msgstr "'model.tables' non Ã¨ implementato per risposte multiple"

#. R/t.test.R: stop("'mu' must be a single number")
#. R/wilcox.test.R: stop("'mu' must be a single number")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'mu' must be a single number"
msgstr "'mu' deve essere un solo numero"

#. R/fisher.test.R: stop("'mult' must be integer >= 2, typically = 30")
#: R/fisher.test.R:0
#, fuzzy
msgid "'mult' must be integer >= 2, typically = 30"
msgstr "'mult' deve essere un intero >= 2, normalmente = 30"

#. R/binom.test.R: stop("'n' argument must be a positive integer >= 'x' argument")
#: R/binom.test.R:0
#, fuzzy
msgid "'n' argument must be a positive integer >= 'x' argument"
msgstr "'n' deve essere un intero positivo >= 'x'"

#. R/ts.R: stop("'n' argument must be strictly positive")
#: R/ts.R:0
#, fuzzy
msgid "'n' argument must be strictly positive"
msgstr "'ratio' deve essere un numero positivo"

#. R/power.anova.test.R: gettext("'n' is number in each group", domain = "R-stats")
#: R/power.anova.test.R:0
msgid "'n' is number in each group"
msgstr ""

#. R/power.R: gettext("'n' is number of *pairs*, 'sd' is std.dev. of *differences* within pairs")
#: R/power.R:0
msgid ""
"'n' is number of *pairs*, 'sd' is std.dev. of *differences* within pairs"
msgstr ""

#. R/prcomp.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#. R/princomp-add.R: stop("'newdata' does not have named columns matching one or more of the original columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid ""
"'newdata' does not have named columns matching one or more of the original "
"columns"
msgstr ""
"'newdata' non ha colonne con nome coincidenti con una o piÃ¹ colonne dei "
"datioriginari"

#. R/prcomp.R: stop("'newdata' does not have the correct number of columns")
#. R/princomp-add.R: stop("'newdata' does not have the correct number of columns")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' does not have the correct number of columns"
msgstr "'newdata' ha un numero di colonne non corretto"

#. R/prcomp.R: stop("'newdata' must be a matrix or data frame")
#. R/princomp-add.R: stop("'newdata' must be a matrix or data frame")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "'newdata' must be a matrix or data frame"
msgstr "'newdata' deve essere una matrice o un data frame"

#. R/smspline.R: stop("'nknots' must be numeric (in {1,..,n})")
#: R/smspline.R:0
#, fuzzy
msgid "'nknots' must be numeric (in {1,..,n})"
msgstr "'knots' deve essere numeric <= n"

#. R/ppr.R: stop("'nterms' is missing with no default")
#: R/ppr.R:0
msgid "'nterms' is missing with no default"
msgstr "'nterms' mancante senza valore di default"

#. R/aov.R: stop("'object' argument does not include an error 'qr' component")
#: R/aov.R:0
#, fuzzy
msgid "'object' argument does not include an error 'qr' component"
msgstr "'object' non contiene una componente di errore 'qr'"

#. R/C.R: stop("'object' argument is not interpretable as a factor")
#: R/C.R:0
#, fuzzy
msgid "'object' argument is not interpretable as a factor"
msgstr "oggetto non interpretabile come factor"

#. R/lm.R: stop("'object' has no 'effects' component")
#: R/lm.R:0
msgid "'object' has no 'effects' component"
msgstr "'object' non ha la componente 'effects'"

#. R/fisher.test.R: stop("'or' argument must be a single number between 0 and Inf")
#: R/fisher.test.R:0
#, fuzzy
msgid "'or' argument must be a single number between 0 and Inf"
msgstr "'or' deve essere un solo numero tra 0 e Inf"

#. R/arima.R: stop("'order' argument must be a non-negative numeric vector of length 3")
#: R/arima.R:0
#, fuzzy
msgid "'order' argument must be a non-negative numeric vector of length 3"
msgstr "'order' deve essere un vettore numerico non negativo di lunghezza 3"

#. R/arma0.R: stop("'order' must be a non-negative numeric vector of length 3")
#: R/arma0.R:0
#, fuzzy
msgid "'order' must be a non-negative numeric vector of length 3"
msgstr "'order' deve essere un vettore numerico non negativo di lunghezza 3"

#. R/dendrogram.R: stop("'order.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
msgid "'order.dendrogram' requires a dendrogram"
msgstr "'order.dendrogram' richiede un dendrogramma"

#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#. R/ar.R: stop("'order.max' argument must be < 'n.used' argument")
#: R/ar.R:0
#, fuzzy
msgid "'order.max' argument must be < 'n.used' argument"
msgstr "'order.max' deve essere >= 1"

#. R/stepfun.R: stop("'plot.stepfun' called with wrong type of argument 'x'")
#: R/stepfun.R:0
msgid "'plot.stepfun' called with wrong type of argument 'x'"
msgstr "'plot.stepfun' chiamata con argomento 'x' di tipo sbagliato"

#. R/ppr.R: stop("'ppr' applies only to numerical variables")
#: R/ppr.R:0
msgid "'ppr' applies only to numerical variables"
msgstr "'ppr' si applica solo a variabili numeriche"

#. R/princomp.R: stop("'princomp' can only be used with more units than variables")
#: R/princomp.R:0
msgid "'princomp' can only be used with more units than variables"
msgstr "'princomp' si puÃ² usare solo quando ci sono piÃ¹ unitÃ  che variabili"

#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#. R/distn.R: stop("'prob' and 'mu' arguments are both specified")
#: R/distn.R:0
#, fuzzy
msgid "'prob' and 'mu' arguments are both specified"
msgstr "'prob' e 'mu' specificate entrambi"

#. R/proj.R: stop("'proj()' is not implemented for multiple responses")
#. R/proj.R: stop("'proj()' is not implemented for multiple responses")
#: R/proj.R:0
#, fuzzy
msgid "'proj()' is not implemented for multiple responses"
msgstr "'proj' non implementata per risposte multiple"

#. R/relevel.R: stop("'ref' must be an existing level")
#: R/relevel.R:0
msgid "'ref' must be an existing level"
msgstr "'ref' deve essere un livello esistente"

#. R/relevel.R: stop("'relevel' only for factors")
#. R/relevel.R: stop("'relevel' only for factors")
#: R/relevel.R:0
msgid "'relevel' only for factors"
msgstr "'relevel' solo per variabili factor"

#. R/dendrogram.R: stop("'reorder.dendrogram' requires a dendrogram")
#: R/dendrogram.R:0
#, fuzzy
msgid "'reorder.dendrogram' requires a dendrogram"
msgstr "'order.dendrogram' richiede un dendrogramma"

#. R/ftable.R: stop("'row.var.names' missing")
#: R/ftable.R:0
msgid "'row.var.names' missing"
msgstr "'row.var.names' mancante"

#. R/acf.R: stop("'sampleT' and 'nser' arguments must be integer")
#: R/acf.R:0
#, fuzzy
msgid "'sampleT' and 'nser' arguments must be integer"
msgstr "'k' e 'h' deve essere scalari"

#. R/contr.poly.R: stop("'scores' must all be different numbers")
#: R/contr.poly.R:0
msgid "'scores' must all be different numbers"
msgstr "'scores' devono essere numeri tutti diversi"

#. R/ar.R: warning("'se.fit()' not yet implemented for multivariate models")
#: R/ar.R:0
#, fuzzy
msgid "'se.fit()' not yet implemented for multivariate models"
msgstr "'se.fit' non ancora implementato per modelli multidimensionali"

#. R/arima.R: stop("'seasonal$order' component must be a non-negative numeric vector of length 3")
#: R/arima.R:0
#, fuzzy
msgid ""
"'seasonal$order' component must be a non-negative numeric vector of length 3"
msgstr ""
"'seasonal$order' deve essere un vettore numerico non negativo di lunghezza 3"

#. R/arma0.R: stop("'seasonal$order' must be a non-negative numeric vector of length 3")
#: R/arma0.R:0
#, fuzzy
msgid "'seasonal$order' must be a non-negative numeric vector of length 3"
msgstr ""
"'seasonal$order' deve essere un vettore numerico non negativo di lunghezza 3"

#. R/arima.R: stop("'seasonal' argument must be a list with component 'order'")
#. R/arima.R: stop("'seasonal' argument must be a list with component 'order'")
#: R/arima.R:0
#, fuzzy
msgid "'seasonal' argument must be a list with component 'order'"
msgstr "'seasonal' deve essere di tipo list con componente 'order'"

#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#. R/arma0.R: stop("'seasonal' must be a list with component 'order'")
#: R/arma0.R:0
msgid "'seasonal' must be a list with component 'order'"
msgstr "'seasonal' deve essere di tipo list con componente 'order'"

#. R/reshape.R: stop("'sep' must be a character string")
#: R/reshape.R:0
#, fuzzy
msgid "'sep' must be a character string"
msgstr "'file' deve essere una stringa di caratteri o una connessione"

#. R/filter.R: stop("'sides' argument must be 1 or 2")
#: R/filter.R:0
#, fuzzy
msgid "'sides' argument must be 1 or 2"
msgstr "l'argomento 'x' deve essere numerico"

#. R/power.R: stop("'sig.level' argument must be numeric in [0, 1]")
#. R/power.R: stop("'sig.level' argument must be numeric in [0, 1]")
#. R/power.anova.test.R: stop("'sig.level' argument must be numeric in [0, 1]")
#: R/power.R:0 R/power.anova.test.R:0
#, fuzzy
msgid "'sig.level' argument must be numeric in [0, 1]"
msgstr "'sig.level' deve essere numerico in [0, 1]"

#. R/spline.R: stop("'spline' requires n >= 1")
#: R/spline.R:0
#, fuzzy
msgid "'spline' requires n >= 1"
msgstr "'approx' richiede n >= 1"

#. R/ts.R: stop("'start' > 'end'")
#: R/ts.R:0
msgid "'start' > 'end'"
msgstr "'start' > 'end'"

#. R/ts.R: warning("'start' argument was not changed")
#: R/ts.R:0
#, fuzzy
msgid "'start' argument was not changed"
msgstr "valore di 'start' non cambiato"

#. R/ts.R: stop("'start' cannot be after 'end'")
#. R/ts.R: stop("'start' cannot be after 'end'")
#: R/ts.R:0
msgid "'start' cannot be after 'end'"
msgstr "'start' no puÃ² essere dopo 'end'"

#. R/density.R: warning("'sum(weights) != 1'  -- will not get true density")
#: R/density.R:0
msgid "'sum(weights) != 1'  -- will not get true density"
msgstr ""

#. R/models.R: stop("'termlabels' must be a character vector of length at least one")
#: R/models.R:0
#, fuzzy
msgid "'termlabels' must be a character vector of length at least one"
msgstr "'ColSideColors' deve essere un vettore carattere di lunghezza ncol(x)"

#. R/smspline.R: stop("'tol' must be strictly positive and finite")
#: R/smspline.R:0
#, fuzzy
msgid "'tol' must be strictly positive and finite"
msgstr "'ratio' deve essere un numero positivo"

#. R/optim.R: stop("'trace != 0' needs 'REPORT >= 1'")
#: R/optim.R:0
msgid "'trace != 0' needs 'REPORT >= 1'"
msgstr ""

#. R/ts.R: stop("'ts' object must have one or more observations")
#: R/ts.R:0
msgid "'ts' object must have one or more observations"
msgstr "l'oggetto 'ts' deve avere una o piÃ¹ osservazioni"

#. R/smspline.R: stop("'type = \"partial\"' is not yet implemented")
#: R/smspline.R:0
#, fuzzy
msgid "'type = \"partial\"' is not yet implemented"
msgstr "SE per il tipo '%s' non ancora implementati"

#. R/family.R: gettextf("'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", \"mu^2\", \"mu^3\" and \"constant\"",     variance_nm)
#: R/family.R:0
msgid ""
"'variance' \"%s\" is invalid: possible values are \"mu(1-mu)\", \"mu\", "
"\"mu^2\", \"mu^3\" and \"constant\""
msgstr ""
"'variance' \"%s\" non valida: i valori possibili sono \"mu(1-mu)\", \"mu\", "
"\"mu^2\", \"mu^3\" e \"constant\""

#. R/nls-profile.R: stop("'varying' argument must be in 'seq_along(pars)'")
#: R/nls-profile.R:0
#, fuzzy
msgid "'varying' argument must be in 'seq_along(pars)'"
msgstr "'varying' deve essere in 1:length(pars)"

#. R/reshape.R: stop("'varying' arguments must be the same length")
#: R/reshape.R:0
msgid "'varying' arguments must be the same length"
msgstr "gli argomenti 'varying' devono avere la stessa lunghezza"

#. R/nls-profile.R: stop("'varying' must be in seq_along(pars)")
#: R/nls-profile.R:0
#, fuzzy
msgid "'varying' must be in seq_along(pars)"
msgstr "'varying' deve essere in 1:length(pars)"

#. R/nls-profile.R: stop("'varying' must be logical, integer or character")
#: R/nls-profile.R:0
msgid "'varying' must be logical, integer or character"
msgstr "'varying' deve essere di tipo logical, integer o character"

#. R/reshape.R: stop("'varying' must be nonempty list or vector")
#: R/reshape.R:0
#, fuzzy
msgid "'varying' must be nonempty list or vector"
msgstr "'varying' deve essere di tipo logical, integer o character"

#. R/density.R: stop("'weights' argument must all be finite")
#: R/density.R:0
#, fuzzy
msgid "'weights' argument must all be finite"
msgstr "i predittori devono essere tutti numerici"

#. R/density.R: stop("'weights' argument must not be negative")
#: R/density.R:0
#, fuzzy
msgid "'weights' argument must not be negative"
msgstr "'x' deve essere non negativo"

#. R/lm.R: stop("'weights' as formula should be one-sided")
#: R/lm.R:0
#, fuzzy
msgid "'weights' as formula should be one-sided"
msgstr "'x' deve essere non negativo"

#. R/TukeyHSD.R: stop("'which' specified no factors")
#: R/TukeyHSD.R:0
msgid "'which' specified no factors"
msgstr "'which' non ha specificato factor"

#. R/TukeyHSD.R: warning("'which' specified some non-factors which will be dropped")
#: R/TukeyHSD.R:0
msgid "'which' specified some non-factors which will be dropped"
msgstr "'which' ha specificato alcuni non-factor che verranno eliminati"

#. R/acf.R: stop("'x$lag' must have at least 1 column")
#: R/acf.R:0
#, fuzzy
msgid "'x$lag' must have at least 1 column"
msgstr "x$lag deve avere almeno 1 colonna"

#. R/poisson.test.R: stop("'x' and 'T' arguments have incompatible length")
#: R/poisson.test.R:0
#, fuzzy
msgid "'x' and 'T' arguments have incompatible length"
msgstr "'x' e 'g' devono avere la stessa lunghezza"

#. R/distn.R: stop("'x' and 'prob' arguments must be equal length vectors")
#: R/distn.R:0
#, fuzzy
msgid "'x' and 'prob' arguments must be equal length vectors"
msgstr "x[] e prob[] devono essere vettore della stessa lunghezza."

#. R/chisq.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#. R/fisher.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#. R/mantelhaen.test.R: stop("'x' and 'y' arguments must have at least 2 levels")
#: R/chisq.test.R:0 R/fisher.test.R:0 R/mantelhaen.test.R:0
#, fuzzy
msgid "'x' and 'y' arguments must have at least 2 levels"
msgstr "'x' e 'y' devono avere almeno due livelli"

#. R/mcnemar.test.R: stop("'x' and 'y' must have the same number of levels (minimum 2)")
#: R/mcnemar.test.R:0
msgid "'x' and 'y' must have the same number of levels (minimum 2)"
msgstr "'x' e 'y' deovono avere lo stesso numero di livelli (minimo 2)"

#. R/density.R: stop("'x' argument contains missing values")
#: R/density.R:0
#, fuzzy
msgid "'x' argument contains missing values"
msgstr "'x' contiene valori mancanti"

#. R/fisher.test.R: gettextf("'x' argument has been rounded to integer: %s", ax)
#: R/fisher.test.R:0
#, fuzzy
msgid "'x' argument has been rounded to integer: %s"
msgstr "'x' arrotondata a integer:"

#. R/fisher.test.R: stop("'x' argument has entries too large to be integer")
#: R/fisher.test.R:0
#, fuzzy
msgid "'x' argument has entries too large to be integer"
msgstr "'x' contiene elementi troppo grandi per essere utilizzati con integer"

#. R/kruskal.test.R: warning("'x' argument is a list, so ignoring argument 'g'")
#: R/kruskal.test.R:0
#, fuzzy
msgid "'x' argument is a list, so ignoring argument 'g'"
msgstr "'col.var' mancante o non corretto"

#. R/cor.R: stop("'x' argument is empty")
#: R/cor.R:0
#, fuzzy
msgid "'x' argument is empty"
msgstr "'x' Ã¨ vuota"

#. R/kruskal.test.R: stop("'x' argument must be a list with at least 2 elements")
#: R/kruskal.test.R:0
#, fuzzy
msgid "'x' argument must be a list with at least 2 elements"
msgstr "'x' deve essere di tipo list con almeno 2 elementi"

#. R/anova.R: stop("'x' argument must be coefficient matrix or data frame")
#: R/anova.R:0
#, fuzzy
msgid "'x' argument must be coefficient matrix or data frame"
msgstr "'x' deve essere una matrice/data frame di coefficienti"

#. R/poisson.test.R: stop("'x' argument must be finite, nonnegative, and integer")
#: R/poisson.test.R:0
#, fuzzy
msgid "'x' argument must be finite, nonnegative, and integer"
msgstr "'x' deve essere un intero non negativo"

#. R/distn.R: stop("'x' argument must be non-negative")
#: R/distn.R:0
#, fuzzy
msgid "'x' argument must be non-negative"
msgstr "'x' deve essere non negativo"

#. R/binom.test.R: stop("'x' argument must be non-negative and integer")
#: R/binom.test.R:0
#, fuzzy
msgid "'x' argument must be non-negative and integer"
msgstr "'x' deve essere un intero non negativo"

#. R/fisher.test.R: stop("'x' argument must have at least 2 rows and 2 columns")
#: R/fisher.test.R:0
#, fuzzy
msgid "'x' argument must have at least 2 rows and 2 columns"
msgstr "'x' deve avere almeno 2 righe e 2 colonne"

#. R/kernel.R: stop("'x' is shorter than kernel 'k'")
#: R/kernel.R:0
msgid "'x' is shorter than kernel 'k'"
msgstr "'x' Ã¨ piÃ¹ piccolo del kernel 'k'"

#. R/chisq.test.R: stop("'x' must at least have 2 elements")
#: R/chisq.test.R:0
msgid "'x' must at least have 2 elements"
msgstr "'x' deve avere almeno 2 elementi"

#. R/splinefun.R: stop("'x' must be *strictly* increasing (non - NA)")
#: R/splinefun.R:0
msgid "'x' must be *strictly* increasing (non - NA)"
msgstr ""

#. R/mantelhaen.test.R: stop("'x' must be a 3-dimensional array")
#: R/mantelhaen.test.R:0
msgid "'x' must be a 3-dimensional array"
msgstr "'x' deve essere un array tri-dimensionale"

#. R/bartlett.test.R: stop("'x' must be a list with at least 2 elements")
#. R/fligner.test.R: stop("'x' must be a list with at least 2 elements")
#: R/bartlett.test.R:0 R/fligner.test.R:0
msgid "'x' must be a list with at least 2 elements"
msgstr "'x' deve essere di tipo list con almeno 2 elementi"

#. R/cov.wt.R: stop("'x' must be a matrix or a data frame")
#: R/cov.wt.R:0
msgid "'x' must be a matrix or a data frame"
msgstr "'x' deve essere una matrice o un data frame"

#. R/dendrogram.R: stop("'x' must be a numeric matrix")
#: R/dendrogram.R:0
msgid "'x' must be a numeric matrix"
msgstr "'x' deve essere una matrice numerica"

#. R/spectrum.R: stop("'x' must be a time series or an ar() fit")
#: R/spectrum.R:0
msgid "'x' must be a time series or an ar() fit"
msgstr "'x' deve essere una serie storica o un ar() stimato"

#. R/smspline.R: stop("'x' must be between 0 and 1 for periodic smooth")
#: R/smspline.R:0
msgid "'x' must be between 0 and 1 for periodic smooth"
msgstr "'x' deve essere tra 0 e 1 per smooth periodici"

#. R/mcnemar.test.R: stop("'x' must be square with at least two rows and columns")
#: R/mcnemar.test.R:0
msgid "'x' must be square with at least two rows and columns"
msgstr "'x' deve essere quadrata con almeno due righe e colonne"

#. R/cov.wt.R: stop("'x' must contain finite values only")
#: R/cov.wt.R:0
msgid "'x' must contain finite values only"
msgstr "'x' deve contenere solo valori finiti"

#. R/ecdf.R: stop("'x' must have 1 or more non-missing values")
#: R/ecdf.R:0
msgid "'x' must have 1 or more non-missing values"
msgstr "'x' deve avere 1 o piÃ¹ valori non mancanti"

#. R/pairwise.R: stop("'x' must have 2 columns")
#. R/prop.test.R: stop("'x' must have 2 columns")
#: R/pairwise.R:0 R/prop.test.R:0
msgid "'x' must have 2 columns"
msgstr "'x' deve avere 2 colonne"

#. R/dendrogram.R: stop("'x' must have at least 2 rows and 2 columns")
#: R/dendrogram.R:0
msgid "'x' must have at least 2 rows and 2 columns"
msgstr "'x' deve avere almeno 2 righe e 2 colonne"

#. R/diffinv.R: stop("'xi' does not have the right length")
#: R/diffinv.R:0
#, fuzzy
msgid "'xi' does not have the right length"
msgstr "'xi' non ha la lunghezza giusta"

#. R/arima.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#. R/arma0.R: stop("'xreg' and 'newxreg' have different numbers of columns")
#: R/arima.R:0 R/arma0.R:0
msgid "'xreg' and 'newxreg' have different numbers of columns"
msgstr "'xreg' e 'newxreg' hanno un numero differente di colonne"

#. R/arma0.R: stop("'xreg' argument is collinear")
#: R/arma0.R:0
#, fuzzy
msgid "'xreg' argument is collinear"
msgstr "'xreg' Ã¨ collineare"

#. R/ts.R: stop("'xy.labels' must be logical or character")
#: R/ts.R:0
msgid "'xy.labels' must be logical or character"
msgstr "'xy.labels' devono essere logical o character"

#. R/qqnorm.R: stop("'y' argument is empty or has only NA values")
#: R/qqnorm.R:0
#, fuzzy
msgid "'y' argument is empty or has only NA values"
msgstr "y Ã¨ vuota o contiene sonlo NA"

#. R/t.test.R: stop("'y' is missing for paired test")
#. R/wilcox.test.R: stop("'y' is missing for paired test")
#: R/t.test.R:0 R/wilcox.test.R:0
msgid "'y' is missing for paired test"
msgstr "'y' mancante nel test per dati appaiati"

#. R/spline.R: stop("'y' must be increasing or decreasing")
#. R/splinefun.R: stop("'y' must be increasing or decreasing")
#: R/spline.R:0 R/splinefun.R:0
#, fuzzy
msgid "'y' must be increasing or decreasing"
msgstr "'vec' deve essere ordinata in modo non-decrescente"

#. R/ks.test.R: stop("'y' must be numeric or a function or a string naming a valid function")
#: R/ks.test.R:0
#, fuzzy
msgid "'y' must be numeric or a function or a string naming a valid function"
msgstr "'y' deve essere numerico o una stringa contente un nome di funzione"

#. R/stepfun.R: stop("'y' must be one longer than 'x'")
#: R/stepfun.R:0
msgid "'y' must be one longer than 'x'"
msgstr "'y' deve essere piÃ¹ lungo di 'x' di una unitÃ "

#. R/glm.R: gettextf("(Dispersion parameter for %s family taken to be %s)", x$family$family,     format(x$dispersion), domain = "R-stats")
#: R/glm.R:0
msgid "(Dispersion parameter for %s family taken to be %s)"
msgstr ""

#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/dummy.coef.R: gettext("(Intercept)", domain = "R-stats")
#. R/lm.influence.R: gettext("(Intercept)", domain = "R-stats")
#. R/manova.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#. R/proj.R: gettext("(Intercept)", domain = "R-stats")
#: R/dummy.coef.R:0 R/lm.influence.R:0 R/manova.R:0 R/proj.R:0
msgid "(Intercept)"
msgstr ""

#. R/kmeans.R: gettextf(" (between_SS / total_SS = %5.1f %%)", 100 * x$betweenss/x$totss, domain = "R-stats")
#: R/kmeans.R:0
msgid "(between_SS / total_SS = %5.1f %%)"
msgstr ""

#. R/models.R: gettext("(offset)", domain = "R-stats")
#. R/models.R: gettext("(offset)", domain = "R-stats")
#: R/models.R:0
msgid "(offset)"
msgstr ""

#. R/wilcox.test.R: gettext("(pseudo)median", domain = "R-stats")
#. R/wilcox.test.R: gettext("(pseudo)median", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "(pseudo)median"
msgstr ""

#. R/models.R: gettext("(weights)", domain = "R-stats")
#: R/models.R:0
msgid "(weights)"
msgstr ""

#. R/isoreg.R: gettextf("  (x,y) ordering: %s", str(x$ord), domain = "R-stats")
#: R/isoreg.R:0
msgid "(x,y) ordering: %s"
msgstr ""

#. R/lm.R: stop("0 (non-NA) cases")
#. R/lm.R: stop("0 (non-NA) cases")
#: R/lm.R:0
msgid "0 (non-NA) cases"
msgstr "0 casi (non-NA)"

#. R/glm.R: stop("0s in V(mu)")
#: R/glm.R:0
msgid "0s in V(mu)"
msgstr "0 in V(mu)"

#. R/fisher.test.R: stop("2 or more non-zero column marginals are needed")
#: R/fisher.test.R:0
msgid "2 or more non-zero column marginals are needed"
msgstr ""

#. R/fisher.test.R: stop("2 or more non-zero row marginals are needed")
#: R/fisher.test.R:0
msgid "2 or more non-zero row marginals are needed"
msgstr ""

#. R/acf.R: gettext("ACF", domain = "R-stats")
#: R/acf.R:0
msgid "ACF"
msgstr ""

#. R/acf.R: gettext("ACF (cov)", domain = "R-stats")
#: R/acf.R:0
msgid "ACF (cov)"
msgstr ""

#. R/StructTS.R: gettext("ACF of Residuals")
#: R/StructTS.R:0
msgid "ACF of Residuals"
msgstr ""

#. R/add.R: stop("AIC is -infinity for this model, so 'step' cannot proceed")
#: R/add.R:0
#, fuzzy
msgid "AIC is -infinity for this model, so 'step' cannot proceed"
msgstr ""
"l'AIC non Ã¨ definito per questo modello, quindi 'step' non puÃ² procedere"

#. R/add.R: stop("AIC is not defined for this model, so 'step' cannot proceed")
#: R/add.R:0
msgid "AIC is not defined for this model, so 'step' cannot proceed"
msgstr ""
"l'AIC non Ã¨ definito per questo modello, quindi 'step' non puÃ² procedere"

#. R/glm.R: gettext("AIC: ", domain = "R-stats")
#: R/glm.R:0
msgid "AIC:"
msgstr ""

#. R/lm.R: warning("ANOVA F-tests on an essentially perfect fit are unreliable")
#: R/lm.R:0
msgid "ANOVA F-tests on an essentially perfect fit are unreliable"
msgstr ""

#. R/nls.R: gettext("Achieved convergence tolerance:", domain = "R-stats")
#: R/nls.R:0
msgid "Achieved convergence tolerance:"
msgstr ""

#. R/lm.R: gettext("Adjusted R-squared: ", domain = "R-stats")
#: R/lm.R:0
msgid "Adjusted R-squared:"
msgstr ""

#. R/nls.R: gettext("Algorithm \"port\", convergence message: ", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Algorithm \"port\", convergence message:"
msgstr "l'algoritmo non converge"

#. R/add.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#. R/glm.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#. R/glm.R: gettext("Analysis of Deviance Table", domain = "R-stats")
#: R/add.R:0 R/glm.R:0
msgid "Analysis of Deviance Table"
msgstr ""

#. R/lm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/lm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/mlm.R: gettext("Analysis of Variance Table", domain = "R-stats")
#. R/mlm.R: gettext("Analysis of Variance Table")
#. R/nls.R: gettext("Analysis of Variance Table")
#: R/lm.R:0 R/mlm.R:0 R/nls.R:0
msgid "Analysis of Variance Table"
msgstr ""

#. R/loess.R: gettextf("Analysis of Variance:   denominator df %s", format(round(dfden, 2L)), domain = "R-stats")
#: R/loess.R:0
msgid "Analysis of Variance:   denominator df %s"
msgstr ""

#. R/ansari.test.R: gettext("Ansari-Bradley test", domain = "R-stats")
#: R/ansari.test.R:0
msgid "Ansari-Bradley test"
msgstr ""

#. R/lm.R: warning("Assuming constant prediction variance even though model fit is weighted")
#: R/lm.R:0
msgid "Assuming constant prediction variance even though model fit is weighted"
msgstr ""

#. R/acf.R: gettextf("Autocorrelations of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Autocorrelations of series %s, by lag"
msgstr ""

#. R/acf.R: gettextf("Autocovariances of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Autocovariances of series %s, by lag"
msgstr ""

#. R/kmeans.R: gettext("Available components:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Available components:"
msgstr ""

#. R/power.anova.test.R: gettext("Balanced one-way analysis of variance power calculation", domain = "R-stats")
#: R/power.anova.test.R:0
msgid "Balanced one-way analysis of variance power calculation"
msgstr ""

#. R/density.R: gettextf("Bandwidth 'bw' = %s", formatC(x$bw, digits = digits), domain = "R-stats")
#: R/density.R:0
msgid "Bandwidth 'bw' = %s"
msgstr ""

#. R/constrOptim.R: gettext("Barrier algorithm ran out of iterations and did not converge")
#: R/constrOptim.R:0
#, fuzzy
msgid "Barrier algorithm ran out of iterations and did not converge"
msgstr "l'algoritmo non converge"

#. R/bartlett.test.R: gettext("Bartlett test of homogeneity of variances", domain = "R-stats")
#: R/bartlett.test.R:0
msgid "Bartlett test of homogeneity of variances"
msgstr ""

#. R/bartlett.test.R: gettext("Bartlett's K-squared", domain = "R-stats")
#: R/bartlett.test.R:0
msgid "Bartlett's K-squared"
msgstr ""

#. R/ts-tests.R: gettext("Box-Ljung test")
#: R/ts-tests.R:0
msgid "Box-Ljung test"
msgstr ""

#. R/ts-tests.R: gettext("Box-Pierce test")
#: R/ts-tests.R:0
msgid "Box-Pierce test"
msgstr ""

#. R/HoltWinters.R: gettext("Call:", domain = "R-stats")
#. R/StructTS.R: gettext("Call:", domain = "R-stats")
#. R/aov.R: gettext("Call:", domain = "R-stats")
#. R/aov.R: gettext("Call:", domain = "R-stats")
#. R/ar.R: gettext("Call:", domain = "R-stats")
#. R/arima.R: gettext("Call:", domain = "R-stats")
#. R/arma0.R: gettext("Call:", domain = "R-stats")
#. R/density.R: gettext("Call:", domain = "R-stats")
#. R/ecdf.R: gettext("Call: ", domain = "R-stats")
#. R/factanal.R: gettext("Call:", domain = "R-stats")
#. R/glm.R: gettext("Call:  ", domain = "R-stats")
#. R/glm.R: gettext("Call:", domain = "R-stats")
#. R/hclust.R: gettext("Call:", domain = "R-stats")
#. R/lm.R: gettext("Call:", domain = "R-stats")
#. R/lm.R: gettext("Call:", domain = "R-stats")
#. R/loess.R: gettext("Call:", domain = "R-stats")
#. R/loess.R: gettext("Call:", domain = "R-stats")
#. R/ppr.R: gettext("Call:", domain = "R-stats")
#. R/princomp.R: gettext("Call:", domain = "R-stats")
#. R/smspline.R: gettext("Call:", domain = "R-stats")
#. R/stepfun.R: gettext("Call: ", domain = "R-stats")
#. R/stl.R: gettext(" Call:", domain = "R-stats")
#. R/stl.R: gettext(" Call:", domain = "R-stats")
#: R/HoltWinters.R:0 R/StructTS.R:0 R/aov.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0
#: R/density.R:0 R/ecdf.R:0 R/factanal.R:0 R/glm.R:0 R/hclust.R:0 R/lm.R:0
#: R/loess.R:0 R/ppr.R:0 R/princomp.R:0 R/smspline.R:0 R/stepfun.R:0 R/stl.R:0
msgid "Call:"
msgstr ""

#. R/prop.trend.test.R: gettext("Chi-squared Test for Trend in Proportions", domain = "R-stats")
#: R/prop.trend.test.R:0
msgid "Chi-squared Test for Trend in Proportions"
msgstr ""

#. R/chisq.test.R: warning("Chi-squared approximation may be incorrect")
#. R/prop.test.R: warning("Chi-squared approximation may be incorrect")
#: R/chisq.test.R:0 R/prop.test.R:0
msgid "Chi-squared approximation may be incorrect"
msgstr "L'approssimazione al Chi-quadrato potrebbe essere inesatta"

#. R/chisq.test.R: gettext("Chi-squared test for given probabilities", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Chi-squared test for given probabilities"
msgstr ""

#. R/chisq.test.R: gettextf("Chi-squared test for given probabilities with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/chisq.test.R:0
msgid ""
"Chi-squared test for given probabilities with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/hclust.R: gettext("Cluster Dendrogram")
#: R/hclust.R:0
#, fuzzy
msgid "Cluster Dendrogram"
msgstr "dendrogramma non valido"

#. R/kmeans.R: gettext("Cluster means:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Cluster means:"
msgstr ""

#. R/hclust.R: gettext("Cluster method: ", domain = "R-stats")
#: R/hclust.R:0
#, fuzzy
msgid "Cluster method:"
msgstr "metodo di cluster non valido"

#. R/kmeans.R: gettext("Clustering vector:", domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "Clustering vector:"
msgstr "metodo di cluster non valido"

#. R/mantelhaen.test.R: gettext("Cochran-Mantel-Haenszel M^2", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Cochran-Mantel-Haenszel M^2"
msgstr ""

#. R/mantelhaen.test.R: gettext("Cochran-Mantel-Haenszel test", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Cochran-Mantel-Haenszel test"
msgstr ""

#. R/glm.R: gettextf("Coefficients  [contrasts: %s]:", apply(cbind(names(co), co), 1L, paste,     collapse = "="), domain = "R-stats")
#: R/glm.R:0
#, fuzzy
msgid "Coefficients  [contrasts: %s]:"
msgstr "i coefficienti non sommano ad 1"

#. R/ppr.R: gettext("Coefficients of ridge terms:", domain = "R-stats")
#: R/ppr.R:0
#, fuzzy
msgid "Coefficients of ridge terms:"
msgstr "i coefficienti non sommano ad 1"

#. R/HoltWinters.R: gettext("Coefficients:", domain = "R-stats")
#. R/ar.R: gettext("Coefficients:", domain = "R-stats")
#. R/arima.R: gettext("Coefficients:", domain = "R-stats")
#. R/arma0.R: gettext("Coefficients:", domain = "R-stats")
#. R/glm.R: gettext("Coefficients:", domain = "R-stats")
#. R/glm.R: gettext("Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Coefficients:", domain = "R-stats")
#: R/HoltWinters.R:0 R/ar.R:0 R/arima.R:0 R/arma0.R:0 R/glm.R:0 R/lm.R:0
msgid "Coefficients:"
msgstr ""

#. R/medpolish.R: gettext("Column Effects:", domain = "R-stats")
#: R/medpolish.R:0
msgid "Column Effects:"
msgstr ""

#. R/dendrogram.R: stop("Colv = \"Rowv\" but nrow(x) != ncol(x)")
#: R/dendrogram.R:0
msgid "Colv = \"Rowv\" but nrow(x) != ncol(x)"
msgstr "Colv = \"Rowv\" ma nrow(x) != ncol(x)"

#. R/poisson.test.R: gettext("Comparison of Poisson rates", domain = "R-stats")
#: R/poisson.test.R:0
msgid "Comparison of Poisson rates"
msgstr ""

#. R/stl.R: gettext("Components", domain = "R-stats")
#: R/stl.R:0
msgid "Components"
msgstr ""

#. R/hclust.R: gettextf("\n Consider providing '%s' method", paste("as.hclust.", oldClass(x)[1L],     "()", collapse = ""))
#: R/hclust.R:0
#, fuzzy
msgid "Consider providing '%s' method"
msgstr "Sarebbe opportuno definire un metodo as.hclust.%s()"

#. R/nls.R: warning("No starting values specified for some parameters.", "\n", gettextf("Initializing %s to '1.'.",     tmp_n), "\n", "Consider specifying 'start' or using a selfStart model", domain = "R-stats",     sep = "")
#: R/nls.R:0
msgid "Consider specifying 'start' or using a selfStart model"
msgstr ""

#. R/plot.lm.R: gettext("Constant Leverage:\n Residuals vs Factor Levels")
#: R/plot.lm.R:0
msgid ""
"Constant Leverage:\n"
" Residuals vs Factor Levels"
msgstr ""

#. R/aov.R: gettextf("Contrast %s", seq(ncol(contrast)), domain = "R-stats")
#: R/aov.R:0
msgid "Contrast %s"
msgstr ""

#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#. R/mlm.R: gettextf("Contrast matrix %s", apply(format(T), 1L, paste, collapse = " "), domain = "R-stats")
#: R/mlm.R:0
#, fuzzy
msgid "Contrast matrix %s"
msgstr "matrice di contrasto singolare"

#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", apply(format(X), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts orthogonal to %s", paste(deparse(formula(orig.X)), collapse = ""),     domain = "R-stats")
#: R/mlm.R:0
msgid "Contrasts orthogonal to %s"
msgstr ""

#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", apply(format(M), 2L, paste, collapse = " "),     domain = "R-stats")
#. R/mlm.R: gettextf("Contrasts spanned by %s", paste(deparse(formula(orig.M)), collapse = ""),     domain = "R-stats")
#: R/mlm.R:0
msgid "Contrasts spanned by %s"
msgstr ""

#. R/loess.R: gettext("Control settings:", domain = "R-stats")
#: R/loess.R:0
msgid "Control settings:"
msgstr ""

#. R/nls.R: gettextf("Convergence failure: %s", msg.nls)
#: R/nls.R:0
msgid "Convergence failure: %s"
msgstr ""

#. R/plot.lm.R: gettext("Cook's dist vs Leverage  ")
#: R/plot.lm.R:0
#, fuzzy
msgid "Cook's dist vs Leverage"
msgstr "i residue hanno rango"

#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#. R/plot.lm.R: gettext("Cook's distance")
#: R/plot.lm.R:0
msgid "Cook's distance"
msgstr ""

#. R/glm.R: gettext("Correlation of Coefficients:", domain = "R-stats")
#. R/lm.R: gettext("Correlation of Coefficients:", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "Correlation of Coefficients:"
msgstr ""

#. R/nls.R: gettext("Correlation of Parameter Estimates:", domain = "R-stats")
#: R/nls.R:0
msgid "Correlation of Parameter Estimates:"
msgstr ""

#. R/isoreg.R: gettext("Cumulative Data and Convex Minorant", domain = "R-stats")
#: R/isoreg.R:0
msgid "Cumulative Data and Convex Minorant"
msgstr ""

#. R/nls.R: gettext("Data:", domain = "R-stats")
#. R/pairwise.R: gettext("Data: ", domain = "R-stats")
#: R/nls.R:0 R/pairwise.R:0
msgid "Data:"
msgstr ""

#. R/HoltWinters.R: gettext("Decomposition of additive time series")
#: R/HoltWinters.R:0
#, fuzzy
msgid "Decomposition of additive time series"
msgstr "diagrammi di dispersione solo per serie unidimensionali"

#. R/HoltWinters.R: gettext("Decomposition of multiplicative time series")
#: R/HoltWinters.R:0
#, fuzzy
msgid "Decomposition of multiplicative time series"
msgstr "diagrammi di dispersione solo per serie unidimensionali"

#. R/glm.R: gettextf("Degrees of Freedom: %d Total (i.e. Null); %d Residual", x$df.null, x$df.residual,     domain = "R-stats")
#: R/glm.R:0
msgid "Degrees of Freedom: %d Total (i.e. Null); %d Residual"
msgstr ""

#. R/density.R: gettext("Density", domain = "R-stats")
#: R/density.R:0
msgid "Density"
msgstr ""

#. R/model.tables.R: message("Design is unbalanced - use 'se.contrast()' for se's")
#: R/model.tables.R:0
#, fuzzy
msgid "Design is unbalanced - use 'se.contrast()' for se's"
msgstr "Il disegno Ã¨ non bilanciato - usare se.contrast() per gli s.e."

#. R/glm.R: gettextf("Deviance = %s Iterations - %d\n", dev, iter, domain = "R-stats")
#: R/glm.R:0
msgid "Deviance = %s Iterations - %d"
msgstr ""

#. R/glm.R: gettext("Deviance Residuals:", domain = "R-stats")
#: R/glm.R:0
msgid "Deviance Residuals:"
msgstr ""

#. R/medpolish.R: gettext("Diagnostic Comparison Values", domain = "R-stats")
#: R/medpolish.R:0
msgid "Diagnostic Comparison Values"
msgstr ""

#. R/ts-tests.R: gettext("Dickey-Fuller")
#: R/ts-tests.R:0
msgid "Dickey-Fuller"
msgstr ""

#. R/TukeyHSD.R: gettextf("Differences in mean levels of %s", names(x)[i], domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "Differences in mean levels of %s"
msgstr ""

#. R/hclust.R: gettext("Distance: ", domain = "R-stats")
#: R/hclust.R:0
msgid "Distance:"
msgstr ""

#. R/ecdf.R: gettext("Empirical CDF", domain = "R-stats")
#: R/ecdf.R:0
msgid "Empirical CDF"
msgstr ""

#. R/ecdf.R: gettextf("Empirical CDF:\t  %d unique values with summary\n", n, domain = "R-stats")
#: R/ecdf.R:0
msgid "Empirical CDF:\t  %d unique values with summary"
msgstr ""

#. R/smspline.R: gettextf("Equivalent Degrees of Freedom (Df): %s", format(x$df, digits = digits),     domain = "R-stats")
#: R/smspline.R:0
#, fuzzy
msgid "Equivalent Degrees of Freedom (Df): %s"
msgstr "residui senza gradi di libertÃ "

#. R/loess.R: gettext("Equivalent Number of Parameters:", domain = "R-stats")
#. R/loess.R: gettext("Equivalent Number of Parameters:", domain = "R-stats")
#: R/loess.R:0
msgid "Equivalent Number of Parameters:"
msgstr ""

#. R/ppr.R: gettext("Equivalent df for ridge terms:", domain = "R-stats")
#: R/ppr.R:0
msgid "Equivalent df for ridge terms:"
msgstr ""

#. R/aov.R: warning("Error() model is singular")
#: R/aov.R:0
msgid "Error() model is singular"
msgstr "modello Error() singolare"

#. R/dummy.coef.R: gettext("Error:", domain = "R-stats")
#: R/dummy.coef.R:0
msgid "Error:"
msgstr ""

#. R/aov.R: gettextf("Error: %s", strata, domain = "R-stats")
#: R/aov.R:0
msgid "Error: %s"
msgstr ""

#. R/aov.R: gettext("Estimated effects are balanced", domain = "R-stats")
#: R/aov.R:0
msgid "Estimated effects are balanced"
msgstr ""

#. R/aov.R: gettext("Estimated effects may be unbalanced", domain = "R-stats")
#: R/aov.R:0
msgid "Estimated effects may be unbalanced"
msgstr ""

#. R/poisson.test.R: gettext("Exact Poisson test", domain = "R-stats")
#: R/poisson.test.R:0
msgid "Exact Poisson test"
msgstr ""

#. R/binom.test.R: gettext("Exact binomial test", domain = "R-stats")
#: R/binom.test.R:0
msgid "Exact binomial test"
msgstr ""

#. R/mantelhaen.test.R: gettext("Exact conditional test of independence in 2 x 2 x k tables", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Exact conditional test of independence in 2 x 2 x k tables"
msgstr ""

#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#. R/add.R: gettextf("F test assumes 'quasi%s' family", fam)
#: R/add.R:0
msgid "F test assumes 'quasi%s' family"
msgstr "il test F assume una famiglia 'quasi%s'"

#. R/var.test.R: gettext("F test to compare two variances", domain = "R-stats")
#: R/var.test.R:0
msgid "F test to compare two variances"
msgstr ""

#. R/lsfit.R: gettextf("F-statistic (df=%s, %s)=%s", format(degfree), format(n[i] - p), format(round(fstat[i],     digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "F-statistic (df=%s, %s)=%s"
msgstr ""

#. R/lm.R: gettextf("F-statistic: %s on %d and %d DF", formatC(x$fstatistic[1L], digits = digits),     x$fstatistic[2L], x$fstatistic[3L], domain = "R-stats")
#: R/lm.R:0
msgid "F-statistic: %s on %d and %d DF"
msgstr ""

#. R/factanal.R: gettext("Factor Correlations:", domain = "R-stats")
#: R/factanal.R:0
msgid "Factor Correlations:"
msgstr ""

#. R/plot.lm.R: gettext("Factor Level Combinations")
#: R/plot.lm.R:0
msgid "Factor Level Combinations"
msgstr ""

#. R/family.R: gettext("Family: ", domain = "R-stats")
#: R/family.R:0
msgid "Family:"
msgstr ""

#. R/add.R: gettext("Final Model: ", domain = "R-stats")
#: R/add.R:0
#, fuzzy
msgid "Final Model:"
msgstr "ordine modello:"

#. R/medpolish.R: gettext("Final: ", domain = "R-stats")
#: R/medpolish.R:0
#, fuzzy
msgid "Final:"
msgstr "ordine modello:"

#. R/fisher.test.R: gettext("Fisher's Exact Test for Count Data", domain = "R-stats")
#: R/fisher.test.R:0
msgid "Fisher's Exact Test for Count Data"
msgstr ""

#. R/fisher.test.R: gettextf("Fisher's Exact Test for Count Data with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/fisher.test.R:0
msgid ""
"Fisher's Exact Test for Count Data with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/TukeyHSD.R: gettext("Fit: ", domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "Fit:"
msgstr ""

#. R/nls.R: gettext("Fitted values")
#. R/plot.lm.R: gettext("Fitted values")
#: R/nls.R:0 R/plot.lm.R:0
msgid "Fitted values"
msgstr ""

#. R/fligner.test.R: gettext("Fligner-Killeen test of homogeneity of variances", domain = "R-stats")
#: R/fligner.test.R:0
msgid "Fligner-Killeen test of homogeneity of variances"
msgstr ""

#. R/fligner.test.R: gettext("Fligner-Killeen:med chi-squared", domain = "R-stats")
#: R/fligner.test.R:0
msgid "Fligner-Killeen:med chi-squared"
msgstr ""

#. R/nls.R: gettext("Formula:", domain = "R-stats")
#: R/nls.R:0
msgid "Formula:"
msgstr ""

#. R/friedman.test.R: gettext("Friedman chi-squared", domain = "R-stats")
#: R/friedman.test.R:0
msgid "Friedman chi-squared"
msgstr ""

#. R/friedman.test.R: gettext("Friedman rank sum test", domain = "R-stats")
#: R/friedman.test.R:0
msgid "Friedman rank sum test"
msgstr ""

#. R/dummy.coef.R: gettext("Full coefficients are:", domain = "R-stats")
#: R/dummy.coef.R:0
msgid "Full coefficients are:"
msgstr ""

#. R/ppr.R: gettext("Goodness of fit:", domain = "R-stats")
#: R/ppr.R:0
msgid "Goodness of fit:"
msgstr ""

#. R/aov.R: gettext("Grand Mean: ", domain = "R-stats")
#: R/aov.R:0
msgid "Grand Mean:"
msgstr ""

#. R/aov.R: gettext("Grand Means:", domain = "R-stats")
#: R/aov.R:0
msgid "Grand Means:"
msgstr ""

#. R/model.tables.R: gettext("Grand mean", domain = "R-stats")
#: R/model.tables.R:0
msgid "Grand mean"
msgstr ""

#. R/mlm.R: gettext("Greenhouse-Geisser epsilon:", domain = "R-stats")
#. R/mlm.R: gettext("Greenhouse-Geisser epsilon:")
#: R/mlm.R:0
msgid "Greenhouse-Geisser epsilon:"
msgstr ""

#. R/aggregate.R: gettextf("Group.%d", seq_along(by))
#. R/aggregate.R: gettextf("Group.%d", ind)
#: R/aggregate.R:0
msgid "Group.%d"
msgstr ""

#. R/hclust.R: gettext("Height")
#: R/hclust.R:0
msgid "Height"
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and additive seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and additive seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and multiplicative seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and multiplicative seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing with trend and without seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing with trend and without seasonal component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and with additive seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and with additive seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and with multiplicative seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and with multiplicative "
"seasonal component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters exponential smoothing without trend and without seasonal component.",     domain = "R-stats")
#: R/HoltWinters.R:0
msgid ""
"Holt-Winters exponential smoothing without trend and without seasonal "
"component."
msgstr ""

#. R/HoltWinters.R: gettext("Holt-Winters filtering")
#: R/HoltWinters.R:0
msgid "Holt-Winters filtering"
msgstr ""

#. R/mlm.R: gettext("Huynh-Feldt epsilon:", domain = "R-stats")
#. R/mlm.R: gettext("Huynh-Feldt epsilon:")
#: R/mlm.R:0
msgid "Huynh-Feldt epsilon:"
msgstr ""

#. R/stl.R: gettext(" IQR:", domain = "R-stats")
#: R/stl.R:0
msgid "IQR:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid ""
"If writing your own selfStart model, see \"help(selfStart)\" for the new "
"form of the \"initial\" attribute."
msgstr ""

#. R/prcomp.R: gettext("Importance of components:", domain = "R-stats")
#. R/princomp-add.R: gettext("Importance of components:", domain = "R-stats")
#: R/prcomp.R:0 R/princomp-add.R:0
msgid "Importance of components:"
msgstr ""

#. R/lm.influence.R: gettextf("Influence measures of\n\t%s:", paste(deparse(x$call), collapse = ""), domain = "R-stats")
#: R/lm.influence.R:0
msgid ""
"Influence measures of\n"
"\t%s:"
msgstr ""

#. R/add.R: gettext("Initial Model: ", domain = "R-stats")
#: R/add.R:0
#, fuzzy
msgid "Initial Model:"
msgstr "ordine modello:"

#. R/nls.R: gettextf("Initializing %s to '1.'.", tmp_n)
#: R/nls.R:0
msgid "Initializing %s to '1.'."
msgstr ""

#. R/ar.R: gettext("Intercept: ", domain = "R-stats")
#: R/ar.R:0
msgid "Intercept:"
msgstr ""

#. R/isoreg.R: gettextf("Isotonic regression %s", paste(deparse(x$call), collapse = ""), domain = "R-stats")
#: R/isoreg.R:0
msgid "Isotonic regression %s"
msgstr ""

#. R/cor.test.R: gettext("Kendall's rank correlation tau", domain = "R-stats")
#: R/cor.test.R:0
msgid "Kendall's rank correlation tau"
msgstr ""

#. R/kruskal.test.R: gettext("Kruskal-Wallis chi-squared", domain = "R-stats")
#: R/kruskal.test.R:0
msgid "Kruskal-Wallis chi-squared"
msgstr ""

#. R/kruskal.test.R: gettext("Kruskal-Wallis rank sum test", domain = "R-stats")
#: R/kruskal.test.R:0
msgid "Kruskal-Wallis rank sum test"
msgstr ""

#. R/nlminb.R: gettext("LIV too small (15)")
#: R/nlminb.R:0
msgid "LIV too small (15)"
msgstr ""

#. R/nlminb.R: gettext("LV too small (16)")
#: R/nlminb.R:0
msgid "LV too small (16)"
msgstr ""

#. R/StructTS.R: gettext("Lag")
#. R/acf.R: gettext("Lag", domain = "R-stats")
#: R/StructTS.R:0 R/acf.R:0
msgid "Lag"
msgstr ""

#. R/plot.lm.R: gettext("Leverage")
#. R/plot.lm.R: gettext("Leverage  ")
#: R/plot.lm.R:0
msgid "Leverage"
msgstr ""

#. R/family.R: gettext("Link function: ", domain = "R-stats")
#: R/family.R:0
#, fuzzy
msgid "Link function:"
msgstr "non Ã¨ una funzione a gradini valida"

#. R/factanal.R: gettext("Loadings:", domain = "R-stats")
#. R/princomp-add.R: gettext("Loadings:", domain = "R-stats")
#: R/factanal.R:0 R/princomp-add.R:0
msgid "Loadings:"
msgstr ""

#. R/arima.R: warning("MA part of model is not invertible")
#. R/arma0.R: warning("MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "MA part of model is not invertible"
msgstr "la parte MA del modello non Ã¨ invertibile"

#. R/ar.R: stop("MLE only implemented for univariate series")
#: R/ar.R:0
msgid "MLE only implemented for univariate series"
msgstr "MLE implementato solo per serie unidimensionali"

#. R/mantelhaen.test.R: gettext("Mantel-Haenszel X-squared", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Mantel-Haenszel X-squared"
msgstr ""

#. R/mantelhaen.test.R: gettext("Mantel-Haenszel chi-squared test with continuity correction", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "Mantel-Haenszel chi-squared test with continuity correction"
msgstr ""

#. R/addmargins.R: gettext("Margins computed over dimensions in the following order:", domain = "R-stats")
#: R/addmargins.R:0
msgid "Margins computed over dimensions in the following order:"
msgstr ""

#. R/mlm.R: gettext("Mauchly's test of sphericity")
#: R/mlm.R:0
msgid "Mauchly's test of sphericity"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's Chi-squared test", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's Chi-squared test"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's Chi-squared test with continuity correction", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's Chi-squared test with continuity correction"
msgstr ""

#. R/mcnemar.test.R: gettext("McNemar's chi-squared", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "McNemar's chi-squared"
msgstr ""

#. R/medpolish.R: gettextf("Median Polish Results (Dataset: %s)", sQuote(x$name), domain = "R-stats")
#: R/medpolish.R:0
msgid "Median Polish Results (Dataset: %s)"
msgstr ""

#. R/nls.R: gettextf("Model %s:", format(1L:nmodels))
#: R/nls.R:0
#, fuzzy
msgid "Model %s:"
msgstr "ordine modello:"

#. R/glm.R: gettextf("Model %s: %s", format(1L:nmodels), variables, domain = "R-stats")
#. R/lm.R: gettextf("Model %s: %s", format(seq_len(nmodels)), variables, domain = "R-stats")
#. R/loess.R: gettextf("Model %s: %s", format(seq_len(nmodels)), models, domain = "R-stats")
#. R/mlm.R: gettextf("Model %s: %s", format(seq_len(nmodels)), variables, domain = "R-stats")
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0
#, fuzzy
msgid "Model %s: %s"
msgstr "ordine modello:"

#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/add.R: gettext("Model:", domain = "R-stats")
#. R/glm.R: gettext("Model: ", domain = "R-stats")
#. R/nls.R: gettext("Model:", domain = "R-stats")
#: R/add.R:0 R/glm.R:0 R/nls.R:0
#, fuzzy
msgid "Model:"
msgstr "ordine modello:"

#. R/mood.test.R: gettext("Mood two-sample test of scale", domain = "R-stats")
#: R/mood.test.R:0
msgid "Mood two-sample test of scale"
msgstr ""

#. R/lm.R: gettext("Multiple R-squared:", domain = "R-stats")
#: R/lm.R:0
msgid "Multiple R-squared:"
msgstr ""

#. R/density.R: gettextf("N = %s   Bandwidth = %s", x$n, formatC(x$bw), domain = "R-stats")
#: R/density.R:0
msgid "N = %s   Bandwidth = %s"
msgstr ""

#. R/smspline.R: stop("NA lev[]; probably smoothing parameter 'spar' is way too large!")
#: R/smspline.R:0
#, fuzzy
msgid "NA lev[]; probably smoothing parameter 'spar' is way too large!"
msgstr "NA lev[]; probabilmente il parametro di smothh 'spar' Ã¨ troppo grande!"

#. R/mantelhaen.test.R: stop("NA values are not allowed")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "NA values are not allowed"
msgstr "NA non ammessi"

#. R/cmdscale.R: stop("NA values are not allowed in 'd' argument")
#: R/cmdscale.R:0
#, fuzzy
msgid "NA values are not allowed in 'd' argument"
msgstr "valori NA non ammessi in 'd'"

#. R/friedman.test.R: stop("NA values are not allowed in 'groups' or 'blocks' arguments")
#. R/quade.test.R: stop("NA values are not allowed in 'groups' or 'blocks' arguments")
#: R/friedman.test.R:0 R/quade.test.R:0
#, fuzzy
msgid "NA values are not allowed in 'groups' or 'blocks' arguments"
msgstr "NA non ammessi in 'groups' o 'blocks'"

#. R/arma0.R: warning("NA values are present: setting 'delta' to -1")
#: R/arma0.R:0
#, fuzzy
msgid "NA values are present: setting 'delta' to -1"
msgstr "trovati NA: imposto 'delta' a -1"

#. R/arima.R: gettextf("NA values in '%s'", "phi")
#. R/arima.R: gettextf("NA values in '%s'", "theta")
#: R/arima.R:0
#, fuzzy
msgid "NA values in '%s'"
msgstr "valori NA in 'x'"

#. R/acf.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#. R/ar.R: stop("NA values in 'x'")
#: R/acf.R:0 R/ar.R:0
#, fuzzy
msgid "NA values in 'x'"
msgstr "valori NA in 'x'"

#. R/glm.R: stop("NAs in V(mu)")
#: R/glm.R:0
msgid "NAs in V(mu)"
msgstr "NA in V(mu)"

#. R/glm.R: stop("NAs in d(mu)/d(eta)")
#: R/glm.R:0
msgid "NAs in d(mu)/d(eta)"
msgstr "NA in d(mu)/d(eta)"

#. R/lm.influence.R: gettext("NONE", domain = "R-stats")
#: R/lm.influence.R:0
msgid "NONE"
msgstr ""

#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("NOT changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "NOT changed:"
msgstr ""

#. R/power.R: gettext("NOTE: ", domain = "R-stats")
#: R/power.R:0
msgid "NOTE:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid "New selfStart functions are available."
msgstr ""

#. R/glm.R: gettext("No coefficients", domain = "R-stats")
#. R/glm.R: gettext("No coefficients", domain = "R-stats")
#. R/lm.R: gettext("No coefficients", domain = "R-stats")
#. R/lm.R: gettext("No coefficients", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "No coefficients"
msgstr ""

#. R/manova.R: gettext("No error degrees of freedom", domain = "R-stats")
#: R/manova.R:0
#, fuzzy
msgid "No error degrees of freedom"
msgstr "contrasti non definiti per 0 gradi di libertÃ "

#. R/nls.R: warning("No starting values specified for some parameters.", "\n", gettextf("Initializing %s to '1.'.",     tmp_n), "\n", "Consider specifying 'start' or using a selfStart model", domain = "R-stats",     sep = "")
#: R/nls.R:0
#, fuzzy
msgid "No starting values specified for some parameters."
msgstr "valori iniziali non specificati"

#. R/nls.R: gettext("Nonlinear regression model", domain = "R-stats")
#: R/nls.R:0
msgid "Nonlinear regression model"
msgstr ""

#. R/plot.lm.R: gettext("Normal Q-Q")
#: R/plot.lm.R:0
msgid "Normal Q-Q"
msgstr ""

#. R/qqnorm.R: gettext("Normal Q-Q Plot")
#: R/qqnorm.R:0
msgid "Normal Q-Q Plot"
msgstr ""

#. R/aov.R: gettext("Note: The results below are on the weighted scale", domain = "R-stats")
#. R/aov.R: gettext("Note: The results below are on the weighted scale", domain = "R-stats")
#: R/aov.R:0
msgid "Note: The results below are on the weighted scale"
msgstr ""

#. R/model.tables.R: gettext("Notes:", domain = "R-stats")
#: R/model.tables.R:0
msgid "Notes:"
msgstr ""

#. R/glm.R: gettextf("Null Deviance:\t   %s\nResidual Deviance: %s\tAIC: %s", format(signif(x$null.deviance,     digits)), format(signif(x$deviance, digits)), format(signif(x$aic, digits)),     domain = "R-stats")
#: R/glm.R:0
msgid ""
"Null Deviance:\t   %s\n"
"Residual Deviance: %s\tAIC: %s"
msgstr ""

#. R/glm.R: gettext("Null deviance:", domain = "R-stats")
#: R/glm.R:0
msgid "Null deviance:"
msgstr ""

#. R/glm.R: gettext("Number of Fisher Scoring iterations: ", domain = "R-stats")
#: R/glm.R:0
#, fuzzy
msgid "Number of Fisher Scoring iterations:"
msgstr "osservazioni insufficienti"

#. R/loess.R: gettext("Number of Observations:", domain = "R-stats")
#. R/loess.R: gettext("Number of Observations:", domain = "R-stats")
#: R/loess.R:0
#, fuzzy
msgid "Number of Observations:"
msgstr "osservazioni insufficienti"

#. R/nls.R: gettext("Number of iterations till stop:", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Number of iterations till stop:"
msgstr "osservazioni insufficienti"

#. R/nls.R: gettext("Number of iterations to convergence:", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Number of iterations to convergence:"
msgstr "osservazioni insufficienti"

#. R/hclust.R: gettext("Number of objects: ", domain = "R-stats")
#: R/hclust.R:0
#, fuzzy
msgid "Number of objects:"
msgstr "osservazioni insufficienti"

#. R/constrOptim.R: gettextf("Objective function decreased at outer iteration %d", i)
#: R/constrOptim.R:0
msgid "Objective function decreased at outer iteration %d"
msgstr ""

#. R/constrOptim.R: gettextf("Objective function increased at outer iteration %d", i)
#: R/constrOptim.R:0
msgid "Objective function increased at outer iteration %d"
msgstr ""

#. R/plot.lm.R: gettext("Obs. number")
#: R/plot.lm.R:0
msgid "Obs. number"
msgstr ""

#. R/HoltWinters.R: gettext("Observed / Fitted")
#: R/HoltWinters.R:0
msgid "Observed / Fitted"
msgstr ""

#. R/t.test.R: gettext("One Sample t-test")
#: R/t.test.R:0
msgid "One Sample t-test"
msgstr ""

#. R/ks.test.R: gettext("One-sample Kolmogorov-Smirnov test", domain = "R-stats")
#: R/ks.test.R:0
msgid "One-sample Kolmogorov-Smirnov test"
msgstr ""

#. R/power.R: gettext("One-sample t test power calculation")
#: R/power.R:0
msgid "One-sample t test power calculation"
msgstr ""

#. R/oneway.test.R: gettext("One-way analysis of means", domain = "R-stats")
#: R/oneway.test.R:0
msgid "One-way analysis of means"
msgstr ""

#. R/oneway.test.R: gettext("One-way analysis of means (not assuming equal variances)", domain = "R-stats")
#: R/oneway.test.R:0
msgid "One-way analysis of means (not assuming equal variances)"
msgstr ""

#. R/ar.R: gettextf("Order selected %s sigma^2 estimated as %s", x$order, format(x$var.pred,     digits = digits), domain = "R-stats")
#: R/ar.R:0
msgid "Order selected %s sigma^2 estimated as %s"
msgstr ""

#. R/stl.R: gettext("Other components: ", domain = "R-stats")
#: R/stl.R:0
msgid "Other components:"
msgstr ""

#. R/medpolish.R: gettext("Overall: ", domain = "R-stats")
#: R/medpolish.R:0
msgid "Overall:"
msgstr ""

#. R/pairwise.R: gettext("P-value adjustment method: ", domain = "R-stats")
#: R/pairwise.R:0
#, fuzzy
msgid "P-value adjustment method:"
msgstr "metodo di cluster non valido"

#. R/prcomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#. R/princomp.R: stop("PCA applies only to numerical variables")
#: R/prcomp.R:0 R/princomp.R:0
msgid "PCA applies only to numerical variables"
msgstr "PCA si applica solo a variabili numeriche"

#. R/acf.R: gettextf("Page [%d,%d]: i =%s; j =%s", I, J, paste(iind, collapse = ","), paste(jind,     collapse = ","))
#: R/acf.R:0
msgid "Page [%d,%d]: i =%s; j =%s"
msgstr ""

#. R/power.R: gettext("Paired t test power calculation")
#: R/power.R:0
msgid "Paired t test power calculation"
msgstr ""

#. R/t.test.R: gettext("Paired t-test")
#: R/t.test.R:0
msgid "Paired t-test"
msgstr ""

#. R/pairwise.R: gettext("Paired t-tests", domain = "R-stats")
#: R/pairwise.R:0
msgid "Paired t-tests"
msgstr ""

#. R/pairwise.R: gettext("Pairwise comparison of proportions", domain = "R-stats")
#: R/pairwise.R:0
msgid "Pairwise comparison of proportions"
msgstr ""

#. R/pairwise.R: gettextf("Pairwise comparisons using %s", x$method, domain = "R-stats")
#: R/pairwise.R:0
msgid "Pairwise comparisons using %s"
msgstr ""

#. R/nls.R: gettext("Parameters:", domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "Parameters:"
msgstr "valori dei parametri non validi"

#. R/acf.R: gettext("Partial ACF", domain = "R-stats")
#: R/acf.R:0
msgid "Partial ACF"
msgstr ""

#. R/acf.R: gettextf("Partial autocorrelations of series %s, by lag", sQuote(x$series), domain = "R-stats")
#: R/acf.R:0
msgid "Partial autocorrelations of series %s, by lag"
msgstr ""

#. R/termplot.R: gettextf("Partial for %s", nmt)
#. R/termplot.R: gettextf("Partial for %s", nmt)
#: R/termplot.R:0
msgid "Partial for %s"
msgstr ""

#. R/chisq.test.R: gettext("Pearson's Chi-squared test", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Pearson's Chi-squared test"
msgstr ""

#. R/chisq.test.R: gettext("Pearson's Chi-squared test with Yates' continuity correction", domain = "R-stats")
#: R/chisq.test.R:0
msgid "Pearson's Chi-squared test with Yates' continuity correction"
msgstr ""

#. R/chisq.test.R: gettextf("Pearson's Chi-squared test with simulated p-value\n\t (based on %d replicates)",     B, domain = "R-stats")
#: R/chisq.test.R:0
msgid ""
"Pearson's Chi-squared test with simulated p-value\n"
"\t (based on %d replicates)"
msgstr ""

#. R/cor.test.R: gettext("Pearson's product-moment correlation", domain = "R-stats")
#: R/cor.test.R:0
msgid "Pearson's product-moment correlation"
msgstr ""

#. R/smspline.R: gettextf("Penalized Criterion: %s", format(x$pen.crit, digits = digits), domain = "R-stats")
#: R/smspline.R:0
msgid "Penalized Criterion: %s"
msgstr ""

#. R/ts-tests.R: gettext("Phillips-Perron Unit Root Test")
#: R/ts-tests.R:0
msgid "Phillips-Perron Unit Root Test"
msgstr ""

#. R/lm.influence.R: gettextf("Potentially influential observations of\n\t%s", paste(deparse(object$call),     collapse = ""), domain = "R-stats")
#: R/lm.influence.R:0
msgid ""
"Potentially influential observations of\n"
"\t%s"
msgstr ""

#. R/plot.lm.R: gettext("Predicted values")
#: R/plot.lm.R:0
msgid "Predicted values"
msgstr ""

#. R/ppr.R: gettext("Projection direction vectors:", domain = "R-stats")
#: R/ppr.R:0
msgid "Projection direction vectors:"
msgstr ""

#. R/quade.test.R: gettext("Quade F", domain = "R-stats")
#: R/quade.test.R:0
msgid "Quade F"
msgstr ""

#. R/quade.test.R: gettext("Quade test", domain = "R-stats")
#: R/quade.test.R:0
msgid "Quade test"
msgstr ""

#. R/kmeans.R: gettextf("Quick-TRANSfer stage steps exceeded maximum (= %d)", isteps.Qtran)
#: R/kmeans.R:0
msgid "Quick-TRANSfer stage steps exceeded maximum (= %d)"
msgstr ""

#. R/lsfit.R: gettextf("R-Square=%s", format(round(rsquared[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "R-Square=%s"
msgstr ""

#. R/nls.R: gettext("Reason stopped:", domain = "R-stats")
#: R/nls.R:0
msgid "Reason stopped:"
msgstr ""

#. R/aov.R: message("Refitting model to allow projection")
#: R/aov.R:0
msgid "Refitting model to allow projection"
msgstr ""

#. R/loess.R: gettext("Residual Scale Estimate:", domain = "R-stats")
#. R/loess.R: gettext("Residual Scale Estimate:", domain = "R-stats")
#: R/loess.R:0
msgid "Residual Scale Estimate:"
msgstr ""

#. R/lsfit.R: gettextf("Residual Standard Error=%s", format(round(resse[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "Residual Standard Error=%s"
msgstr "contrasti non definiti per %d gradi di libertÃ "

#. R/glm.R: gettext("Residual deviance:", domain = "R-stats")
#: R/glm.R:0
#, fuzzy
msgid "Residual deviance:"
msgstr "i residue hanno rango"

#. R/lm.R: gettextf("Residual standard error: %s on %d degrees of freedom", format(signif(x$sigma,     digits)), rdf, domain = "R-stats")
#. R/nls.R: gettextf("Residual standard error: %s on %d degrees of freedom", format(signif(x$sigma,     digits)), rdf, domain = "R-stats")
#: R/lm.R:0 R/nls.R:0
#, fuzzy
msgid "Residual standard error: %s on %d degrees of freedom"
msgstr "contrasti non definiti per %d gradi di libertÃ "

#. R/nls.R: gettext("Residual sum-of-squares:", domain = "R-stats")
#: R/nls.R:0
msgid "Residual sum-of-squares:"
msgstr ""

#. R/medpolish.R: gettext("Residuals", domain = "R-stats")
#. R/nls.R: gettext("Residuals")
#. R/plot.lm.R: gettext("Residuals")
#: R/medpolish.R:0 R/nls.R:0 R/plot.lm.R:0
msgid "Residuals"
msgstr ""

#. R/plot.lm.R: gettext("Residuals vs Fitted")
#: R/plot.lm.R:0
msgid "Residuals vs Fitted"
msgstr ""

#. R/plot.lm.R: gettext("Residuals vs Leverage")
#: R/plot.lm.R:0
#, fuzzy
msgid "Residuals vs Leverage"
msgstr "i residue hanno rango"

#. R/lm.R: gettext("Residuals:", domain = "R-stats")
#. R/medpolish.R: gettext("Residuals:", domain = "R-stats")
#: R/lm.R:0 R/medpolish.R:0
msgid "Residuals:"
msgstr ""

#. R/aov.R: gettextf("Response %s", cn, domain = "R-stats")
#: R/aov.R:0
#, fuzzy
msgid "Response %s"
msgstr "modelli con risposta"

#. R/glm.R: gettext("Response: ", domain = "R-stats")
#. R/lm.R: gettext("Response:", domain = "R-stats")
#. R/lsfit.R: gettext("Response: ", domain = "R-stats")
#: R/glm.R:0 R/lm.R:0 R/lsfit.R:0
#, fuzzy
msgid "Response:"
msgstr "modelli con risposta"

#. R/prcomp.R: gettext("Rotated variables:", domain = "R-stats")
#: R/prcomp.R:0
msgid "Rotated variables:"
msgstr ""

#. R/prcomp.R: gettext("Rotation:", domain = "R-stats")
#: R/prcomp.R:0
#, fuzzy
msgid "Rotation:"
msgstr "iterazioni"

#. R/medpolish.R: gettext("Row Effects:", domain = "R-stats")
#: R/medpolish.R:0
msgid "Row Effects:"
msgstr ""

#. R/model.tables.R: gettextf("SE's for type '%s' are not yet implemented", type)
#. R/model.tables.R: gettextf("SE's for type '%s' are not yet implemented", type)
#: R/model.tables.R:0
#, fuzzy
msgid "SE's for type '%s' are not yet implemented"
msgstr "SE per il tipo '%s' non ancora implementati"

#. R/mlm.R: gettextf("SSD matrix from %s", paste(deparse(object$call), collapse = ""))
#: R/mlm.R:0
msgid "SSD matrix from %s"
msgstr ""

#. R/qqnorm.R: gettext("Sample Quantiles")
#: R/qqnorm.R:0
msgid "Sample Quantiles"
msgstr ""

#. R/plot.lm.R: gettext("Scale-Location")
#: R/plot.lm.R:0
msgid "Scale-Location"
msgstr ""

#. R/nlminb.R: gettextf("See PORT documentation.  Code (%d)", iv1)
#: R/nlminb.R:0
msgid "See PORT documentation.  Code (%d)"
msgstr ""

#. R/acf.R: gettextf("Series %s", x$series)
#. R/acf.R: gettextf("Series %s", seq_len(nser))
#: R/acf.R:0
msgid "Series %s"
msgstr ""

#. R/cpgram.R: gettext("Series: ", domain = "R-stats")
#: R/cpgram.R:0
msgid "Series:"
msgstr ""

#. R/shapiro.test.R: gettext("Shapiro-Wilk normality test", domain = "R-stats")
#: R/shapiro.test.R:0
msgid "Shapiro-Wilk normality test"
msgstr ""

#. R/anova.R: gettext("Signif. codes:  ", domain = "R-stats")
#: R/anova.R:0
msgid "Signif. codes:"
msgstr ""

#. R/add.R: gettext("Single term additions", domain = "R-stats")
#. R/add.R: gettext("Single term additions", domain = "R-stats")
#. R/add.R: gettext("Single term additions", domain = "R-stats")
#: R/add.R:0
msgid "Single term additions"
msgstr ""

#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#. R/add.R: gettext("Single term deletions", domain = "R-stats")
#: R/add.R:0
msgid "Single term deletions"
msgstr ""

#. R/smspline.R: gettextf("Smoothing Parameter  spar=%s lambda=%s", format(x$spar, digits = digits),     format(x$lambda, digits = digits), domain = "R-stats")
#: R/smspline.R:0
#, fuzzy
msgid "Smoothing Parameter  spar=%s lambda=%s"
msgstr "valori dei parametri non validi"

#. R/HoltWinters.R: gettext("Smoothing parameters:", domain = "R-stats")
#: R/HoltWinters.R:0
#, fuzzy
msgid "Smoothing parameters:"
msgstr "valori dei parametri non validi"

#. R/cor.test.R: gettext("Spearman's rank correlation rho", domain = "R-stats")
#: R/cor.test.R:0
msgid "Spearman's rank correlation rho"
msgstr ""

#. R/prcomp.R: gettext("Standard deviations:", domain = "R-stats")
#. R/princomp.R: gettext("Standard deviations:", domain = "R-stats")
#: R/prcomp.R:0 R/princomp.R:0
msgid "Standard deviations:"
msgstr ""

#. R/model.tables.R: message("Standard error information not returned as design is unbalanced. \nStandard errors can be obtained through 'se.contrast'.")
#: R/model.tables.R:0
msgid ""
"Standard error information not returned as design is unbalanced. \n"
"Standard errors can be obtained through 'se.contrast'."
msgstr ""
"Informazione sullo standard error non fornita poichÃ© il disegno non era "
"bilanciato. \n"
"Si possono ottenere gli standard error attraverso 'se.contrast'."

#. R/model.tables.R: gettext("Standard errors for differences of means", domain = "R-stats")
#: R/model.tables.R:0
#, fuzzy
msgid "Standard errors for differences of means"
msgstr "contrasti non definiti per %d gradi di libertÃ "

#. R/model.tables.R: gettext("Standard errors of effects", domain = "R-stats")
#: R/model.tables.R:0
msgid "Standard errors of effects"
msgstr ""

#. R/model.tables.R: gettext("Standard errors of residuals", domain = "R-stats")
#: R/model.tables.R:0
msgid "Standard errors of residuals"
msgstr ""

#. R/StructTS.R: gettext("Standardized Residuals")
#: R/StructTS.R:0
msgid "Standardized Residuals"
msgstr ""

#. R/nls.R: gettext("Standardized residuals")
#. R/plot.lm.R: gettext("Standardized residuals")
#. R/plot.lm.R: gettext("Standardized residuals")
#: R/nls.R:0 R/plot.lm.R:0
msgid "Standardized residuals"
msgstr ""

#. R/add.R: gettextf("Start:  AIC=%s", format(round(bAIC, 2)), domain = "R-stats")
#: R/add.R:0
msgid "Start:  AIC=%s"
msgstr ""

#. R/plot.lm.R: gettext("Std. Pearson resid.")
#: R/plot.lm.R:0
msgid "Std. Pearson resid."
msgstr ""

#. R/plot.lm.R: gettext("Std. deviance resid.")
#: R/plot.lm.R:0
msgid "Std. deviance resid."
msgstr ""

#. R/stepfun.R: gettext("Step function", domain = "R-stats")
#: R/stepfun.R:0
#, fuzzy
msgid "Step function"
msgstr "non Ã¨ una funzione a gradini valida"

#. R/glm.R: gettextf("Step halved: new deviance = %s", dev, domain = "R-stats")
#. R/glm.R: gettextf("Step halved: new deviance = %s", dev, domain = "R-stats")
#: R/glm.R:0
msgid "Step halved: new deviance = %s"
msgstr ""

#. R/add.R: gettextf("Step:  AIC=%s", format(round(bAIC, 2)), domain = "R-stats")
#: R/add.R:0
msgid "Step:  AIC=%s"
msgstr ""

#. R/add.R: gettext("Stepwise Model Path", domain = "R-stats")
#: R/add.R:0
msgid "Stepwise Model Path"
msgstr ""

#. R/aov.R: gettextf("Stratum %d: %s", ii, i, domain = "R-stats")
#: R/aov.R:0
msgid "Stratum %d: %s"
msgstr ""

#. R/aov.R: gettext("Sum of Squares", domain = "R-stats")
#: R/aov.R:0
msgid "Sum of Squares"
msgstr ""

#. R/model.tables.R: gettext("Table of residuals from each stratum", domain = "R-stats")
#: R/model.tables.R:0
msgid "Table of residuals from each stratum"
msgstr ""

#. R/model.tables.R: gettext("Tables of effects", domain = "R-stats")
#: R/model.tables.R:0
#, fuzzy
msgid "Tables of effects"
msgstr "numero di predittori sbagliato"

#. R/model.tables.R: gettext("Tables of means", domain = "R-stats")
#: R/model.tables.R:0
msgid "Tables of means"
msgstr ""

#. R/glm.R: gettext("Terms added sequentially (first to last)", domain = "R-stats")
#: R/glm.R:0
msgid "Terms added sequentially (first to last)"
msgstr ""

#. R/aov.R: gettext("Terms:", domain = "R-stats")
#: R/aov.R:0
msgid "Terms:"
msgstr ""

#. R/hclust.R: message("The 'ward()' method has been renamed to 'ward.D()'; note new 'ward.D2()'")
#: R/hclust.R:0
msgid ""
"The 'ward()' method has been renamed to 'ward.D()'; note new 'ward.D2()'"
msgstr ""

#. R/factanal.R: gettextf("The degrees of freedom for the model is %d and the fit was %s", x$dof,     round(x$criteria["objective"], 4), domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "The degrees of freedom for the model is %d and the fit was %s"
msgstr "residui senza gradi di libertÃ "

#. R/factanal.R: gettextf("The p-value is %s", signif(x$PVAL, 3), domain = "R-stats")
#: R/factanal.R:0
msgid "The p-value is %s"
msgstr ""

#. R/qqnorm.R: gettext("Theoretical Quantiles")
#: R/qqnorm.R:0
msgid "Theoretical Quantiles"
msgstr ""

#. R/ts.R: gettext("Time", domain = "R-stats")
#: R/ts.R:0
msgid "Time"
msgstr ""

#. R/ts.R: gettextf("Time Series:\nStart = %s\nEnd = %s\nFrequency = %s", deparse(start(x)),     deparse(end(x)), deparse(fr.x), domain = "R-stats")
#. R/ts.R: gettextf("Time Series:\nStart = %s\nEnd = %s\nFrequency = %s", format(tsp(x)[1L]),     format(tsp(x)[2L]), deparse(fr.x), domain = "R-stats")
#: R/ts.R:0
msgid ""
"Time Series:\n"
"Start = %s\n"
"End = %s\n"
"Frequency = %s"
msgstr ""

#. R/stl.R: gettext("Time.series components:", domain = "R-stats")
#: R/stl.R:0
msgid "Time.series components:"
msgstr ""

#. R/loess.R: gettext("Trace of smoother matrix:", domain = "R-stats")
#: R/loess.R:0
msgid "Trace of smoother matrix:"
msgstr ""

#. R/ts-tests.R: gettext("Truncation lag parameter")
#: R/ts-tests.R:0
msgid "Truncation lag parameter"
msgstr ""

#. R/medpolish.R: gettext("Tukey Additivity Plot", domain = "R-stats")
#: R/medpolish.R:0
msgid "Tukey Additivity Plot"
msgstr ""

#. R/TukeyHSD.R: gettext("Tukey multiple comparisons of means", domain = "R-stats")
#: R/TukeyHSD.R:0
#, fuzzy
msgid "Tukey multiple comparisons of means"
msgstr "sono necessarie risposte multiple"

#. R/t.test.R: gettext("Two Sample t-test")
#: R/t.test.R:0
msgid "Two Sample t-test"
msgstr ""

#. R/ks.test.R: gettext("Two-sample Kolmogorov-Smirnov test", domain = "R-stats")
#: R/ks.test.R:0
msgid "Two-sample Kolmogorov-Smirnov test"
msgstr ""

#. R/power.R: gettext("Two-sample comparison of proportions power calculation")
#: R/power.R:0
msgid "Two-sample comparison of proportions power calculation"
msgstr ""

#. R/power.R: gettext("Two-sample t test power calculation")
#: R/power.R:0
msgid "Two-sample t test power calculation"
msgstr ""

#. R/factanal.R: gettext("Uniquenesses:", domain = "R-stats")
#: R/factanal.R:0
msgid "Uniquenesses:"
msgstr ""

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid ""
"Use\n"
"  SSfpl instead of fpl,\n"
"  SSfol instead of first.order.log,\n"
"  SSbiexp instead of biexp,\n"
"  SSlogis instead of logistic."
msgstr ""

#. R/nlminb.R: gettextf("V[IV[1]] = V[%d] = %g is out of range (see PORT docu.)", iv1, v[iv1])
#: R/nlminb.R:0
msgid "V[IV[1]] = V[%d] = %g is out of range (see PORT docu.)"
msgstr ""

#. R/princomp-add.R: gettext("Variances")
#. R/princomp-add.R: gettext("Variances")
#: R/princomp-add.R:0
msgid "Variances"
msgstr ""

#. R/StructTS.R: gettext("Variances:", domain = "R-stats")
#: R/StructTS.R:0
msgid "Variances:"
msgstr ""

#. R/kmeans.R: gettext("Warning: did *not* converge in specified number of iterations\n", domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "Warning: did *not* converge in specified number of iterations"
msgstr "medpolish() non converge in %d iterazioni"

#. R/lm.R: gettext("Weighted Residuals:", domain = "R-stats")
#: R/lm.R:0
msgid "Weighted Residuals:"
msgstr ""

#. R/nls.R: gettext("Weighted residual sum-of-squares:", domain = "R-stats")
#: R/nls.R:0
msgid "Weighted residual sum-of-squares:"
msgstr ""

#. R/stl.R: gettext("Weights:", domain = "R-stats")
#: R/stl.R:0
msgid "Weights:"
msgstr ""

#. R/t.test.R: gettext("Welch Two Sample t-test")
#: R/t.test.R:0
msgid "Welch Two Sample t-test"
msgstr ""

#. R/model.tables.R: gettext("When comparing means with same levels of:", domain = "R-stats")
#: R/model.tables.R:0
msgid "When comparing means with same levels of:"
msgstr ""

#. R/pairwise.R: gettext("Wilcoxon rank sum test", domain = "R-stats")
#. R/wilcox.test.R: gettext("Wilcoxon rank sum test", domain = "R-stats")
#: R/pairwise.R:0 R/wilcox.test.R:0
msgid "Wilcoxon rank sum test"
msgstr ""

#. R/wilcox.test.R: gettext("Wilcoxon rank sum test with continuity correction", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "Wilcoxon rank sum test with continuity correction"
msgstr ""

#. R/pairwise.R: gettext("Wilcoxon signed rank test", domain = "R-stats")
#. R/wilcox.test.R: gettext("Wilcoxon signed rank test", domain = "R-stats")
#: R/pairwise.R:0 R/wilcox.test.R:0
msgid "Wilcoxon signed rank test"
msgstr ""

#. R/wilcox.test.R: gettext("Wilcoxon signed rank test with continuity correction", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "Wilcoxon signed rank test with continuity correction"
msgstr ""

#. R/kmeans.R: gettext("Within cluster sum of squares by cluster:", domain = "R-stats")
#: R/kmeans.R:0
msgid "Within cluster sum of squares by cluster:"
msgstr ""

#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#. R/mlm.R: stop("X does not define a subspace of M")
#: R/mlm.R:0
msgid "X does not define a subspace of M"
msgstr "X non definisce un sottospazio di M"

#. R/nlminb.R: gettext("X-convergence (3)")
#: R/nlminb.R:0
msgid "X-convergence (3)"
msgstr ""

#. R/chisq.test.R: gettext("X-squared", domain = "R-stats")
#. R/prop.test.R: gettext("X-squared", domain = "R-stats")
#. R/prop.trend.test.R: gettext("X-squared", domain = "R-stats")
#. R/ts-tests.R: gettext("X-squared")
#: R/chisq.test.R:0 R/prop.test.R:0 R/prop.trend.test.R:0 R/ts-tests.R:0
msgid "X-squared"
msgstr ""

#. R/smooth.R: gettext("__twiced__ NOT changed:", domain = "R-stats")
#. R/smooth.R: gettext("__twiced__ NOT changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "__twiced__ NOT changed:"
msgstr ""

#. R/smooth.R: gettext("__twiced__ changed:", domain = "R-stats")
#. R/smooth.R: gettext("__twiced__ changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "__twiced__ changed:"
msgstr ""

#. R/oneway.test.R: stop("a two-sided formula is required")
#: R/oneway.test.R:0
msgid "a two-sided formula is required"
msgstr ""

#. R/nlminb.R: gettext("absolute function convergence (6)")
#: R/nlminb.R:0
msgid "absolute function convergence (6)"
msgstr ""

#. R/shapiro.test.R: stop("all 'x' values are identical")
#: R/shapiro.test.R:0
msgid "all 'x' values are identical"
msgstr "tutti i valori di 'x' sono uguali"

#. R/zzModels.R: stop("all 'x' values must be non-negative to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "all 'x' values must be non-negative to fit the Weibull growth model"
msgstr ""
"tutti i valori di 'x' devono essere non-negativi per stimar eun modello di "
"crescita Weibull"

#. R/stl.R: gettext(" all == 1", domain = "R-stats")
#: R/stl.R:0
msgid "all == 1"
msgstr ""

#. R/identify.hclust.R: gettextf("all elements of 'which' must be between 1 and %d", k)
#: R/identify.hclust.R:0
msgid "all elements of 'which' must be between 1 and %d"
msgstr "tutti gli elementi di 'which' devono essere tra 1 e %d"

#. R/fisher.test.R: stop("all entries of 'x' argument must be nonnegative and finite")
#: R/fisher.test.R:0
#, fuzzy
msgid "all entries of 'x' argument must be nonnegative and finite"
msgstr "tutti i termini di 'x' devono essere non negativi e finiti"

#. R/chisq.test.R: stop("all entries of 'x' must be nonnegative and finite")
#. R/mcnemar.test.R: stop("all entries of 'x' must be nonnegative and finite")
#: R/chisq.test.R:0 R/mcnemar.test.R:0
msgid "all entries of 'x' must be nonnegative and finite"
msgstr "tutti i termini di 'x' devono essere non negativi e finiti"

#. R/fligner.test.R: stop("all group levels must be finite")
#. R/kruskal.test.R: stop("all group levels must be finite")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all group levels must be finite"
msgstr "tutti i livelli di gruppo devono essere finiti"

#. R/fligner.test.R: stop("all groups must contain data")
#. R/kruskal.test.R: stop("all groups must contain data")
#: R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all groups must contain data"
msgstr "tutti i gruppi devono contenere dati"

#. R/bartlett.test.R: stop("all observations are in the same group")
#. R/fligner.test.R: stop("all observations are in the same group")
#. R/kruskal.test.R: stop("all observations are in the same group")
#: R/bartlett.test.R:0 R/fligner.test.R:0 R/kruskal.test.R:0
msgid "all observations are in the same group"
msgstr "tutte le osservazioni sono nello stesso gruppo"

#. R/StructTS.R: stop("all parameters were fixed")
#. R/arma0.R: stop("all parameters were fixed")
#: R/StructTS.R:0 R/arma0.R:0
msgid "all parameters were fixed"
msgstr "specificati tutti i parametri"

#. R/prop.test.R: gettext("all proportions", domain = "R-stats")
#: R/prop.test.R:0
msgid "all proportions"
msgstr ""

#. R/na.ts.R: stop("all times contain an NA")
#. R/ts.R: stop("all times contain an NA")
#: R/na.ts.R:0 R/ts.R:0
msgid "all times contain an NA"
msgstr "tutti i 'times' contengono NA"

#. R/smspline.R: stop("all weights should be non-negative")
#: R/smspline.R:0
msgid "all weights should be non-negative"
msgstr "tutti i pensi dovrebbero essere non negativi"

#. R/htest.R: gettext("alternative hypothesis: ", domain = "R-stats")
#: R/htest.R:0
msgid "alternative hypothesis:"
msgstr ""

#. R/fisher.test.R: stop("alternative must be \"two.sided\", \"less\" or \"greater\"")
#: R/fisher.test.R:0
msgid "alternative must be \"two.sided\", \"less\" or \"greater\""
msgstr "l'alternativa deve essere \"two.sided\", \"less\" o \"greater\""

#. R/hclust.R: gettextf("ambiguous clustering method %s", method)
#: R/hclust.R:0
#, fuzzy
msgid "ambiguous clustering method %s"
msgstr "metodo di cluster ambiguo"

#. R/dist.R: stop("ambiguous distance method")
#: R/dist.R:0
msgid "ambiguous distance method"
msgstr "metodo distanza ambiguo"

#. R/anova.R: stop("an object of class \"anova\" must have colnames")
#: R/anova.R:0
#, fuzzy
msgid "an object of class \"anova\" must have colnames"
msgstr "l'oggetto 'anova' deve avere colnames"

#. R/selfStart.R: stop("argument 'object' has an impossible length")
#: R/selfStart.R:0
msgid "argument 'object' has an impossible length"
msgstr "argomento 'object' ha una lunghezza impossibile"

#. R/proj.R: stop("argument does not include a 'qr' component")
#: R/proj.R:0
msgid "argument does not include a 'qr' component"
msgstr "l'argomento non ha la componente 'qr'"

#. R/proj.R: stop("argument does not include an 'effects' component")
#: R/proj.R:0
msgid "argument does not include an 'effects' component"
msgstr "l'argomento non ha la componente 'effects'"

#. R/r2dtable.R: stop("arguments 'r' and 'c' must have the same sums")
#: R/r2dtable.R:0
#, fuzzy
msgid "arguments 'r' and 'c' must have the same sums"
msgstr "gli argomenti devono avere la stessa lunghezza"

#. R/aggregate.R: stop("arguments must have the same length")
#. R/contr.poly.R: stop("arguments must have the same length")
#: R/aggregate.R:0 R/contr.poly.R:0
msgid "arguments must have the same length"
msgstr "gli argomenti devono avere la stessa lunghezza"

#. R/lm.R: warning("assuming prediction variance inversely proportional to weights used for fitting")
#: R/lm.R:0
msgid ""
"assuming prediction variance inversely proportional to weights used for "
"fitting"
msgstr ""

#. R/hclust.R: stop("at least 2 objects are needed to cluster")
#: R/hclust.R:0
#, fuzzy
msgid "at least 2 objects are needed to cluster"
msgstr "si devono avere n >= 2 oggetti per una cluster"

#. R/density.R: stop("at least 2 points are needed to select a bandwidth automatically")
#: R/density.R:0
#, fuzzy
msgid "at least 2 points are needed to select a bandwidth automatically"
msgstr "necessari almeno 2 punti per selezionare il bandwidth automatico"

#. R/chisq.test.R: stop("at least one entry of 'x' must be positive")
#: R/chisq.test.R:0
msgid "at least one entry of 'x' must be positive"
msgstr "almeno un elemento di 'x' deve essere positivo"

#. R/integrate.R: stop("at least one integration limit is missing")
#: R/integrate.R:0
#, fuzzy
msgid "at least one integration limit is missing"
msgstr "manca un limite"

#. R/approx.R: stop("at least two non-NA values to interpolate are needed")
#. R/approx.R: stop("at least two non-NA values to interpolate are needed")
#: R/approx.R:0
#, fuzzy
msgid "at least two non-NA values to interpolate are needed"
msgstr "ci vogliono almeno due valori non-NA per interpolare"

#. R/smooth.R: stop("attempt to smooth NA values")
#: R/smooth.R:0
msgid "attempt to smooth NA values"
msgstr "tentativo di allisciare valori NA"

#. R/smooth.R: stop("attempt to smooth non-numeric values")
#: R/smooth.R:0
msgid "attempt to smooth non-numeric values"
msgstr "tentativo di allisciare valori non numerici"

#. R/add.R: warning("attempting model selection on an essentially perfect fit is nonsense", call. = FALSE)
#: R/add.R:0
msgid "attempting model selection on an essentially perfect fit is nonsense"
msgstr ""

#. R/ts.R: stop("bad value for 'end' argument")
#: R/ts.R:0
#, fuzzy
msgid "bad value for 'end' argument"
msgstr "valore errato per 'end'"

#. R/diffinv.R: stop("bad value for 'lag' or 'differences' argument")
#: R/diffinv.R:0
#, fuzzy
msgid "bad value for 'lag' or 'differences' argument"
msgstr "valore sbagliato per 'lag' o 'differences'"

#. R/ts.R: stop("bad value for 'lag' or 'differences' arguments")
#: R/ts.R:0
#, fuzzy
msgid "bad value for 'lag' or 'differences' arguments"
msgstr "valore sbagliato per 'lag' o 'differences'"

#. R/ts.R: stop("bad value for 'start'")
#: R/ts.R:0
msgid "bad value for 'start'"
msgstr "valore sbagliato per 'start'"

#. R/runmed.R: stop("bandwidth 'k' must be >= 1 and odd!")
#: R/runmed.R:0
msgid "bandwidth 'k' must be >= 1 and odd!"
msgstr "bandwidth 'k' deve essere >= 1 e dispari!"

#. R/contrast.R: stop("baseline group number out of range")
#: R/contrast.R:0
msgid "baseline group number out of range"
msgstr "numero gruppo di base fuori range"

#. R/biplot.R: stop("biplots are not defined for complex PCA")
#: R/biplot.R:0
msgid "biplots are not defined for complex PCA"
msgstr "biplot non Ã¨ definito per PSA complesse"

#. R/loess.R: warning("both 'span' and 'enp.target' specified: 'span' will be used")
#: R/loess.R:0
msgid "both 'span' and 'enp.target' specified: 'span' will be used"
msgstr "specificati sia 'span' che 'enp.target': verrÃ  usato 'span'"

#. R/princomp.R: warning("both 'x' and 'covmat' were supplied: 'x' will be ignored")
#: R/princomp.R:0
msgid "both 'x' and 'covmat' were supplied: 'x' will be ignored"
msgstr "specificati sia 'x' che 'covmat': 'x' verrÃ  ignorata"

#. R/cor.R: stop("both 'x' and 'y' must be non-empty")
#: R/cor.R:0
#, fuzzy
msgid "both 'x' and 'y' must be non-empty"
msgstr "le lunghezze di 'x' e 'w' devono coincidere"

#. R/nlminb.R: gettext("both X-convergence and relative convergence (5)")
#: R/nlminb.R:0
msgid "both X-convergence and relative convergence (5)"
msgstr ""

#. R/optim.R: warning("bounds can only be used with method L-BFGS-B (or Brent)")
#: R/optim.R:0
#, fuzzy
msgid "bounds can only be used with method L-BFGS-B (or Brent)"
msgstr "bounds si puÃ² usare solo con il metodo L-BFGS-B"

#. R/ts.R: stop("burn-in 'n.start' must be as long as 'ar + ma'")
#: R/ts.R:0
msgid "burn-in 'n.start' must be as long as 'ar + ma'"
msgstr "valori di burn-in 'n.start' deve essere lungo quanto 'ar + ma'"

#. R/lm.R: warning("calling anova.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling anova.lm(<fake-lm-object>) ..."
msgstr ""

#. R/lm.R: warning("calling predict.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling predict.lm(<fake-lm-object>) ..."
msgstr ""

#. R/lm.R: warning("calling summary.lm(<fake-lm-object>) ...")
#: R/lm.R:0
msgid "calling summary.lm(<fake-lm-object>) ..."
msgstr ""

#. R/acf.R: warning("can use 'ci.type=\"ma\"' only if first lag is 0")
#: R/acf.R:0
#, fuzzy
msgid "can use 'ci.type=\"ma\"' only if first lag is 0"
msgstr "si puÃ² usare ci.type=\"ma\" solo se il primo lag Ã¨ 0"

#. R/nls.R: stop("cannot calculate REML log-likelihood for \"nls\" objects")
#: R/nls.R:0
msgid "cannot calculate REML log-likelihood for \"nls\" objects"
msgstr "impossibile calcolare REML log-verosimiglianza per oggetti \"nls\""

#. R/aggregate.R: gettextf("cannot change frequency from %g to %g", ofrequency, nfrequency)
#: R/aggregate.R:0
msgid "cannot change frequency from %g to %g"
msgstr "impossibile cambiare la frequenza fa %g a %g"

#. R/ansari.test.R: warning("cannot compute asymptotic confidence set or estimator")
#: R/ansari.test.R:0
msgid "cannot compute asymptotic confidence set or estimator"
msgstr "impossibile calcolare insiemi di confidenza asintotici o lo stimatore"

#. R/wilcox.test.R: stop("cannot compute confidence interval when all observations are tied", call. = FALSE)
#. R/wilcox.test.R: stop("cannot compute confidence interval when all observations are tied", call. = FALSE)
#: R/wilcox.test.R:0
#, fuzzy
msgid "cannot compute confidence interval when all observations are tied"
msgstr ""
"impossibile calcolar eintervalli di confidenza esatti in presenza di zeri"

#. R/ansari.test.R: warning("cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute confidence set, returning NA"
msgstr "impossibile calcolare insiemi di confidenza, restituisco NA"

#. R/ansari.test.R: warning("cannot compute estimate, returning NA")
#: R/ansari.test.R:0
msgid "cannot compute estimate, returning NA"
msgstr "impossibile calcolare la stima, restituisco NA"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with ties")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with ties"
msgstr ""
"impossibile calcolare intervalli di confidenza esatti in presenza di ties"

#. R/wilcox.test.R: warning("cannot compute exact confidence interval with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact confidence interval with zeroes"
msgstr ""
"impossibile calcolar eintervalli di confidenza esatti in presenza di zeri"

#. R/ansari.test.R: warning("cannot compute exact confidence intervals with ties")
#. R/wilcox.test.R: warning("cannot compute exact confidence intervals with ties")
#: R/ansari.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact confidence intervals with ties"
msgstr ""
"impossibile calcolare intervalli di confidenza esatti in presenza di ties"

#. R/ansari.test.R: warning("cannot compute exact p-value with ties")
#. R/cor.test.R: warning("cannot compute exact p-value with ties")
#. R/cor.test.R: warning("cannot compute exact p-value with ties")
#. R/ks.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#. R/wilcox.test.R: warning("cannot compute exact p-value with ties")
#: R/ansari.test.R:0 R/cor.test.R:0 R/ks.test.R:0 R/wilcox.test.R:0
msgid "cannot compute exact p-value with ties"
msgstr "impossibile calcolare p-value esatto in presenza di ties"

#. R/wilcox.test.R: warning("cannot compute exact p-value with zeroes")
#: R/wilcox.test.R:0
msgid "cannot compute exact p-value with zeroes"
msgstr "impossibile calcolare p-valu esatti in presenza di zeri"

#. R/chisq.test.R: warning("cannot compute simulated p-value with zero marginals")
#: R/chisq.test.R:0
msgid "cannot compute simulated p-value with zero marginals"
msgstr "impossibile calcolare p-value simulati con marginali nulle"

#. R/models.R: stop("cannot create a formula from a zero-column data frame")
#: R/models.R:0
msgid "cannot create a formula from a zero-column data frame"
msgstr ""

#. R/family.R: stop("cannot find valid starting values: please specify some")
#. R/glm.R: stop("cannot find valid starting values: please specify some", call. = FALSE)
#: R/family.R:0 R/glm.R:0
msgid "cannot find valid starting values: please specify some"
msgstr ""
"non riesco a trovare valori iniziali validi: si prega di specificarne alcuni"

#. R/zzModels.R: stop("cannot fit an asymptotic regression model to these data")
#: R/zzModels.R:0
msgid "cannot fit an asymptotic regression model to these data"
msgstr ""
"impossibile stimare un modello di regressione asintotico per questi dati"

#. R/HoltWinters.R: stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
#: R/HoltWinters.R:0
#, fuzzy
msgid "cannot fit models without level ('alpha' must not be 0 or FALSE)"
msgstr "non posso stimare modelli senza livelli ('alpha' non deve essere 0)."

#. R/cor.R: stop("cannot handle 'pairwise.complete.obs'")
#: R/cor.R:0
msgid "cannot handle 'pairwise.complete.obs'"
msgstr "non posso gestire 'pairwise.complete.obs'"

#. R/ts.R: stop("cannot plot more than 10 series as \"multiple\"")
#: R/ts.R:0
msgid "cannot plot more than 10 series as \"multiple\""
msgstr "non posso disegnare piÃ¹ di 10 serie in \"multiple\""

#. R/nls-profile.R: stop("cannot recognize parameter name")
#: R/nls-profile.R:0
msgid "cannot recognize parameter name"
msgstr "impossibile riconoscere nome parametro"

#. R/prcomp.R: stop("cannot rescale a constant/zero column to unit variance")
#: R/prcomp.R:0
msgid "cannot rescale a constant/zero column to unit variance"
msgstr ""

#. R/family.R: stop("cannot simulate from non-integer prior.weights")
#: R/family.R:0
msgid "cannot simulate from non-integer prior.weights"
msgstr ""

#. R/princomp.R: stop("cannot use 'cor = TRUE' with a constant variable")
#: R/princomp.R:0
msgid "cannot use 'cor = TRUE' with a constant variable"
msgstr ""

#. R/ftable.R: stop("cannot use dots in formula with given data")
#: R/ftable.R:0
msgid "cannot use dots in formula with given data"
msgstr "non di puÃ² usare il punto '.' nella formula per i dati specificati"

#. R/smspline.R: stop("cannot use more inner knots than unique 'x' values")
#: R/smspline.R:0
msgid "cannot use more inner knots than unique 'x' values"
msgstr "non posso usare piÃ¹ nodi interni che valori unici di 'x'"

#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#. R/smooth.R: gettext("changed:", domain = "R-stats")
#: R/smooth.R:0
msgid "changed:"
msgstr ""

#. R/kernel.R: stop("coefficients do not add to 1")
#: R/kernel.R:0
#, fuzzy
msgid "coefficients do not add to 1"
msgstr "i coefficienti non sommano ad 1"

#. R/approx.R: warning("collapsing to unique 'x' values")
#: R/approx.R:0
msgid "collapsing to unique 'x' values"
msgstr "si riduce a valori unici di 'x'"

#. R/dendrogram.R: stop("column dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "column dendrogram ordering gave index of wrong length"
msgstr ""
"ordinamento per colonna del dendrogramma restituisce un indice di lunghezza "
"sbagliata"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast (sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast (sum to zero)"
msgstr ""
"le colonne di 'contrast.obj' deve definire un contrasto (sommare a zero)"

#. R/aov.R: stop("columns of 'contrast.obj' must define a contrast(sum to zero)")
#: R/aov.R:0
msgid "columns of 'contrast.obj' must define a contrast(sum to zero)"
msgstr ""
"le colonne di 'contrast.obj' devono definire un contrasto (sommare a zero)"

#. R/mantelhaen.test.R: gettext("common odds ratio", domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "common odds ratio"
msgstr ""

#. R/contrast.R: gettextf("contrast function '%s' does not support 'sparse = TRUE'", ctr)
#: R/contrast.R:0
msgid "contrast function '%s' does not support 'sparse = TRUE'"
msgstr ""

#. R/contrast.R: stop("contrasts apply only to factors")
#. R/contrast.R: stop("contrasts apply only to factors")
#: R/contrast.R:0
msgid "contrasts apply only to factors"
msgstr "i contrasti si applicano solo a variabili factor"

#. R/contrast.R: stop("contrasts can be applied only to factors with 2 or more levels")
#: R/contrast.R:0
msgid "contrasts can be applied only to factors with 2 or more levels"
msgstr ""
"i contrasti si possono applicare solo a variabili factor con 2 o piÃ¹ livelli"

#. R/models.R: gettextf("contrasts dropped from factor %s due to missing levels", nm, domain = "R-stats")
#: R/models.R:0
#, fuzzy
msgid "contrasts dropped from factor %s due to missing levels"
msgstr ""
"i contrasti si possono applicare solo a variabili factor con 2 o piÃ¹ livelli"

#. R/contr.poly.R: gettextf("contrasts not defined for %d degrees of freedom", n - 1)
#. R/contrast.R: gettextf("contrasts not defined for %d degrees of freedom", n - 1L)
#: R/contr.poly.R:0 R/contrast.R:0
msgid "contrasts not defined for %d degrees of freedom"
msgstr "contrasti non definiti per %d gradi di libertÃ "

#. R/nlm.R: stop("convergence problem in zero finding: ", conditionMessage(val))
#: R/nlm.R:0
#, fuzzy
msgid "convergence problem in zero finding:"
msgstr "probabile errore di convergenza: optim ha restituito codice="

#. R/arma0.R: warning("converting non-invertible initial MA values")
#: R/arma0.R:0
msgid "converting non-invertible initial MA values"
msgstr "conversione di valori iniziali MA non invertibili"

#. R/cor.test.R: gettext("correlation", domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "correlation"
msgstr "iterazioni"

#. R/princomp.R: stop("covariance matrix is not non-negative definite")
#: R/princomp.R:0
msgid "covariance matrix is not non-negative definite"
msgstr "la matrice di covarianza non Ã¨ definita non-negativa"

#. R/spectrum.R: stop("coverage probability out of range [0,1)")
#: R/spectrum.R:0
msgid "coverage probability out of range [0,1)"
msgstr "probabilitÃ  di copertura oltre [0,1)"

#. R/smspline.R: warning("cross-validation with non-unique 'x' values seems doubtful")
#: R/smspline.R:0
#, fuzzy
msgid "cross-validation with non-unique 'x' values seems doubtful"
msgstr "crossvalidation per valori non unici di 'x' sembra essere dubbia"

#. R/cutree.R: message("cutree(): k(h) = ", k, domain = "R-stats")
#: R/cutree.R:0
msgid "cutree(): k(h) ="
msgstr ""

#. R/t.test.R: stop("data are essentially constant")
#. R/t.test.R: stop("data are essentially constant")
#: R/t.test.R:0
msgid "data are essentially constant"
msgstr "i dati sono praticamente costanti"

#. R/HoltWinters.R: stop("data must be non-zero for multiplicative Holt-Winters")
#: R/HoltWinters.R:0
#, fuzzy
msgid "data must be non-zero for multiplicative Holt-Winters"
msgstr ""
"i dati devono essere strettamente non negativi per Holt-Winters "
"moltiplicativo"

#. R/htest.R: gettextf("data: %s", x$data.name, domain = "R-stats")
#: R/htest.R:0
msgid "data: %s"
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram entries must be 1,2,..,%d (in any order), to be coercible to an object of class \"hclust\"",     n)
#: R/dendrogram.R:0
msgid ""
"dendrogram entries must be 1,2,..,%d (in any order), to be coercible to an "
"object of class \"hclust\""
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram leaf '%s', at height %s", format(attr(x, "label"), digits = digits),     format(attr(x, "height"), digits = digits), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram leaf '%s', at height %s"
msgstr ""

#. R/dendrogram.R: stop("dendrogram node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram node with non-positive #{branches}"
msgstr "nodo del dendrogramma con #{branches} non positivi"

#. R/dendrogram.R: stop("dendrogram non-leaf node with non-positive #{branches}")
#: R/dendrogram.R:0
msgid "dendrogram non-leaf node with non-positive #{branches}"
msgstr "nodo non terminale del dendrogramma con #{branches} non positivi"

#. R/dendrogram.R: gettextf("dendrogram with %d branches and %d members total, at height %s", length(x),     attr(x, "members"), format(attr(x, "height"), digits = digits), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram with %d branches and %d members total, at height %s"
msgstr ""

#. R/dendrogram.R: gettextf("dendrogram with %d branches and %d members, at height %s", le, memb, format(hgt,     digits = digits.d), domain = "R-stats")
#: R/dendrogram.R:0
msgid "dendrogram with %d branches and %d members, at height %s"
msgstr ""

#. R/var.test.R: gettext("denom df", domain = "R-stats")
#: R/var.test.R:0
msgid "denom df"
msgstr ""

#. R/model.tables.R: stop("design is unbalanced so cannot proceed")
#: R/model.tables.R:0
#, fuzzy
msgid "design is unbalanced so cannot proceed"
msgstr "Il disegno Ã¨ non bilanciato - usare se.contrast() per gli s.e."

#. R/mcnemar.test.R: gettext("df", domain = "R-stats")
#: R/mcnemar.test.R:0
msgid "df"
msgstr ""

#. R/cor.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#: R/cor.R:0
msgid "diag(.) had 0 or NA entries; non-finite result is doubtful"
msgstr ""

#. R/nlm.R: if (doX) "did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0" else "'f()' values at end points are not of opposite sign"
#: R/nlm.R:0
msgid ""
"did not succeed extending the interval endpoints for f(lower) * f(upper) <= 0"
msgstr ""

#. R/wilcox.test.R: gettext("difference in location", domain = "R-stats")
#. R/wilcox.test.R: gettext("difference in location", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "difference in location"
msgstr ""

#. R/t.test.R: gettext("difference in means", domain = "R-stats")
#: R/t.test.R:0
msgid "difference in means"
msgstr ""

#. R/cancor.R: stop("dimension 0 in 'x' or 'y' argument")
#: R/cancor.R:0
#, fuzzy
msgid "dimension 0 in 'x' or 'y' argument"
msgstr "dimensione 0 in 'x' o 'y'"

#. R/hclust.R: stop("dissimilarities are of improper length")
#. R/hclust.R: warning("dissimilarities are of improper length")
#: R/hclust.R:0
msgid "dissimilarities are of improper length"
msgstr ""

#. R/cmdscale.R: stop("distances must be result of 'dist' or a square matrix")
#: R/cmdscale.R:0
msgid "distances must be result of 'dist' or a square matrix"
msgstr ""
"le distanze devono essere il risultato di 'dist' o una matrice quadrata"

#. R/mantelhaen.test.R: stop("each dimension in table must be >= 2")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "each dimension in table must be >= 2"
msgstr "tutte le dimensioni di table devono essere >= 2"

#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.list))
#. R/aov.R: gettextf("each element of '%s' must be logical", substitute(contrasts.obj))
#: R/aov.R:0
msgid "each element of '%s' must be logical"
msgstr "ogni elemento di '%s' deve essere di tipo logico"

#. R/model.tables.R: stop("eff.aovlist: non-orthogonal contrasts would give an incorrect answer")
#: R/model.tables.R:0
msgid "eff.aovlist: non-orthogonal contrasts would give an incorrect answer"
msgstr "eff.aovlist: contrasti non ortogonali forniranno una risposta errata"

#. R/cutree.R: stop("either 'k' or 'h' must be specified")
#: R/cutree.R:0
msgid "either 'k' or 'h' must be specified"
msgstr "o 'k' o 'h' devono essere specificati"

#. R/cutree.R: gettextf("elements of 'k' must be between 1 and %d", n)
#: R/cutree.R:0
msgid "elements of 'k' must be between 1 and %d"
msgstr "gli elementi di 'k' devono essere tra 1 e %d"

#. R/prop.test.R: stop("elements of 'n' must be positive")
#: R/prop.test.R:0
msgid "elements of 'n' must be positive"
msgstr "gli elementi di 'n' devono essere positivi"

#. R/prop.test.R: stop("elements of 'p' must be in (0,1)")
#: R/prop.test.R:0
msgid "elements of 'p' must be in (0,1)"
msgstr "gli elementi di 'p' devono essere in (0,1)"

#. R/prop.test.R: stop("elements of 'x' must be nonnegative")
#: R/prop.test.R:0
msgid "elements of 'x' must be nonnegative"
msgstr "gli elementi di 'x' devono essere nonnegativi"

#. R/prop.test.R: stop("elements of 'x' must not be greater than those of 'n'")
#: R/prop.test.R:0
msgid "elements of 'x' must not be greater than those of 'n'"
msgstr "gli elementi di 'x' non possono essere piÃ¹ grandi di quelli di 'n'"

#. R/kmeans.R: stop("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers", call. = FALSE)
#. R/kmeans.R: warning("empty cluster: try a better set of initial centers", call. = FALSE)
#: R/kmeans.R:0
msgid "empty cluster: try a better set of initial centers"
msgstr "cluster vuoto: provare con un insieme di centri iniziali migliore"

#. R/ARMAtheory.R: stop("empty model supplied")
#: R/ARMAtheory.R:0
msgid "empty model supplied"
msgstr "specificato modello vuoto"

#. R/lm.R: warning("essentially perfect fit: summary may be unreliable")
#: R/lm.R:0
msgid "essentially perfect fit: summary may be unreliable"
msgstr ""

#. R/poisson.test.R: gettext("event rate", domain = "R-stats")
#: R/poisson.test.R:0
msgid "event rate"
msgstr ""

#. R/power.R: gettextf("exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL",     "n", "delta", "sd", "power", "sig.level")
#. R/power.R: gettextf("exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL",     "n", "p1", "p2", "power", "sig.level")
#: R/power.R:0
#, fuzzy
msgid "exactly one of '%s', '%s', '%s', '%s', and '%s' arguments must be NULL"
msgstr "solo uno tra 'n', 'p1', 'p2', 'power', e 'sig.level' deve essere NULL"

#. R/power.anova.test.R: stop("exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig.level' must be NULL")
#: R/power.anova.test.R:0
msgid ""
"exactly one of 'groups', 'n', 'between.var', 'within.var', 'power', and 'sig."
"level' must be NULL"
msgstr ""
"solo uno tra 'groups', 'n', 'between.var', 'within.var', 'power', e 'sig."
"level' deve essere NULL"

#. R/poisson.test.R: gettext("expected count1", domain = "R-stats")
#: R/poisson.test.R:0
msgid "expected count1"
msgstr ""

#. R/ts.R: warning("extending time series when replacing values", call. = FALSE)
#: R/ts.R:0
msgid "extending time series when replacing values"
msgstr "estensione della serie storica durante la sostituzione dei valori"

#. R/logLik.R: warning("extra arguments were discarded")
#: R/logLik.R:0
#, fuzzy
msgid "extra arguments were discarded"
msgstr "argometni extra ignorati"

#. R/integrate.R: gettext("extremely bad integrand behaviour")
#: R/integrate.R:0
msgid "extremely bad integrand behaviour"
msgstr ""

#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#. R/factanal.R: stop("factor analysis applies only to numerical variables")
#: R/factanal.R:0
msgid "factor analysis applies only to numerical variables"
msgstr "l'analisi fattoriale si applica solo a variaibili quantitative"

#. R/factanal.R: stop("factor analysis requires at least three variables")
#: R/factanal.R:0
msgid "factor analysis requires at least three variables"
msgstr "l'analisi fattoriale richiede almeno tre variabili"

#. R/TukeyHSD.R: gettext("factor levels have been ordered", domain = "R-stats")
#: R/TukeyHSD.R:0
msgid "factor levels have been ordered"
msgstr ""

#. R/quantile.R: stop("factors are not allowed")
#: R/quantile.R:0
#, fuzzy
msgid "factors are not allowed"
msgstr "le interazioni non sono ammesse"

#. R/reshape.R: stop("failed to guess time-varying variables from their names")
#: R/reshape.R:0
msgid "failed to guess time-varying variables from their names"
msgstr ""

#. R/integrate.R: gettextf("failed with message %s", sQuote(x$message), domain = "R-stats")
#: R/integrate.R:0
msgid "failed with message %s"
msgstr ""

#. R/nlminb.R: gettext("false convergence (8)")
#: R/nlminb.R:0
msgid "false convergence (8)"
msgstr ""

#. R/lm.R: gettextf("family '%s' not implemented", fam)
#: R/lm.R:0
#, fuzzy
msgid "family '%s' not implemented"
msgstr "tipo '%s' non ancora implementato"

#. R/glm.R: warning("fitting to calculate the null deviance did not converge -- increase 'maxit' value?")
#: R/glm.R:0
msgid ""
"fitting to calculate the null deviance did not converge -- increase 'maxit' "
"value?"
msgstr ""

#. R/nlminb.R: gettext("fn cannot be computed at initial par (63)")
#: R/nlminb.R:0
msgid "fn cannot be computed at initial par (63)"
msgstr ""

#. R/family.R: gettextf("for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column matrix where first column is the number of successes and second column is the number of failures",     sQuote("binomial"))
#. R/family.R: gettextf("for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column matrix where first column is the number of successes and second column is the number of failures",     sQuote("quasibinomial"))
#: R/family.R:0
#, fuzzy
msgid ""
"for the %s family, 'y' argument must be a vector of 0 and 1's or a 2 column "
"matrix where first column is the number of successes and second column is "
"the number of failures"
msgstr ""
"o una matrice di 2 colonne dove la prima colonna contiene il numero di "
"successi e la seconda colonna il numero di insuccessi"

#. R/nlsFunc.R: gettextf("formula '%s' must be of the form '~expr'", deparse(as.vector(object)))
#: R/nlsFunc.R:0
msgid "formula '%s' must be of the form '~expr'"
msgstr "formula '%s' deve essere della forma '~expr'"

#. R/cpgram.R: gettext("frequency", domain = "R-stats")
#: R/cpgram.R:0
msgid "frequency"
msgstr ""

#. R/StructTS.R: stop("frequency must be a positive integer >= 2 for BSM")
#: R/StructTS.R:0
#, fuzzy
msgid "frequency must be a positive integer >= 2 for BSM"
msgstr "frequency deve essere un intero positivo per BSM"

#. R/nlminb.R: gettext("function evaluation limit reached without convergence (9)")
#: R/nlminb.R:0
msgid "function evaluation limit reached without convergence (9)"
msgstr ""

#. R/isoreg.R: gettext("  further components: ", domain = "R-stats")
#: R/isoreg.R:0
msgid "further components:"
msgstr ""

#. R/glm.R: warning("glm.fit: algorithm did not converge", call. = FALSE)
#: R/glm.R:0
#, fuzzy
msgid "glm.fit: algorithm did not converge"
msgstr "l'algoritmo non converge"

#. R/glm.R: warning("glm.fit: algorithm stopped at boundary value", call. = FALSE)
#: R/glm.R:0
#, fuzzy
msgid "glm.fit: algorithm stopped at boundary value"
msgstr "algoritmo arrestato sui valori della frontiera"

#. R/glm.R: warning("glm.fit: fitted probabilities numerically 0 or 1 occurred", call. = FALSE)
#: R/glm.R:0
#, fuzzy
msgid "glm.fit: fitted probabilities numerically 0 or 1 occurred"
msgstr "probabilitÃ stimate numericamente pari a 0 o 1"

#. R/glm.R: warning("glm.fit: fitted rates numerically 0 occurred", call. = FALSE)
#: R/glm.R:0
#, fuzzy
msgid "glm.fit: fitted rates numerically 0 occurred"
msgstr "si Ã¨ verificato che i tassi stimati sono numericamente pari a 0"

#. R/nlminb.R: gettext("gr cannot be computed at initial par (65)")
#: R/nlminb.R:0
msgid "gr cannot be computed at initial par (65)"
msgstr ""

#. R/ansari.test.R: stop("grouping factor must have exactly 2 levels")
#. R/mood.test.R: stop("grouping factor must have exactly 2 levels")
#. R/t.test.R: stop("grouping factor must have exactly 2 levels")
#. R/var.test.R: stop("grouping factor must have exactly 2 levels")
#. R/wilcox.test.R: stop("grouping factor must have exactly 2 levels")
#: R/ansari.test.R:0 R/mood.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "grouping factor must have exactly 2 levels"
msgstr "la variabile di gruppo deve avere esattamente 2 livelli"

#. R/plot.lm.R: gettextf("hat values (leverages) are all = %s\n and there are no factor predictors; no plot no. 5",     format(mean(r.hat)))
#: R/plot.lm.R:0
msgid ""
"hat values (leverages) are all = %s\n"
" and there are no factor predictors; no plot no. 5"
msgstr ""

#. R/fisher.test.R: gettextf("if '%s' argument is not a matrix, '%s' argument must be given", "x", "y")
#. R/mcnemar.test.R: gettextf("if '%s' argument is not a matrix, '%s' argument must be given", "x", "y")
#: R/fisher.test.R:0 R/mcnemar.test.R:0
#, fuzzy
msgid "if '%s' argument is not a matrix, '%s' argument must be given"
msgstr "se 'x' non Ã¨ una matrice, si deve specificare 'y'"

#. R/mantelhaen.test.R: gettextf("if '%s' argument is not an array, '%s' argument must be given", "x", "y")
#. R/mantelhaen.test.R: gettextf("if '%s' argument is not an array, '%s' argument must be given", "x", "z")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "if '%s' argument is not an array, '%s' argument must be given"
msgstr "se 'x' non Ã¨ un array,, si deve specificare 'y'"

#. R/family.R: warning("ignoring prior weights")
#: R/family.R:0
msgid "ignoring prior weights"
msgstr ""

#. R/lm.R: stop("incompatible dimensions")
#. R/lm.R: stop("incompatible dimensions")
#: R/lm.R:0
msgid "incompatible dimensions"
msgstr "dimensioni incompatibili"

#. R/ts.R: stop("inconsistent specification of 'ar' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ar' order"
msgstr "specificazione dell'ordine di 'ar' inconsistente"

#. R/ts.R: stop("inconsistent specification of 'ma' order")
#: R/ts.R:0
msgid "inconsistent specification of 'ma' order"
msgstr "specificazione dell'ordine 'ma' inconsistente"

#. R/diffinv.R: stop("incorrect dimensions for 'xi'")
#: R/diffinv.R:0
#, fuzzy
msgid "incorrect dimensions for 'xi'"
msgstr "lunghezza di 'x' sbagliata"

#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "row.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "row.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "col.vars")
#. R/ftable.R: gettextf("incorrect specification for '%s' argument", "col.vars")
#: R/ftable.R:0
#, fuzzy
msgid "incorrect specification for '%s' argument"
msgstr "specificazione di 'formula' non valida"

#. R/ftable.R: stop("incorrect variable names in lhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in lhs of formula"
msgstr "nomi variabili non validi nella membro di sinistra della formula"

#. R/ftable.R: stop("incorrect variable names in rhs of formula")
#: R/ftable.R:0
msgid "incorrect variable names in rhs of formula"
msgstr "nomi variabili non validi nella membro di destra della formula"

#. R/bandwidths.R: gettextf("increasing bw.SJ() search interval (%d) to [%.4g,%.4g]", itry, lower, upper)
#: R/bandwidths.R:0
msgid "increasing bw.SJ() search interval (%d) to [%.4g,%.4g]"
msgstr ""

#. R/kmeans.R: stop("initial centers are not distinct")
#: R/kmeans.R:0
msgid "initial centers are not distinct"
msgstr "i centri iniziali non sono distinti"

#. R/nlminb.R: gettext("initial par violates constraints")
#: R/nlminb.R:0
msgid "initial par violates constraints"
msgstr ""

#. R/constrOptim.R: stop("initial value is not in the interior of the feasible region")
#: R/constrOptim.R:0
#, fuzzy
msgid "initial value is not in the interior of the feasible region"
msgstr "valore iniziale non ammissimibile"

#. R/isoreg.R: gettext("  initially ordered 'x'", domain = "R-stats")
#: R/isoreg.R:0
#, fuzzy
msgid "initially ordered 'x'"
msgstr "ordine modello:"

#. R/glm.R: stop("inner loop 1; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 1; cannot correct step size"
msgstr "ciclo intero 1; impossibile correggere la ampiezza del passo"

#. R/glm.R: stop("inner loop 2; cannot correct step size", call. = FALSE)
#: R/glm.R:0
msgid "inner loop 2; cannot correct step size"
msgstr "ciclo interno 2; impossibile correggere ampiezza del passo"

#. R/dendrogram.R: gettext("inner node:", domain = "R-stats")
#: R/dendrogram.R:0
msgid "inner node:"
msgstr ""

#. R/ftable.R: stop("interactions are not allowed")
#. R/xtabs.R: stop("interactions are not allowed")
#: R/ftable.R:0 R/xtabs.R:0
msgid "interactions are not allowed"
msgstr "le interazioni non sono ammesse"

#. R/power.R: stop("internal error", domain = "R-stats")
#. R/power.R: stop("internal error", domain = "R-stats")
#. R/power.anova.test.R: stop("internal error", domain = "R-stats")
#: R/power.R:0 R/power.anova.test.R:0
msgid "internal error"
msgstr "errore interno"

#. R/arima.R: gettextf("invalid '%s' argument", "SSinit")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/cor.R: gettextf("invalid '%s' argument", "use")
#. R/family.R: gettextf("invalid '%s' argument", "lambda")
#. R/glm.R: gettextf("invalid '%s' argument", "method")
#. R/loess.R: gettextf("invalid '%s' argument", "control")
#. R/loess.R: gettextf("invalid '%s' argument", "x")
#. R/loess.R: gettextf("invalid '%s' argument", "y")
#. R/loess.R: gettextf("invalid '%s' argument", "span")
#. R/loess.R: gettextf("invalid '%s' argument", "cell")
#. R/loess.R: gettextf("invalid '%s' argument", "degree")
#. R/models.R: gettextf("invalid '%s' argument", "contrasts.arg")
#. R/models.R: gettextf("invalid '%s' argument", "data")
#. R/nafns.R: gettextf("invalid '%s' argument", "omit")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "n")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "r")
#. R/r2dtable.R: gettextf("invalid '%s' argument", "c")
#. R/smooth.R: gettextf("invalid '%s' argument", "endrule")
#: R/arima.R:0 R/cor.R:0 R/family.R:0 R/glm.R:0 R/loess.R:0 R/models.R:0
#: R/nafns.R:0 R/r2dtable.R:0 R/smooth.R:0
#, fuzzy
msgid "invalid '%s' argument"
msgstr "argomento 'data' non valido"

#. R/HoltWinters.R: gettextf("invalid '%s' value", "length(x)")
#. R/approx.R: gettextf("invalid '%s' value", "length(x)")
#. R/approx.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/bandwidths.R: gettextf("invalid '%s' value", "length(x)")
#. R/bandwidths.R: gettextf("invalid '%s' value", "x")
#. R/bandwidths.R: gettextf("invalid '%s' value", "nb")
#. R/cmdscale.R: gettextf("invalid '%s' value", "n")
#. R/density.R: gettextf("invalid '%s' value", "length(x)")
#. R/diffinv.R: gettextf("invalid '%s' value", "length(x)")
#. R/filter.R: gettextf("invalid '%s' value", "nrow(x)")
#. R/filter.R: gettextf("invalid '%s' value", "length(filter)")
#. R/kmeans.R: gettextf("invalid '%s' value", "nrow(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "ncol(x)")
#. R/kmeans.R: gettextf("invalid '%s' value", "k")
#. R/loess.R: gettextf("invalid '%s' value", "NCOL(X)")
#. R/loess.R: gettextf("invalid '%s' value", "NCOL(X)")
#. R/runmed.R: gettextf("invalid '%s' value", "length(x)")
#. R/runmed.R: gettextf("invalid '%s' value", "k")
#. R/smooth.R: gettextf("invalid '%s' value", "length(x)")
#. R/smspline.R: gettextf("invalid '%s' value", "control.spar")
#. R/spline.R: gettextf("invalid '%s' value", "length(x)")
#. R/splinefun.R: gettextf("invalid '%s' value", "length(x)")
#. R/stl.R: gettextf("invalid '%s' value", "length(x)")
#. R/symnum.R: gettextf("invalid '%s' value", "abbr.colnames'")
#: R/HoltWinters.R:0 R/approx.R:0 R/bandwidths.R:0 R/cmdscale.R:0
#: R/density.R:0 R/diffinv.R:0 R/filter.R:0 R/kmeans.R:0 R/loess.R:0
#: R/runmed.R:0 R/smooth.R:0 R/smspline.R:0 R/spline.R:0 R/splinefun.R:0
#: R/stl.R:0 R/symnum.R:0
#, fuzzy
msgid "invalid '%s' value"
msgstr "argomento 'data' non valido"

#. R/nlm.R: stop("invalid 'extendInt' argument; please report")
#: R/nlm.R:0
#, fuzzy
msgid "invalid 'extendInt' argument; please report"
msgstr "argomento 'data' non valido"

#. R/lm.R: stop("invalid 'lm' object:  no 'terms' component")
#: R/lm.R:0
#, fuzzy
msgid "invalid 'lm' object:  no 'terms' component"
msgstr "oggetto 'lm' non valido: mancano le componenti 'terms' e 'qr'"

#. R/chisq.test.R: stop("invalid 'nrow(x)' or 'ncol(x)' value", domain = "R-stats")
#. R/fisher.test.R: stop("invalid 'nrow(x)' or 'ncol(x)' value")
#: R/chisq.test.R:0 R/fisher.test.R:0
#, fuzzy
msgid "invalid 'nrow(x)' or 'ncol(x)' value"
msgstr "'x' non valida"

#. R/cutree.R: stop("invalid 'tree' argument ('merge' component)")
#: R/cutree.R:0
#, fuzzy
msgid "invalid 'tree' argument ('merge' component)"
msgstr "'tree' non valido (componente merge)"

#. R/dendrogram.R: stop("invalid (length 0) node in dendrogram")
#: R/dendrogram.R:0
msgid "invalid (length 0) node in dendrogram"
msgstr "nodo non valido (lunghezza 0) nel dendrogramma"

#. R/nls-profile.R: stop("invalid argument passed to 'getProfile()'")
#: R/nls-profile.R:0
#, fuzzy
msgid "invalid argument passed to 'getProfile()'"
msgstr "argomento non valido in 'getProfile'"

#. R/hclust.R: gettextf("invalid clustering method %s", method)
#: R/hclust.R:0
#, fuzzy
msgid "invalid clustering method %s"
msgstr "metodo di cluster non valido"

#. R/hclust.R: gettext("invalid dendrogram", domain = "R-stats")
#: R/hclust.R:0
msgid "invalid dendrogram"
msgstr "dendrogramma non valido"

#. R/hclust.R: stop("invalid dissimilarities")
#: R/hclust.R:0
msgid "invalid dissimilarities"
msgstr "dissimilaritÃ  non valide"

#. R/dist.R: stop("invalid distance method")
#: R/dist.R:0
msgid "invalid distance method"
msgstr "metodo distanza sbagliato"

#. R/glm.R: stop("invalid fitted means in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid fitted means in empty model"
msgstr "valori medie stimate non validi nel modello vuoto"

#. R/ansari.test.R: stop("invalid formula")
#. R/cor.test.R: stop("invalid formula")
#. R/friedman.test.R: stop("invalid formula")
#. R/models.R: stop("invalid formula")
#. R/mood.test.R: stop("invalid formula")
#. R/quade.test.R: stop("invalid formula")
#. R/t.test.R: stop("invalid formula")
#. R/var.test.R: stop("invalid formula")
#. R/wilcox.test.R: stop("invalid formula")
#: R/ansari.test.R:0 R/cor.test.R:0 R/friedman.test.R:0 R/models.R:0
#: R/mood.test.R:0 R/quade.test.R:0 R/t.test.R:0 R/var.test.R:0
#: R/wilcox.test.R:0
msgid "invalid formula"
msgstr "formula sbagliata"

#. R/deriv.R: stop("invalid formula in 'deriv()'")
#. R/deriv.R: stop("invalid formula in 'deriv()'")
#: R/deriv.R:0
#, fuzzy
msgid "invalid formula in 'deriv()'"
msgstr "formula non valida in deriv"

#. R/approx.R: stop("invalid interpolation method")
#. R/approx.R: stop("invalid interpolation method")
#. R/spline.R: stop("invalid interpolation method")
#: R/approx.R:0 R/spline.R:0
msgid "invalid interpolation method"
msgstr "metodo di interpolazione non valido"

#. R/binom.test.R: gettextf("invalid length of '%s' argument", "x")
#. R/hclust.R: gettextf("invalid length of '%s' argument", "members")
#: R/binom.test.R:0 R/hclust.R:0
#, fuzzy
msgid "invalid length of '%s' argument"
msgstr "lunghezza dei membri non valida"

#. R/glm.R: stop("invalid linear predictor values in empty model", call. = FALSE)
#: R/glm.R:0
msgid "invalid linear predictor values in empty model"
msgstr "valori del predittore lineare non validi nel modello vuoto"

#. R/lm.influence.R: stop("invalid model QR matrix")
#: R/lm.influence.R:0
msgid "invalid model QR matrix"
msgstr ""

#. R/smspline.R: stop("invalid number of points")
#: R/smspline.R:0
#, fuzzy
msgid "invalid number of points"
msgstr "numero di predittori sbagliato"

#. R/integrate.R: stop("invalid parameter values")
#: R/integrate.R:0
msgid "invalid parameter values"
msgstr "valori dei parametri non validi"

#. R/models.R: stop("invalid response type")
#: R/models.R:0
msgid "invalid response type"
msgstr "tipo risposta non valido"

#. R/nlminb.R: gettext("iteration limit reached without convergence (10)")
#: R/nlminb.R:0
msgid "iteration limit reached without convergence (10)"
msgstr ""

#. R/dendrogram.R: gettextf("layout: widths = %s, heights = %s; lmat=\n", paste(lwid, collapse = " "),     paste(lhei, collapse = " "), domain = "R-stats")
#: R/dendrogram.R:0
msgid "layout: widths = %s, heights = %s; lmat="
msgstr ""

#. R/dendrogram.R: gettextf("leaf %s", dQuote(at$label), domain = "R-stats")
#. R/dendrogram.R: gettextf("leaf %s", format(object, digits = digits.d), domain = "R-stats")
#: R/dendrogram.R:0
msgid "leaf %s"
msgstr ""

#. R/dendrogram.R: gettextf("leaf:", domain = "R-stats")
#: R/dendrogram.R:0
msgid "leaf:"
msgstr ""

#. R/fft.R: stop("length mismatch in convolution")
#: R/fft.R:0
msgid "length mismatch in convolution"
msgstr "lunghezza non corretta in 'convolution'"

#. R/cov.wt.R: stop("length of 'center' must equal the number of columns in 'x'")
#: R/cov.wt.R:0
msgid "length of 'center' must equal the number of columns in 'x'"
msgstr "la lunghezza di 'center' deve essere pari al numero di colonne di 'x'"

#. R/filter.R: stop("length of 'init' argument must equal length of 'filter' argument")
#: R/filter.R:0
#, fuzzy
msgid "length of 'init' argument must equal length of 'filter' argument"
msgstr "la lunghezza di 'init' deve essere uguale a quella di 'filter' "

#. R/spectrum.R: stop("length of 'p' must be 1 or equal the number of columns of 'x'")
#: R/spectrum.R:0
msgid "length of 'p' must be 1 or equal the number of columns of 'x'"
msgstr ""
"la lunghezza dei 'p' deve essere 1 o uguale al numero di colonne di 'x'"

#. R/glm.R: gettextf("length of 'start' should equal %d and correspond to initial coefs for %s",     nvars, tmp_N)
#: R/glm.R:0
msgid ""
"length of 'start' should equal %d and correspond to initial coefs for %s"
msgstr ""
"la lunghezza di 'start' dovrebbe essere %d e corrispondere ai coefficienti "
"iniziali di %s"

#. R/reshape.R: stop("length of 'v.names' does not evenly divide length of 'varying'")
#: R/reshape.R:0
#, fuzzy
msgid "length of 'v.names' does not evenly divide length of 'varying'"
msgstr ""
"lunghezza di FUN, %d,\n"
" non coincide con la lunghezza delle marginali, %d"

#. R/reshape.R: stop("length of 'varying' must be the product of length of 'v.names' and length of 'times'")
#: R/reshape.R:0
msgid ""
"length of 'varying' must be the product of length of 'v.names' and length of "
"'times'"
msgstr ""

#. R/cov.wt.R: stop("length of 'wt' must equal the number of rows in 'x'")
#: R/cov.wt.R:0
msgid "length of 'wt' must equal the number of rows in 'x'"
msgstr "la lunghezza di 'wt' deve essere pari al numero di righe di 'x'"

#. R/shapiro.test.R: stop("length of 'x' argument must be between 3 and 5000")
#: R/shapiro.test.R:0
#, fuzzy
msgid "length of 'x' argument must be between 3 and 5000"
msgstr "'x' deve essere tra %s e %s"

#. R/addmargins.R: gettextf("length of FUN, %d, does not match the length of the margins, %d", length(FUN),     n.sid)
#: R/addmargins.R:0
#, fuzzy
msgid "length of FUN, %d, does not match the length of the margins, %d"
msgstr ""
"lunghezza di FUN, %d,\n"
" non coincide con la lunghezza delle marginali, %d"

#. R/arima.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "xreg")
#. R/arma0.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "xreg")
#. R/smspline.R: gettextf("lengths of '%s' and '%s' arguments must match", "x", "w")
#: R/arima.R:0 R/arma0.R:0 R/smspline.R:0
#, fuzzy
msgid "lengths of '%s' and '%s' arguments must match"
msgstr "le lunghezze di 'x' e 'w' devono coincidere"

#. R/nls-profile.R: warning("levels truncated to positive values only")
#: R/nls-profile.R:0
msgid "levels truncated to positive values only"
msgstr "livelli limitati ai solo valori positivi"

#. R/family.R: gettextf("link %s not available for binomial family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for binomial family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia poisson; i link disponibili sono "
"\"identity\", \"log\" e \"sqrt\""

#. R/family.R: gettextf("link %s not available for gamma family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for gamma family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia gamma, i link disponibili sono "
"\"inverse\", \"\"log\" e \"identity\""

#. R/family.R: gettextf("link %s not available for gaussian family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for gaussian family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia gaussian, i link disponibili "
"sono \"inverse\", \"log\" e \"identity\""

#. R/family.R: gettextf("link %s not available for inverse.gaussian family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid ""
"link %s not available for inverse.gaussian family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia gaussian, i link disponibili "
"sono \"inverse\", \"log\" e \"identity\""

#. R/family.R: gettextf("link %s not available for poisson family; available links are %s", sQuote(linktemp),     tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for poisson family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia poisson; i link disponibili sono "
"\"identity\", \"log\" e \"sqrt\""

#. R/family.R: gettextf("link %s not available for quasibinomial family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for quasibinomial family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia quasipoisson; i link disponibili "
"sono \"identity\", \"log\" e \"sqrt\""

#. R/family.R: gettextf("link %s not available for quasipoisson family; available links are %s",     sQuote(linktemp), tmp_n)
#: R/family.R:0
#, fuzzy
msgid "link %s not available for quasipoisson family; available links are %s"
msgstr ""
"link \"%s\" non disponibile per la famiglia quasipoisson; i link disponibili "
"sono \"identity\", \"log\" e \"sqrt\""

#. R/glm.R: gettext("link: ", domain = "R-stats")
#: R/glm.R:0
msgid "link:"
msgstr ""

#. R/lm.R: stop("lm object does not have a proper 'qr' component. Rank zero or should not have used lm(.., qr=FALSE).")
#: R/lm.R:0
msgid ""
"lm object does not have a proper 'qr' component. Rank zero or should not "
"have used lm(.., qr=FALSE)."
msgstr ""

#. R/wilcox.test.R: gettext("location", domain = "R-stats")
#: R/wilcox.test.R:0
#, fuzzy
msgid "location"
msgstr "iterazioni"

#. R/wilcox.test.R: gettext("location shift", domain = "R-stats")
#: R/wilcox.test.R:0
msgid "location shift"
msgstr ""

#. R/nlminb.R: stop("logical 'hessian' argument not allowed.  See documentation.")
#: R/nlminb.R:0
msgid "logical 'hessian' argument not allowed.  See documentation."
msgstr ""

#. R/nlm.R: stop("lower < upper  is not fulfilled")
#: R/nlm.R:0
msgid "lower < upper  is not fulfilled"
msgstr "lower < upper non rispettato"

#. R/glm.R: stop("maximum number of iterations must be > 0")
#: R/glm.R:0
#, fuzzy
msgid "maximum number of iterations must be > 0"
msgstr "il numero massimo d iterazioni deve essere > 0"

#. R/integrate.R: gettext("maximum number of subdivisions reached")
#: R/integrate.R:0
#, fuzzy
msgid "maximum number of subdivisions reached"
msgstr "il numero massimo d iterazioni deve essere > 0"

#. R/t.test.R: gettext("mean", domain = "R-stats")
#: R/t.test.R:0
msgid "mean"
msgstr ""

#. R/t.test.R: gettextf("mean in group %s", levels(g))
#: R/t.test.R:0
#, fuzzy
msgid "mean in group %s"
msgstr "gruppi insufficienti"

#. R/t.test.R: gettext("mean of the differences")
#: R/t.test.R:0
msgid "mean of the differences"
msgstr ""

#. R/t.test.R: gettext("mean of x")
#. R/t.test.R: gettext("mean of x")
#: R/t.test.R:0
msgid "mean of x"
msgstr ""

#. R/t.test.R: gettext("mean of y")
#: R/t.test.R:0
msgid "mean of y"
msgstr ""

#. R/optim.R: stop("method = \"Brent\" is only available for one-dimensional optimization")
#: R/optim.R:0
msgid "method = \"Brent\" is only available for one-dimensional optimization"
msgstr ""

#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#. R/lm.R: gettextf("method = '%s' is not supported. Using 'qr'", method)
#: R/lm.R:0
msgid "method = '%s' is not supported. Using 'qr'"
msgstr "metodo = '%s' non supportato. Uso 'qr'"

#. R/optim.R: warning("method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'")
#: R/optim.R:0
#, fuzzy
msgid ""
"method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol'"
msgstr ""
"il metodo L-BFGS-B usea 'fact' (e 'pgtol') al posto di 'reltol' e 'abstol'"

#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#. R/bandwidths.R: warning("minimum occurred at one end of the range")
#: R/bandwidths.R:0
msgid "minimum occurred at one end of the range"
msgstr "minimo realizzato in uno degli estremi del range"

#. R/ppr.R: stop("mismatched 'x' and 'y'")
#: R/ppr.R:0
msgid "mismatched 'x' and 'y'"
msgstr "'x' e 'y' non coincidenti"

#. R/lsfit.R: warning("missing observations were deleted")
#: R/lsfit.R:0
#, fuzzy
msgid "missing observations were deleted"
msgstr "osservazioni mancanti eliminate"

#. R/smspline.R: stop("missing or infinite values in inputs are not allowed")
#: R/smspline.R:0
#, fuzzy
msgid "missing or infinite values in inputs are not allowed"
msgstr "non sono ammessi pesi negativi o mancanti"

#. R/lm.R: stop("missing or negative weights not allowed")
#. R/nls.R: stop("missing or negative weights not allowed")
#: R/lm.R:0 R/nls.R:0
msgid "missing or negative weights not allowed"
msgstr "non sono ammessi pesi negativi o mancanti"

#. R/quantile.R: stop("missing values and NaN's not allowed if 'na.rm' is FALSE")
#: R/quantile.R:0
msgid "missing values and NaN's not allowed if 'na.rm' is FALSE"
msgstr "valori mancanti e NaN non ammessi se 'na.rm' Ã¨ FALSE"

#. R/contr.poly.R: stop("missing values are not allowed in 'poly()'")
#: R/contr.poly.R:0
#, fuzzy
msgid "missing values are not allowed in 'poly()'"
msgstr "valori mancanti non ammessi in 'poly'"

#. R/filter.R: gettextf("missing values in '%s' argument", "filter")
#. R/nafns.R: gettextf("missing values in '%s' argument", "object")
#: R/filter.R:0 R/nafns.R:0
#, fuzzy
msgid "missing values in '%s' argument"
msgstr "valore mancante nell'oggetto"

#. R/isoreg.R: stop("missing values not allowed")
#: R/isoreg.R:0
#, fuzzy
msgid "missing values not allowed"
msgstr "valori mancanti non ammessi in 'poly'"

#. R/models.R: stop("model frame and formula mismatch in model.matrix()")
#: R/models.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr "model frame e formula non coincidono in model.matrix()"

#. R/ar.R: gettextf("model order: %d singularities in the computation of the projection matrix results are only valid up to model order %d",     m, m - 1L)
#: R/ar.R:0
#, fuzzy
msgid ""
"model order: %d singularities in the computation of the projection matrix "
"results are only valid up to model order %d"
msgstr "singolaritÃ  nel calcolo della matrice proiezione"

#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#. R/AIC.R: warning("models are not all fitted to the same number of observations")
#: R/AIC.R:0
#, fuzzy
msgid "models are not all fitted to the same number of observations"
msgstr "i modelli sono stati stimati per differenti ampiezze campaionarie"

#. R/glm.R: stop("models were not all fitted to the same size of dataset")
#. R/lm.R: stop("models were not all fitted to the same size of dataset")
#. R/mlm.R: stop("models were not all fitted to the same size of dataset")
#: R/glm.R:0 R/lm.R:0 R/mlm.R:0
msgid "models were not all fitted to the same size of dataset"
msgstr "i modelli sono stati stimati per differenti ampiezze campaionarie"

#. R/glm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/lm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/loess.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/mlm.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#. R/nls.R: gettextf("models with response %s removed because response differs from model 1",     sQuote(deparse(responses[!sameresp])))
#: R/glm.R:0 R/lm.R:0 R/loess.R:0 R/mlm.R:0 R/nls.R:0
#, fuzzy
msgid "models with response %s removed because response differs from model 1"
msgstr "eliminato perchÃ© la risposta Ã¨ diversa da quella del modello 1"

#. R/kmeans.R: stop("more cluster centers than data points")
#: R/kmeans.R:0
msgid "more cluster centers than data points"
msgstr "piÃ¹ cluster che dati"

#. R/kmeans.R: stop("more cluster centers than distinct data points.")
#: R/kmeans.R:0
msgid "more cluster centers than distinct data points."
msgstr "piÃ¹ cluster che punti distinti."

#. R/reshape.R: gettextf("multiple rows match for %s=%s: first taken", timevar, times[i])
#: R/reshape.R:0
msgid "multiple rows match for %s=%s: first taken"
msgstr ""

#. R/symnum.R: stop("must have 2 'symbols' for logical 'x' argument")
#: R/symnum.R:0
msgid "must have 2 'symbols' for logical 'x' argument"
msgstr "deve avere 2 'symbols' se l'argomento 'x' Ã¨ logical"

#. R/zzModels.R: stop("must have at least 4 observations to fit an 'SSfol' model")
#: R/zzModels.R:0
msgid "must have at least 4 observations to fit an 'SSfol' model"
msgstr "necessarie almeno 4 osservazioni per stimare un modello 'SSfol'"

#. R/zzModels.R: stop("must have length of response = length of second argument to 'SSfol'")
#: R/zzModels.R:0
msgid "must have length of response = length of second argument to 'SSfol'"
msgstr ""
"deve essere lunghezza della risposta = lunghezza del secondo argomento di "
"'SSfol'"

#. R/kmeans.R: stop("must have same number of columns in 'x' and 'centers'")
#: R/kmeans.R:0
msgid "must have same number of columns in 'x' and 'centers'"
msgstr "'x' e 'centers' devono avere lo stesso numero di colonne"

#. R/spectrum.R: stop("must specify 'spans' or a valid kernel")
#: R/spectrum.R:0
msgid "must specify 'spans' or a valid kernel"
msgstr "specificare 'spans' o un kernel valido"

#. R/xtabs.R: stop("must supply either 'formula' or 'data'")
#: R/xtabs.R:0
#, fuzzy
msgid "must supply either 'formula' or 'data'"
msgstr "fornire uno o piÃ¹ vettori"

#. R/contr.poly.R: stop("must supply one or more vectors")
#: R/contr.poly.R:0
msgid "must supply one or more vectors"
msgstr "fornire uno o piÃ¹ vettori"

#. R/power.R: gettext("n is number in *each* group")
#. R/power.R: gettext("n is number in *each* group")
#: R/power.R:0
msgid "n is number in *each* group"
msgstr ""

#. R/family.R: stop("need CRAN package 'SuppDists' for the 'inverse.gaussian' family")
#: R/family.R:0
#, fuzzy
msgid "need CRAN package 'SuppDists' for the 'inverse.gaussian' family"
msgstr "sono ammessi solo valori positivi per la famiglia gaussiana inversa"

#. R/update.R: stop("need an object with call component")
#: R/update.R:0
msgid "need an object with call component"
msgstr "necessario un oggetto con una componente call"

#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#. R/bandwidths.R: stop("need at least 2 data points")
#: R/bandwidths.R:0
msgid "need at least 2 data points"
msgstr "servono almeno 2 punti"

#. R/HoltWinters.R: stop("need at least 2 periods to compute seasonal start values")
#: R/HoltWinters.R:0
#, fuzzy
msgid "need at least 2 periods to compute seasonal start values"
msgstr ""
"sono necessari almeno 3 periodi per poter calcolare valori stagionali "
"iniziali"

#. R/smspline.R: stop("need at least four unique 'x' values")
#: R/smspline.R:0
msgid "need at least four unique 'x' values"
msgstr "necessari almeno quattro valori distinti 'x'"

#. R/hclust.R: stop("need dendrograms where all leaves have labels")
#: R/hclust.R:0
msgid "need dendrograms where all leaves have labels"
msgstr "servono dendrogrammi dove tutti i nodi terminali hanno etichetta"

#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#. R/manova.R: stop("need multiple responses")
#: R/manova.R:0
#, fuzzy
msgid "need multiple responses"
msgstr "sono necessarie risposte multiple"

#. R/median.R: stop("need numeric data")
#: R/median.R:0
msgid "need numeric data"
msgstr "necessario dati numerici"

#. R/smspline.R: stop("need result of 'smooth.spline(keep.data = TRUE)'")
#. R/smspline.R: stop("need result of 'smooth.spline(keep.data = TRUE)'")
#: R/smspline.R:0
msgid "need result of 'smooth.spline(keep.data = TRUE)'"
msgstr ""

#. R/family.R: gettextf("negative values are not allowed for the '%s' family", "Poisson")
#. R/family.R: gettextf("negative values are not allowed for the '%s' family", "quasiPoisson")
#: R/family.R:0
#, fuzzy
msgid "negative values are not allowed for the '%s' family"
msgstr "valori negativi non ammissibili per la famiglia Poisson"

#. R/glm.R: stop("negative weights are not allowed")
#. R/lsfit.R: stop("negative weights are not allowed")
#: R/glm.R:0 R/lsfit.R:0
#, fuzzy
msgid "negative weights are not allowed"
msgstr "non sono ammessi pesi negativi"

#. R/factanal.R: stop("neither 'x' nor 'covmat' supplied")
#: R/factanal.R:0
msgid "neither 'x' nor 'covmat' supplied"
msgstr "'x' e 'covmat' non fornite"

#. R/logLik.R: stop("no \"nobs\" attribute is available")
#: R/logLik.R:0
msgid "no \"nobs\" attribute is available"
msgstr ""

#. R/add.R: stop("no 'add1' method implemented for \"mlm\" models")
#: R/add.R:0
msgid "no 'add1' method implemented for \"mlm\" models"
msgstr "nessun metodo 'add1' implementato per modelli \"mlm\""

#. R/stepfun.R: stop("no 'as.stepfun' method available for 'x'")
#: R/stepfun.R:0
msgid "no 'as.stepfun' method available for 'x'"
msgstr "nessun metodo 'as.stepfun' disponibile per 'x'"

#. R/add.R: stop("no 'drop1' method for \"mlm\" models")
#: R/add.R:0
msgid "no 'drop1' method for \"mlm\" models"
msgstr "nessun metodo 'drop1' per modelli \"mlm\""

#. R/selfStart.R: gettextf("no 'getInitial' method found for %s objects", dQuote(data.class(object)))
#: R/selfStart.R:0
#, fuzzy
msgid "no 'getInitial' method found for %s objects"
msgstr "non Ã¨ stato trovato il metodo 'getInitial' per gli oggetti \"%s\""

#. R/logLik.R: warning("no 'nobs()' method is available")
#. R/logLik.R: stop("no 'nobs()' method is available")
#: R/logLik.R:0
#, fuzzy
msgid "no 'nobs()' method is available"
msgstr "nessun metodo 'as.stepfun' disponibile per 'x'"

#. R/reshape.R: stop("no 'reshapeWide' attribute, must specify 'varying'")
#: R/reshape.R:0
msgid "no 'reshapeWide' attribute, must specify 'varying'"
msgstr ""

#. R/aov.R: stop("no degrees of freedom for residuals")
#: R/aov.R:0
msgid "no degrees of freedom for residuals"
msgstr "residui senza gradi di libertÃ "

#. R/TukeyHSD.R: stop("no factors in the fitted model")
#: R/TukeyHSD.R:0
msgid "no factors in the fitted model"
msgstr "nessun factor nel modello stimato"

#. R/smspline.R: stop("no finite observations")
#: R/smspline.R:0
#, fuzzy
msgid "no finite observations"
msgstr "non ci sono abbastanza osservazioni finite"

#. R/loess.R: stop("no models to compare")
#: R/loess.R:0
msgid "no models to compare"
msgstr "nessun modello da confrontare"

#. R/glm.R: gettextf("no observations informative at iteration %d", iter)
#: R/glm.R:0
#, fuzzy
msgid "no observations informative at iteration %d"
msgstr "nessuna osservazione informativa nell'iterazione"

#. R/nls.R: stop("no parameters to fit")
#: R/nls.R:0
#, fuzzy
msgid "no parameters to fit"
msgstr "specificati tutti i parametri"

#. R/ts.R: stop("no replacement values supplied")
#: R/ts.R:0
msgid "no replacement values supplied"
msgstr "valori da sostituire non specificati"

#. R/aggregate.R: stop("no rows to aggregate")
#: R/aggregate.R:0
#, fuzzy
msgid "no rows to aggregate"
msgstr "nessun modello da confrontare"

#. R/prcomp.R: stop("no scores are available: refit with 'retx=TRUE'")
#: R/prcomp.R:0
msgid "no scores are available: refit with 'retx=TRUE'"
msgstr "score non disponibili: ristimare con 'retx=TRUE'"

#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#. R/nlm.R: gettextf("no sign change found in %d iterations", it - 1)
#: R/nlm.R:0
#, fuzzy
msgid "no sign change found in %d iterations"
msgstr "non converge in %d iterazioni"

#. R/bandwidths.R: stop("no solution in the specified range of bandwidths")
#: R/bandwidths.R:0
msgid "no solution in the specified range of bandwidths"
msgstr "non ci sono soluzioni nel range di badwidth specificato"

#. R/factanal.R: stop("no starting values specified")
#. R/nls.R: stop("no starting values specified")
#: R/factanal.R:0 R/nls.R:0
#, fuzzy
msgid "no starting values specified"
msgstr "valori iniziali non specificati"

#. R/models.R: stop("no terms component nor attribute")
#: R/models.R:0
#, fuzzy
msgid "no terms component nor attribute"
msgstr "manca compoenente terms"

#. R/add.R: stop("no terms in scope")
#. R/add.R: stop("no terms in scope")
#: R/add.R:0
msgid "no terms in scope"
msgstr "scope senza termini"

#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#. R/add.R: stop("no terms in scope for adding to object")
#: R/add.R:0
msgid "no terms in scope for adding to object"
msgstr "scope senza termini da aggiungere all'oggetto"

#. R/ts.R: stop("no time series supplied")
#: R/ts.R:0
msgid "no time series supplied"
msgstr "nessuna serie storica specificata"

#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#. R/glm.R: stop("no valid set of coefficients has been found: please supply starting values",     call. = FALSE)
#: R/glm.R:0
msgid ""
"no valid set of coefficients has been found: please supply starting values"
msgstr ""
"non Ã¨ stato trovato un set valido di coefficienti: si prega di fornirne i "
"valori iniziali"

#. R/lm.influence.R: stop("non-NA residual length does not match cases used in fitting")
#: R/lm.influence.R:0
msgid "non-NA residual length does not match cases used in fitting"
msgstr ""

#. R/model.tables.R: gettextf("non-factors ignored: %s", tmp_n)
#: R/model.tables.R:0
#, fuzzy
msgid "non-factors ignored: %s"
msgstr "variabili non-factor ignorate:"

#. R/density.R: gettextf("non-finite '%s' argument", "bw")
#. R/density.R: gettextf("non-finite '%s' argument", "from")
#. R/density.R: gettextf("non-finite '%s' argument", "to")
#: R/density.R:0
#, fuzzy
msgid "non-finite '%s' argument"
msgstr "argomento 'data' non valido"

#. R/glm.R: gettextf("non-finite coefficients at iteration %d", iter)
#: R/glm.R:0
#, fuzzy
msgid "non-finite coefficients at iteration %d"
msgstr "coefficienti non finiti nell'iterazione"

#. R/family.R: warning("non-integer counts in a binomial glm!")
#: R/family.R:0
msgid "non-integer counts in a binomial glm!"
msgstr "frequenze non intere nel modello glm binomiale!"

#. R/family.R: warning("non-integer number of successes in a binomial glm!")
#: R/family.R:0
#, fuzzy
msgid "non-integer number of successes in a binomial glm!"
msgstr "#successi non interi nel modello glm binomiale!"

#. R/ts.R: warning("non-intersecting series")
#: R/ts.R:0
msgid "non-intersecting series"
msgstr "serie non intersecantesi"

#. R/dendrogram.R: stop("non-leaf subtree of length 0")
#: R/dendrogram.R:0
#, fuzzy
msgid "non-leaf subtree of length 0"
msgstr "sotto-albero non-terminale di lunghezza 0"

#. R/density.R: warning("non-matched further arguments are disregarded")
#: R/density.R:0
#, fuzzy
msgid "non-matched further arguments are disregarded"
msgstr "argometni extra ignorati"

#. R/family.R: stop("non-positive values not allowed for the 'gamma' family")
#: R/family.R:0
#, fuzzy
msgid "non-positive values not allowed for the 'gamma' family"
msgstr "valori non positivi non sono ammessi per la famiglia gamma"

#. R/arima.R: stop("non-stationary AR part")
#. R/arma0.R: stop("non-stationary AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary AR part"
msgstr "parte AR non stazionaria"

#. R/arima.R: stop("non-stationary AR part from CSS")
#: R/arima.R:0
msgid "non-stationary AR part from CSS"
msgstr "parte AR non stazionaria da CSS"

#. R/arima.R: stop("non-stationary seasonal AR part")
#. R/arma0.R: stop("non-stationary seasonal AR part")
#: R/arima.R:0 R/arma0.R:0
msgid "non-stationary seasonal AR part"
msgstr "parte stagionale AR non stazionaria"

#. R/arima.R: stop("non-stationary seasonal AR part from CSS")
#: R/arima.R:0
msgid "non-stationary seasonal AR part from CSS"
msgstr "parte stagionale AR non stazionaria da CSS"

#. R/ts.R: stop("non-time series not of the correct length")
#: R/ts.R:0
msgid "non-time series not of the correct length"
msgstr "non-serie storica della lunghezza sbagliata"

#. R/stepfun.R: stop("not a valid step function")
#: R/stepfun.R:0
msgid "not a valid step function"
msgstr "non Ã¨ una funzione a gradini valida"

#. R/ts.R: stop("not all series have the same frequency")
#: R/ts.R:0
msgid "not all series have the same frequency"
msgstr "non tutte le serie hanno la stessa frequenza"

#. R/friedman.test.R: stop("not an unreplicated complete block design")
#. R/quade.test.R: stop("not an unreplicated complete block design")
#: R/friedman.test.R:0 R/quade.test.R:0
msgid "not an unreplicated complete block design"
msgstr "non Ã¨ un disegno completo a blocchi non replicati"

#. R/ansari.test.R: gettextf("not enough '%s' observations", "x")
#. R/ansari.test.R: gettextf("not enough '%s' observations", "y")
#. R/kruskal.test.R: gettextf("not enough '%s' observations", "x")
#. R/poisson.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "x")
#. R/t.test.R: gettextf("not enough '%s' observations", "y")
#. R/var.test.R: gettextf("not enough '%s' observations", "x")
#. R/var.test.R: gettextf("not enough '%s' observations", "y")
#. R/wilcox.test.R: gettextf("not enough '%s' observations", "x")
#. R/wilcox.test.R: gettextf("not enough '%s' observations", "y")
#: R/ansari.test.R:0 R/kruskal.test.R:0 R/poisson.test.R:0 R/t.test.R:0
#: R/var.test.R:0 R/wilcox.test.R:0
#, fuzzy
msgid "not enough '%s' observations"
msgstr "non ci sono abbstanza osservazioni in 'x'"

#. R/ks.test.R: stop("not enough 'x' data")
#: R/ks.test.R:0
msgid "not enough 'x' data"
msgstr "dati 'x' insufficienti"

#. R/ks.test.R: stop("not enough 'y' data")
#: R/ks.test.R:0
msgid "not enough 'y' data"
msgstr "dati 'y' insufficienti"

#. R/prop.test.R: stop("not enough data")
#: R/prop.test.R:0
msgid "not enough data"
msgstr "dati insufficienti"

#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#. R/contrast.R: stop("not enough degrees of freedom to define contrasts")
#: R/contrast.R:0
msgid "not enough degrees of freedom to define contrasts"
msgstr "numero di gradi di libertÃ  insufficiente per definire i contrasti"

#. R/cor.test.R: stop("not enough finite observations")
#. R/cor.test.R: stop("not enough finite observations")
#: R/cor.test.R:0
msgid "not enough finite observations"
msgstr "non ci sono abbastanza osservazioni finite"

#. R/oneway.test.R: stop("not enough groups")
#: R/oneway.test.R:0
msgid "not enough groups"
msgstr "gruppi insufficienti"

#. R/fligner.test.R: stop("not enough observations")
#. R/mood.test.R: stop("not enough observations")
#. R/oneway.test.R: stop("not enough observations")
#. R/t.test.R: stop("not enough observations")
#: R/fligner.test.R:0 R/mood.test.R:0 R/oneway.test.R:0 R/t.test.R:0
msgid "not enough observations"
msgstr "non ci sono abbastanza osservazioni"

#. R/plot.lm.R: gettextf("not plotting observations with leverage one:\n  %s", paste(which(isInf),     collapse = ", "), domain = "R-stats")
#: R/plot.lm.R:0
msgid ""
"not plotting observations with leverage one:\n"
"  %s"
msgstr ""

#. R/ftable.R: stop("nothing to tabulate")
#: R/ftable.R:0
msgid "nothing to tabulate"
msgstr "nulla da tabulare"

#. R/htest.R: gettext("null values:", domain = "R-stats")
#: R/htest.R:0
msgid "null values:"
msgstr ""

#. R/var.test.R: gettext("num df", domain = "R-stats")
#: R/var.test.R:0
msgid "num df"
msgstr ""

#. R/symnum.R: stop("number of 'cutpoints' must be one less than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one less than number of symbols"
msgstr "il numero di 'cutpoints' deve essere inferiore al numero di simboli"

#. R/symnum.R: stop("number of 'cutpoints' must be one more than number of symbols")
#: R/symnum.R:0
msgid "number of 'cutpoints' must be one more than number of symbols"
msgstr "il numero di 'cutpoints' deve essere uno piÃ¹ di quello dei simboli"

#. R/kmeans.R: stop("number of cluster centres must lie between 1 and nrow(x)", call. = FALSE)
#: R/kmeans.R:0
msgid "number of cluster centres must lie between 1 and nrow(x)"
msgstr "il numero di centri dei cluster deve essere tra 1 e nrow(x)"

#. R/ts.R: stop("number of differences must be a positive integer")
#: R/ts.R:0
msgid "number of differences must be a positive integer"
msgstr "il numero di 'differences' deve essere un intero positivo"

#. R/poisson.test.R: gettext("number of events", domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "number of events"
msgstr "numero di predittori sbagliato"

#. R/power.anova.test.R: stop("number of groups must be at least 2")
#: R/power.anova.test.R:0
#, fuzzy
msgid "number of groups must be at least 2"
msgstr "il numero dei gruppi deve essere almeno 2"

#. R/smspline.R: stop("number of observations in 'x' and 'y' arguments must match")
#: R/smspline.R:0
#, fuzzy
msgid "number of observations in 'x' and 'y' arguments must match"
msgstr "il numero di osservazioni in 'x' e 'y' deve coincidere"

#. R/power.anova.test.R: stop("number of observations in each group must be at least 2")
#: R/power.anova.test.R:0
#, fuzzy
msgid "number of observations in each group must be at least 2"
msgstr "numero di osservazioni in ciascun gruppo deve essere almeno 2"

#. R/glm.R: gettextf("number of offsets (%d) should be equal to number of observations (%d)",     length(offset), NROW(Y))
#. R/lm.R: gettextf("number of offsets (%d) should be equal to number of observations (%d)",     length(offset), NROW(y))
#: R/glm.R:0 R/lm.R:0
#, fuzzy
msgid "number of offsets (%d) should be equal to number of observations (%d)"
msgstr ""
"il numero degli offest Ã¨ %d, dovrebbe essere %d (numero di osservazioni)"

#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#. R/add.R: stop("number of rows in use has changed: remove missing values?")
#: R/add.R:0
msgid "number of rows in use has changed: remove missing values?"
msgstr "il numero di righe in uso Ã¨ cambiato: elimino i missing value?"

#. R/ar.R: stop("number of series in 'object' and 'newdata' do not match")
#: R/ar.R:0
msgid "number of series in 'object' and 'newdata' do not match"
msgstr "numero di serie in 'object' e 'newdata' non conformi"

#. R/binom.test.R: gettext("number of successes", domain = "R-stats")
#: R/binom.test.R:0
msgid "number of successes"
msgstr ""

#. R/binom.test.R: gettext("number of trials", domain = "R-stats")
#: R/binom.test.R:0
#, fuzzy
msgid "number of trials"
msgstr "numero di predittori sbagliato"

#. R/ts.R: stop("number of values supplied is not a sub-multiple of the number of values to be replaced")
#: R/ts.R:0
msgid ""
"number of values supplied is not a sub-multiple of the number of values to "
"be replaced"
msgstr ""
"il numero di valori specificati per la sostituzione non sono un "
"sottomultiplo del numero di valori che devono essere sostituiti"

#. R/lsfit.R: gettextf("number of weights = %d should equal %d (number of responses)", nwts, nry)
#: R/lsfit.R:0
msgid "number of weights = %d should equal %d (number of responses)"
msgstr "il numero dei pesi =%d deve essere pari a %d (numero di risposte)"

#. R/smspline.R: stop("number of weights must match number of observations")
#: R/smspline.R:0
#, fuzzy
msgid "number of weights must match number of observations"
msgstr "il numero di pesi deve coincidere col numero di osservazioni"

#. R/ksmooth.R: stop("numeric 'y' argument must be supplied.\nFor density estimation use 'density()'")
#: R/ksmooth.R:0
#, fuzzy
msgid ""
"numeric 'y' argument must be supplied.\n"
"For density estimation use 'density()'"
msgstr ""
"si deve specificare y.\n"
"Per la stima di densitÃ  usare density()"

#. R/contrast.R: stop("numeric contrasts or contrast name expected")
#: R/contrast.R:0
msgid "numeric contrasts or contrast name expected"
msgstr "richiesti contrasti numerici o nomi contrasto"

#. R/biplot.R: gettextf("object '%s' has no scores", deparse(substitute(x)))
#. R/biplot.R: gettextf("object '%s' has no scores", deparse(substitute(x)))
#: R/biplot.R:0
msgid "object '%s' has no scores"
msgstr "l'oggetto '%s' non ha punteggi (scores)"

#. R/manova.R: gettextf("object must be of class %s or %s", dQuote("manova"), dQuote("maov"))
#: R/manova.R:0
#, fuzzy
msgid "object must be of class %s or %s"
msgstr "l'oggetto deve essere di classe \"manova\" o \"maov\""

#. R/lsfit.R: warning("observations with 0 weight were not used in calculating standard deviation")
#. R/lsfit.R: warning("observations with 0 weight were not used in calculating standard deviation")
#: R/lsfit.R:0
#, fuzzy
msgid ""
"observations with 0 weight were not used in calculating standard deviation"
msgstr ""
"le osservazioni con peso 0 non saranno usate nel calcolo della standard "
"deviation"

#. R/glm.R: warning("observations with zero weight not used for calculating dispersion")
#: R/glm.R:0
msgid "observations with zero weight not used for calculating dispersion"
msgstr ""
"osservazioni con pesi zero non vengono usate per il calcolo della dispersione"

#. R/fisher.test.R: gettext("odds ratio", domain = "R-stats")
#. R/fisher.test.R: gettext("odds ratio")
#: R/fisher.test.R:0
#, fuzzy
msgid "odds ratio"
msgstr "iterazioni"

#. R/selfStart.R: stop("old-style self-starting model functions are no longer supported.\n", "New selfStart functions are available.\n",     "Use\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\n",     "If writing your own selfStart model, see \"help(selfStart)\" for the new form of the \"initial\" attribute.",     domain = "R-stats")
#: R/selfStart.R:0
msgid "old-style self-starting model functions are no longer supported."
msgstr ""

#. R/optim.R: warning("one-dimensional optimization by Nelder-Mead is unreliable:\nuse \"Brent\" or optimize() directly")
#: R/optim.R:0
#, fuzzy
msgid ""
"one-dimensional optimization by Nelder-Mead is unreliable:\n"
"use \"Brent\" or optimize() directly"
msgstr ""
"ottimizzazione uni-dimensionale di Nelder-Mead non attendibile: usare "
"optimize"

#. R/cmdscale.R: gettextf("only %d of the first %d eigenvalues are > 0", k1, k)
#: R/cmdscale.R:0
#, fuzzy
msgid "only %d of the first %d eigenvalues are > 0"
msgstr "alcuni dei primi %d autovalori sono < 0"

#. R/loess.R: stop("only 1-4 predictors are allowed")
#: R/loess.R:0
msgid "only 1-4 predictors are allowed"
msgstr "permessi solo 1-4 predittori"

#. R/StructTS.R: stop("only implemented for univariate time series")
#. R/arma0.R: stop("only implemented for univariate time series")
#: R/StructTS.R:0 R/arma0.R:0
msgid "only implemented for univariate time series"
msgstr "implementato solo per serie storiche unidimensionali"

#. R/ts.R: stop("only replacement of elements is allowed")
#: R/ts.R:0
#, fuzzy
msgid "only replacement of elements is allowed"
msgstr "indicati troppo valori da sostituire"

#. R/stl.R: stop("only univariate series are allowed")
#: R/stl.R:0
msgid "only univariate series are allowed"
msgstr "ammesse solo serie unidimensionali"

#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#. R/HoltWinters.R: gettextf("optimization difficulties: %s", sol$message)
#: R/HoltWinters.R:0
msgid "optimization difficulties: %s"
msgstr ""

#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#. R/HoltWinters.R: stop("optimization failure")
#: R/HoltWinters.R:0
msgid "optimization failure"
msgstr ""

#. R/anova.R: gettextf("option \"%s\" is invalid: assuming TRUE", "show.coef.Pvalues")
#. R/anova.R: gettextf("option \"%s\" is invalid: assuming TRUE", "show.signif.stars")
#: R/anova.R:0
#, fuzzy
msgid "option \"%s\" is invalid: assuming TRUE"
msgstr "opzione \"show.coef.Pvalues\" non valida: assumo TRUE"

#. R/contr.poly.R: gettextf("orthogonal polynomials cannot be represented accurately enough for %d degrees of freedom",     n - 1)
#: R/contr.poly.R:0
msgid ""
"orthogonal polynomials cannot be represented accurately enough for %d "
"degrees of freedom"
msgstr ""
"i polinomi ortogonali non possono essere rappresentati con adeguata "
"accuratezza per %d gradi di libertÃ "

#. R/StructTS.R: gettext("p-value")
#. R/htest.R: gettext("p-value", domain = "R-stats")
#: R/StructTS.R:0 R/htest.R:0
msgid "p-value"
msgstr ""

#. R/ks.test.R: warning("p-value will be approximate in the presence of ties")
#: R/ks.test.R:0
msgid "p-value will be approximate in the presence of ties"
msgstr ""

#. R/lm.R: gettext("p-value: ", domain = "R-stats")
#: R/lm.R:0
msgid "p-value:"
msgstr ""

#. R/lsfit.R: gettextf("p-value=%s", format(round(pvalue[i], digits)), domain = "R-stats")
#: R/lsfit.R:0
msgid "p-value=%s"
msgstr ""

#. R/StructTS.R: gettext("p-values for Ljung-Box statistic")
#: R/StructTS.R:0
msgid "p-values for Ljung-Box statistic"
msgstr ""

#. R/nls.R: gettextf("parameters without starting value in 'data': %s", tmp_n)
#: R/nls.R:0
msgid "parameters without starting value in 'data': %s"
msgstr ""

#. R/pairwise.R: stop("pooling of SD is incompatible with paired tests")
#: R/pairwise.R:0
msgid "pooling of SD is incompatible with paired tests"
msgstr ""

#. R/family.R: stop("positive values only are allowed for the 'inverse.gaussian' family")
#: R/family.R:0
#, fuzzy
msgid "positive values only are allowed for the 'inverse.gaussian' family"
msgstr "sono ammessi solo valori positivi per la famiglia gaussiana inversa"

#. R/StructTS.R: gettextf("possible convergence problem: 'optim' gave code = %d and message %s", res$convergence,     sQuote(res$message))
#: R/StructTS.R:0
#, fuzzy
msgid "possible convergence problem: 'optim' gave code = %d and message %s"
msgstr "probabile errore di convergenza: optim ha restituito codice="

#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d", res$convergence)
#. R/arima.R: gettextf("possible convergence problem: optim gave code = %d", res$convergence)
#. R/arma0.R: gettextf("possible convergence problem: optim gave code = %d", code)
#: R/arima.R:0 R/arma0.R:0
#, fuzzy
msgid "possible convergence problem: optim gave code = %d"
msgstr "probabile errore di convergenza: optim ha restituito codice="

#. R/lm.R: warning("prediction from a rank-deficient fit may be misleading")
#: R/lm.R:0
msgid "prediction from a rank-deficient fit may be misleading"
msgstr "previsione da una stima non a rango pieno puÃ² essere non corretta"

#. R/lm.R: warning("predictions on current data refer to _future_ responses")
#: R/lm.R:0
msgid "predictions on current data refer to _future_ responses"
msgstr ""

#. R/loess.R: stop("predictors must all be numeric")
#: R/loess.R:0
msgid "predictors must all be numeric"
msgstr "i predittori devono essere tutti numerici"

#. R/distn.R: stop("probabilities must be finite, non-negative and not all 0")
#: R/distn.R:0
#, fuzzy
msgid "probabilities must be finite, non-negative and not all 0"
msgstr "le probabilitÃ  devono essere non negative."

#. R/chisq.test.R: stop("probabilities must be non-negative.")
#: R/chisq.test.R:0
msgid "probabilities must be non-negative."
msgstr "le probabilitÃ  devono essere non negative."

#. R/chisq.test.R: stop("probabilities must sum to 1.")
#: R/chisq.test.R:0
msgid "probabilities must sum to 1."
msgstr "le probabilitÃ  devono sommare a 1"

#. R/binom.test.R: gettext("probability of success", domain = "R-stats")
#: R/binom.test.R:0
msgid "probability of success"
msgstr ""

#. R/prop.test.R: gettext("proportion", domain = "R-stats")
#: R/prop.test.R:0
msgid "proportion"
msgstr ""

#. R/poisson.test.R: gettext("rate ratio", domain = "R-stats")
#. R/poisson.test.R: gettext("rate ratio", domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "rate ratio"
msgstr "iterazioni"

#. R/ansari.test.R: gettext("ratio of scales", domain = "R-stats")
#: R/ansari.test.R:0
msgid "ratio of scales"
msgstr ""

#. R/var.test.R: gettext("ratio of variances", domain = "R-stats")
#. R/var.test.R: gettext("ratio of variances", domain = "R-stats")
#: R/var.test.R:0
msgid "ratio of variances"
msgstr ""

#. R/optim.R: warning("read the documentation for 'trace' more carefully")
#: R/optim.R:0
msgid "read the documentation for 'trace' more carefully"
msgstr "leggere la documentazione di 'trace' piÃ¹ attentamente"

#. R/relevel.R: gettextf("ref = %d must be in 1L:%d", ref, nlev)
#: R/relevel.R:0
#, fuzzy
msgid "ref = %d must be in 1L:%d"
msgstr "ref = %d deve essere in 1:%d"

#. R/nlminb.R: gettext("relative convergence (4)")
#: R/nlminb.R:0
msgid "relative convergence (4)"
msgstr ""

#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#. R/wilcox.test.R: warning("requested 'conf.level' value is not achievable")
#: R/wilcox.test.R:0
msgid "requested 'conf.level' value is not achievable"
msgstr ""

#. R/wilcox.test.R: warning("requested conf.level not achievable")
#: R/wilcox.test.R:0
msgid "requested conf.level not achievable"
msgstr ""

#. R/factanal.R: stop("requested scores without an 'x' matrix")
#: R/factanal.R:0
msgid "requested scores without an 'x' matrix"
msgstr "'scores' richiesti senza indicare la matrice 'x'"

#. R/lm.R: warning("residual degrees of freedom in object suggest this is not an \"lm\" fit")
#: R/lm.R:0
msgid "residual degrees of freedom in object suggest this is not an \"lm\" fit"
msgstr ""
"numero di gradi di libertÃ  dei residui dell'oggetto suggeriscono che questo "
"non una stima \"lm\""

#. R/manova.R: gettextf("residuals have rank %d < %d", rss.qr$rank, ncol(resid))
#: R/manova.R:0
msgid "residuals have rank %d < %d"
msgstr "i residui hanno rango %d < %d"

#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#. R/mlm.R: gettextf("residuals have rank %s < %s", rss.qr$rank, pp)
#: R/mlm.R:0
#, fuzzy
msgid "residuals have rank %s < %s"
msgstr "i residui hanno rango %d < %d"

#. R/factanal.R: stop("response not allowed in formula")
#. R/prcomp.R: stop("response not allowed in formula")
#. R/princomp.R: stop("response not allowed in formula")
#: R/factanal.R:0 R/prcomp.R:0 R/princomp.R:0
msgid "response not allowed in formula"
msgstr "risposta non ammessa in formula"

#. R/integrate.R: gettext("roundoff error is detected in the extrapolation table")
#: R/integrate.R:0
msgid "roundoff error is detected in the extrapolation table"
msgstr ""

#. R/integrate.R: gettext("roundoff error was detected")
#: R/integrate.R:0
msgid "roundoff error was detected"
msgstr ""

#. R/dendrogram.R: stop("row dendrogram ordering gave index of wrong length")
#: R/dendrogram.R:0
msgid "row dendrogram ordering gave index of wrong length"
msgstr ""
"ordinamento per riga del dendrogramma restituisce un indice di lunghezza "
"sbagliata"

#. R/htest.R: gettext("sample estimates:", domain = "R-stats")
#: R/htest.R:0
msgid "sample estimates:"
msgstr ""

#. R/bandwidths.R: stop("sample is too sparse to find TD", domain = "R-stats")
#: R/bandwidths.R:0
msgid "sample is too sparse to find TD"
msgstr "il campione Ã¨ troppo sparse per trovare TD"

#. R/mantelhaen.test.R: stop("sample size in each stratum must be > 1")
#: R/mantelhaen.test.R:0
#, fuzzy
msgid "sample size in each stratum must be > 1"
msgstr "l'ampiezza campionaria in ciascun strato deve essere > 1"

#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#. R/ansari.test.R: warning("samples differ in location: cannot compute confidence set, returning NA")
#: R/ansari.test.R:0
msgid "samples differ in location: cannot compute confidence set, returning NA"
msgstr ""
"i campioni differiscono in posizione: non possono calcolare gli insiemi di "
"confidenza, restituisco NA"

#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#. R/add.R: gettext("scale: ", domain = "R-stats")
#: R/add.R:0
msgid "scale:"
msgstr ""

#. R/ts.R: stop("scatter plots only for univariate time series")
#: R/ts.R:0
msgid "scatter plots only for univariate time series"
msgstr "diagrammi di dispersione solo per serie unidimensionali"

#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#. R/add.R: stop("scope is not a subset of term labels")
#: R/add.R:0
msgid "scope is not a subset of term labels"
msgstr "scope non Ã¨ un sottoinsieme delle etichette dei termini"

#. R/nlm.R: gettextf("search in [%g,%g]\n", lower, upper, domain = "R-stats")
#: R/nlm.R:0
msgid "search in [%g,%g]"
msgstr ""

#. R/nlm.R: gettextf("search in [%g,%g] ... ", lower, upper, domain = "R-stats")
#: R/nlm.R:0
msgid "search in [%g,%g] ..."
msgstr ""

#. R/arima.R: warning("seasonal MA part of model is not invertible")
#. R/arma0.R: warning("seasonal MA part of model is not invertible")
#: R/arima.R:0 R/arma0.R:0
msgid "seasonal MA part of model is not invertible"
msgstr "la parte stagionale MA del modello non Ã¨ invertibile"

#. R/ts.R: warning("series is corrupt, with no 'tsp' attribute")
#. R/ts.R: stop("series is corrupt, with no 'tsp' attribute")
#: R/ts.R:0
msgid "series is corrupt, with no 'tsp' attribute"
msgstr ""

#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d", NROW(x), nn)
#. R/ts.R: gettextf("series is corrupt: length %d with 'tsp' implying %d", NROW(x), nn)
#: R/ts.R:0
msgid "series is corrupt: length %d with 'tsp' implying %d"
msgstr ""

#. R/stl.R: stop("series is not periodic or has less than two periods")
#: R/stl.R:0
msgid "series is not periodic or has less than two periods"
msgstr "la serie non Ã¨ periodica o ha meno di due periodi"

#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#. R/nls.R: stop("setVarying : 'vary' length must match length of parameters")
#: R/nls.R:0
#, fuzzy
msgid "setVarying : 'vary' length must match length of parameters"
msgstr ""
"setVarying: la lunghezza di vary deve coincidere con quella dei parametri"

#. R/smspline.R: warning(wtxt, "\n", "setting df = 1  __use with care!__", sep = "")
#: R/smspline.R:0
msgid "setting df = 1  __use with care!__"
msgstr "uso df = 1 __usare con molta cautela!__"

#. R/arima.R: gettextf("sigma^2 estimated as %s:  log likelihood = %s,  aic = %s", format(x$sigma2,     digits = digits), format(round(x$loglik, 2L)), format(round(x$aic, 2L)), domain = "R-stats")
#. R/arma0.R: gettextf("sigma^2 estimated as %s:  log likelihood = %s,  aic = %s", format(x$sigma2,     digits = digits), format(round(x$loglik, 2)), format(round(x$aic, 2)), domain = "R-stats")
#: R/arima.R:0 R/arma0.R:0
msgid "sigma^2 estimated as %s:  log likelihood = %s,  aic = %s"
msgstr ""

#. R/arima.R: gettextf("sigma^2 estimated as %s:  part log likelihood = %s", format(x$sigma2, digits = digits),     format(round(x$loglik, 2)), domain = "R-stats")
#. R/arma0.R: gettextf("sigma^2 estimated as %s:  part log likelihood = %s", format(x$sigma2, digits = digits),     format(round(x$loglik, 2)), domain = "R-stats")
#: R/arima.R:0 R/arma0.R:0
msgid "sigma^2 estimated as %s:  part log likelihood = %s"
msgstr ""

#. R/contrast.R: stop("singular contrast matrix")
#: R/contrast.R:0
msgid "singular contrast matrix"
msgstr "matrice di contrasto singolare"

#. R/nlminb.R: gettext("singular convergence (7)")
#: R/nlminb.R:0
#, fuzzy
msgid "singular convergence (7)"
msgstr "stima singolare"

#. R/lm.R: stop("singular fit encountered")
#. R/lm.R: stop("singular fit encountered")
#: R/lm.R:0
msgid "singular fit encountered"
msgstr "stima singolare"

#. R/nls.R: stop("singular gradient matrix at initial parameter estimates")
#: R/nls.R:0
msgid "singular gradient matrix at initial parameter estimates"
msgstr "matrice gradiente singolare per le stime iniziali dei parametri"

#. R/ts-tests.R: stop("singularities in regression")
#: R/ts-tests.R:0
msgid "singularities in regression"
msgstr "singolaritÃ  nella regressione"

#. R/distn.R: stop("size != sum(x), i.e. one is wrong")
#: R/distn.R:0
msgid "size != sum(x), i.e. one is wrong"
msgstr "size != sum(x), e.g. una delle due Ã¨ sbagliata"

#. R/hclust.R: stop("size cannot be NA nor exceed 65536")
#: R/hclust.R:0
msgid "size cannot be NA nor exceed 65536"
msgstr ""

#. R/smspline.R: gettext("smoothing parameter value is too large")
#: R/smspline.R:0
#, fuzzy
msgid "smoothing parameter value is too large"
msgstr "NA lev[]; probabilmente il parametro di smothh 'spar' Ã¨ troppo grande!"

#. R/smspline.R: gettext("smoothing parameter value is too small")
#: R/smspline.R:0
#, fuzzy
msgid "smoothing parameter value is too small"
msgstr "valori dei parametri non validi"

#. R/arima.R: warning("some AR parameters were fixed: setting 'transform.pars = FALSE'")
#: R/arima.R:0
#, fuzzy
msgid "some AR parameters were fixed: setting 'transform.pars = FALSE'"
msgstr "alcuni parametri AR sono stati fissati: imposto transform.pars = FALSE"

#. R/arma0.R: warning("some ARMA parameters were fixed: setting transform.pars = FALSE")
#: R/arma0.R:0
msgid "some ARMA parameters were fixed: setting transform.pars = FALSE"
msgstr ""
"alcuni parametri ARMA sono stati fissati: imposto transform.pars = FALSE"

#. R/reshape.R: gettextf("some constant variables (%s) are really varying", tmp_N)
#: R/reshape.R:0
msgid "some constant variables (%s) are really varying"
msgstr "alcune variabili 'constant' (%s) sono in realtÃ  'varying'"

#. R/kruskal.test.R: warning("some elements of 'x' argument are not numeric and will be coerced to numeric")
#: R/kruskal.test.R:0
msgid ""
"some elements of 'x' argument are not numeric and will be coerced to numeric"
msgstr ""

#. R/dummy.coef.R: warning("some terms will have NAs due to the limits of the method")
#: R/dummy.coef.R:0
msgid "some terms will have NAs due to the limits of the method"
msgstr "alcuni termini saranno NA a causa della limitazione del metodo"

#. R/smspline.R: stop("some weights should be positive")
#: R/smspline.R:0
msgid "some weights should be positive"
msgstr "alcuni pesi dovrebbero essere positivi"

#. R/smspline.R: warning("specified both 'df' and 'cv'; will disregard the latter")
#: R/smspline.R:0
msgid "specified both 'df' and 'cv'; will disregard the latter"
msgstr ""

#. R/loess.R: stop("specified parametric for all predictors")
#: R/loess.R:0
msgid "specified parametric for all predictors"
msgstr "specificato parametrico per tutti i predittori"

#. R/loess.R: stop("specified the square of a factor predictor to be dropped when degree = 1")
#: R/loess.R:0
msgid ""
"specified the square of a factor predictor to be dropped when degree = 1"
msgstr ""

#. R/loess.R: stop("specified the square of a predictor to be dropped with only one numeric predictor")
#: R/loess.R:0
msgid ""
"specified the square of a predictor to be dropped with only one numeric "
"predictor"
msgstr ""

#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#. R/distn.R: warning("specify 'rate' or 'scale' but not both")
#. R/distn.R: stop("specify 'rate' or 'scale' but not both")
#: R/distn.R:0
msgid "specify 'rate' or 'scale' but not both"
msgstr ""

#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#. R/identify.hclust.R: stop("specify exactly one of 'k' and 'h'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'k' and 'h'"
msgstr "specificare esattamente uno tra 'k' e 'h'"

#. R/identify.hclust.R: stop("specify exactly one of 'which' and 'x'")
#: R/identify.hclust.R:0
msgid "specify exactly one of 'which' and 'x'"
msgstr "specificare uno solo tra 'which' e 'x'"

#. R/spectrum.R: gettext("spectrum")
#: R/spectrum.R:0
msgid "spectrum"
msgstr ""

#. R/spectrum.R: gettext("spectrum (dB)")
#: R/spectrum.R:0
msgid "spectrum (dB)"
msgstr ""

#. R/splinefun.R: warning("spline: first and last y values differ - using y[1L] for both")
#: R/splinefun.R:0
#, fuzzy
msgid "spline: first and last y values differ - using y[1L] for both"
msgstr ""
"spline: il primo e l'ultimo valore di y sono diversi - uso y[1] per entrambi"

#. R/spline.R: warning("spline: first and last y values differ - using y[1] for both")
#: R/spline.R:0
msgid "spline: first and last y values differ - using y[1] for both"
msgstr ""
"spline: il primo e l'ultimo valore di y sono diversi - uso y[1] per entrambi"

#. R/factanal.R: gettextf("start %d value: %s uniqs: %s", i, format(nfit$criteria[1L]), format(as.vector(round(nfit$uniquenesses,     4))), domain = "R-stats")
#: R/factanal.R:0
msgid "start %d value: %s uniqs: %s"
msgstr ""

#. R/glm.R: warning("step size truncated due to divergence", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated due to divergence"
msgstr "ampiezza del passo ridotta a causa della divergenza"

#. R/glm.R: warning("step size truncated: out of bounds", call. = FALSE)
#: R/glm.R:0
msgid "step size truncated: out of bounds"
msgstr "lunghezza del passo ridotta: fuori limite"

#. R/stepfun.R: stop("stepfun: 'x' must be ordered increasingly")
#: R/stepfun.R:0
msgid "stepfun: 'x' must be ordered increasingly"
msgstr "stepfun: 'x' deve essere ordinato in ordine crescente"

#. R/nlminb.R: gettext("storage only has been allocated (14)")
#: R/nlminb.R:0
msgid "storage only has been allocated (14)"
msgstr ""

#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#. R/cor.R: stop("supply both 'x' and 'y' or a matrix-like 'x'")
#: R/cor.R:0
msgid "supply both 'x' and 'y' or a matrix-like 'x'"
msgstr "fornire sia 'x' che 'y' o una 'x' in forma matriciale"

#. R/pairwise.R: gettext("t tests with non-pooled SD", domain = "R-stats")
#: R/pairwise.R:0
msgid "t tests with non-pooled SD"
msgstr ""

#. R/pairwise.R: gettext("t tests with pooled SD", domain = "R-stats")
#: R/pairwise.R:0
msgid "t tests with pooled SD"
msgstr ""

#. R/prop.test.R: stop("table 'x' should have 2 entries")
#: R/prop.test.R:0
msgid "table 'x' should have 2 entries"
msgstr ""

#. R/cutree.R: stop("the 'height' component of 'tree' is not sorted (increasingly)")
#: R/cutree.R:0
#, fuzzy
msgid "the 'height' component of 'tree' is not sorted (increasingly)"
msgstr ""
"la componente 'height' di 'tree' non Ã¨ ordinata\n"
"(in modo crescente); prova ad usare prima as.hclust()"

#. R/lm.R: stop("the 'se.fit' argument is not yet implemented for \"mlm\" objects")
#: R/lm.R:0
msgid "the 'se.fit' argument is not yet implemented for \"mlm\" objects"
msgstr "l'argomento 'se.fit' non Ã¨ ancora implementato per l'oggetto \"mlm\""

#. R/ks.test.R: gettext("the CDF of x lies above that of y", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies above that of y"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies above the null hypothesis", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies above the null hypothesis"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies below that of y", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies below that of y"
msgstr ""

#. R/ks.test.R: gettext("the CDF of x lies below the null hypothesis", domain = "R-stats")
#: R/ks.test.R:0
msgid "the CDF of x lies below the null hypothesis"
msgstr ""

#. R/poisson.test.R: stop("the case k > 2 is unimplemented")
#: R/poisson.test.R:0
#, fuzzy
msgid "the case k > 2 is unimplemented"
msgstr "tipo '%s' non ancora implementato"

#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#. R/aov.R: stop("the contrast defined is empty (has no TRUE elements)")
#: R/aov.R:0
msgid "the contrast defined is empty (has no TRUE elements)"
msgstr "il contrasto definito Ã¨ vuoto (non ha elementi TRUE)"

#. R/StructTS.R: stop("the first value of the time series must not be missing")
#: R/StructTS.R:0
msgid "the first value of the time series must not be missing"
msgstr "il primo valore della serie storica non deve essere mancante"

#. R/glm.R: warning("the following arguments to 'anova.glm' are invalid and dropped: ", tmp_N)
#: R/glm.R:0
#, fuzzy
msgid "the following arguments to 'anova.glm' are invalid and dropped:"
msgstr "gli argomenti seguenti di 'anova.glm' sono sbagliati o ignorati:"

#. R/integrate.R: gettext("the input is invalid")
#: R/integrate.R:0
msgid "the input is invalid"
msgstr ""

#. R/integrate.R: gettext("the integral is probably divergent")
#: R/integrate.R:0
msgid "the integral is probably divergent"
msgstr ""

#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#. R/StructTS.R: stop("the series is entirely NA")
#: R/StructTS.R:0
msgid "the series is entirely NA"
msgstr "la serie Ã¨ interamente composta di NA"

#. R/reshape.R: warning("there are records with missing times, which will be dropped.")
#: R/reshape.R:0
msgid "there are records with missing times, which will be dropped."
msgstr "ci sono record con 'times' mancanti, saranno ignorati"

#. R/bartlett.test.R: stop("there must be at least 2 observations in each group")
#: R/bartlett.test.R:0
msgid "there must be at least 2 observations in each group"
msgstr "devono esserci almeno 2 osservazioni in ogni gruppo"

#. R/model.tables.R: stop("this fit does not inherit from \"lm\"")
#: R/model.tables.R:0
msgid "this fit does not inherit from \"lm\""
msgstr ""

#. R/ks.test.R: warning("ties should not be present for the Kolmogorov-Smirnov test")
#: R/ks.test.R:0
msgid "ties should not be present for the Kolmogorov-Smirnov test"
msgstr ""

#. R/poisson.test.R: gettext("time base", domain = "R-stats")
#: R/poisson.test.R:0
msgid "time base"
msgstr ""

#. R/ts.R: stop("time series contains internal NA values")
#: R/ts.R:0
#, fuzzy
msgid "time series contains internal NA values"
msgstr "serie storica contenente valori interni NA"

#. R/HoltWinters.R: stop("time series has no or less than 2 periods")
#: R/HoltWinters.R:0
#, fuzzy
msgid "time series has no or less than 2 periods"
msgstr "la serie storica non ha o ha meno di 3 periodi"

#. R/ts.R: stop("times to be replaced do not match")
#: R/ts.R:0
msgid "times to be replaced do not match"
msgstr "'times' da sostituire non corrispondenti"

#. R/lm.influence.R: stop("too few cases, n < k")
#: R/lm.influence.R:0
msgid "too few cases, n < k"
msgstr "troppi pochi casi, n < k"

#. R/zzModels.R: stop("too few distinct input values to fit a Michaelis-Menten model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a Michaelis-Menten model"
msgstr ""
"troppo pochi valori distinti in input per stimare un modello Michaelis-Menten"

#. R/zzModels.R: stop("too few distinct input values to fit a biexponential")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a biexponential"
msgstr "troppo pochi valori distinti in input per stimare una biesponenziale"

#. R/zzModels.R: stop("too few distinct input values to fit a four-parameter logistic")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a four-parameter logistic"
msgstr ""
"troppo pochi valori distinti in input per stimare un logistica a 4 parametri"

#. R/zzModels.R: stop("too few distinct input values to fit a logistic model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit a logistic model"
msgstr "troppo pochi valori distinti in input per stimare un modello logistico"

#. R/zzModels.R: stop("too few distinct input values to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit an asymptotic regression model"
msgstr ""
"troppi pochi valori distinti in input per stimare un modello di regressione "
"asintotico"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOff' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOff' model"
msgstr ""
"troppo pochi valori distinti in input per stimare il modello 'asympOff'"

#. R/zzModels.R: stop("too few distinct input values to fit the 'asympOrig' model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the 'asympOrig' model"
msgstr ""
"troppo pochi valori distinti in input per stimare il modello 'asympOrig'"

#. R/zzModels.R: stop("too few distinct input values to fit the Gompertz model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Gompertz model"
msgstr "troppo pochi valori distinti in input per stimare un modello Gompertz"

#. R/zzModels.R: stop("too few distinct input values to fit the Weibull growth model")
#: R/zzModels.R:0
msgid "too few distinct input values to fit the Weibull growth model"
msgstr ""
"troppo pochi valori distinti in input per stimare un modello di crescita "
"Weibull"

#. R/pairwise.R: stop("too few groups")
#: R/pairwise.R:0
msgid "too few groups"
msgstr "troppi pochi gruppi"

#. R/arima.R: stop("too few non-missing observations")
#: R/arima.R:0
msgid "too few non-missing observations"
msgstr "troppo poche osservazioni non-mancanti"

#. R/zzModels.R: stop("too few observations to fit an asymptotic regression model")
#: R/zzModels.R:0
msgid "too few observations to fit an asymptotic regression model"
msgstr ""
"troppe poche osservazioni per poter stimare un modello di regressione "
"asintotico"

#. R/ts.R: stop("too many replacement values supplied")
#: R/ts.R:0
msgid "too many replacement values supplied"
msgstr "indicati troppo valori da sostituire"

#. R/arma0.R: warning("transformed ARMA parameters were fixed")
#: R/arma0.R:0
msgid "transformed ARMA parameters were fixed"
msgstr "i parametri ARMA trasformati giÃ  fissati"

#. R/mantelhaen.test.R: gettextf("true common odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is greater than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is less than %s"
msgstr ""

#. R/mantelhaen.test.R: gettextf("true common odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/mantelhaen.test.R:0
msgid "true common odds ratio is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true correlation is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true correlation is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/cor.test.R: gettextf("true correlation is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true correlation is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is less than %s"
msgstr ""

#. R/t.test.R: gettextf("true difference in means is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true difference in means is not equal to %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true event rate is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true event rate is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/poisson.test.R: gettextf("true event rate is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true event rate is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
#, fuzzy
msgid "true location is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/wilcox.test.R: gettextf("true location is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location is not equal to %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is greater than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is greater than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is less than %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is less than %s"
msgstr ""

#. R/wilcox.test.R: gettextf("true location shift is not equal to %s", mu, domain = "R-stats")
#: R/wilcox.test.R:0
msgid "true location shift is not equal to %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is greater than %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is greater than %s"
msgstr ""

#. R/t.test.R: gettextf("true mean is less than %s", mu, domain = "R-stats")
#: R/t.test.R:0
#, fuzzy
msgid "true mean is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/t.test.R: gettextf("true mean is not equal to %s", mu, domain = "R-stats")
#: R/t.test.R:0
msgid "true mean is not equal to %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is greater than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is greater than %s"
msgstr ""

#. R/fisher.test.R: gettextf("true odds ratio is less than %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
#, fuzzy
msgid "true odds ratio is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/fisher.test.R: gettextf("true odds ratio is not equal to %s", NVAL, domain = "R-stats")
#: R/fisher.test.R:0
msgid "true odds ratio is not equal to %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is greater than %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is greater than %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is less than %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is less than %s"
msgstr ""

#. R/binom.test.R: gettextf("true probability of success is not equal to %s", p, domain = "R-stats")
#: R/binom.test.R:0
msgid "true probability of success is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is greater than %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is greater than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is less than %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is less than %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion (%s) is not equal to %s", paste((1:l)[OK], collapse = ", "),     NVAL, domain = "R-stats")
#: R/prop.test.R:0
msgid "true proportion (%s) is not equal to %s"
msgstr ""

#. R/prop.test.R: gettextf("true proportion is greater than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
#, fuzzy
msgid "true proportion is greater than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/prop.test.R: gettextf("true proportion is less than %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
#, fuzzy
msgid "true proportion is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/prop.test.R: gettextf("true proportion is not equal to %s", NVAL, domain = "R-stats")
#: R/prop.test.R:0
#, fuzzy
msgid "true proportion is not equal to %s"
msgstr "'r' Ã¨ minori di 1"

#. R/poisson.test.R: gettextf("true rate ratio is greater than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is greater than %s"
msgstr ""

#. R/poisson.test.R: gettextf("true rate ratio is less than %s", r, domain = "R-stats")
#: R/poisson.test.R:0
#, fuzzy
msgid "true rate ratio is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/poisson.test.R: gettextf("true rate ratio is not equal to %s", r, domain = "R-stats")
#: R/poisson.test.R:0
msgid "true rate ratio is not equal to %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is greater than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is greater than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is less than %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is less than %s"
msgstr ""

#. R/ansari.test.R: gettextf("true ratio of scales is not equal to %s", NVAL, domain = "R-stats")
#: R/ansari.test.R:0
msgid "true ratio of scales is not equal to %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is greater than %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is greater than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is less than %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is less than %s"
msgstr ""

#. R/var.test.R: gettextf("true ratio of variances is not equal to %s", ratio, domain = "R-stats")
#: R/var.test.R:0
msgid "true ratio of variances is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true rho is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true rho is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/cor.test.R: gettextf("true rho is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true rho is not equal to %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is greater than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is greater than %s"
msgstr ""

#. R/cor.test.R: gettextf("true tau is less than %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
#, fuzzy
msgid "true tau is less than %s"
msgstr "'r' Ã¨ minori di 1"

#. R/cor.test.R: gettextf("true tau is not equal to %s", NVAL, domain = "R-stats")
#: R/cor.test.R:0
msgid "true tau is not equal to %s"
msgstr ""

#. R/add.R: gettextf("trying +%s", tt, domain = "R-stats")
#: R/add.R:0
msgid "trying +%s"
msgstr ""

#. R/add.R: gettextf("trying - %s", tt, domain = "R-stats")
#: R/add.R:0
msgid "trying - %s"
msgstr ""

#. R/ks.test.R: gettext("two-sided", domain = "R-stats")
#. R/ks.test.R: gettext("two-sided", domain = "R-stats")
#: R/ks.test.R:0
msgid "two-sided"
msgstr ""

#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#. R/model.tables.R: gettextf("type '%s' is not implemented yet", type)
#: R/model.tables.R:0
msgid "type '%s' is not implemented yet"
msgstr "tipo '%s' non ancora implementato"

#. R/cancor.R: stop("unequal number of rows in 'cancor()'")
#: R/cancor.R:0
#, fuzzy
msgid "unequal number of rows in 'cancor()'"
msgstr "numero di colonne differente in 'cancor'"

#. R/acf.R: stop("univariate time series only")
#: R/acf.R:0
msgid "univariate time series only"
msgstr "solo serie storiche unidimensionali"

#. R/density.R: stop("unknown bandwidth rule")
#: R/density.R:0
msgid "unknown bandwidth rule"
msgstr "regola di bandwidth sconosciuta"

#. R/kernel.R: stop("unknown named kernel")
#: R/kernel.R:0
msgid "unknown named kernel"
msgstr "nome kernel sconosciuto"

#. R/optim.R: gettextf("unknown names in control: %s")
#: R/optim.R:0
#, fuzzy
msgid "unknown names in control: %s"
msgstr "nome kernel sconosciuto"

#. R/stl.R: stop("unknown string value for 's.window' argument")
#: R/stl.R:0
#, fuzzy
msgid "unknown string value for 's.window' argument"
msgstr "valore stringa sconosciuto in s.window"

#. R/nls.R: warning("upper and lower bounds ignored unless 'algorithm = \"port\"'")
#: R/nls.R:0
msgid "upper and lower bounds ignored unless 'algorithm = \"port\"'"
msgstr ""

#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate", fam)
#. R/glm.R: gettextf("using F test with a '%s' family is inappropriate", fam)
#: R/glm.R:0
msgid "using F test with a '%s' family is inappropriate"
msgstr ""

#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#. R/glm.R: warning("using F test with a fixed dispersion is inappropriate")
#: R/glm.R:0
msgid "using F test with a fixed dispersion is inappropriate"
msgstr ""

#. R/models.R: warning("using type = \"numeric\" with a factor response will be ignored")
#: R/models.R:0
msgid "using type = \"numeric\" with a factor response will be ignored"
msgstr ""

#. R/family.R: message("using weights as inverse variances")
#: R/family.R:0
msgid "using weights as inverse variances"
msgstr ""

#. R/family.R: message("using weights as shape parameters")
#: R/family.R:0
msgid "using weights as shape parameters"
msgstr ""

#. R/glm.R: stop("value of 'epsilon' must be > 0")
#: R/glm.R:0
#, fuzzy
msgid "value of 'epsilon' must be > 0"
msgstr "il valore di 'epsilon' deve essere > 0"

#. R/models.R: gettextf("variable '%s' is absent, its contrast will be ignored", nn)
#: R/models.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "variabile '%s' assente, i suoi contrasti saranno ignorati"

#. R/models.R: gettextf("variable '%s' is not a factor", nm)
#: R/models.R:0
msgid "variable '%s' is not a factor"
msgstr "la variabile '%s' non Ã¨ di tipo factor"

#. R/models.R: gettextf("variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied",     names(old)[wrong], old[wrong], new[wrong])
#: R/models.R:0
#, fuzzy
msgid "variable '%s' was fitted with type \"%s\" but type \"%s\" was supplied"
msgstr ""
"variabile '%s' stimata con classe \"%s\" ma Ã¨ stata specificata la classe "
"\"%s\""

#. R/models.R: gettextf("variables %s were specified with different types from the fit", tmp_N)
#: R/models.R:0
#, fuzzy
msgid "variables %s were specified with different types from the fit"
msgstr ""
"le variabili %s sono state specificate diversamente dal modello stimato"

#. R/aov.R: stop("weights are not supported in a multistratum aov() fit")
#: R/aov.R:0
msgid "weights are not supported in a multistratum aov() fit"
msgstr ""

#. R/cov.wt.R: stop("weights must be non-negative and not all zero")
#: R/cov.wt.R:0
msgid "weights must be non-negative and not all zero"
msgstr "i peisi devono essere non-negativi e non tutti nulli"

#. R/dendrogram.R: gettext(" with node pars", domain = "R-stats")
#: R/dendrogram.R:0
msgid "with node pars"
msgstr ""

#. R/anova.R: stop("wrong 'cs.ind' argument")
#: R/anova.R:0
#, fuzzy
msgid "wrong 'cs.ind' argument"
msgstr "argomento 'data' non valido"

#. R/embed.R: stop("wrong embedding dimension")
#. R/embed.R: stop("wrong embedding dimension")
#: R/embed.R:0
msgid "wrong embedding dimension"
msgstr "dimensioni di immersione sbagliata"

#. R/ftable.R: stop("wrong method")
#: R/ftable.R:0
#, fuzzy
msgid "wrong method"
msgstr "'endrule' sbagliata"

#. R/ppr.R: stop("wrong number of columns in 'x'")
#: R/ppr.R:0
msgid "wrong number of columns in 'x'"
msgstr "numero di colonne sbagliate in 'x'"

#. R/contrast.R: stop("wrong number of contrast matrix rows")
#: R/contrast.R:0
msgid "wrong number of contrast matrix rows"
msgstr "numero di righe della matrice di contrasto sbagliato"

#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#. R/ts-tests.R: stop("x is not a vector or univariate time series")
#: R/ts-tests.R:0
msgid "x is not a vector or univariate time series"
msgstr "'x' non Ã¨ un vettore o una serie storica"

#. R/family.R: stop("y values must be 0 <= y <= 1")
#. R/family.R: stop("y values must be 0 <= y <= 1")
#: R/family.R:0
#, fuzzy
msgid "y values must be 0 <= y <= 1"
msgstr "i valori di y devono essere 0 <= y <= 1"

#. R/smspline.R: gettextf("you must supply 1 < df <= n,  n = #{unique x} = %d", nx)
#: R/smspline.R:0
#, fuzzy
msgid "you must supply 1 < df <= n,  n = #{unique x} = %d"
msgstr "si deve fornire 1 < df <= n, n = #{x distrinti} ="

#. R/approx.R: stop("zero non-NA points")
#. R/approx.R: stop("zero non-NA points")
#. R/spline.R: stop("zero non-NA points")
#. R/splinefun.R: stop("zero non-NA points")
#: R/approx.R:0 R/spline.R:0 R/splinefun.R:0
msgid "zero non-NA points"
msgstr "zero non-NA punti"

#. R/ar.R: stop("zero-variance series")
#. R/ar.R: stop("zero-variance series")
#: R/ar.R:0
msgid "zero-variance series"
msgstr ""

#. R/smooth.R: ngettext(it, " used %d iteration", " used %d iterations", domain = "R-stats")
#. R/smooth.R: ngettext(it, " used %d iteration", " used %d iterations", domain = "R-stats")
#: R/smooth.R:0
#, fuzzy
msgid " used %d iteration"
msgid_plural " used %d iterations"
msgstr[0] "non converge in %d iterazioni"
msgstr[1] "non converge in %d iterazioni"

#. R/factanal.R: ngettext(factors, "%d factor is too many for %d variables", "%d factors are too many for %d variables",     domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "%d factor is too many for %d variables"
msgid_plural "%d factors are too many for %d variables"
msgstr[0] "%d variabili factor sono troppe per %d variabili"
msgstr[1] "%d variabili factor sono troppe per %d variabili"

#. R/loglin.R: ngettext(z$nlast, "%d iteration: deviation %s", "%d iterations: deviation %s", domain = "R-stats")
#: R/loglin.R:0
msgid "%d iteration: deviation %s"
msgid_plural "%d iterations: deviation %s"
msgstr[0] ""
msgstr[1] ""

#. R/lsfit.R: ngettext(sum(!good), "%d missing value deleted", "%d missing values deleted", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "%d missing value deleted"
msgid_plural "%d missing values deleted"
msgstr[0] "eliminati %d valori mancanti"
msgstr[1] "eliminati %d valori mancanti"

#. R/nafns.R: ngettext(n <- length(x), "%d observation deleted due to missingness", "%d observations deleted due to missingness")
#: R/nafns.R:0
msgid "%d observation deleted due to missingness"
msgid_plural "%d observations deleted due to missingness"
msgstr[0] ""
msgstr[1] ""

#. R/smspline.R: ngettext(diff, "%d observation with NA, NaN or Inf deleted", "%d observations with NAs, NaNs and/or Infs deleted",     domain = "R-stats")
#: R/smspline.R:0
#, fuzzy
msgid "%d observation with NA, NaN or Inf deleted"
msgid_plural "%d observations with NAs, NaNs and/or Infs deleted"
msgstr[0] "osservazioni con NA, NaN e/o Inf eliminate"
msgstr[1] "osservazioni con NA, NaN e/o Inf eliminate"

#. R/princomp.R: ngettext(x$n.obs, "%d observation.", "%d observations.", domain = "R-stats")
#: R/princomp.R:0
#, fuzzy
msgid "%d observation."
msgid_plural "%d observations."
msgstr[0] "non ci sono abbastanza osservazioni finite"
msgstr[1] "non ci sono abbastanza osservazioni finite"

#. R/lm.R: ngettext(df[1L], "%d residual is 0: no residual degrees of freedom!", "ALL %d residuals are 0: no residual degrees of freedom!",     domain = "R-stats")
#: R/lm.R:0
#, fuzzy
msgid "%d residual is 0: no residual degrees of freedom!"
msgid_plural "ALL %d residuals are 0: no residual degrees of freedom!"
msgstr[0] "contrasti non definiti per %d gradi di libertÃ "
msgstr[1] "contrasti non definiti per %d gradi di libertÃ "

#. R/princomp.R: ngettext(length(x$scale), "%d variable and", "%d variables and", domain = "R-stats")
#: R/princomp.R:0
#, fuzzy
msgid "%d variable and"
msgid_plural "%d variables and"
msgstr[0] "%d risposte, ma solo %d variabili"
msgstr[1] "%d risposte, ma solo %d variabili"

#. R/prop.test.R: ngettext(k, "%d-sample proportions test with continuity correction", "%d-sample test for equality of proportions with continuity correction",     domain = "R-stats")
#. R/prop.test.R: ngettext(k, "%d-sample proportions test with continuity correction", "%d-sample test for given proportions with continuity correction",     domain = "R-stats")
#: R/prop.test.R:0
msgid "%d-sample proportions test with continuity correction"
msgid_plural "%d-sample test for given proportions with continuity correction"
msgstr[0] ""
msgstr[1] ""

#. R/prop.test.R: ngettext(k, "%d-sample proportions test without continuity correction", "%d-sample test for equality of proportions without continuity correction",     domain = "R-stats")
#. R/prop.test.R: ngettext(k, "%d-sample proportions test without continuity correction", "%d-sample test for given proportions without continuity correction",     domain = "R-stats")
#: R/prop.test.R:0
msgid "%d-sample proportions test without continuity correction"
msgid_plural ""
"%d-sample test for given proportions without continuity correction"
msgstr[0] ""
msgstr[1] ""

#. R/lsfit.R: ngettext(nrx, "'X' matrix has %d case (row)", "'X' matrix has %d cases (rows)", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "'X' matrix has %d case (row)"
msgid_plural "'X' matrix has %d cases (rows)"
msgstr[0] "la matrice 'X' ha %d risposte, 'Y' ha %d risposte"
msgstr[1] "la matrice 'X' ha %d risposte, 'Y' ha %d risposte"

#. R/lsfit.R: ngettext(nry, "'Y' has %d case (row)", "'Y' has %d cases (rows)", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "'Y' has %d case (row)"
msgid_plural "'Y' has %d cases (rows)"
msgstr[0] "la matrice 'X' ha %d risposte, 'Y' ha %d risposte"
msgstr[1] "la matrice 'X' ha %d risposte, 'Y' ha %d risposte"

#. R/filter.R: ngettext(nser, "'init' must have %d column", "'init' must have 1 or %d columns",     domain = "R-stats")
#: R/filter.R:0
#, fuzzy
msgid "'init' must have %d column"
msgid_plural "'init' must have 1 or %d columns"
msgstr[0] "'init'; deve avere 1 o %d colonne"
msgstr[1] "'init'; deve avere 1 o %d colonne"

#. R/models.R: ngettext(nr, "'newdata' had %d row", "'newdata' had %d rows", domain = "R-stats")
#: R/models.R:0
#, fuzzy
msgid "'newdata' had %d row"
msgid_plural "'newdata' had %d rows"
msgstr[0] "'start' deve avere %d righe"
msgstr[1] "'start' deve avere %d righe"

#. R/factanal.R: ngettext(p, "'start' must have %d row", "'start' must have %d rows", domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "'start' must have %d row"
msgid_plural "'start' must have %d rows"
msgstr[0] "'start' deve avere %d righe"
msgstr[1] "'start' deve avere %d righe"

#. R/ts.R: ngettext(n.start, "'start.innov' argument is too short: need %d point", "'start.innov' argument is too short: need %d points",     domain = "R-stats")
#: R/ts.R:0
#, fuzzy
msgid "'start.innov' argument is too short: need %d point"
msgid_plural "'start.innov' argument is too short: need %d points"
msgstr[0] "valore di 'start' non cambiato"
msgstr[1] "valore di 'start' non cambiato"

#. R/nlm.R: ngettext(maxiter, "'uniroot()' method did _NOT_ converge in %d iteration", "'uniroot()' method did _NOT_ converge in %d iterations",     domain = "R-stats")
#: R/nlm.R:0
#, fuzzy
msgid "'uniroot()' method did _NOT_ converge in %d iteration"
msgid_plural "'uniroot()' method did _NOT_ converge in %d iterations"
msgstr[0] "non converge in %d iterazioni"
msgstr[1] "non converge in %d iterazioni"

#. R/logLik.R: ngettext(length(cl), "Class %s: %s (df=%s)\n", "Classes %s: %s (df=%s)\n", domain = "R-stats")
#: R/logLik.R:0
msgid "Class %s: %s (df=%s)\n"
msgid_plural "Classes %s: %s (df=%s)\n"
msgstr[0] ""
msgstr[1] ""

#. R/logLik.R: ngettext(length(cl), "Class %s: %s, ... (df=%s)\n", "Classes %s: %s, ... (df=%s)\n",     domain = "R-stats")
#: R/logLik.R:0
msgid "Class %s: %s, ... (df=%s)\n"
msgid_plural "Classes %s: %s, ... (df=%s)\n"
msgstr[0] ""
msgstr[1] ""

#. R/glm.R: ngettext(nsingular, "Coefficients: (%d not defined because of singularity)", "Coefficients: (%d not defined because of singularities)",     domain = "R-stats")
#. R/lm.R: ngettext(nsingular, "Coefficients: (%d not defined because of singularity)", "Coefficients: (%d not defined because of singularities)",     domain = "R-stats")
#: R/glm.R:0 R/lm.R:0
msgid "Coefficients: (%d not defined because of singularity)"
msgid_plural "Coefficients: (%d not defined because of singularities)"
msgstr[0] ""
msgstr[1] ""

#. R/density.R: ngettext(x$n, "Data: %s (%d observation);", "Data: %s (%d observations);", domain = "R-stats")
#: R/density.R:0
#, fuzzy
msgid "Data: %s (%d observation);"
msgid_plural "Data: %s (%d observations);"
msgstr[0] "non ci sono abbastanza osservazioni finite"
msgstr[1] "non ci sono abbastanza osservazioni finite"

#. R/isoreg.R: ngettext(length(x$iKnots), "Isotonic regression from %s\n  with %d knot / break at obs.nr. %s;\n",     "Isotonic regression from %s\n  with %d knots / breaks at obs.nr. %s;\n", domain = "R-stats")
#: R/isoreg.R:0
msgid ""
"Isotonic regression from %s\n"
"  with %d knot / break at obs.nr. %s;\n"
msgid_plural ""
"Isotonic regression from %s\n"
"  with %d knots / breaks at obs.nr. %s;\n"
msgstr[0] ""
msgstr[1] ""

#. R/kmeans.R: ngettext(length(x$size), "K-means clustering with %d cluster of size %s", "K-means clustering with %d clusters of sizes %s",     domain = "R-stats")
#: R/kmeans.R:0
msgid "K-means clustering with %d cluster of size %s"
msgid_plural "K-means clustering with %d clusters of sizes %s"
msgstr[0] ""
msgstr[1] ""

#. R/aov.R: ngettext(length(rs), "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/aov.R: ngettext(length(rs), "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/loess.R: ngettext(1L, "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#. R/loess.R: ngettext(1L, "Residual Standard Error:", "Residual Standard Errors:", domain = "R-stats")
#: R/aov.R:0 R/loess.R:0
msgid "Residual Standard Error:"
msgid_plural "Residual Standard Errors:"
msgstr[0] ""
msgstr[1] ""

#. R/smspline.R: ngettext(ip["iter"], "Smoothing Parameter  spar=%s lambda=%s (%d iteration)", "Smoothing Parameter  spar=%s lambda=%s (%d iterations)",     domain = "R-stats")
#: R/smspline.R:0
#, fuzzy
msgid "Smoothing Parameter  spar=%s lambda=%s (%d iteration)"
msgid_plural "Smoothing Parameter  spar=%s lambda=%s (%d iterations)"
msgstr[0] "valori dei parametri non validi"
msgstr[1] "valori dei parametri non validi"

#. R/stepfun.R: ngettext(n, "Step function with continuity 'f'=%s, %d knot at:", "Step function with continuity 'f'=%s, %d knots at:",     domain = "R-stats")
#: R/stepfun.R:0
msgid "Step function with continuity 'f'=%s, %d knot at:"
msgid_plural "Step function with continuity 'f'=%s, %d knots at:"
msgstr[0] ""
msgstr[1] ""

#. R/stepfun.R: ngettext(n, "Step function with continuity 'f'=%s, %d knot with summary:", "Step function with continuity 'f'=%s, %d knots with summary:",     domain = "R-stats")
#: R/stepfun.R:0
msgid "Step function with continuity 'f'=%s, %d knot with summary:"
msgid_plural "Step function with continuity 'f'=%s, %d knots with summary:"
msgstr[0] ""
msgstr[1] ""

#. R/factanal.R: ngettext(factors, "Test of the hypothesis that %d factor is sufficient.", "Test of the hypothesis that %d factors are sufficient.",     domain = "R-stats")
#: R/factanal.R:0
msgid "Test of the hypothesis that %d factor is sufficient."
msgid_plural "Test of the hypothesis that %d factors are sufficient."
msgstr[0] ""
msgstr[1] ""

#. R/factanal.R: ngettext(x$dof, "The chi square statistic is %s on %d degree of freedom.", "The chi square statistic is %s on %d degrees of freedom.",     domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "The chi square statistic is %s on %d degree of freedom."
msgid_plural "The chi square statistic is %s on %d degrees of freedom."
msgstr[0] "contrasti non definiti per %d gradi di libertÃ "
msgstr[1] "contrasti non definiti per %d gradi di libertÃ "

#. R/glm.R: ngettext(nobs, "X matrix has rank %d, but only %d observation", "X matrix has rank %d, but only %d observations",     domain = "R-stats")
#: R/glm.R:0
#, fuzzy
msgid "X matrix has rank %d, but only %d observation"
msgid_plural "X matrix has rank %d, but only %d observations"
msgstr[0] "la matrice X ha rango %d, ma solo %d osservazioni"
msgstr[1] "la matrice X ha rango %d, ma solo %d osservazioni"

#. R/smooth.R: ngettext(it, "__twiced__ used %d iteration", "__twiced__ used %d iterations", domain = "R-stats")
#. R/smooth.R: ngettext(it, "__twiced__ used %d iteration", "__twiced__ used %d iterations", domain = "R-stats")
#: R/smooth.R:0
#, fuzzy
msgid "__twiced__ used %d iteration"
msgid_plural "__twiced__ used %d iterations"
msgstr[0] "non converge in %d iterazioni"
msgstr[1] "non converge in %d iterazioni"

#. R/lsfit.R: ngettext(ncx, "but %d variable", "but %d variables", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "but %d variable"
msgid_plural "but %d variables"
msgstr[0] "%d risposte, ma solo %d variabili"
msgstr[1] "%d risposte, ma solo %d variabili"

#. R/models.R: ngettext(nr2, "but variable found had %d row", "but variables found have %d rows",     domain = "R-stats")
#: R/models.R:0
#, fuzzy
msgid "but variable found had %d row"
msgid_plural "but variables found have %d rows"
msgstr[0] "'newdata' ha %d righe ma la variabilie(i) trovate hanno %d righe"
msgstr[1] "'newdata' ha %d righe ma la variabilie(i) trovate hanno %d righe"

#. R/diffinv.R: ngettext(na, "extra argument %s is disregarded", "extra arguments %s are be disregarded",     domain = "R-stats")
#. R/lm.R: ngettext(length(dots), "extra argument %s is disregarded", "extra arguments %s are disregarded",     domain = "R-stats")
#. R/lm.R: ngettext(as.integer(length(dots)), "extra argument %s is disregarded", "extra arguments %s are disregarded",     domain = "R-stats")
#: R/diffinv.R:0 R/lm.R:0
#, fuzzy
msgid "extra argument %s is disregarded"
msgid_plural "extra arguments %s are disregarded"
msgstr[0] "argometni extra ignorati"
msgstr[1] "argometni extra ignorati"

#. R/dendrogram.R: ngettext(length(nms), "extra argument %s is not of class \"dendrogram\"", "extra arguments %s are not of class \"dendrogram\"",     domain = "R-stats")
#: R/dendrogram.R:0
#, fuzzy
msgid "extra argument %s is not of class \"dendrogram\""
msgid_plural "extra arguments %s are not of class \"dendrogram\""
msgstr[0] "argometni extra ignorati"
msgstr[1] "argometni extra ignorati"

#. R/models.R: ngettext(length(m), "factor %s has new level %s", "factor %s has new levels %s",     domain = "R-stats")
#: R/models.R:0
#, fuzzy
msgid "factor %s has new level %s"
msgid_plural "factor %s has new levels %s"
msgstr[0] "variabile factor '%s' ha nuovi livelli %s"
msgstr[1] "variabile factor '%s' ha nuovi livelli %s"

#. R/nls.R: ngettext(sum(np == -1), "fitting parameter %s without any variables", "fitting parameters %s without any variables",     domain = "R-stats")
#: R/nls.R:0
#, fuzzy
msgid "fitting parameter %s without any variables"
msgid_plural "fitting parameters %s without any variables"
msgstr[0] "specificati tutti i parametri"
msgstr[1] "specificati tutti i parametri"

#. R/kmeans.R: ngettext(iter.max, "kmeans algorithm did not converge in %d iteration", "kmeans algorithm did not converge in %d iterations",     domain = "R-stats")
#: R/kmeans.R:0
#, fuzzy
msgid "kmeans algorithm did not converge in %d iteration"
msgid_plural "kmeans algorithm did not converge in %d iterations"
msgstr[0] "medpolish() non converge in %d iterazioni"
msgstr[1] "medpolish() non converge in %d iterazioni"

#. R/add.R: ngettext(sum(where == 0), "lower scope has term %s not included in model", "lower scope has terms %s not included in model",     domain = "R-stats")
#: R/add.R:0
#, fuzzy
msgid "lower scope has term %s not included in model"
msgid_plural "lower scope has terms %s not included in model"
msgstr[0] "scope inferiore non incluso nel modello"
msgstr[1] "scope inferiore non incluso nel modello"

#. R/medpolish.R: ngettext(maxiter, "medpolish() did not converge in %d iteration", "medpolish() did not converge in %d iterations",     domain = "R-stats")
#: R/medpolish.R:0
#, fuzzy
msgid "medpolish() did not converge in %d iteration"
msgid_plural "medpolish() did not converge in %d iterations"
msgstr[0] "medpolish() non converge in %d iterazioni"
msgstr[1] "medpolish() non converge in %d iterazioni"

#. R/prop.test.R: ngettext(k, "null probability %s", "null probabilities %s", domain = "R-stats")
#: R/prop.test.R:0
msgid "null probability %s"
msgid_plural "null probabilities %s"
msgstr[0] ""
msgstr[1] ""

#. R/lsfit.R: ngettext(nry, "only %d case", "only %d cases", domain = "R-stats")
#: R/lsfit.R:0
#, fuzzy
msgid "only %d case"
msgid_plural "only %d cases"
msgstr[0] "%d risposte, ma solo %d variabili"
msgstr[1] "%d risposte, ma solo %d variabili"

#. R/selfStart.R: ngettext(sum(msng), "parameter %s does not occur in the model formula", "parameters %s do not occur in the model formula",     domain = "R-stats")
#: R/selfStart.R:0
msgid "parameter %s does not occur in the model formula"
msgid_plural "parameters %s do not occur in the model formula"
msgstr[0] ""
msgstr[1] ""

#. R/aov.R: ngettext(length(indError), "there is %d Error term: only 1 is allowed", "there are %d Error terms: only 1 is allowed",     domain = "R-stats")
#: R/aov.R:0
msgid "there is %d Error term: only 1 is allowed"
msgid_plural "there are %d Error terms: only 1 is allowed"
msgstr[0] ""
msgstr[1] ""

#. R/factanal.R: ngettext(nc, "unable to optimize from this starting value", "unable to optimize from these starting values",     domain = "R-stats")
#: R/factanal.R:0
#, fuzzy
msgid "unable to optimize from this starting value"
msgid_plural "unable to optimize from these starting values"
msgstr[0] "impossibile ottimizzare partendo da questi valori"
msgstr[1] "impossibile ottimizzare partendo da questi valori"

#. R/aov.R: ngettext(na, "unknown name %s in the 'split' list", "unknown names %s in the 'split' list",     domain = "R-stats")
#: R/aov.R:0
#, fuzzy
msgid "unknown name %s in the 'split' list"
msgid_plural "unknown names %s in the 'split' list"
msgstr[0] "nome(i) sconosciuti nella lista 'split'"
msgstr[1] "nome(i) sconosciuti nella lista 'split'"

#. R/nlminb.R: ngettext(length(nap), "unrecognized control element named %s ignored", "unrecognized control elements named %s ignored",     domain = "R-stats")
#. R/nls.R: ngettext(length(nap), "unrecognized control element named %s ignored", "unrecognized control elements named %s ignored",     domain = "R-stats")
#: R/nlminb.R:0 R/nls.R:0
msgid "unrecognized control element named %s ignored"
msgid_plural "unrecognized control elements named %s ignored"
msgstr[0] ""
msgstr[1] ""

#. R/add.R: ngettext(sum(where == 0), "upper scope has term %s not included in model", "upper scope has terms %s not included in model",     domain = "R-stats")
#: R/add.R:0
#, fuzzy
msgid "upper scope has term %s not included in model"
msgid_plural "upper scope has terms %s not included in model"
msgstr[0] "scope inferiore non incluso nel modello"
msgstr[1] "scope inferiore non incluso nel modello"

#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit",     domain = "R-stats")
#. R/add.R: ngettext(newn, "using the %d/%d row from a combined fit", "using the %d/%d rows from a combined fit",     domain = "R-stats")
#: R/add.R:0
#, fuzzy
msgid "using the %d/%d row from a combined fit"
msgid_plural "using the %d/%d rows from a combined fit"
msgstr[0] "uso le %d/%d righe da una stima combinata"
msgstr[1] "uso le %d/%d righe da una stima combinata"

#, fuzzy
#~ msgid "'%s' argument is of wrong length"
#~ msgstr "argomento 'scores' di lunghezza sbagliata"

#, fuzzy
#~ msgid "'merge' and 'height' arguments do not fit!"
#~ msgstr "'merge' e 'height' in disaccordo!"

#, fuzzy
#~ msgid "probabilities cannot be negative nor all 0"
#~ msgstr "le probaiblitÃ  non possono essere negative o tutte 0"

#, fuzzy
#~ msgid "Model: "
#~ msgstr "ordine modello:"

#, fuzzy
#~ msgid "Response: "
#~ msgstr "modelli con risposta"

#~ msgid "anova is only defined for sequences of \"nls\" objects"
#~ msgstr "anova definita solo per successioni di oggetti \"nls\""

#, fuzzy
#~ msgid "arguments must have same length"
#~ msgstr "gli argomenti devono avere la stessa lunghezza"

#, fuzzy
#~ msgid "missing values in 'object' argument"
#~ msgstr "valore mancante nell'oggetto"

#, fuzzy
#~ msgid "'object' argument is not a valid object of class \"smooth.spline\""
#~ msgstr "'centers' deve essere un numero o una matrice"

#, fuzzy
#~ msgid "'%s' argument must be numeric vector"
#~ msgstr "l'argomento 'x' deve essere numerico"

#, fuzzy
#~ msgid "extra argument %s is disregarded."
#~ msgid_plural "extra arguments %s are disregarded."
#~ msgstr[0] "argometni extra ignorati"
#~ msgstr[1] "argometni extra ignorati"

#, fuzzy
#~ msgid "Residual standard error:"
#~ msgid_plural "Residual standard errors:"
#~ msgstr[0] "contrasti non definiti per %d gradi di libertÃ "
#~ msgstr[1] "contrasti non definiti per %d gradi di libertÃ "

#, fuzzy
#~ msgid "'formula' should be of the form response ~ group"
#~ msgstr "formula '%s' deve essere della forma '~expr'"

#~ msgid "wrong k / cs.ind"
#~ msgstr "k / cs.ind sbagliata"

#~ msgid "non-square matrix"
#~ msgstr "matrice non quadrata"

#~ msgid "'x' must be non-negative"
#~ msgstr "'x' deve essere non negativo"

#~ msgid "'x' is not a vector or matrix"
#~ msgstr "'x' non Ã¨ un vettore o una matrice"

#~ msgid "missing values in 'filter'"
#~ msgstr "valori mancanti in 'filter'"

#~ msgid "argument 'sides' must be 1 or 2"
#~ msgstr "l'argomento 'sides' deve essere 1 o 2"

#~ msgid "incorrect specification for 'row.vars'"
#~ msgstr "specificazione di 'row'vars' non corretta"

#~ msgid "incorrect specification for 'col.vars'"
#~ msgstr "specificazione di 'col.vars' non corretta"

#~ msgid "'x' must be a matrix"
#~ msgstr "'x' deve essere una matrice"

#~ msgid "first argument must be a \"loess\" object"
#~ msgstr "il primo argomento deve essere un oggetto \"loess\""

#~ msgid "na.action must be a function"
#~ msgstr "na.action deve essere una funzione"

#~ msgid "option \"show.signif.stars\" is invalid: assuming TRUE"
#~ msgstr "opzione \"show.signif.stars\" non valida: assumo TRUE"

#~ msgid "no starting values supplied"
#~ msgstr "valori iniziali non specificati"

#, fuzzy
#~ msgid "negative values not allowed for the 'quasiPoisson' family"
#~ msgstr "valori negativi non ammissibili per la famiglia quasiPoisson"

#, fuzzy
#~ msgid "NA values are not allowed in 'groups' or 'blocks'"
#~ msgstr "NA non ammessi in 'groups' o 'blocks'"

#~ msgid "negative weights not allowed"
#~ msgstr "non sono ammessi pesi negativi"

#~ msgid "number of offsets is %d, should equal %d (number of observations)"
#~ msgstr ""
#~ "numero di offset pari a %d, dovrebbe essere %d (numero di osservazioni)"

#, fuzzy
#~ msgid "observations with 0 weights were not used"
#~ msgstr "le osservazioni con peso 0 non sono usate"

#~ msgid "bad value for 'lag' or 'differences'"
#~ msgstr "valore sbagliato per 'lag' o 'differences'"

#, fuzzy
#~ msgid "lengths of '%s' and '%s' must match"
#~ msgstr "le lunghezze di 'x' e 'w' devono coincidere"

#~ msgid "'x' has rank 0"
#~ msgstr "'x' ha rango 0"

#~ msgid "'y' has rank 0"
#~ msgstr "'y' ha rango 0"

#~ msgid "'y' must be numeric vector"
#~ msgstr "'y' deve essere un vettore numerico"

#~ msgid "not enough 'x' observations"
#~ msgstr "non ci sono abbstanza osservazioni in 'x'"

#~ msgid "not enough 'y' observations"
#~ msgstr "non abbastanza osservazioni in 'y'"

#~ msgid "Cannot compute exact p-value with ties"
#~ msgstr "Impossibile calcolare p-value esatti in presenza di ties"

#~ msgid "'x' is not a vector"
#~ msgstr "'x' non Ã¨ un vettore"

#, fuzzy
#~ msgid "'invalid '%s' value"
#~ msgstr "argomento 'data' non valido"

#~ msgid "not a valid \"smooth.spline\" object"
#~ msgstr "oggetto \"smooth.spline\" non valido"

#, fuzzy
#~ msgid "'cutpoints' must be unique, but are = %s"
#~ msgstr "'cutpoints' devono essere distinti, ma sono="

#, fuzzy
#~ msgid "extra argument %s will be disregarded"
#~ msgid_plural "extra arguments %s will be disregarded"
#~ msgstr[0] "argometni extra ignorati"
#~ msgstr[1] "argometni extra ignorati"

#, fuzzy
#~ msgid "_NOT_ converged in %d iteration"
#~ msgid_plural "_NOT_ converged in %d iterations"
#~ msgstr[0] "_NON_ converge in"
#~ msgstr[1] "_NON_ converge in"

#~ msgid "'k' is not an integer"
#~ msgstr "'k' non Ã¨ intero"

#~ msgid "sample size must be between 3 and 5000"
#~ msgstr "l'ampiezza campionaria deve essere tra 3 e 5000"

#~ msgid "wrong length for 'fixed'"
#~ msgstr "lunghezza errata per 'fixed'"

#~ msgid "'init' is of the wrong length"
#~ msgstr "'init' ha lunghezza sbagliata"

#~ msgid "'params' has wrong length"
#~ msgstr "'parms' ha lunghezza sbagliata"

#~ msgid "'varying' has wrong length"
#~ msgstr "'varying' di lughezza sbagliata"

#~ msgid "'times' is wrong length"
#~ msgstr "'times' ha lunghezza sbagliata"

#, fuzzy
#~ msgid "'%s' argument must be a vector of length 2"
#~ msgstr "l'argomento 'split' deve essere di tipo list"

#~ msgid "'degree' must be 0, 1 or 2"
#~ msgstr "'degree' deve essere 0, 1 o 2"

#~ msgid "'print.level' must be in {0,1,2}"
#~ msgstr "'print-level' deve essere in {0,1,2}"

#, fuzzy
#~ msgid "'interval' must be a vector of length 2"
#~ msgstr "'margins' deve essere un vettore numerico di lunghezza 2"

#~ msgid "'sig.level' must be numeric in [0, 1]"
#~ msgstr "'sig.level' deve essere numerico in [0, 1]"

#~ msgid "'conf.level' must be a single number between 0 and 1"
#~ msgstr "'conf.level' deve essere un numero tra 0 e 1"

#~ msgid "'coef' must be a vector"
#~ msgstr "'coef' deve essere un vettore"

#~ msgid "'coef' does not have the correct length"
#~ msgstr "'coef' non ha la lunghezza corretta"

#~ msgid "'k' is not a kernel"
#~ msgstr "'k' non Ã¨ un kernel"

#, fuzzy
#~ msgid "'x' is not a kernel"
#~ msgstr "'k' non Ã¨ un kernel"

#, fuzzy
#~ msgid "'conf.level' argument must be a single number between 0 and 1"
#~ msgstr "'conf.level' deve essere un numero tra 0 e 1"

#~ msgid "'x' and 'p' must have the same number of elements"
#~ msgstr "'x' e 'p' devono avere lo stesso numero di elementi"

#~ msgid "'ColSideColors' must be a character vector of length ncol(x)"
#~ msgstr ""
#~ "'ColSideColors' deve essere un vettore carattere di lunghezza ncol(x)"

#~ msgid "'RowSideColors' must be a character vector of length nrow(x)"
#~ msgstr ""
#~ "'RowSideColors' deve essere un vettore carattere di lunghezza nrow(x)"

#, fuzzy
#~ msgid "'x' and 'weights' arguments have unequal length"
#~ msgstr "'x' e 'g' devono avere la stessa lunghezza"

#~ msgid "'m' is less than 1"
#~ msgstr "'m' Ã¨ minore di 1"

#, fuzzy
#~ msgid "'weights' must be a numeric vector"
#~ msgstr "'y' deve essere un vettore numerico"

#, fuzzy
#~ msgid "'%s' argument must be of length 1"
#~ msgstr "l'argomento 'split' deve essere di tipo list"

#, fuzzy
#~ msgid "'%s' argument must be list"
#~ msgstr "l'argomento 'split' deve essere di tipo list"

#~ msgid "F test assumes quasi%s family"
#~ msgstr "il test F assume una famiglia quasi%s"

#~ msgid "lengths of 'x' and 'xreg' do not match"
#~ msgstr "lunghezze di 'x' e 'xreg' non coincidenti"

#~ msgid "'x' must be nonnegative and integer"
#~ msgstr "'x' deve essere un intero non negativo"

#~ msgid "incorrect length of 'x'"
#~ msgstr "lunghezza di 'x' sbagliata"

#~ msgid "'p' must be a single number between 0 and 1"
#~ msgstr "'p' deve essere un singolo numero tra 0 e 1"

#~ msgid "length of choices must be 2"
#~ msgstr "la lunghezza di choices deve essere 2"

#, fuzzy
#~ msgid ""
#~ "for the 'quasibinomial' family, y must be a vector of 0 and 1's\n"
#~ "or a 2 column matrix where col 1 is no. successes and col 2 is no. "
#~ "failures"
#~ msgstr ""
#~ "o una matrice di 2 colonne dove la prima colonna contiene il numero di "
#~ "successi e la seconda colonna il numero di insuccessi"

#~ msgid "'x' and 'y' must have at least 2 levels"
#~ msgstr "'x' e 'y' devono avere almeno due livelli"

#, fuzzy
#~ msgid "invalid nrow(x) or ncol(x)"
#~ msgstr "'x' non valida"

#~ msgid "formula missing"
#~ msgstr "formula mancante"

#, fuzzy
#~ msgid "model:"
#~ msgstr "ordine modello:"

#~ msgid ""
#~ "exactly one of 'n', 'delta', 'sd', 'power', and 'sig.level' must be NULL"
#~ msgstr ""
#~ "solo uno tra 'n', 'delta', 'sd', 'power', e 'sig.level' deve essere NULL"

#, fuzzy
#~ msgid "not enough (finite) '%s' observations"
#~ msgstr "osservazioni 'x' (finite) insufficienti"

#, fuzzy
#~ msgid "'x' argument must be numeric"
#~ msgstr "l'argomento 'x' deve essere numerico"

#~ msgid "non-finite 'bw'"
#~ msgstr "'bw' non finito"

#~ msgid "'bw' is not positive."
#~ msgstr "'bw' non positivo."

#~ msgid "non-finite 'from'"
#~ msgstr "'from' non finito"

#~ msgid "non-finite 'to'"
#~ msgstr "'to' non finito"

#, fuzzy
#~ msgid "invalid length(x)"
#~ msgstr "lunghezza dei membri non valida"

#, fuzzy
#~ msgid "invalid nrow(x)"
#~ msgstr "'x' non valida"

#, fuzzy
#~ msgid "invalid ncol(x)"
#~ msgstr "'x' non valida"

#~ msgid "invalid 'x'"
#~ msgstr "'x' non valida"

#, fuzzy
#~ msgid "invalid 'nb'"
#~ msgstr "'x' non valida"

#, fuzzy
#~ msgid "invalid value of 'n'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'lambda'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid value of nrow(x)"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid value of length(filter)"
#~ msgstr "metodo di cluster non valido"

#~ msgid "k must be between 2 and %d"
#~ msgstr "k deve essere tra 2 e %d"

#, fuzzy
#~ msgid "invalid 'control' argument"
#~ msgstr "argomento 'contrasts.arg' non valido"

#, fuzzy
#~ msgid "invalid NCOL(X)"
#~ msgstr "'x' non valida"

#~ msgid "invalid 'y'"
#~ msgstr "'y' non valida"

#, fuzzy
#~ msgid "invalid argument 'span'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'cell'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'degree'"
#~ msgstr "argomento 'omit' non valido"

#~ msgid "if 'x' is not an array, 'z' must be given"
#~ msgstr "se 'x' non Ã¨ un array, si deve specificare 'z'"

#~ msgid "invalid 'contrasts.arg' argument"
#~ msgstr "argomento 'contrasts.arg' non valido"

#~ msgid "invalid 'data' argument"
#~ msgstr "argomento 'data' non valido"

#~ msgid "invalid argument 'omit'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'n'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'r'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid argument 'c'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "invalid 'endrule' argument"
#~ msgstr "argomento 'data' non valido"

#~ msgid "invalid 'control.spar'"
#~ msgstr "'control.spar' non valido"

#~ msgid "invalid 'abbr.colnames'"
#~ msgstr "'abbr.colnames' non valida"

#~ msgid "'x' must be numeric"
#~ msgstr "'x' deve essere numeric"

#~ msgid "'formula' missing or incorrect"
#~ msgstr "'formula' mancante o sbagliata"

#~ msgid "'y' must be numeric"
#~ msgstr "'y' deve essere numerica"

#, fuzzy
#~ msgid "'x' must be a numeric vector"
#~ msgstr "'y' deve essere un vettore numerico"

#, fuzzy
#~ msgid "'y' must be a numeric vector"
#~ msgstr "'y' deve essere un vettore numerico"

#~ msgid "'formula' missing or invalid"
#~ msgstr "'formula' mancante o sbagliata"

#~ msgid "'formula' missing"
#~ msgstr "'formula' mancante"

#, fuzzy
#~ msgid "'%s' argument must be between %s and %s."
#~ msgstr "'x' deve essere tra %s e %s"

#~ msgid "'r' is less than 1"
#~ msgstr "'r' Ã¨ minori di 1"

#~ msgid "'r' is less than 0"
#~ msgstr "'r' Ã¨ minori di 0"

#, fuzzy
#~ msgid "'invalid value of 'k'"
#~ msgstr "argomento 'omit' non valido"

#~ msgid "'iter.max' must be positive"
#~ msgstr "'iter.max' deve essere positivo"

#, fuzzy
#~ msgid "invalid value of 'k'"
#~ msgstr "argomento 'omit' non valido"

#, fuzzy
#~ msgid "'k' must be positive"
#~ msgstr "'iter.max' deve essere positivo"

#~ msgid "'span' must be between 0 and 1."
#~ msgstr "'span' deve essere tra 0 e 1"

#~ msgid "'acf' must be of length two or more"
#~ msgstr "'acf' deve avere lunghezza due o piÃ¹"

#, fuzzy
#~ msgid "'order.max' must be < 'n.used'"
#~ msgstr "'order.max' deve essere >= 1"

#~ msgid "'x' must have at least 2 rows and columns"
#~ msgstr "'x' deve avere almeno 2 righe e colonne"

#~ msgid "'probs' outside [0,1]"
#~ msgstr "'probs' oltre [0,1]"

#~ msgid "'p' must be between 0 and 0.5"
#~ msgstr "'p' deve essere tra 0 e 0.5"

#, fuzzy
#~ msgid "'deriv' must be between 0 and 3"
#~ msgstr "'p' deve essere tra 0 e 0.5"

#~ msgid "'order.max' must be >= 1"
#~ msgstr "'order.max' deve essere >= 1"

#~ msgid "NAs in 'x'"
#~ msgstr "valori NA in 'x'"

#~ msgid "'order.max' must be >= 0"
#~ msgstr "'order.max' deve essere >= 0"

#, fuzzy
#~ msgid "'%s' argument must be at least 1"
#~ msgstr "l'argomento 'split' deve essere di tipo list"

#~ msgid "argument 'x' must be numeric"
#~ msgstr "l'argomento 'x' deve essere numerico"

#~ msgid "'x' must be an \"ftable\" object"
#~ msgstr "'x' deve essere un oggetto \"ftable\""

#, fuzzy
#~ msgid "'termobj' must be a object of class %s"
#~ msgstr "'centers' deve essere un numero o una matrice"

#, fuzzy
#~ msgid "'offset' must be numeric"
#~ msgstr "'x' deve essere numeric"

#, fuzzy
#~ msgid "'ref' must be of length one"
#~ msgstr "'acf' deve avere lunghezza due o piÃ¹"

#~ msgid "'x' must have length >= 1"
#~ msgstr "'x' deve avere lunghezza >= 1"

#~ msgid "'x' must be between -1 and 1"
#~ msgstr "'x' deve essere tra -1 e 1"

#~ msgid "'model' must be list"
#~ msgstr "'model' deve essere di tipo list"

#~ msgid "'ratio' must be a single positive number"
#~ msgstr "'ratio' deve essere un numero positivo"

#, fuzzy
#~ msgid "'lag.max' must be at least 0"
#~ msgstr "'lag.max' deve essere almeno 1"

#~ msgid "'lag.max' must be at least 1"
#~ msgstr "'lag.max' deve essere almeno 1"

#~ msgid "the 'split' argument must be a list"
#~ msgstr "l'argomento 'split' deve essere di tipo list"

#~ msgid "'approx' requires n >= 1"
#~ msgstr "'approx' richiede n >= 1"

#, fuzzy
#~ msgid "'n.ahead' must be at least 1"
#~ msgstr "'lag.max' deve essere almeno 1"

#~ msgid "'degree' must be at least 1"
#~ msgstr "'degree' deve essere almeno 1"

#~ msgid "use only with \"lm\" objects"
#~ msgstr "usare solo con oggetti \"lm\""

#, fuzzy
#~ msgid "'which' must be in 1:6"
#~ msgstr "'which' deve essere in 1:6"

#, fuzzy
#~ msgid "'nknots' must be at least 1"
#~ msgstr "'lag.max' deve essere almeno 1"

#, fuzzy
#~ msgid "'spar' must be of length 1"
#~ msgstr "'acf' deve avere lunghezza due o piÃ¹"

#~ msgid "'by' must be a list"
#~ msgstr "'by' deve essere di tipo list"

#~ msgid "'coef' must have same length as 'contrast.obj'"
#~ msgstr "'coef' deve avere la stessa lunghezza di 'contrast.obj'"

#~ msgid "'x' and 'g' must have the same length"
#~ msgstr "'x' e 'g' devono avere la stessa lunghezza"

#~ msgid "'x' and 'y' must have the same length"
#~ msgstr "'x' e 'y' devono avere la stessa lunghezza"

#~ msgid "'y', 'groups' and 'blocks' must have the same length"
#~ msgstr "'y', 'groups' e 'blocks' devono avere la stessa lunghezza"

#~ msgid "'start' and 'table' must be same length"
#~ msgstr "'start' e 'table' devono avere la stessa lunghezza"

#~ msgid "'x' and 'n' must have the same length"
#~ msgstr "'x' e 'n' devono avere la stessa lunghezza"

#~ msgid "'p' must have the same length as 'x' and 'n'"
#~ msgstr "'p' deve avere la stessa lunghezza di 'x' e 'n'"

#~ msgid "'x' and 'w' must have the same length"
#~ msgstr "'x' e 'w' devono avere la stessa lunghezza"

#, fuzzy
#~ msgid "%d response,"
#~ msgid_plural "%d responses,"
#~ msgstr[0] "modelli con risposta"
#~ msgstr[1] "modelli con risposta"

#, fuzzy
#~ msgid "'deriv' must be between 0 and 2"
#~ msgstr "'p' deve essere tra 0 e 0.5"

#, fuzzy
#~ msgid "true p is less than %s"
#~ msgstr "'r' Ã¨ minori di 1"

#, fuzzy
#~ msgid "character variable '%s' changed to a factor"
#~ msgstr "la variabile '%s' non Ã¨ di tipo factor"

#, fuzzy
#~ msgid "variable '%s' converted to a factor"
#~ msgstr "la variabile '%s' non Ã¨ di tipo factor"

#~ msgid "Burg's algorithm only implemented for univariate series"
#~ msgstr "l'algoritmo di Burg Ã¨ implementato solo per serie unidimensionali"

#~ msgid "sample is too sparse to find alph2"
#~ msgstr "campione troppo sparso per trovare alph2"

#~ msgid "Cannot compute exact p-values with ties"
#~ msgstr "Impossibile calcolare p-value esatti in presenza di ties"

#~ msgid "we require a dendrogram"
#~ msgstr "necessario un dendrogramma"

#~ msgid "NA's are not allowed in groups or blocks"
#~ msgstr "NA non sono permessi in 'groups' o 'blocks'"

#~ msgid "y, groups and blocks must have the same length"
#~ msgstr "y, 'groups' e 'blocks' devono avere la stessa lunghezza"

#, fuzzy
#~ msgid "cannot compute exact p-values with ties"
#~ msgstr "impossibile calcolare p-value esatto in presenza di ties"

#~ msgid "need multiple response"
#~ msgstr "sono necessarie risposte multiple"

#~ msgid "'proj' is not implemented for \"mlm\" fits"
#~ msgstr "'proj' non implementata per stime \"mlm\""

#, fuzzy
#~ msgid "upper scope does not include model term(s) %s"
#~ msgstr "scope superiore non include il modello"

#~ msgid "for the binomial family, y must be a vector of 0 and 1's"
#~ msgstr "per la famiglia binomiale, y deve essere un vettore di 0 o 1"

#~ msgid "for the quasibinomial family, y must be a vector of 0 and 1's"
#~ msgstr "per la famiglia quasibinomial, y deve essere un vettore di 0 e 1"

#~ msgid "did not converge in"
#~ msgstr "non converge in"

#~ msgid "removed because response differs from"
#~ msgstr "eliminate perchÃ© la risposta differisce da"

#~ msgid "model 1"
#~ msgstr "modello 1"

#, fuzzy
#~ msgid "invalid length(xout)"
#~ msgstr "lunghezza dei membri non valida"

#~ msgid "this should not happen"
#~ msgstr "questo non dovrebbe accadere"

#~ msgid "incorrect specification of 'table' or 'start'"
#~ msgstr "specificazione di 'table' o 'start' non correttaaaaaaaaaaaaaaaa"

#~ msgid "ifault=%d. This should not happen"
#~ msgstr "ifault=%d. Questo non dovrebbe accadere"

#~ msgid "'vec' contains NAs"
#~ msgstr "'vec' contiene NA"

#, fuzzy
#~ msgid "invalid length(vec)"
#~ msgstr "lunghezza dei membri non valida"

#~ msgid "extra arguments"
#~ msgstr "argomenti extra"

#~ msgid "are just disregarded."
#~ msgstr "semplicemente ignorati."

#~ msgid "cannot compute correct p-values with ties"
#~ msgstr "impossibile calcolae p-value corretti in presenza di ties"

#~ msgid "'FUN' must always return a scalar"
#~ msgstr "'FUN' deve sempre restituire uno scalare"

#~ msgid "results are only valid up to model order"
#~ msgstr "risultati attendibili fino all'ordine del modello"

#, fuzzy
#~ msgid "invalid 'method': %s"
#~ msgstr "'method' non valido:"

#, fuzzy
#~ msgid "invalid 'method'"
#~ msgstr "'method' non valido:"

#~ msgid "'newdata' does not contain the variables needed"
#~ msgstr "'newdata' non contiene le variabili necessarie"

#~ msgid "diagonal has non-finite entries"
#~ msgstr "la diagonale contiene elementi non finiti"

#~ msgid "no 'time' or 'id' specified"
#~ msgstr "nessun 'time' o 'id' specificati"

#~ msgid ""
#~ "link \"%s\" not available for binomial family, available links are \"logit"
#~ "\", \"\"probit\", \"cloglog\", \"cauchit\" and \"log\""
#~ msgstr ""
#~ "link \"%s\" non disponibile per la famiglia binomiale,i link disponibili "
#~ "sono \"logit\", \"\"probit\", \"cloglog\", \"cauchit\" e \"log\""

#, fuzzy
#~ msgid ""
#~ "link not available for quasibinomial family, available links are \"logit"
#~ "\", \"probit\", \"cloglog\", \"cauchit\" and \"log\""
#~ msgstr ""
#~ "link \"%s\" non disponibile per la famiglia binomiale,i link disponibili "
#~ "sono \"logit\", \"\"probit\", \"cloglog\", \"cauchit\" e \"log\""

#~ msgid ""
#~ "link \"%s\" not available for inverse gauss family, available links are "
#~ "\"inverse\", \"1/mu^2\", \"log\" and \"identity\""
#~ msgstr ""
#~ "link \"%s\" non disponibile per la famiglia gaussiana inversa, i link "
#~ "disponibili sono \"inverse\", \"1/mu^2\", \"log\" e \"identity\""

#~ msgid "'k1' is not a kernel"
#~ msgstr "'k1' non Ã¨ un kernel"

#~ msgid "'k2' is not a kernel"
#~ msgstr "'k2' non Ã¨ un kernel"

#~ msgid "spline: invalid interpolation method"
#~ msgstr "spline: metodo interpolazione non valido"

#~ msgid "splinefun: invalid interpolation method"
#~ msgstr "splinefun: metodo interpolazione non valido"

#~ msgid "'x' must be numeric or logical"
#~ msgstr "'x' deve essere numeric o logical"

#~ msgid ""
#~ "link not available for quasibinomial family, available links are \"logit"
#~ "\", \", \"\"probit\" and \"cloglog\""
#~ msgstr ""
#~ "link non disponibile per la famiglia quasibinomiale, i link disponibili "
#~ "sono \"logit\", \", \"\"probit\" e \"cloglog\""
