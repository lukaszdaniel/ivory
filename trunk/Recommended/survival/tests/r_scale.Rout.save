
R Under development (unstable) (2014-12-13 r121) -- "Unsuffered Consequences"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

This is Ivory - a modified version of R-devel (revision 67162).
See README-IVORY file for details.
Copyright (C) 2013-2014 Lukasz Daniel (lukasz.daniel@gmail.com)

Ivory is not part of the R project, so please do not report bugs
via r-bugs or the R website - instead refer to the author.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(na.action=na.exclude) # preserve missings
> options(contrasts=c('contr.treatment', 'contr.poly')) #ensure constrast type
> library(survival)
Loading required package: 'splines'
> 
> #
> # Verify that scale can be fixed at a value
> #    coefs will differ slightly due to different iteration paths
> tol <- .001
> 
> # Intercept only models
> fit1 <- survreg(Surv(time,status) ~ 1, lung)
> fit2 <- survreg(Surv(time,status) ~ 1, lung, scale=fit1$scale)
> all.equal(fit1$coef, fit2$coef, tolerance= tol)
[1] TRUE
> all.equal(fit1$loglik, fit2$loglik, tolerance= tol)
[1] TRUE
> 
> # The two robust variance matrices are not the same, since removing
> #   an obs has a different effect on the two models.  This just
> #   checks for failure, not for correctness
> fit3 <- survreg(Surv(time,status) ~ 1, lung, robust=TRUE)
> fit4 <- survreg(Surv(time,status) ~ 1, lung, scale=fit1$scale, robust=TRUE)
> 
> 
> # multiple covariates
> fit1 <- survreg(Surv(time,status) ~ age + ph.karno, lung)
> fit2 <- survreg(Surv(time,status) ~ age + ph.karno, lung,
+ 		scale=fit1$scale)
> all.equal(fit1$coef, fit2$coef, tolerance=tol)
[1] TRUE
> all.equal(fit1$loglik[2], fit2$loglik[2], tolerance=tol)
[1] TRUE
> 
> fit3 <- survreg(Surv(time,status) ~ age + ph.karno, lung, robust=TRUE)
> fit4 <- survreg(Surv(time,status) ~ age + ph.karno, lung, 
+                 scale=fit1$scale, robust=TRUE)
> 
> # penalized models
> fit1 <- survreg(Surv(time, status) ~ pspline(age), lung)
> fit2 <- survreg(Surv(time, status) ~ pspline(age), lung, scale=fit1$scale)
> all.equal(fit1$coef, fit2$coef, tolerance=tol)
[1] TRUE
> all.equal(fit1$loglik[2], fit2$loglik[2], tolerance=tol)
[1] TRUE
> 
> fit3 <- survreg(Surv(time,status) ~ pspline(age) + ph.karno, lung, robust=TRUE)
> fit4 <- survreg(Surv(time,status) ~ pspline(age) + ph.karno, lung, 
+                 scale=fit1$scale, robust=TRUE)
> 
> 
> 
> proc.time()
   user  system elapsed 
  0.516   0.050   0.550 
