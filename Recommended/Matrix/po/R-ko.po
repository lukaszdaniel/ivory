# Korean translations for Matrix package.
# Recommended/Matrix/po/R-ko.po
#
# Thanks to Martin Maechler <maechler@stat.math.ethz.ch>
#
# This file is distributed under the same license as the R Matrix package.
# Maintained by Chel Hee Lee <chl948@mail.usask.ca>, 2013-2015.
#
# Notes:
# Freezing on 15-JUL-2015 for R-3.3.0, QC: PASS
# Freezing on 30-MAR-2015 for R-3.2.0, QC: PASS
# Freezing on 28-FEB-2015 for R-3.1.3, QC: PASS
#
msgid ""
msgstr ""
"Project-Id-Version: Matrix 1.1-3\n"
"POT-Creation-Date: 2021-03-18 19:37\n"
"PO-Revision-Date: 2015-07-15 17:14-0600\n"
"Last-Translator:Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language-Team: Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. R/sparseMatrix.R: gettextf("%3g duplicated (i,j) pairs", m)
#: R/sparseMatrix.R:0
msgid "%3g duplicated (i,j) pairs"
msgstr ""

#. R/Auxiliaries.R: gettextf("%d x %d Matrix of class \"%s\"", d[1], d[2], cl, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "%d x %d Matrix of class \"%s\""
msgstr ""

#. R/Auxiliaries.R: gettextf("%d x %d Matrix of class \"%s\" (unitriangular)", d[1], d[2], cl, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "%d x %d Matrix of class \"%s\" (unitriangular)"
msgstr ""

#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s", d[1L], d[2L], dQuote(cl), domain = "R-Matrix")
#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s", d[1L], d[2L], dQuote(class(object)),     domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "%d x %d diagonal matrix of class %s"
msgstr ""

#. R/diagMatrix.R: gettextf("%d x %d diagonal matrix of class %s, with diagonal entries", d[1L], d[2L],     dQuote(cl), domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "%d x %d diagonal matrix of class %s, with diagonal entries"
msgstr ""

#. R/diagMatrix.R: gettextf("%s kind not yet implemented", sQuote(kind))
#: R/diagMatrix.R:0
msgid "%s kind not yet implemented"
msgstr "아직 구현되지 않은 종류 %s입니다."

#. R/HBMM.R: gettext("'%s()' is not yet implemented for element type '%s'", domain = "R-Matrix")
#: R/HBMM.R:0
msgid "'%s()' is not yet implemented for element type '%s'"
msgstr ""
"원소유형(element type)이 '%2$s'의 경우에 아직 구현되지 않은 '%1$s()'입니다."

#. R/HBMM.R: gettext("'%s()' is not yet implemented for representation '%s'", domain = "R-Matrix")
#: R/HBMM.R:0
#, fuzzy
msgid "'%s()' is not yet implemented for representation '%s'"
msgstr ""
"표현(representation)이 '%2$s'의 경우에 아직 구현되지 않은 '%1$s()'입니다."

#. R/condest.R: stop("'A' must be a square matrix")
#. R/condest.R: stop("'A' must be a square matrix")
#: R/condest.R:0
msgid "'A' must be a square matrix"
msgstr "'A'는 반드시 정방행렬(square matrix)이어야 합니다."

#. R/MatrixFactorization.R: gettext("'Bunch-Kaufman' factorization of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "'Bunch-Kaufman' factorization of:"
msgstr ""

#. R/AllClass.R: gettext("'Dim' slot is not (n,n)", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'Dim' slot is not (n,n)"
msgstr ""

#. R/AllClass.R: gettext("'EValues' is not of correct length", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'EValues' is not of correct length"
msgstr "'ncol'는 길이가 length(x)인 요인(factor)가 아닙니다."

#. R/Ops.R: stop("'Logic.Mat.atomic()' should not be called for diagonalMatrix")
#: R/Ops.R:0
#, fuzzy
msgid "'Logic.Mat.atomic()' should not be called for diagonalMatrix"
msgstr "Logic.Mat.atomic()은 diagonalMatrix에 호출될 수 없습니다."

#. R/MatrixFactorization.R: gettext("'MatrixFactorization' of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "'MatrixFactorization' of:"
msgstr ""

#. R/Tsparse.R: stop("'NA' indices are not (yet?) supported for sparse Matrices")
#. R/Tsparse.R: stop("'NA' indices are not (yet?) supported for sparse Matrices")
#: R/Tsparse.R:0
msgid "'NA' indices are not (yet?) supported for sparse Matrices"
msgstr "'NA'는 sparse Matrices에 (아직은?) 사용할 수 없는 인덱스입니다"

#. R/sparseMatrix.R: stop("'V' is not a *square* matrix")
#: R/sparseMatrix.R:0
msgid "'V' is not a *square* matrix"
msgstr "'V'는 정방행렬(square matrix)이 아닙니다."

#. R/Matrix.R: stop("'V' is not a square matrix")
#: R/Matrix.R:0
msgid "'V' is not a square matrix"
msgstr "'V'는 정방행렬(square matrix)이 아닙니다."

#. R/products.R: gettextf("'boolArith = %d' not yet implemented", boolArith)
#. R/products.R: gettextf("'boolArith = %d' not yet implemented", boolArith)
#. R/products.R: gettextf("'boolArith = %d' not yet implemented", boolArith)
#: R/products.R:0
#, fuzzy
msgid "'boolArith = %d' not yet implemented"
msgstr "아직 구현되지 않은 종류 %s입니다."

#. R/abIndex.R: stop("'by' argument is much too small")
#: R/abIndex.R:0
msgid "'by' argument is much too small"
msgstr "'by' 인자에 사용된 값이 너무 작습니다."

#. R/zzz.R: gettext("'cBind' is deprecated. Since R version 3.2.0, base's cbind() should work fine with S4 objects")
#: R/zzz.R:0
msgid ""
"'cBind' is deprecated. Since R version 3.2.0, base's cbind() should work "
"fine with S4 objects"
msgstr ""

#. R/bandSparse.R: gettextf("'diagonals' must have the same length (%d) as 'k'", len.k)
#: R/bandSparse.R:0
msgid "'diagonals' must have the same length (%d) as 'k'"
msgstr "'diagnoals'의 길이는 반드시 'k'(=%d)이어야 합니다."

#. R/AllClass.R: gettext("'dim(Q)' is incorrect", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'dim(Q)' is incorrect"
msgstr ""

#. R/AllClass.R: gettext("'dim(T)' is incorrect", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'dim(T)' is incorrect"
msgstr ""

#. R/HBMM.R: stop("'file' must be a character string or connection")
#. R/HBMM.R: stop("'file' must be a character string or connection")
#: R/HBMM.R:0
msgid "'file' must be a character string or connection"
msgstr ""
"'file'은 반드시 문자열(character string) 또는 커넥션(connection)이어야 합니"
"다."

#. R/AllClass.R: gettext("'first' must be of length one", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'first' must be of length one"
msgstr ""

#. R/abIndex.R: stop("'force' must be (coercable to) TRUE or FALSE")
#: R/abIndex.R:0
msgid "'force' must be (coercable to) TRUE or FALSE"
msgstr "'force'는 반드시 (강제변환될 수 있는) TRUE 또는 FALSE 이어야 합니다."

#. R/sparseVector.R: gettextf("'giveCsparse' has been deprecated; setting 'repr = \"%s\"' for you", repr)
#: R/sparseVector.R:0
msgid "'giveCsparse' has been deprecated; setting 'repr = \"%s\"' for you"
msgstr ""

#. R/bandSparse.R: warning("'giveCsparse' has been deprecated; setting 'repr = \"T\"' for you")
#. R/sparseMatrix.R: warning("'giveCsparse' has been deprecated; setting 'repr = \"T\"' for you")
#: R/bandSparse.R:0 R/sparseMatrix.R:0
msgid "'giveCsparse' has been deprecated; setting 'repr = \"T\"' for you"
msgstr ""

#. R/bandSparse.R: warning("'giveCsparse' has been deprecated; will use 'repr' instead")
#. R/sparseMatrix.R: warning("'giveCsparse' has been deprecated; will use 'repr' instead")
#: R/bandSparse.R:0 R/sparseMatrix.R:0
msgid "'giveCsparse' has been deprecated; will use 'repr' instead"
msgstr ""

#. R/AllClass.R: gettext("'i' and 'x' differ in length", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' and 'x' differ in length"
msgstr ""

#. R/AllClass.R: gettext("'i' must be >= 1", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'i' must be >= 1"
msgstr "'ncol'은 반드시 >= 0 이어야 합니다. "

#. R/AllClass.R: gettext("'i' must be empty when the object length is zero", domain = "R-matrix")
#: R/AllClass.R:0
msgid "'i' must be empty when the object length is zero"
msgstr ""

#. R/AllClass.R: gettextf("'i' must be in 1:%d", n, domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'i' must be in 1:%d"
msgstr "'ncol'은 반드시 >= 0 이어야 합니다. "

#. R/AllClass.R: gettext("'i' must be sorted strictly increasingly", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' must be sorted strictly increasingly"
msgstr ""

#. R/AllClass.R: gettext("'i' slot has NA values", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' slot has NA values"
msgstr ""

#. R/AllClass.R: gettext("'i' slot is not all finite", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'i' slot is not all finite"
msgstr ""

#. R/AllClass.R: gettext("'kind' must be one of (\"int32\", \"double\", \"rleDiff\")", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'kind' must be one of (\"int32\", \"double\", \"rleDiff\")"
msgstr ""

#. R/Matrix.R: stop("'lag' and 'differences' must be integers >= 1")
#: R/Matrix.R:0
msgid "'lag' and 'differences' must be integers >= 1"
msgstr "'lag'과 'differences'는 반드시 1보다 크거나 같은 정수이어야 합니다."

#. R/AllClass.R: gettext("'lengths' and 'values' differ in length", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'lengths' and 'values' differ in length"
msgstr ""

#. R/AllClass.R: gettext("'lengths' must be positive", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'lengths' must be positive"
msgstr "길이(length)는 반드시 음이 아닌 수이어야 합니다."

#. R/dgTMatrix.R: stop("'lwd' must be NULL or non-negative numeric")
#: R/dgTMatrix.R:0
msgid "'lwd' must be NULL or non-negative numeric"
msgstr "'lwd'는 반드시 NULL 또는 음이 아닌 수 이어야 합니다."

#. R/sparseVector.R: warning("'ncol' is not a factor of length(x)")
#: R/sparseVector.R:0
msgid "'ncol' is not a factor of length(x)"
msgstr "'ncol'는 길이가 length(x)인 요인(factor)가 아닙니다."

#. R/sparseVector.R: stop("'ncol' must be >= 0")
#: R/sparseVector.R:0
msgid "'ncol' must be >= 0"
msgstr "'ncol'은 반드시 >= 0 이어야 합니다. "

#. R/nearPD.R: gettextf("'nearPD()' did not converge in %d iterations", iter)
#: R/nearPD.R:0
msgid "'nearPD()' did not converge in %d iterations"
msgstr "'nearPD()'는 %d 번째 반복에서도 수렴하지 않았습니다."

#. R/sparseVector.R: stop("'nrow' and 'ncol' must be the same when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "'nrow' and 'ncol' must be the same when 'symmetric' is true"
msgstr ""
"'symmetric'이 참인 경우에는 반드시 'nrow'와 'ncol'을 지정해 주어야 합니다."

#. R/sparseVector.R: warning("'nrow' is not a factor of length(x)")
#: R/sparseVector.R:0
msgid "'nrow' is not a factor of length(x)"
msgstr "'nrow'는 길이가 length(x)인 요인(factor)가 아닙니다."

#. R/sparseVector.R: stop("'nrow' must be >= 0")
#: R/sparseVector.R:0
msgid "'nrow' must be >= 0"
msgstr "'nrow'는 반드시 >= 0 이어야 합니다."

#. R/Matrix.R: warning("'nrow', 'ncol', etc, are disregarded for matrix 'data'")
#: R/Matrix.R:0
msgid "'nrow', 'ncol', etc, are disregarded for matrix 'data'"
msgstr "행렬 'data'인 경우에 입력된 'nrow', 'ncol' 등은 사용되지 않습니다."

#. R/Matrix.R: warning("'nrow', 'ncol', etc, are disregarded when 'data' is \"Matrix\" already")
#: R/Matrix.R:0
msgid "'nrow', 'ncol', etc, are disregarded when 'data' is \"Matrix\" already"
msgstr ""
"'data'가 이미 \"Matrix\"인 경우에는 입력된 'nrow', 'ncol' 등은 사용되지 않습"
"니다."

#. R/AllClass.R: gettext("'object' argument is not a 3 x n matrix", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'object' argument is not a 3 x n matrix"
msgstr "일부 인자가 행렬이 아닙니다."

#. R/AllClass.R: gettext("'object' argument is not numeric", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "'object' argument is not numeric"
msgstr "일부 인자가 행렬이 아닙니다."

#. R/sparseMatrix.R: stop("'p' must be a non-decreasing vector (0, ...)")
#: R/sparseMatrix.R:0
msgid "'p' must be a non-decreasing vector (0, ...)"
msgstr "'p'는 반드시 감소하지 않는(non-decreasing) 벡터 (0, ...)이어야 합니다."

#. R/AllClass.R: gettext("'perm' slot is not a valid permutation", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'perm' slot is not a valid permutation"
msgstr ""

#. R/zzz.R: gettext("'rBind' is deprecated. Since R version 3.2.0, base's rbind() should work fine with S4 objects")
#: R/zzz.R:0
msgid ""
"'rBind' is deprecated. Since R version 3.2.0, base's rbind() should work "
"fine with S4 objects"
msgstr ""

#. R/AllClass.R: gettext("'rle' must be a list (lengths = *, values = *)", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'rle' must be a list (lengths = *, values = *)"
msgstr ""

#. R/AllClass.R: gettext("'sd' slot has negative entries", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot has negative entries"
msgstr ""

#. R/AllClass.R: gettext("'sd' slot has non-finite entries", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot has non-finite entries"
msgstr ""

#. R/AllClass.R: gettext("'sd' slot must be of length 'dim(.)[1]'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'sd' slot must be of length 'dim(.)[1]'"
msgstr ""

#. R/Tsparse.R: gettextf("'sub-optimal sparse 'x[i] <- v' assignment: Coercing class %s to %s", dQuote(cl),     dQuote(class(x)), domain = "R-Matrix")
#: R/Tsparse.R:0
msgid "'sub-optimal sparse 'x[i] <- v' assignment: Coercing class %s to %s"
msgstr ""

#. R/sparseVector.R: stop("'times >= 0' is required")
#: R/sparseVector.R:0
msgid "'times >= 0' is required"
msgstr "'times >= 0'이 요구되어집니다."

#. R/sparseMatrix.R: stop("'uniDiag=TRUE', but not all diagonal entries are 1")
#: R/sparseMatrix.R:0
msgid "'uniDiag=TRUE', but not all diagonal entries are 1"
msgstr ""

#. R/sparseMatrix.R: warning("'uniDiag=TRUE', not all entries in diagonal coded as 1")
#: R/sparseMatrix.R:0
msgid "'uniDiag=TRUE', not all entries in diagonal coded as 1"
msgstr ""

#. R/CHMfactor.R: stop("'update' must be logical or '+' or '-'; 'C' a matrix, and 'L' a \"CHMfactor\"")
#: R/CHMfactor.R:0
msgid ""
"'update' must be logical or '+' or '-'; 'C' a matrix, and 'L' a \"CHMfactor\""
msgstr ""
"'update'는 반드시 논리형(logical) 또는 '+' 또는 '-'이어야 하며, 'C'는 행렬이"
"어야 하고 'L'은 \"CHMfactor\"이어야 합니다."

#. R/diagMatrix.R: stop("'x' has invalid data type")
#: R/diagMatrix.R:0
msgid "'x' has invalid data type"
msgstr "'x'의 데이터형(data type)은 사용가능하지 않습니다."

#. R/Auxiliaries.R: stop("'x' is not positive definite -- chol() undefined.")
#. R/dsparseMatrix.R: stop("'x' is not positive definite -- chol() undefined.")
#: R/Auxiliaries.R:0 R/dsparseMatrix.R:0
msgid "'x' is not positive definite -- chol() undefined."
msgstr ""
"'x'는 양정치(positive definite) 행렬이 아니므로 chol()가 정의되어지지 않습니"
"다."

#. R/triangularMatrix.R: stop("'x' is not symmetric -- chol() undefined.")
#: R/triangularMatrix.R:0
#, fuzzy
msgid "'x' is not symmetric -- chol() undefined."
msgstr ""
"'x'는 양정치(positive definite) 행렬이 아니므로 chol()가 정의되어지지 않습니"
"다."

#. R/symmetricMatrix.R: stop("'x' is not symmetric nor triangular")
#: R/symmetricMatrix.R:0
msgid "'x' is not symmetric nor triangular"
msgstr "'x'는 대칭(symmetric)도 아니고 삼각(triangular)도 아닙니다."

#. R/Auxiliaries.R: gettext("'x' must be \"sparseMatrix\"")
#: R/Auxiliaries.R:0
msgid "'x' must be \"sparseMatrix\""
msgstr "'x'는 반드시 \"sparseMatrix\"이어야 합니다."

#. R/sparseVector.R: stop("'x' must have length nrow^2 when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "'x' must have length nrow^2 when 'symmetric' is true"
msgstr ""
"'symmetric'이 참인 경우에는 'x'의 길이는 반드시 nrow^2와 같아야 합니다."

#. R/sparseVector.R: stop("'x' must inherit from \"sparseVector\"")
#: R/sparseVector.R:0
msgid "'x' must inherit from \"sparseVector\""
msgstr "'x'는 \"sparseVector\"로부터의 상속(inherit)이어야 합니다."

#. R/AllClass.R: gettext("'x' slot must be double when kind is 'double'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be double when kind is 'double'"
msgstr ""

#. R/AllClass.R: gettext("'x' slot must be empty when kind is 'rleDiff'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be empty when kind is 'rleDiff'"
msgstr ""

#. R/AllClass.R: gettext("'x' slot must be integer when kind is 'int32'", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "'x' slot must be integer when kind is 'int32'"
msgstr ""

#. R/symmetricMatrix.R: sprintf("(un)packing only applies to dense matrices, class(x)='%s'", cx)
#. R/symmetricMatrix.R: sprintf("(un)packing only applies to dense matrices, class(x)='%s'", class(x))
#: R/symmetricMatrix.R:0
msgid "(un)packing only applies to dense matrices, class(x)='%s'"
msgstr "(un)packing only applies to dense matrices, class(x)='%s'"

#. R/Matrix.R: stop(".M.repl.i.2col(): 'i' has no integer column number;\n should never happen; please report")
#: R/Matrix.R:0
msgid ""
".M.repl.i.2col(): 'i' has no integer column number;\n"
" should never happen; please report"
msgstr ""
".M.repl.i.2col(): 'i'는 정수형 행번호(integer column number)을 가지고 있지 않"
"습니다.\n"
" 이런 경우는 존재할 수 없으므로 패키지 관리자에게 보고해 주시길 부탁드립니다."

#. R/Matrix.R: message(".M.repl.i.2col(): drop 'matrix' case ...")
#: R/Matrix.R:0
msgid ".M.repl.i.2col(): drop 'matrix' case ..."
msgstr ".M.repl.i.2col(): drop 'matrix' case ..."

#. R/Matrix.R: stop(".M.sub.i.2col(): 'i' has no integer column number;\n should never happen; please report")
#: R/Matrix.R:0
msgid ""
".M.sub.i.2col(): 'i' has no integer column number;\n"
" should never happen; please report"
msgstr ""
".M.sub.i.2col(): 'i'는 정수형 행번호(integer column number)를 가지고 있지 않"
"습니다.\n"
" 이런 경우는 존재할 수 없으므로 패키지 관리자에게 보고해 주시길 부탁드립니다."

#. R/Tsparse.R: gettext(".TM.repl.i.mat(): \"lMatrix\" case ...", domain = "R-Matrix")
#: R/Tsparse.R:0
#, fuzzy
msgid ".TM.repl.i.mat(): \"lMatrix\" case ..."
msgstr ".M.repl.i.2col(): drop 'matrix' case ..."

#. R/Tsparse.R: gettext(".TM.repl.i.mat(): drop 'matrix' case ...", domain = "R-Matrix")
#: R/Tsparse.R:0
#, fuzzy
msgid ".TM.repl.i.mat(): drop 'matrix' case ..."
msgstr ".M.repl.i.2col(): drop 'matrix' case ..."

#. R/abIndex.R: stop("<abIndex>  -->  <seqMat> is not yet implemented")
#: R/abIndex.R:0
#, fuzzy
msgid "<abIndex>  -->  <seqMat> is not yet implemented"
msgstr "<abIndex>  -->  <seqMat>은 아직 구현되지 않았습니다."

#. R/abIndex.R: stop("<abIndex>[i] is not yet implemented")
#: R/abIndex.R:0
#, fuzzy
msgid "<abIndex>[i] is not yet implemented"
msgstr "<abIndex>[i]는 아직 구현되지 않았습니다."

#. R/abIndex.R: stop("<seqMat>  -->  <abIndex> is not yet implemented")
#: R/abIndex.R:0
#, fuzzy
msgid "<seqMat>  -->  <abIndex> is not yet implemented"
msgstr "<seqMat>  -->  <abIndex>은 아직 구현되지 않았습니다."

#. R/Matrix.R: message("<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient")
#: R/Matrix.R:0
msgid "<sparse>[ <logic> ] : .M.sub.i.logical() maybe inefficient"
msgstr ""
"<sparse>[ <logic> ] : .M.sub.i.logical()의 사용은 비효율적(inefficient) 일 "
"수 있습니다."

#. R/abIndex.R: gettextf("Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n and \"x\" slot",     length(object), knd, domain = "R-Matrix")
#: R/abIndex.R:0
msgid ""
"Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n"
" and \"x\" slot"
msgstr ""

#. R/abIndex.R: gettextf("Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n and slot \"rleD\":",     length(object), knd, domain = "R-Matrix")
#: R/abIndex.R:0
msgid ""
"Abstract Index vector (class 'abIndex') of length %.0f, kind \"%s\"\n"
" and slot \"rleD\":"
msgstr ""

#. R/sparseMatrix.R: stop("Both 'symmetric' and 'triangular', i.e. asking for diagonal matrix.  Use 'Diagonal()' instead")
#: R/sparseMatrix.R:0
msgid ""
"Both 'symmetric' and 'triangular', i.e. asking for diagonal matrix.  Use "
"'Diagonal()' instead"
msgstr ""

#. R/Csparse.R: stop("Cholesky(<nsparse...>) -> *symbolic* factorization -- not yet implemented")
#: R/Csparse.R:0
msgid ""
"Cholesky(<nsparse...>) -> *symbolic* factorization -- not yet implemented"
msgstr ""
"Cholesky(<nsparse...>) -> *symbolic* factorization -- 아직 구현되지 않았습니"
"다."

#. R/Matrix.R: gettextf("Cholesky(A) called for 'A' of class \"%s\";\n\t it is currently defined for sparseMatrix only; consider using chol() instead",     class(A))
#: R/Matrix.R:0
msgid ""
"Cholesky(A) called for 'A' of class \"%s\";\n"
"\t it is currently defined for sparseMatrix only; consider using chol() "
"instead"
msgstr ""
"Cholesky(A)는 클래스 \"%s\"를 가지는 'A'를 호출합니다.\n"
"\t 이것은 현재 sparseMatrix 만을 위하여 정의되었으므로 chol()을 사용하시길 바"
"랍니다."

#. R/sparseVector.R: gettextf("Class %s is not yet implemented", dQuote(cNam))
#: R/sparseVector.R:0
msgid "Class %s is not yet implemented"
msgstr "클래스 %s는 아직 구현되지 않았습니다."

#. R/Ops.R: stop("Cmp.Mat.atomic() should not be called for diagonalMatrix")
#: R/Ops.R:0
msgid "Cmp.Mat.atomic() should not be called for diagonalMatrix"
msgstr "Cmp.Mat.atomic()은 digonalMatrix에 의하여 호출될 수 없습니다."

#. R/dgTMatrix.R: gettext("Column")
#: R/dgTMatrix.R:0
msgid "Column"
msgstr ""

#. R/Ops.R: gettextf("Compare <Csparse> -- \"%s\" %s \"%s\" :\n", cD1@className, .Generic, cD2@className,     domain = "R-Matrix")
#: R/Ops.R:0
msgid "Compare <Csparse> -- \"%s\" %s \"%s\" :"
msgstr ""

#. R/dgTMatrix.R: gettextf("Dimensions: %d x %d", di[1], di[2])
#: R/dgTMatrix.R:0
msgid "Dimensions: %d x %d"
msgstr ""

#. R/Tsparse.R: stop("FIXME: NOT YET FINISHED IMPLEMENTATION")
#: R/Tsparse.R:0
msgid "FIXME: NOT YET FINISHED IMPLEMENTATION"
msgstr "FIXME: 완전한 구현이 아직 이루어지지 않았습니다."

#. R/diagMatrix.R: gettextf("Internal bug: nargs()=%d; please report", na)
#: R/diagMatrix.R:0
msgid "Internal bug: nargs()=%d; please report"
msgstr "내부버그 발견: nargs()=%d.  꼭 보고를 부탁드립니다."

#. R/HBMM.R: gettextf("Invalid assembled indicator: %s", t3)
#: R/HBMM.R:0
msgid "Invalid assembled indicator: %s"
msgstr "Invalid assembled indicator: %s"

#. R/HBMM.R: gettextf("Invalid storage format: %s", t2)
#: R/HBMM.R:0
msgid "Invalid storage format: %s"
msgstr "%s는 사용할 수 있는 저장형식(storage format)이 아닙니다."

#. R/HBMM.R: gettextf("Invalid storage type: %s", t1)
#: R/HBMM.R:0
msgid "Invalid storage type: %s"
msgstr "%s는 사용할 수 없는 저장형식(storage format)입니다."

#. R/dgCMatrix.R: gettextf("LU computationally singular: ratio of extreme entries in |diag(U)| = %9.4g",     rU[1]/rU[2])
#: R/dgCMatrix.R:0
msgid ""
"LU computationally singular: ratio of extreme entries in |diag(U)| = %9.4g"
msgstr ""
"LU computationally singular: ratio of extreme entries in |diag(U)| = %9.4g"

#. R/Auxiliaries.R: gettextf("Matrices must have same dimensions in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "Matrices must have same dimensions in %s"
msgstr ""
"%s에 입력된 행렬들은 반드시 같은 차원(dimensions)을 가지고 있어야 합니다."

#. R/Auxiliaries.R: gettextf("Matrices must have same number of columns in %s", deparse(sys.call(sys.parent())))
#. R/bind2.R: gettextf("Matrices must have same number of columns in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0 R/bind2.R:0
msgid "Matrices must have same number of columns in %s"
msgstr "%s에 사용된 각 행렬이 가지는 열의 개수는 서로 같아야 합니다."

#. R/Ops.R: stop("Matrices must have same number of rows for arithmetic")
#: R/Ops.R:0
msgid "Matrices must have same number of rows for arithmetic"
msgstr ""
"원소단위의 연산을 수행하기 위해서는 입력된 각 행렬이 가지는 열의 개수가 서로 "
"같아야 합니다."

#. R/Auxiliaries.R: gettextf("Matrices must have same number of rows in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "Matrices must have same number of rows in %s"
msgstr "%s에 사용된 각 행렬이 가지는 행의 개수는 서로 같아야 합니다."

#. R/nearPD.R: stop("Matrix seems negative semi-definite")
#: R/nearPD.R:0
msgid "Matrix seems negative semi-definite"
msgstr "음의 반정치(negative semi-definite) 행렬 같습니다."

#. R/Csparse.R: stop("Matrix-internal error in <CsparseM>[i,,d]; please report")
#: R/Csparse.R:0
msgid "Matrix-internal error in <CsparseM>[i,,d]; please report"
msgstr ""
"<CsparseM>[i,,d]에서 Matrix-내부오류(internal error)가 발생한 경우입니다. 이"
"를 보고해 주시길 부탁드립니다."

#. R/Tsparse.R: stop("Matrix-internal error in <TsparseM>[i,,d]; please report")
#: R/Tsparse.R:0
msgid "Matrix-internal error in <TsparseM>[i,,d]; please report"
msgstr ""
"<TsparseM>[i,,d] 내에서 행렬과 관련한 내부에러가 발생했습니다; 꼭 보고를 부탁"
"드립니다"

#. R/sparseMatrix.R: stop("Matrix-internal error in <sparseM>[i,,d]; please report")
#: R/sparseMatrix.R:0
msgid "Matrix-internal error in <sparseM>[i,,d]; please report"
msgstr ""
"<sparseM>[i,,d]를 사용중 행렬-내부 오류(matrix-internal error)가 발생했습니"
"다.  이를 꼭 보고 부탁드립니다."

#. R/sparseVector.R: stop("Must specify 'nrow' when 'symmetric' is true")
#: R/sparseVector.R:0
msgid "Must specify 'nrow' when 'symmetric' is true"
msgstr "'symmetric'이 참인 경우에는 반드시 'nrow'를 지정해 주어야 합니다."

#. R/sparseMatrix.R: stop("NA's in (i,j) are not allowed")
#: R/sparseMatrix.R:0
msgid "NA's in (i,j) are not allowed"
msgstr "(i,j) 위치에 NA는 사용될 수 없습니다."

#. R/Matrix.R: stop("NAs are not allowed in subscripted assignments")
#. R/Tsparse.R: stop("NAs are not allowed in subscripted assignments")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "NAs are not allowed in subscripted assignments"
msgstr "NA는 행렬의 첨자(subscripted assignment)로 사용할 수 없습니다."

#. R/AllClass.R: gettext("Not a valid 'Mnumeric' class object", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "Not a valid 'Mnumeric' class object"
msgstr ""

#. R/HBMM.R: stop("Not a valid format")
#: R/HBMM.R:0
msgid "Not a valid format"
msgstr "올바른 형식(format)이 아닙니다."

#. R/HBMM.R: stop("Only numeric sparse matrices allowed")
#: R/HBMM.R:0
msgid "Only numeric sparse matrices allowed"
msgstr "오로지 수치형 희소행렬(sparse matrices)만을 사용할 수 있습니다."

#. R/CHMfactor.R: gettext("Quadratic matrix '%s' (=: A) is not formally symmetric. Will be treated as A A'",     domain = "R-Matrix")
#: R/CHMfactor.R:0
#, fuzzy
msgid ""
"Quadratic matrix '%s' (=: A) is not formally symmetric. Will be treated as A "
"A'"
msgstr ""
"이차행렬(quadratic matrix) '%s' (=: A)는 형식적으로\n"
"\t대칭(symmetric)이 아닙니다.  \tA A'와 같이 다루겠나요?"

#. R/dgCMatrix.R: gettextf("RHS 'b' has wrong length %d", length(b))
#: R/dgCMatrix.R:0
#, fuzzy
msgid "RHS 'b' has wrong length %d"
msgstr "우변의 'b'가 올바르지 않은 길이(length)를 가지고 있습니다."

#. R/dgCMatrix.R: gettextf("RHS 'b' has wrong number of rows: %d", nrow(b))
#: R/dgCMatrix.R:0
#, fuzzy
msgid "RHS 'b' has wrong number of rows: %d"
msgstr "우변의 'b'는 다음과 같은 올바르지 않은 행의 수를 가지고 있습니다: "

#. R/Matrix.R: gettextf("RHS 'value' (class %s) matches 'ANY', but must match matrix class %s",     class(value), class(x))
#: R/Matrix.R:0
msgid "RHS 'value' (class %s) matches 'ANY', but must match matrix class %s"
msgstr ""
"클래스 %s를 가지는 우변의 'value'는 'ANY'에 매치되지만, 반드시 행렬의 클래스 "
"%s에 매치되어야 합니다."

#. R/abIndex.R: gettextf(" RLE difference (class 'rleDiff'): first = %s, \"rle\":%s", format(object@first),     if (length(rl <- object@rle)) "\n" else " ", domain = "R-Matrix")
#: R/abIndex.R:0
msgid "RLE difference (class 'rleDiff'): first = %s, \"rle\":%s"
msgstr ""

#. R/dgTMatrix.R: gettext("Row")
#: R/dgTMatrix.R:0
msgid "Row"
msgstr ""

#. R/Tsparse.R: stop("[ <character> ] indexing not allowed: forgot a \",\" ?")
#: R/Tsparse.R:0
msgid "[ <character> ] indexing not allowed: forgot a \",\" ?"
msgstr ""
"[ <character> ]와 같은 인덱싱은 사용할 수 없습니다.  \",\"의 사용을 잊었나요?"

#. R/Auxiliaries.R: gettext("   [[ suppressing %d column names %s ... ]]", domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "[[ suppressing %d column names %s ... ]]"
msgstr "[[ %d개의 열이름 %s ...를 제거합니다 ]]"

#. R/Auxiliaries.R: gettext("   [[ suppressing %d column names %s ]]", domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "[[ suppressing %d column names %s ]]"
msgstr "[[ %d개의 열이름 %s를 제거합니다 ]]"

#. R/sparseMatrix.R: warning("a sparseMatrix should rarely be centered: will not be sparse anymore")
#: R/sparseMatrix.R:0
msgid "a sparseMatrix should rarely be centered: will not be sparse anymore"
msgstr ""

#. R/abIndex.R: gettextf("abIndex: lengths (%d, %d) differ", lt, lc, domain = "R-Matrix")
#: R/abIndex.R:0
msgid "abIndex: lengths (%d, %d) differ"
msgstr ""

#. R/abIndex.R: stop("all(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "all(<abIndex>) is not yet implemented"
msgstr "all(<abIndex>)는 아직 구현되지 않았습니다."

#. R/dsCMatrix.R: warning("as(.,\"dsCMatrix\") is deprecated (since 2008); do use as(., \"symmetricMatrix\")")
#: R/dsCMatrix.R:0
msgid ""
"as(.,\"dsCMatrix\") is deprecated (since 2008); do use as(., "
"\"symmetricMatrix\")"
msgstr ""
"as(.,\"dsCMatrix\")은 2008년 이후로 지원되지 않으므로 as(., \"symmetricMatrix"
"\")를 이용해 주시길 바랍니다."

#. R/Matrix.R: warning("as.array(<Matrix>) is deprecated. Use  as(x, \"matrix\")  or .asmatrix(x) instead.")
#: R/Matrix.R:0
msgid ""
"as.array(<Matrix>) is deprecated. Use  as(x, \"matrix\")  or .asmatrix(x) "
"instead."
msgstr ""

#. R/Matrix.R: warning("as.matrix(<Matrix>) is deprecated (to become a no-op in the future). Use  as(x, \"matrix\")  or .asmatrix(x) instead.")
#: R/Matrix.R:0
msgid ""
"as.matrix(<Matrix>) is deprecated (to become a no-op in the future). Use  "
"as(x, \"matrix\")  or .asmatrix(x) instead."
msgstr ""

#. R/abIndex.R: warning("c(<abIndex>,..) of different kinds, coercing all to 'rleDiff'")
#: R/abIndex.R:0
msgid "c(<abIndex>,..) of different kinds, coercing all to 'rleDiff'"
msgstr "c(<abIndex>,..) of different kinds, 모두 'rleDiff'로 강제변환합니다"

#. R/ngTMatrix.R: stop("cannot coerce 'NA's to \"nsparseMatrix\"")
#: R/ngTMatrix.R:0
msgid "cannot coerce 'NA's to \"nsparseMatrix\""
msgstr "'NA'를 \"nsparseMatrix\"으로 강제변환(coerce)할 수 없습니다."

#. R/sparseVector.R: stop("cannot coerce 'NA's to \"nsparseVector\"")
#: R/sparseVector.R:0
msgid "cannot coerce 'NA's to \"nsparseVector\""
msgstr "'NA'를 \"nsparseVector\"로 강제변환(coerce) 할 수 없습니다."

#. R/Csparse.R: stop("cannot coerce NA values to pattern \"ngCMatrix\"")
#: R/Csparse.R:0
#, fuzzy
msgid "cannot coerce NA values to pattern \"ngCMatrix\""
msgstr "'NA'를 \"nsparseMatrix\"으로 강제변환(coerce)할 수 없습니다."

#. R/ntCMatrix.R: stop("cannot coerce NA values to pattern \"ntCMatrix\"")
#: R/ntCMatrix.R:0
#, fuzzy
msgid "cannot coerce NA values to pattern \"ntCMatrix\""
msgstr "'NA'를 \"nsparseMatrix\"으로 강제변환(coerce)할 수 없습니다."

#. R/dgTMatrix.R: stop("cannot coerce non-symmetric \"dgTMatrix\" to \"dsCMatrix\" class")
#: R/dgTMatrix.R:0
msgid "cannot coerce non-symmetric \"dgTMatrix\" to \"dsCMatrix\" class"
msgstr ""
"비대칭(non-symmetric) \"dgTMatrix\"는 \"dsCMatrix\" 클래스로 강제변환"
"(coerce) 할 수 없습니다. "

#. R/diagMatrix.R: stop("chol() is undefined for diagonal matrix with negative entries")
#: R/diagMatrix.R:0
msgid "chol() is undefined for diagonal matrix with negative entries"
msgstr "chol()은 음의 값을 가진 대각행렬에 대하여 정의되지 않았습니다."

#. R/Auxiliaries.R: gettextf("class(target) is %s, current is %s", c1, c2, domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid "class(target) is %s, current is %s"
msgstr ""

#. R/indMatrix.R: stop("coercion from list(i1,...,ik, d) to \"indMatrix\" failed.\n All entries must be integer valued and the number of columns, d, not smaller\n than the maximal index i*.")
#: R/indMatrix.R:0
msgid ""
"coercion from list(i1,...,ik, d) to \"indMatrix\" failed.\n"
" All entries must be integer valued and the number of columns, d, not "
"smaller\n"
" than the maximal index i*."
msgstr ""
"list(i1,...,ik, d)으로부터 \"indMatrix\"로의 강제변환(coercion)은 이루어지지 "
"않았습니다.\n"
" 모든 원소들은 반드시 정수이어야 하며 행의 개수 d는 인덱스 i* 중 \n"
" 가장 큰 수보다 보다 작지 않아야 합니다."

#. R/indMatrix.R: stop("coercion to \"indMatrix\" only works from integer numeric")
#: R/indMatrix.R:0
msgid "coercion to \"indMatrix\" only works from integer numeric"
msgstr ""
"\"indMatrix\"로의 강제변환(coercion)은 오로지 정수를 가지는 숫자(integer "
"numeric)인 경우만 가능합니다."

#. R/pMatrix.R: stop("coercion to \"pMatrix\" only works from integer numeric")
#: R/pMatrix.R:0
msgid "coercion to \"pMatrix\" only works from integer numeric"
msgstr ""
"\"pMatrix\"로의 강제변환(coercion)은 오로지 정수값을 가진 숫자(integer "
"numeric)인 경우로부터만 가능합니다."

#. R/Tsparse.R: gettextf("column indices must be <= ncol(.) which is %d", nc)
#: R/Tsparse.R:0
msgid "column indices must be <= ncol(.) which is %d"
msgstr "열에 사용되는 인덱스는 %d 보다 같거나 작아야 합니다. "

#. R/Matrix.R: stop("complex matrices not yet implemented in Matrix package")
#: R/Matrix.R:0
msgid "complex matrices not yet implemented in Matrix package"
msgstr ""
"복소수형(complex) 행렬을 다루는 경우는 아직 Matrix 패키지내에서는 아직 구현되"
"지 않았습니다."

#. R/AllClass.R: gettext("diag = \"U\" (identity matrix) requires empty 'x' slot", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "diag = \"U\" (identity matrix) requires empty 'x' slot"
msgstr ""

#. R/Matrix.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#. R/sparseMatrix.R: warning("diag(.) had 0 or NA entries; non-finite result is doubtful")
#: R/Matrix.R:0 R/sparseMatrix.R:0
msgid "diag(.) had 0 or NA entries; non-finite result is doubtful"
msgstr ""
"diag(.)에 0 또는 NA가 존재하므로 유한하지 않은 결과(non-finite result)를 얻"
"을 것으로 생각됩니다."

#. R/Tsparse.R: gettext("diagnosing replTmat(x,i,j,v): nargs()= 3; ", domain = "R-Matrix")
#: R/Tsparse.R:0
msgid "diagnosing replTmat(x,i,j,v): nargs()= 3;"
msgstr ""

#. R/AllClass.R: gettext("diagonal matrix 'diag' slot must be \"U\" or \"N\"", domain = "R-Matrix")
#: R/AllClass.R:0
msgid "diagonal matrix 'diag' slot must be \"U\" or \"N\""
msgstr ""

#. R/AllClass.R: gettext("diagonal matrix has 'x' slot of length != 'n'", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "diagonal matrix has 'x' slot of length != 'n'"
msgstr ""
"'diagonals' 행렬은 반드시 %d (=length(k))개의 열을 가지고 있어야 합니다."

#. R/denseMatrix.R: stop("diagonalMatrix in .dense2C() -- should never happen, please report!")
#: R/denseMatrix.R:0
msgid "diagonalMatrix in .dense2C() -- should never happen, please report!"
msgstr ""
"diagonalMatrix in .dense2C() -- 발생해서는 안되는 경우이므로 꼭 보고를 부탁드"
"립니다!"

#. R/Ops.R: gettextf("dim [product %d] do not match the length of object [%d]", n1, l2, domain = "R-Matrix")
#. R/Ops.R: gettextf("dim [product %d] do not match the length of object [%d]", n1, le, domain = "R-Matrix")
#. R/Ops.R: gettextf("dim [product %d] do not match the length of object [%d]", n1, l2, domain = "R-Matrix")
#. R/Ops.R: sprintf("dim [product %d] do not match the length of object [%d]", n1, n2)
#. R/Ops.R: sprintf("dim [product %d] do not match the length of object [%d]", n2, n1)
#: R/Ops.R:0
msgid "dim [product %d] do not match the length of object [%d]"
msgstr "dim [product %d]의 값이 객체 [%d]의 길이와 일치하지 않습니다."

#. R/denseMatrix.R: stop("dim(.) value must be numeric of length 2")
#. R/sparseMatrix.R: stop("dim(.) value must be numeric of length 2")
#. R/sparseVector.R: stop("dim(.) value must be numeric of length 2")
#: R/denseMatrix.R:0 R/sparseMatrix.R:0 R/sparseVector.R:0
msgid "dim(.) value must be numeric of length 2"
msgstr "dim(.)의 값은 반드시 길이가 2인 수치형 벡터이어야 합니다."

#. R/denseMatrix.R: stop("dimensions don't match the number of cells")
#. R/sparseMatrix.R: stop("dimensions don't match the number of cells")
#. R/sparseVector.R: stop("dimensions don't match the number of cells")
#: R/denseMatrix.R:0 R/sparseMatrix.R:0 R/sparseVector.R:0
msgid "dimensions don't match the number of cells"
msgstr "차원정보가 cell의 개수와 일치하지 않습니다"

#. R/Auxiliaries.R: gettextf("dimnames [%d] mismatch in %s", j, deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "dimnames [%d] mismatch in %s"
msgstr "%2$s에 입력된 dimnames [%1$d]가 일치하지 않습니다."

#. R/Matrix.R: message("dimnames(.) <- NULL:  translated to \ndimnames(.) <- list(NULL,NULL)  <==>  unname(.)")
#: R/Matrix.R:0
msgid ""
"dimnames(.) <- NULL:  translated to \n"
"dimnames(.) <- list(NULL,NULL)  <==>  unname(.)"
msgstr ""
"dimnames(.) <- NULL:은 다음과 같이 변경되었습니다. \n"
"dimnames(.) <- list(NULL,NULL)  <==>  unname(.)"

#. R/HBMM.R: gettextf("element type '%s' not recognized", elt)
#: R/HBMM.R:0
msgid "element type '%s' not recognized"
msgstr "'%s'는 사용가능한 원소유형(element type)이 아닙니다."

#. R/HBMM.R: stop("element type 'complex' not yet implemented")
#: R/HBMM.R:0
msgid "element type 'complex' not yet implemented"
msgstr ""
"원소유형(element type)이 'complex'인 경우에는 아직 구현되지 않았습니다."

#. R/sparseMatrix.R: stop("exactly one of 'i', 'j', or 'p' must be missing from call")
#: R/sparseMatrix.R:0
msgid "exactly one of 'i', 'j', or 'p' must be missing from call"
msgstr "'i', 'j', 또는 'p' 중 하나가 호출(call)로부터 누락된 것 같습니다. "

#. R/diagMatrix.R: gettext("exploding <diag> o <diag> into dense matrix", domain = "R-Matrix")
#: R/diagMatrix.R:0
msgid "exploding <diag> o <diag> into dense matrix"
msgstr ""

#. R/HBMM.R: stop("file is not a MatrixMarket file")
#: R/HBMM.R:0
msgid "file is not a MatrixMarket file"
msgstr "file에 MatrixMarket 형식의 파일이 입력되지 않았습니다."

#. R/bandSparse.R: stop("for symmetric band matrix, only specify upper or lower triangle\n hence, all k must have the same sign")
#: R/bandSparse.R:0
msgid ""
"for symmetric band matrix, only specify upper or lower triangle\n"
" hence, all k must have the same sign"
msgstr ""
"대칭 띠 행렬(symmetric band matrix)의 경우, 오로지 상삼각(upper triangle) 또"
"는 하삼각(lower)만을 지정합니다. \n"
" 따라서, 모든 k는 반드시 같은 부호(sign)를 가져야 합니다."

#. R/nsCMatrix.R: stop("function is temporarily disabled")
#: R/nsCMatrix.R:0
#, fuzzy
msgid "function is temporarily disabled"
msgstr "일시적으로 사용할 수 없습니다."

#. R/Auxiliaries.R: gettextf("general Matrix class not yet implemented for %s", dQuote(class(x)))
#: R/Auxiliaries.R:0
msgid "general Matrix class not yet implemented for %s"
msgstr "%s의 경우에는 아직 구현되지 않은 일반적인 Matrix 클래스입니다."

#. R/condest.R: message("hit a cycle (1) -- stop iterations")
#: R/condest.R:0
msgid "hit a cycle (1) -- stop iterations"
msgstr "cycle (1)에 도달했습니다 -- 반복을 중지합니다"

#. R/condest.R: message("hit a cycle (2) -- stop iterations")
#: R/condest.R:0
msgid "hit a cycle (2) -- stop iterations"
msgstr "cycle (2)에 도달했습니다 -- 반복을 중지합니다"

#. R/Csparse.R: warning("i1[1] == 0 ==> C-level verbosity will not happen!")
#: R/Csparse.R:0
msgid "i1[1] == 0 ==> C-level verbosity will not happen!"
msgstr "i1[1] == 0 ==> C-레벨에서의 진행과정표시는 나타나지 않을 것입니다!"

#. R/Summary.R: gettextf("in Summary(<ANY>, .): %s(<%s>, <%s>)\n", .Generic, class(x), class(a[[1]]))
#: R/Summary.R:0
msgid "in Summary(<ANY>, .): %s(<%s>, <%s>)"
msgstr "in Summary(<ANY>, .): %s(<%s>, <%s>)"

#. R/Summary.R: gettextf("in Summary(<ANY>, .): %s(<%s>, <%s>,...)\n", .Generic, class(x), class(a[[1]]))
#: R/Summary.R:0
msgid "in Summary(<ANY>, .): %s(<%s>, <%s>,...)"
msgstr "in Summary(<ANY>, .): %s(<%s>, <%s>,...)"

#. R/sparseMatrix.R: gettext("in show(); maybe adjust 'options(max.print= *, width = *)'")
#: R/sparseMatrix.R:0
msgid "in show(); maybe adjust 'options(max.print= *, width = *)'"
msgstr ""

#. R/diagMatrix.R: stop("incompatible matrix dimensions")
#: R/diagMatrix.R:0
msgid "incompatible matrix dimensions"
msgstr "차원(dimensions) 정보가 일치하지 않습니다."

#. R/Tsparse.R: gettextf("index larger than maximal %d", n)
#. R/Tsparse.R: gettextf("index larger than maximal %d", n)
#: R/Tsparse.R:0
msgid "index larger than maximal %d"
msgstr "인덱스가 %d 보다 큽니다."

#. R/sparseVector.R: stop("index must be numeric, logical or sparseVector for indexing sparseVectors")
#: R/sparseVector.R:0
msgid ""
"index must be numeric, logical or sparseVector for indexing sparseVectors"
msgstr ""
"sparseVectors를 인덱싱하기 위해서는 인덱스는 반드시 수치형, 논리형 또는 "
"sparseVectors이어야 합니다."

#. R/dtpMatrix.R: warning("inefficient coercion (lost triangularity); please report")
#: R/dtpMatrix.R:0
msgid "inefficient coercion (lost triangularity); please report"
msgstr ""
"비효율적인 강제변환입니다 (triangularity를 소실하였기 때문입니다).  꼭 보고"
"를 부탁드립니다."

#. R/Ops.R: warning("inefficient method used for \"- e1\"")
#: R/Ops.R:0
msgid "inefficient method used for \"- e1\""
msgstr "\"- e1\"를 사용하는데 비효율적인 메소드(method)입니다."

#. R/diagMatrix.R: gettextf("intermediate 'r' is of type %s", typeof(r))
#: R/diagMatrix.R:0
msgid "intermediate 'r' is of type %s"
msgstr "intermediate 'r' is of type %s"

#. R/Ops.R: stop("internal bug in \"Compare\" method (Cmp.Mat.atomic); please report")
#: R/Ops.R:0
msgid "internal bug in \"Compare\" method (Cmp.Mat.atomic); please report"
msgstr ""
"메소드 \"Compare\" (Cmp.Mat.atomic)내에서 버그(internal bug)가 발생했습니다. "
"이를 꼭 보고해 주셨으면 합니다."

#. R/Ops.R: stop("internal bug in \"Logic\" method (Logic.Mat.atomic); please report")
#: R/Ops.R:0
msgid "internal bug in \"Logic\" method (Logic.Mat.atomic); please report"
msgstr ""
"메소드 \"Logic\" (Logic.Mat.atomic)내에서 버그가 발생되었습니다.  이를 꼭 보"
"고해 주셨으면 합니다."

#. R/Tsparse.R: stop("internal bug: matrix 'i' in replTmat(): please report")
#: R/Tsparse.R:0
msgid "internal bug: matrix 'i' in replTmat(): please report"
msgstr ""
"내부버그 발견: replTmat()내에서 'i'는 행렬입니다. 이를 보고해 주시길 부탁드립"
"니다."

#. R/Tsparse.R: stop("internal bug: missing 'i' in replTmat(): please report")
#: R/Tsparse.R:0
msgid "internal bug: missing 'i' in replTmat(): please report"
msgstr ""
"내부버그 발견: replTmat()내에서 'i'를 찾을 수 없습니다. 이를 보고해 주시길 부"
"탁드립니다."

#. R/sparseMatrix.R: gettextf("invalid 'col.names' string: %s", cn)
#: R/sparseMatrix.R:0
msgid "invalid 'col.names' string: %s"
msgstr "%s은 올바른 'col.names' 문자열이 아닙니다"

#. R/spModels.R: stop("invalid 'contrasts.arg' argument")
#: R/spModels.R:0
msgid "invalid 'contrasts.arg' argument"
msgstr "'contrasts.arg' 인자가 올바르지 않습니다."

#. R/Matrix.R: stop("invalid 'data'")
#: R/Matrix.R:0
msgid "invalid 'data'"
msgstr "입력된 'data'는 올바르지 않습니다."

#. R/Auxiliaries.R: gettextf("invalid 'mod': %s", mod)
#. R/Auxiliaries.R: gettextf("invalid 'mod': %s", mod)
#: R/Auxiliaries.R:0
msgid "invalid 'mod': %s"
msgstr "사용할 수 있는 'mod'(%s)가 아닙니다."

#. R/bandSparse.R: stop("invalid 'repr'; must be \"C\", \"T\", or \"R\"")
#. R/sparseMatrix.R: stop("invalid 'repr'; must be \"C\", \"T\", or \"R\"")
#: R/bandSparse.R:0 R/sparseMatrix.R:0
msgid "invalid 'repr'; must be \"C\", \"T\", or \"R\""
msgstr ""

#. R/sparseMatrix.R: stop("invalid 'type'")
#: R/sparseMatrix.R:0
msgid "invalid 'type'"
msgstr "올바르지 않은 'type'입니다."

#. R/abIndex.R: stop("invalid (to - from)/by in 'seq(.)'")
#: R/abIndex.R:0
#, fuzzy
msgid "invalid (to - from)/by in 'seq(.)'"
msgstr "seq(.)의 사용시 (to - from)/by의 값이 올바르지 않습니다."

#. R/Tsparse.R: stop("invalid character indexing")
#: R/Tsparse.R:0
msgid "invalid character indexing"
msgstr "유효하지 않은 문자형 인덱싱입니다"

#. R/Rsparse.R: gettextf("invalid class: %s", dQuote(cl))
#. R/Rsparse.R: gettextf("invalid class: %s", dQuote(cl))
#: R/Rsparse.R:0
msgid "invalid class: %s"
msgstr "%s는 사용가능한 클래스(class)가 아닙니다."

#. R/Matrix.R: gettextf("invalid dimnames given for %s object", dQuote(class(x)))
#: R/Matrix.R:0
msgid "invalid dimnames given for %s object"
msgstr "객체 %s에 주어진 dimnames가 올바르지 않습니다."

#. R/denseMatrix.R: gettextf("invalid nargs()= %d", na)
#. R/denseMatrix.R: gettextf("invalid nargs()= %d", na)
#: R/denseMatrix.R:0
msgid "invalid nargs()= %d"
msgstr "nargs()= %d의 값이 올바르지 않습니다."

#. R/Matrix.R: stop("invalid or not-yet-implemented 'Matrix' subsetting")
#: R/Matrix.R:0
msgid "invalid or not-yet-implemented 'Matrix' subsetting"
msgstr ""
"올바르지 않거나 아직 구현되지 않은 'Matrix' 부분추출(subsetting)입니다."

#. R/indMatrix.R: stop("kronecker method must use default 'FUN'")
#. R/kronecker.R: stop("kronecker method must use default 'FUN'")
#. R/kronecker.R: stop("kronecker method must use default 'FUN'")
#: R/indMatrix.R:0 R/kronecker.R:0
msgid "kronecker method must use default 'FUN'"
msgstr ""
"크로넥커 메소드(kronecker method)는 반드시 기본 'FUN'을 사용해야 합니다."

#. R/abIndex.R: stop("length must be non-negative number")
#: R/abIndex.R:0
msgid "length must be non-negative number"
msgstr "길이(length)는 반드시 음이 아닌 수이어야 합니다."

#. R/sparseMatrix.R: stop("length of 'center' must equal the number of columns of 'x'")
#: R/sparseMatrix.R:0
#, fuzzy
msgid "length of 'center' must equal the number of columns of 'x'"
msgstr "%s에 사용된 각 행렬이 가지는 열의 개수는 서로 같아야 합니다."

#. R/AllClass.R: gettextf("length of 'perm' slot must be %d", n)
#: R/AllClass.R:0
msgid "length of 'perm' slot must be %d"
msgstr ""

#. R/AllClass.R: gettextf("length of 'perm' slot must be %s", n, domain = "R-Matrix")
#: R/AllClass.R:0
msgid "length of 'perm' slot must be %s"
msgstr ""

#. R/sparseMatrix.R: stop("length of 'scale' must equal the number of columns of 'x'")
#: R/sparseMatrix.R:0
#, fuzzy
msgid "length of 'scale' must equal the number of columns of 'x'"
msgstr "%s에 사용된 각 행렬이 가지는 열의 개수는 서로 같아야 합니다."

#. R/Ops.R: stop("length of 1st arg does not match dimension of 2nd")
#. R/Ops.R: stop("length of 1st arg does not match dimension of 2nd")
#: R/Ops.R:0
msgid "length of 1st arg does not match dimension of 2nd"
msgstr ""
"첫번째 인자(arg)의 길이는 두번째 인자의 차원(dimension)과 일치하지 않습니다."

#. R/Ops.R: stop("length of 2nd arg does not match dimension of first")
#. R/Ops.R: stop("length of 2nd arg does not match dimension of first")
#: R/Ops.R:0
msgid "length of 2nd arg does not match dimension of first"
msgstr ""
"두번째 인자(arg)의 길이가 첫번째 인자의 차원(dimension)과 일치하지 않습니다."

#. R/sparseMatrix.R: warning("length(i) is not a multiple of length(x)")
#: R/sparseMatrix.R:0
msgid "length(i) is not a multiple of length(x)"
msgstr "length(i)는 length(x)의 배수가 아닙니다."

#. R/diagMatrix.R: stop("length(x) must be either 1 or #{cols}")
#: R/diagMatrix.R:0
msgid "length(x) must be either 1 or #{cols}"
msgstr "length(x)는 반드시 1 또는 #{cols} 이어야 합니다. "

#. R/sparseMatrix.R: stop("logic programming error in printSpMatrix2(), please report")
#: R/sparseMatrix.R:0
msgid "logic programming error in printSpMatrix2(), please report"
msgstr ""
"printSpMatrix2()를 이용 도중 논리적 프로그래밍 에러(logic programming error)"
"가 발생했습니다.  이를 꼭 보고를 부탁드립니다."

#. R/Tsparse.R: gettextf("logical subscript too long (%d, should be %d)", length(i), n)
#: R/Tsparse.R:0
msgid "logical subscript too long (%d, should be %d)"
msgstr ""
"길이가 너무 긴 논리형 첨자(subscript)입니다 (%2$d이어야 하는데 %1$d입니다)."

#. R/Ops.R: warning("longer object length\n\tis not a multiple of shorter object length")
#: R/Ops.R:0
msgid ""
"longer object length\n"
"\tis not a multiple of shorter object length"
msgstr ""
"객체의 길이(긴 것)가\n"
"\t 다른 객체가 가지는 길이(짧은 것)의 배수가 아닙니다."

#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/Ops.R: warning("longer object length is not a multiple of shorter object length")
#. R/abIndex.R: warning("longer object length is not a multiple of shorter object length")
#: R/Ops.R:0 R/abIndex.R:0
msgid "longer object length is not a multiple of shorter object length"
msgstr "객체의 길이(긴 것)이 다른 객체의 길이(짧은 것)의 배수가 아닙니다."

#. R/Matrix.R: message("m[ <ij-matrix> ] <- v: inefficiently treating single elements")
#: R/Matrix.R:0
msgid "m[ <ij-matrix> ] <- v: inefficiently treating single elements"
msgstr "m[ <ij-matrix> ] <- v: inefficiently treating single elements"

#. R/Matrix.R: message("m[<ij-matrix>]: inefficiently indexing single elements - should not happen, please report!")
#: R/Matrix.R:0
#, fuzzy
msgid ""
"m[<ij-matrix>]: inefficiently indexing single elements - should not happen, "
"please report!"
msgstr "m[ <ij-matrix> ]: inefficiently indexing single elements"

#. R/bandSparse.R: stop("matrix can only be symmetric if square, but n != m")
#: R/bandSparse.R:0
msgid "matrix can only be symmetric if square, but n != m"
msgstr ""

#. R/diagMatrix.R: stop("matrix is not diagonal")
#: R/diagMatrix.R:0
msgid "matrix is not diagonal"
msgstr "대각행렬이 아닙니다."

#. R/AllClass.R: gettext("matrix is not square")
#: R/AllClass.R:0
#, fuzzy
msgid "matrix is not square"
msgstr "대각행렬이 아닙니다."

#. R/diagMatrix.R: stop("matrix with non-zero off-diagonals cannot be coerced to \"diagonalMatrix\"")
#: R/diagMatrix.R:0
msgid ""
"matrix with non-zero off-diagonals cannot be coerced to \"diagonalMatrix\""
msgstr ""
"비대각원소의 값이 영이 아닌 행렬은 \"diagonalMatrix\"로 강제변환(coerced) 할 "
"수 없습니다."

#. R/Csparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#. R/Tsparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#. R/Tsparse.R: gettextf("missing (i,j) = (%d,%d)", iMi, jMi, domain = "R-Matrix")
#: R/Csparse.R:0 R/Tsparse.R:0
msgid "missing (i,j) = (%d,%d)"
msgstr ""

#. R/spModels.R: stop("model frame and formula mismatch in model.matrix()")
#: R/spModels.R:0
msgid "model frame and formula mismatch in model.matrix()"
msgstr ""
"model.matrix()를 사용할 때 모델프레임(model frame)과 모델식(formula)가 일치하"
"지 않습니다."

#. R/spModels.R: gettextf("model.spmatrix(t, data, ..) with 't' equal to:", domain = "R-Matrix")
#: R/spModels.R:0
msgid "model.spmatrix(t, data, ..) with 't' equal to:"
msgstr ""

#. R/condest.R: stop("must either specify 'A' or the functions 'A.x' and 'At.x'")
#: R/condest.R:0
msgid "must either specify 'A' or the functions 'A.x' and 'At.x'"
msgstr "'A' 또는 'A.x'와 'At.x'는 반드시 주어져야 합니다."

#. R/indMatrix.R: stop("must have exactly one non-zero entry per row")
#. R/pMatrix.R: stop("must have exactly one non-zero entry per row")
#: R/indMatrix.R:0 R/pMatrix.R:0
msgid "must have exactly one non-zero entry per row"
msgstr "각 행마다 반드시 정확히 하나의 영이 아닌 항목을 가지고 있어야 합니다."

#. R/Auxiliaries.R: stop("names(dimnames(<matrix>)) must be NULL or of length two")
#: R/Auxiliaries.R:0
msgid "names(dimnames(<matrix>)) must be NULL or of length two"
msgstr "names(dimnames(<matrix>))의 길이는 2이거나 NULL이어야 합니다."

#. R/Tsparse.R: gettextf("nargs() = %d should never happen; please report.", nA)
#: R/Tsparse.R:0
msgid "nargs() = %d should never happen; please report."
msgstr ""
"nargs() = %d 와 같은 경우는 발생할 수 없으므로 꼭 보고해 주시기를 부탁드립니"
"다."

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.2col)?",     nA)
#: R/Matrix.R:0
msgid "nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.2col)?"
msgstr "nargs() = %d.  필요이상의 인자들이 '[ .. ]' (i.2col)에 이용되었나요?"

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.logical)?",     nA)
#: R/Matrix.R:0
msgid ""
"nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' (i.logical)?"
msgstr ""
"nargs() = %d.  필요이상의 인자들이 '[ .. ]' (i.logical)에 이용되었나요?"

#. R/Matrix.R: gettextf("nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' ?", nA)
#: R/Matrix.R:0
msgid "nargs() = %d.  Extraneous illegal arguments inside '[ .. ]' ?"
msgstr "nargs() = %d.  필요이상의 인자들이 '[ .. ]' 내에 이용되었나요?"

#. R/Matrix.R: stop("negative values are not allowed in a matrix subscript")
#. R/Tsparse.R: stop("negative values are not allowed in a matrix subscript")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "negative values are not allowed in a matrix subscript"
msgstr "음수(negative values)는 행렬의 첨자(subscript)로 사용할 수 없습니다."

#. R/Tsparse.R: stop("no 'dimnames[[.]]': cannot use character indexing")
#: R/Tsparse.R:0
msgid "no 'dimnames[[.]]': cannot use character indexing"
msgstr "no 'dimnames[[.]]': 문자형 인덱싱을 사용할 수 없습니다"

#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#. R/products.R: stop("non-conformable arguments")
#: R/products.R:0
msgid "non-conformable arguments"
msgstr "non-conformable arguments"

#. R/Auxiliaries.R: gettextf("non-conformable matrix dimensions in %s", deparse(sys.call(sys.parent())))
#: R/Auxiliaries.R:0
msgid "non-conformable matrix dimensions in %s"
msgstr "%s에 입력된 행렬의 차원이 정합(conformable)하지 않습니다."

#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#. R/diagMatrix.R: stop("non-matching dimensions")
#: R/diagMatrix.R:0
msgid "non-matching dimensions"
msgstr "차원(dimensions) 정보가 일치하지 않습니다."

#. R/diagMatrix.R: stop("non-square matrix")
#. R/diagMatrix.R: stop("non-square matrix")
#: R/diagMatrix.R:0
msgid "non-square matrix"
msgstr "비정방(non-square) 행렬입니다."

#. R/dppMatrix.R: stop("not a positive definite matrix")
#. R/dsyMatrix.R: stop("not a positive definite matrix")
#: R/dppMatrix.R:0 R/dsyMatrix.R:0
msgid "not a positive definite matrix"
msgstr "양정치(positive definite) 행렬이 아닙니다."

#. R/pMatrix.R: stop("not a square matrix")
#: R/pMatrix.R:0
msgid "not a square matrix"
msgstr "정방행렬(square matrix)이 아닙니다."

#. R/Auxiliaries.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/Csparse.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/dsyMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/dsyMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/ldenseMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#. R/ndenseMatrix.R: stop("not a symmetric matrix; consider forceSymmetric() or symmpart()")
#: R/Auxiliaries.R:0 R/Csparse.R:0 R/dsyMatrix.R:0 R/ldenseMatrix.R:0
#: R/ndenseMatrix.R:0
msgid "not a symmetric matrix; consider forceSymmetric() or symmpart()"
msgstr ""
"대칭행렬(symmetric matrix)가 아닙니다.  forceSymmtric() 또는 symmpart() 함수"
"의 사용을 고려해 보시길 바랍니다."

#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/Auxiliaries.R: stop("not a triangular matrix")
#. R/ldenseMatrix.R: stop("not a triangular matrix")
#. R/ndenseMatrix.R: stop("not a triangular matrix")
#: R/Auxiliaries.R:0 R/ldenseMatrix.R:0 R/ndenseMatrix.R:0
msgid "not a triangular matrix"
msgstr "삼각행렬(triangular matrix)가 아닙니다."

#. R/condest.R: gettextf("not converged in %d iterations", iter.max)
#: R/condest.R:0
msgid "not converged in %d iterations"
msgstr "%d번째 반복에서도 수렴하지 않습니다."

#. R/condest.R: message("not enough new vecs -- stop iterations")
#: R/condest.R:0
msgid "not enough new vecs -- stop iterations"
msgstr "not enough new vecs -- stop iterations"

#. R/abIndex.R: stop("not yet implemented")
#. R/sparseMatrix.R: stop("not yet implemented")
#: R/abIndex.R:0 R/sparseMatrix.R:0
msgid "not yet implemented"
msgstr "아직 구현되지 않았습니다."

#. R/diagMatrix.R: stop("not yet implemented .. please report")
#: R/diagMatrix.R:0
msgid "not yet implemented .. please report"
msgstr "아직 구현되지 않았습니다.  보고를 부탁드립니다."

#. R/Auxiliaries.R: gettextf(" not yet implemented for %s", clx@className)
#. R/Auxiliaries.R: gettextf(" not yet implemented for %s", clx@className)
#: R/Auxiliaries.R:0
msgid "not yet implemented for %s"
msgstr "%s의 경우에는 아직 구현되지 않았습니다."

#. R/Auxiliaries.R: gettextf("not yet implemented for class %s", dQuote(class.x))
#: R/Auxiliaries.R:0
msgid "not yet implemented for class %s"
msgstr "클래스 %s의 경우에 아직 구현되지 않았습니다."

#. R/Auxiliaries.R: gettextf("not yet implemented for matrix with typeof %s", typeof(x))
#. R/Auxiliaries.R: gettextf("not yet implemented for matrix with typeof %s", typeof(x))
#: R/Auxiliaries.R:0
msgid "not yet implemented for matrix with typeof %s"
msgstr "저장방식(typeof) %s를 가지는 행렬의 경우에는 아직 구현되지 않았습니다."

#. R/Matrix.R: stop("not-yet-implemented 'Matrix[<-' method")
#: R/Matrix.R:0
msgid "not-yet-implemented 'Matrix[<-' method"
msgstr "아직 구현되지 않은 'Matrix[<-' 메소드입(method)니다."

#. R/Tsparse.R: stop("not-yet-implemented coercion to \"TsparseMatrix\"")
#: R/Tsparse.R:0
msgid "not-yet-implemented coercion to \"TsparseMatrix\""
msgstr "\"TsparseMatrix\"으로의 강제변환(coercion)은 아직 구현되지 않았습니다."

#. R/Auxiliaries.R: gettextf("not-yet-implemented method for %s(<%s>).\n ->>  Ask the package authors to implement the missing feature.",     fun, cl[1L])
#: R/Auxiliaries.R:0
msgid ""
"not-yet-implemented method for %s(<%s>).\n"
" ->>  Ask the package authors to implement the missing feature."
msgstr ""
"%s(<%s>)의 경우에 대하여 아직 구현되지 않은 메소드(method)입니다.\n"
" ->> 이 기능에 대한 구현을 패키지 관리자에게 문의해 주셨으면 합니다."

#. R/Auxiliaries.R: gettextf("not-yet-implemented method for %s(<%s>, <%s>).\n ->>  Ask the package authors to implement the missing feature.",     fun, cl1[1L], cl2[1L])
#: R/Auxiliaries.R:0
msgid ""
"not-yet-implemented method for %s(<%s>, <%s>).\n"
" ->>  Ask the package authors to implement the missing feature."
msgstr ""
"%s(<%s>, <%s>)의 경우에 대하여 아직 구현되지 않은 메소드(method)입니다.\n"
" ->> 이 기능에 대한 구현을 패키지 관리자에게 문의해 주시길 바랍니다."

#. R/products.R: gettextf("not-yet-implemented method for <%s> %%*%% <%s>", class(x), class(y))
#: R/products.R:0
msgid "not-yet-implemented method for <%s> %%*%% <%s>"
msgstr "<%s> %%*%% <%s>에 사용할 수 있는 메소드가 아직 구현되지 않았습니다."

#. R/Csparse.R: stop("nothing to replace with")
#. R/Tsparse.R: stop("nothing to replace with")
#. R/Tsparse.R: stop("nothing to replace with")
#. R/sparseVector.R: stop("nothing to replace with")
#: R/Csparse.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "nothing to replace with"
msgstr "교체(replace)해야 할 것이 아무것도 없습니다."

#. R/Csparse.R: stop("number of items to replace is not a multiple of replacement length")
#. R/Matrix.R: warning("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: warning("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: stop("number of items to replace is not a multiple of replacement length")
#. R/Tsparse.R: warning("number of items to replace is not a multiple of replacement length")
#. R/sparseVector.R: stop("number of items to replace is not a multiple of replacement length")
#: R/Csparse.R:0 R/Matrix.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "number of items to replace is not a multiple of replacement length"
msgstr ""
"교체(replace)할 항목의 개수가 입력된 value가 가지는 길이의 배수가 아닙니다."

#. R/sparseMatrix.R: warning("number of non zeros is smaller than 'nnz' because of duplicated (i,j)s")
#: R/sparseMatrix.R:0
msgid "number of non zeros is smaller than 'nnz' because of duplicated (i,j)s"
msgstr ""
"중복된 (i,j)에 위치한 값들 때문에 영이 아닌 요소의 개수가 'nnz' 보다 작습니"
"다."

#. R/Ops.R: gettextf("number of rows are not compatible for %s", .Generic)
#: R/Ops.R:0
msgid "number of rows are not compatible for %s"
msgstr "%s의 경우 행의 개수가 올바르지 않습니다."

#. R/dMatrix.R: gettextf("object of class %s with NA values coerced to an object of class %s:  NA |-> TRUE",     dQuote("dMatrix"), dQuote("nMatrix"))
#. R/dMatrix.R: gettextf("object of class %s with NA values coerced to an object of class %s:  NA |-> TRUE",     dQuote("dMatrix"), dQuote("nMatrix"))
#: R/dMatrix.R:0
msgid ""
"object of class %s with NA values coerced to an object of class %s:  NA |-> "
"TRUE"
msgstr ""

#. R/lMatrix.R: gettextf("object of class %s with NA values coerced to an object of class %s: NA |-> TRUE",     dQuote("lMatrix"), dQuote("nMatrix"))
#. R/lMatrix.R: gettextf("object of class %s with NA values coerced to an object of class %s: NA |-> TRUE",     dQuote("lMatrix"), dQuote("nMatrix"))
#: R/lMatrix.R:0
msgid ""
"object of class %s with NA values coerced to an object of class %s: NA |-> "
"TRUE"
msgstr ""

#. R/sparseMatrix.R: stop("only 2-dimensional tables can be directly coerced to sparse matrices")
#: R/sparseMatrix.R:0
msgid "only 2-dimensional tables can be directly coerced to sparse matrices"
msgstr ""
"오로지 2차원 테이블만이 희소행렬(sparse matrice)로 강제변환(coerced)될 수 있"
"습니다."

#. R/sparseMatrix.R: stop("only square matrices can be used as incidence matrices for graphs")
#: R/sparseMatrix.R:0
msgid "only square matrices can be used as incidence matrices for graphs"
msgstr ""
"오로지 정방(square) 행렬만이 그래프를 위한 접속행렬(incidence matrices)로서 "
"사용할 수 있습니다."

#. R/AllClass.R: gettext("pMatrix must be square", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "pMatrix must be square"
msgstr "대칭행렬(symmetric matrix)는 반드시 정방(square)이어야 합니다."

#. R/MatrixFactorization.R: gettext("packed 'Bunch-Kaufman' factorization of:", domain = "R-Matrix")
#: R/MatrixFactorization.R:0
msgid "packed 'Bunch-Kaufman' factorization of:"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal crossprod(\"%s\", <%s>[=<ANY>]) as t(.) %s y", class(x),     class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal crossprod(\"%s\", <%s>[=<ANY>]) as t(.) %s y"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal crossprod(\"%s\",\"%s\") as t(.) %s y", class(x),     class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal crossprod(\"%s\",\"%s\") as t(.) %s y"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal crossprod(<%s>) as t(.) %*% . ", class(x))
#: R/products.R:0
msgid "potentially suboptimal crossprod(<%s>) as t(.) %*% ."
msgstr ""

#. R/products.R: gettextf("potentially suboptimal tcrossprod(\"%s\",\"%s\") as  x %s t(y)", class(x),     class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal tcrossprod(\"%s\",\"%s\") as  x %s t(y)"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal tcrossprod(<%s>) as  . %*% t(.)", class(x))
#: R/products.R:0
msgid "potentially suboptimal tcrossprod(<%s>) as  . %*% t(.)"
msgstr ""

#. R/products.R: gettextf("potentially suboptimal tcrossprod(<%s>[=<ANY>], \"%s\") as  x %s t(y)",     class(x), class(y), "%*%")
#: R/products.R:0
msgid "potentially suboptimal tcrossprod(<%s>[=<ANY>], \"%s\") as  x %s t(y)"
msgstr ""

#. R/abIndex.R: stop("prod(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "prod(<abIndex>) is not yet implemented"
msgstr "prod(<abIndex>)는 아직 구현되지 않았습니다."

#. R/Summary.R: stop("programming error: min() should have dispatched w/ 1st arg much earlier")
#: R/Summary.R:0
msgid "programming error: min() should have dispatched w/ 1st arg much earlier"
msgstr ""
"programming error: min() should have dispatched w/ 1st arg much earlier"

#. R/sparseQR.R: warning("qr.R(<sparse>) may differ from qr.R(<dense>) because of permutations.  Possibly use our qrR() instead")
#: R/sparseQR.R:0
msgid ""
"qr.R(<sparse>) may differ from qr.R(<dense>) because of permutations.  "
"Possibly use our qrR() instead"
msgstr ""
"qr.R(<sparse>)은 아마도 순열(permutations) 때문에 qr.R(<dense>)와 다를 수 있"
"습니다.   따라서, qrR()을 사용하시길 바랍니다."

#. R/rankMatrix.R: gettextf("qr2rankMatrix(.): QR has negative diag(R) entries")
#: R/rankMatrix.R:0
msgid "qr2rankMatrix(.): QR has negative diag(R) entries"
msgstr ""

#. R/rankMatrix.R: gettextf("qr2rankMatrix(.): QR with only %d out of %d finite diag(R) entries", sum(ifi),     length(ifi))
#: R/rankMatrix.R:0
msgid "qr2rankMatrix(.): QR with only %d out of %d finite diag(R) entries"
msgstr ""

#. R/rankMatrix.R: gettextf("rankMatrix(<large sparse Matrix>, method = '%s') coerces to dense matrix. Probably should rather use method = 'qr' !?",     method)
#: R/rankMatrix.R:0
msgid ""
"rankMatrix(<large sparse Matrix>, method = '%s') coerces to dense matrix. "
"Probably should rather use method = 'qr' !?"
msgstr ""

#. R/rankMatrix.R: gettextf("rankMatrix(x, method='qr'): computing t(x) as nrow(x) < ncol(x)")
#: R/rankMatrix.R:0
msgid "rankMatrix(x, method='qr'): computing t(x) as nrow(x) < ncol(x)"
msgstr "rankMatrix(x, method='qr'): nrow(x) < ncol(x)이므로 t(x)를 계산합니다."

#. R/sparseMatrix.R: warning("rcond(.) via sparse -> dense coercion")
#: R/sparseMatrix.R:0
msgid "rcond(.) via sparse -> dense coercion"
msgstr "rcond(.) via sparse -> dense coercion"

#. R/HBMM.R: stop("readMM(): column values 'j' are not in 1:nc", call. = FALSE)
#: R/HBMM.R:0
msgid "readMM(): column values 'j' are not in 1:nc"
msgstr "readMM(): 열(column) 'j'는 1:nc 내에 존재하지 않습니다."

#. R/HBMM.R: stop("readMM(): row\t values 'i' are not in 1:nr", call. = FALSE)
#: R/HBMM.R:0
msgid "readMM(): row\t values 'i' are not in 1:nr"
msgstr "readMM(): 행(row) 'i'는 1:nr 내에 존재하지 않습니다."

#. R/dgTMatrix.R: gettextf("rectangle size %s [pixels];  --> lwd :%s", paste(round(pSize, 1), collapse = " x "),     formatC(lwd), domain = "R-Matrix")
#: R/dgTMatrix.R:0
msgid "rectangle size %s [pixels];  --> lwd :%s"
msgstr ""

#. R/indMatrix.R: stop("replacing \"indMatrix\" entries is not allowed, as rarely sensible")
#: R/indMatrix.R:0
msgid "replacing \"indMatrix\" entries is not allowed, as rarely sensible"
msgstr ""
"\"indMatrix\" 요소를 변경하는 것은 허용되지 않습니다, as rarely sensible"

#. R/HBMM.R: gettextf("representation '%s' not recognized", repr)
#: R/HBMM.R:0
msgid "representation '%s' not recognized"
msgstr "'%s'는 사용가능한 표현(representation)이 아닙니다."

#. R/indMatrix.R: stop("resulting matrix dimension would be too large")
#: R/indMatrix.R:0
msgid "resulting matrix dimension would be too large"
msgstr ""

#. R/bind2.R: stop("resulting x-slot has different type than x's or y's")
#. R/bind2.R: stop("resulting x-slot has different type than x's or y's")
#: R/bind2.R:0
msgid "resulting x-slot has different type than x's or y's"
msgstr ""

#. R/Tsparse.R: gettextf("row indices must be <= nrow(.) which is %d", nr)
#: R/Tsparse.R:0
msgid "row indices must be <= nrow(.) which is %d"
msgstr "행에 사용되는 인덱스는 반드시 %d 보다 같거나 작아야 합니다."

#. R/dsCMatrix.R: gettext("solve.dsC.dC(): Cholmod factorization unsuccessful --> using LU(<dgC>)",     domain = "R-Matrix")
#: R/dsCMatrix.R:0
msgid "solve.dsC.dC(): Cholmod factorization unsuccessful --> using LU(<dgC>)"
msgstr ""

#. R/dsCMatrix.R: gettext("solve.dsC.mat(): Cholmod factorization unsuccessful --> using LU(<dgC>)",     domain = "R-Matrix")
#: R/dsCMatrix.R:0
msgid "solve.dsC.mat(): Cholmod factorization unsuccessful --> using LU(<dgC>)"
msgstr ""

#. R/diagMatrix.R: stop("some arguments are not matrices")
#: R/diagMatrix.R:0
msgid "some arguments are not matrices"
msgstr "일부 인자가 행렬이 아닙니다."

#. R/AllClass.R: gettext("some entries are not integer valued", domain = "R-Matrix")
#: R/AllClass.R:0
#, fuzzy
msgid "some entries are not integer valued"
msgstr "일부 인자가 행렬이 아닙니다."

#. R/Ops.R: gettextf("sparse to dense (%s) coercion in '%s' -> %s", lClass, .Generic, "Cmp.Mat.atomic",     domain = "R-Matrix")
#. R/Ops.R: gettextf("sparse to dense (%s) coercion in '%s' -> %s", lClass, .Generic, "Logic.Mat.atomic",     domain = "R-Matrix")
#: R/Ops.R:0
msgid "sparse to dense (%s) coercion in '%s' -> %s"
msgstr ""

#. R/Ops.R: gettext("suboptimal 'Arith' implementation of  'dsC*  o  dsC*'", domain = "R-Matrix")
#: R/Ops.R:0
msgid "suboptimal 'Arith' implementation of  'dsC*  o  dsC*'"
msgstr ""

#. R/Matrix.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Matrix.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Tsparse.R: stop("such indexing must be by logical or 2-column numeric matrix")
#. R/Tsparse.R: stop("such indexing must be by logical or 2-column numeric matrix")
#: R/Matrix.R:0 R/Tsparse.R:0
msgid "such indexing must be by logical or 2-column numeric matrix"
msgstr ""
"이와 같은 유형의 인덱싱(indexing)은 반드시 논리형(logical) 또는 2개의 열로 구"
"성된 수치형(numeric) 행렬에 의해서만 이루어져야 합니다."

#. R/abIndex.R: stop("sum(<abIndex>) is not yet implemented")
#: R/abIndex.R:0
msgid "sum(<abIndex>) is not yet implemented"
msgstr "sum(<abIndex>)는 아직 구현되지 않았습니다."

#. R/sparseMatrix.R: gettextf("suppressing %d columns", d[2] - nc)
#: R/sparseMatrix.R:0
#, fuzzy
msgid "suppressing %d columns"
msgstr "[[ %d개의 열이름 %s를 제거합니다 ]]"

#. R/sparseMatrix.R: gettextf("suppressing %d columns and %d rows", d[2] - nc, d[1] - nr)
#: R/sparseMatrix.R:0
#, fuzzy
msgid "suppressing %d columns and %d rows"
msgstr "[[ %d개의 열이름 %s를 제거합니다 ]]"

#. R/sparseMatrix.R: gettextf("suppressing %d rows", d[1] - nr)
#: R/sparseMatrix.R:0
#, fuzzy
msgid "suppressing %d rows"
msgstr "[[ %d개의 열이름 %s를 제거합니다 ]]"

#. R/sparseMatrix.R: stop("symmetric matrix must be square")
#: R/sparseMatrix.R:0
msgid "symmetric matrix must be square"
msgstr "대칭행렬(symmetric matrix)는 반드시 정방(square)이어야 합니다."

#. R/HBMM.R: gettextf("symmetry form '%s' is not yet implemented", sym)
#. R/HBMM.R: gettextf("symmetry form '%s' is not yet implemented", sym)
#: R/HBMM.R:0
msgid "symmetry form '%s' is not yet implemented"
msgstr "대칭형식(symmetry form)이 '%s'인 경우에는 아직 구현되지 않았습니다."

#. R/HBMM.R: gettextf("symmetry form '%s' not recognized", sym)
#: R/HBMM.R:0
msgid "symmetry form '%s' not recognized"
msgstr "'%s'는 사용가능한 대칭형식(symmetry form)이 아닙니다."

#. R/HBMM.R: stop("symmetry form 'hermitian' not yet implemented for reading")
#. R/HBMM.R: stop("symmetry form 'hermitian' not yet implemented for reading")
#: R/HBMM.R:0
msgid "symmetry form 'hermitian' not yet implemented for reading"
msgstr ""
"대칭형식(symmetry form)이 'hermitian'의 경우에는 아직 구현되지 않았습니다."

#. R/HBMM.R: stop("symmetry form 'skew-symmetric' not yet implemented for reading")
#. R/HBMM.R: stop("symmetry form 'skew-symmetric' not yet implemented for reading")
#: R/HBMM.R:0
msgid "symmetry form 'skew-symmetric' not yet implemented for reading"
msgstr ""
"대칭형식(symmetry form)이 'skew-symmetric'인 경우에는 아직 구현되지 않았습니"
"다."

#. R/abIndex.R: gettextf("target is %s, current is %s", data.class(target), data.class(current),     domain = "R-Matrix")
#: R/abIndex.R:0
msgid "target is %s, current is %s"
msgstr ""

#. R/bandSparse.R: gettextf("the %d-th (sub)-diagonal (k = %d) is too short; filling with NA's", s,     kk)
#: R/bandSparse.R:0
msgid "the %d-th (sub)-diagonal (k = %d) is too short; filling with NA's"
msgstr "%d-번째 (부분)-대각 (k = %d)이 너무 짧아 NA로 채웁니다."

#. R/dgTMatrix.R: stop("the matrix is not triangular")
#: R/dgTMatrix.R:0
msgid "the matrix is not triangular"
msgstr "삼각행렬이 아닙니다."

#. R/indMatrix.R: stop("the number of non-zero entries differs from nrow(.)")
#. R/pMatrix.R: stop("the number of non-zero entries differs from nrow(.)")
#: R/indMatrix.R:0 R/pMatrix.R:0
msgid "the number of non-zero entries differs from nrow(.)"
msgstr "영이 아닌 항목들의 개수가 nrow(.)와 다릅니다."

#. R/abIndex.R: stop("too many arguments")
#: R/abIndex.R:0
msgid "too many arguments"
msgstr "입력된 인자의 개수가 너무 많습니다."

#. R/Csparse.R: stop("too many replacement values")
#. R/Tsparse.R: stop("too many replacement values")
#. R/sparseVector.R: stop("too many replacement values")
#: R/Csparse.R:0 R/Tsparse.R:0 R/sparseVector.R:0
msgid "too many replacement values"
msgstr "교체에 이용될 값이 너무 많이 입력되었습니다."

#. R/sparseMatrix.R: stop("triangular matrix must be square")
#: R/sparseMatrix.R:0
#, fuzzy
msgid "triangular matrix must be square"
msgstr "대칭행렬(symmetric matrix)는 반드시 정방(square)이어야 합니다."

#. R/sparseMatrix.R: stop("triangular matrix must have all i >= j or i <= j")
#: R/sparseMatrix.R:0
msgid "triangular matrix must have all i >= j or i <= j"
msgstr ""

#. R/Matrix.R: warning("trimmed mean of 'sparseVector' -- suboptimally using as.numeric(.)")
#: R/Matrix.R:0
msgid "trimmed mean of 'sparseVector' -- suboptimally using as.numeric(.)"
msgstr "trimmed mean of 'sparseVector' -- suboptimally using as.numeric(.)"

#. R/HBMM.R: gettextf("type '%s' not recognized", typ)
#: R/HBMM.R:0
msgid "type '%s' not recognized"
msgstr "'%s'는 사용가능한 유형(type)이 아닙니다."

#. R/denseMatrix.R: gettextf("undefined method for class %s", dQuote(cl))
#: R/denseMatrix.R:0
msgid "undefined method for class %s"
msgstr "클래스 %s에 정의된 메소드가 아닙니다."

#. R/CHMfactor.R: stop("update must be TRUE/FALSE or '+' or '-'")
#: R/CHMfactor.R:0
msgid "update must be TRUE/FALSE or '+' or '-'"
msgstr "update는 반드시 TRUE/FALSE 또는 '+' 또는 '-'이어야 합니다."

#. R/Csparse.R: stop("using\t\"old code\" part in  Csparse subassignment")
#: R/Csparse.R:0
#, fuzzy
msgid "using\t\"old code\" part in  Csparse subassignment"
msgstr "using\t \"old code\" part in  Csparse subassignment"

#. R/Matrix.R: warning("using slow kronecker() method")
#. R/Matrix.R: warning("using slow kronecker() method")
#: R/Matrix.R:0
msgid "using slow kronecker() method"
msgstr "느린 크로넥커 방법(slow kronecker method)를 사용합니다."

#. R/Csparse.R: warning("using\"old code\" part in  Csparse subassignment\n >>> please report to Matrix-authors@r-project.org",     immediate. = TRUE, domain = "R-Matrix")
#: R/Csparse.R:0
#, fuzzy
msgid ""
"using\"old code\" part in  Csparse subassignment\n"
" >>> please report to Matrix-authors@r-project.org"
msgstr ""
"using\"old code\" part in Csparse subassignment\n"
" >>> Matrix-authors@r-project.org으로 이를 보고해 주시길 바랍니다."

#. R/spModels.R: gettextf("variable '%s' is absent, its contrast will be ignored", nn)
#: R/spModels.R:0
msgid "variable '%s' is absent, its contrast will be ignored"
msgstr "변수 '%s'를 찾을 수 없어 관련 대비(contrast)는 계산되지 않을 것입니다."

#. R/Ops.R: stop("vector too long in Matrix - vector operation")
#: R/Ops.R:0
msgid "vector too long in Matrix - vector operation"
msgstr ""
"행렬과 벡터 연산(Matrix - vector operation)에 사용될 벡터의 길이가 너무 깁니"
"다."

#. R/Csparse.R: gettext("wasteful C -> T -> C in replCmat(x,i,j,v) for <sparse>[i,j] <- v", domain = "R-Matrix")
#: R/Csparse.R:0
msgid "wasteful C -> T -> C in replCmat(x,i,j,v) for <sparse>[i,j] <- v"
msgstr ""

#. R/condest.R: warning("when 'A' is specified, 'A.x' and 'At.x' are disregarded")
#: R/condest.R:0
msgid "when 'A' is specified, 'A.x' and 'At.x' are disregarded"
msgstr "'A'가 주어진 경우에 입력된 'A.x'와 'At.x'는 사용되지 않습니다."

#. R/abIndex.R: stop("wrong sign in 'by' argument")
#: R/abIndex.R:0
msgid "wrong sign in 'by' argument"
msgstr "'by' 인자에 사용된 부호(sign)가 올바르지 않습니다."

#. R/abIndex.R: warning("x / 0 for an <abIndex> x with sign-change\nno longer representable as 'rleDiff'")
#: R/abIndex.R:0
#, fuzzy
msgid ""
"x / 0 for an <abIndex> x with sign-change\n"
"no longer representable as 'rleDiff'"
msgstr ""
"x / 0 for an <abIndex> x with sign-change\n"
" no longer representable as 'rleDiff'"

#. R/Tsparse.R: gettextf("x[.,.] <- val : x being coerced from Tsparse* to CsparseMatrix")
#: R/Tsparse.R:0
msgid "x[.,.] <- val : x being coerced from Tsparse* to CsparseMatrix"
msgstr ""
"x[.,.] <- val : Tsparse* 에서 CsparseMatrix로 강제변환(coerced)된 x입니다."

#. R/Tsparse.R: gettextf("x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced NA |--> TRUE.",     dQuote(clx))
#: R/Tsparse.R:0
msgid ""
"x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced NA |--> TRUE."
msgstr ""
"x[.,.] <- val: x의 클래스는 %s입니다.  {TRUE, FALSE}에 해당하지 않는 val의 값"
"은 TRUE로 강제변환(coerced) 되었습니다. "

#. R/Tsparse.R: gettextf("x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced.", dQuote(clx))
#: R/Tsparse.R:0
msgid "x[.,.] <- val: x is %s, val not in {TRUE, FALSE} is coerced."
msgstr ""
"x[.,.] <- val: x의 클래스는 %s입니다.  {TRUE, FALSE}에 해당하지 않는 val의 값"
"은 강제변환(coerced) 되었습니다. "

#. R/Tsparse.R: gettextf("x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced.", dQuote(clx))
#: R/Tsparse.R:0
msgid "x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced."
msgstr ""
"x[.] <- val: x의 클래스는 %s입니다.  {TRUE, FALSE}에 해당하지 않는 val의 값"
"은 강제변환(coerced) 되었습니다."

#. R/Tsparse.R: gettextf("x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced; NA |--> TRUE.",     dQuote(clx))
#: R/Tsparse.R:0
msgid ""
"x[.] <- val: x is %s, val not in {TRUE, FALSE} is coerced; NA |--> TRUE."
msgstr ""
"x[.] <- val: x의 클래스는 %s입니다.  {TRUE, FALSE}에 해당하지 않는 val의 값"
"은 TRUE로 강제변환(coerced) 되었습니다."

#. R/Tsparse.R: stop("you cannot mix negative and positive indices")
#. R/Tsparse.R: stop("you cannot mix negative and positive indices")
#. R/sparseVector.R: stop("you cannot mix negative and positive indices")
#: R/Tsparse.R:0 R/sparseVector.R:0
msgid "you cannot mix negative and positive indices"
msgstr "인덱스에 음수와 양수를 혼용하여 사용할 수 없습니다."

#. R/bandSparse.R: ngettext(len.k, "'diagonals' matrix must have %d column (= length(k) )", "'diagonals' matrix must have %d columns (= length(k) )",     domain = "R-Matrix")
#: R/bandSparse.R:0
#, fuzzy
msgid "'diagonals' matrix must have %d column (= length(k) )"
msgid_plural "'diagonals' matrix must have %d columns (= length(k) )"
msgstr[0] ""
"'diagonals' 행렬은 반드시 %d (=length(k))개의 열을 가지고 있어야 합니다."

#. R/Auxiliaries.R: ngettext(nx, "extra argument %s will be disregarded in\n %s", "extra arguments %s will be disregarded in\n %s",     domain = "R-Matrix")
#: R/Auxiliaries.R:0
msgid ""
"extra argument %s will be disregarded in\n"
" %s"
msgid_plural ""
"extra arguments %s will be disregarded in\n"
" %s"
msgstr[0] "추가 인자들(extra arguments) %s는 %s에서 사용되지 않을 것입니다."

#~ msgid "%s %s <Matrix> is undefined"
#~ msgstr "%s %s <Matrix>은 정의되지 않았습니다."

#~ msgid "<Matrix> %s %s is undefined"
#~ msgstr "<Matrix> %1$s %2$s는 정의되지 않았습니다."

#~ msgid "variable '%s' converted to a factor"
#~ msgstr "변수 '%s'가 요인(factor)로 변환되었습니다."

#~ msgid "\"dMatrix\" object with NAs cannot be coerced to \"nMatrix\""
#~ msgstr ""
#~ "NA를 가진 \"dMatrix\" 객체는 \"nMatrix\"로 강제변환(coerced) 할 수 없습니"
#~ "다."

#~ msgid "not a skinny matrix"
#~ msgstr "not a skinny matrix"

#~ msgid "\"lMatrix\" object with NAs cannot be coerced to \"nMatrix\""
#~ msgstr ""
#~ "NA를 가진 \"lMatrix\" 객체는 \"nMatrix\"로 강제변환(coerced) 될 수 없습니"
#~ "다."
