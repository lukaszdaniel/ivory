# Translation of src/library/compiler/R-compiler.pot to German
# Copyright (C) 2011 The R Foundation
# This file is distributed under the same license as the R package.
# Detlef Steuer <detlef.steuer@hsu-hh.de>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: R 2.14.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2014-10-11 12:00\n"
"PO-Revision-Date: 2011-10-07 15:36+0200\n"
"Last-Translator: Detlef Steuer <steuer@hsuhh.de>\n"
"Language-Team: R-core <r-core@r-project.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n == 1 ? 0 : 1;\n"

#. R/cmp.R: gettextf("%s may be used in an incorrect context", var)
#: R/cmp.R:0
msgid "%s may be used in an incorrect context"
msgstr ""

#. R/cmp.R: gettextf("%s may be used in wrong context: no loop is visible", fun)
#: R/cmp.R:0
msgid "%s may be used in wrong context: no loop is visible"
msgstr ""

#. R/cmp.R: gettextf("'%s' is not a valid compiler option", n)
#: R/cmp.R:0
msgid "'%s' is not a valid compiler option"
msgstr "'%s' ist keine zulässige Kompileroption"

#. R/cmp.R: stop("'env' must be a top level environment")
#: R/cmp.R:0
msgid "'env' must be a top level environment"
msgstr "'env' muss eine Toplevel-Umgebung sein"

#. R/cmp.R: stop("'ns' argument must be a namespace or a namespace imports environment")
#: R/cmp.R:0
#, fuzzy
msgid "'ns' argument must be a namespace or a namespace imports environment"
msgstr "'ns' muss eine Namensraum oder eine Umgebung mit Namensraumimport sein"

#. R/cmp.R: gettext("Note: ", domain = "R-compiler")
#: R/cmp.R:0
msgid "Note:"
msgstr ""

#. R/cmp.R: stop("bad assignment 1")
#: R/cmp.R:0
#, fuzzy
msgid "bad assignment 1"
msgstr "unzulässige Zuweisung 1"

#. R/cmp.R: stop("bad assignment 2")
#: R/cmp.R:0
msgid "bad assignment 2"
msgstr "unzulässige Zuweisung 2"

#. R/cmp.R: gettextf("bad assignment: %s", pasteExpr(e))
#. R/cmp.R: gettextf("bad assignment: %s", pasteExpr(e))
#. R/cmp.R: gettextf("bad assignment: %s", pasteExpr(e))
#. R/cmp.R: gettextf("bad assignment: %s", pasteExpr(e))
#: R/cmp.R:0
msgid "bad assignment: %s"
msgstr "unzulässige Zuweisung: %s"

#. R/cmp.R: gettext("bad namespace import frame")
#: R/cmp.R:0
msgid "bad namespace import frame"
msgstr "unzulässiger Rahmen für Namensraumimport"

#. R/cmp.R: stop("cannot compile a non-function")
#: R/cmp.R:0
msgid "cannot compile a non-function"
msgstr "kann keine nicht-Funktion kompilieren"

#. R/cmp.R: gettext("cannot compile byte code literals in code")
#. R/cmp.R: gettext("cannot compile byte code literals in code")
#. R/cmp.R: gettext("cannot compile byte code literals in code")
#: R/cmp.R:0
msgid "cannot compile byte code literals in code"
msgstr "kann Bytecode Literale im Code nicht kompilieren"

#. R/cmp.R: gettext("cannot compile promise literals in code")
#. R/cmp.R: gettext("cannot compile promise literals in code")
#. R/cmp.R: gettext("cannot compile promise literals in code")
#: R/cmp.R:0
msgid "cannot compile promise literals in code"
msgstr "kann literatle promises nicht in Programm kompilieren"

#. R/cmp.R: gettext("cannot compile this expression")
#. R/cmp.R: gettext("cannot compile this expression")
#. R/cmp.R: gettext("cannot compile this expression")
#. R/cmp.R: gettext("cannot compile this expression")
#: R/cmp.R:0
#, fuzzy
msgid "cannot compile this expression"
msgstr "kann literatle promises nicht in Programm kompilieren"

#. R/cmp.R: gettext("cannot constant fold literal bytecode objects")
#: R/cmp.R:0
msgid "cannot constant fold literal bytecode objects"
msgstr "kann literale Bytecodeobjecte nicht konstant falten"

#. R/cmp.R: gettext("cannot constant fold literal promises")
#: R/cmp.R:0
msgid "cannot constant fold literal promises"
msgstr "kann literale Promises nicht konstant falten"

#. R/cmp.R: gettextf("compiling %s", sQuote(f), domain = "R-compiler")
#: R/cmp.R:0
#, fuzzy
msgid "compiling %s"
msgstr "kompiliere '%s'"

#. R/cmp.R: gettextf("compiling expression %s ...", sQuote(deparse(e, 20)[1]), domain = "R-compiler")
#: R/cmp.R:0
msgid "compiling expression %s ..."
msgstr ""

#. R/cmp.R: gettextf("compiling function %s", sQuote(e[[2]]), domain = "R-compiler")
#: R/cmp.R:0
#, fuzzy
msgid "compiling function %s"
msgstr "kompiliere '%s'"

#. R/cmp.R: gettext("done", domain = "R-compiler")
#. R/cmp.R: gettext("done", domain = "R-compiler")
#: R/cmp.R:0
msgid "done"
msgstr "fertig"

#. R/cmp.R: stop("empty alternative in numeric switch")
#: R/cmp.R:0
msgid "empty alternative in numeric switch"
msgstr "leere Alternative in numerischen switch"

#. R/cmp.R: warning("empty input file; no output written")
#: R/cmp.R:0
msgid "empty input file; no output written"
msgstr "leere Eingabedatei; keine Ausgabe geschrieben"

#. R/cmp.R: gettextf("file '%s' does not exist", file)
#: R/cmp.R:0
msgid "file '%s' does not exist"
msgstr "Datei '%s' existiert nicht"

#. R/cmp.R: stop("function is not compiled")
#: R/cmp.R:0
msgid "function is not compiled"
msgstr "Funktion ist nicht kompiliert"

#. R/cmp.R: gettextf("handler for '%s' is already defined for another package", name)
#. R/cmp.R: gettextf("handler for '%s' is already defined for another package", name)
#. R/cmp.R: gettextf("handler for '%s' is already defined for another package", name)
#: R/cmp.R:0
msgid "handler for '%s' is already defined for another package"
msgstr ""

#. R/cmp.R: stop("input and output file names are the same")
#: R/cmp.R:0
msgid "input and output file names are the same"
msgstr "Eingabe- und Ausgabedateinamen sind identisch"

#. R/cmp.R: gettext("invalid function in complex assignment")
#. R/cmp.R: gettext("invalid function in complex assignment")
#: R/cmp.R:0
msgid "invalid function in complex assignment"
msgstr "unzulässige Funktion in komplexer Zuweisung"

#. R/cmp.R: stop(sQuote(name), "is not a registered math1 function")
#: R/cmp.R:0
msgid "is not a registered math1 function"
msgstr ""

#. R/cmp.R: gettext("missing arguments are not allowed")
#: R/cmp.R:0
msgid "missing arguments are not allowed"
msgstr "fehlende Argumente sind nicht zugelassen"

#. R/cmp.R: gettext("more than one default provided in switch() call")
#: R/cmp.R:0
#, fuzzy
msgid "more than one default provided in switch() call"
msgstr "mehr als ein Default im Aufruf von switch"

#. R/cmp.R: gettextf("no offset recorded for label \"%s\"", lbl)
#: R/cmp.R:0
msgid "no offset recorded for label \"%s\""
msgstr "kein Offset aufgezeichnet für Label \"%s\""

#. R/cmp.R: gettextf("no visible binding for '<<-' assignment to '%s'", as.character(symbol))
#: R/cmp.R:0
msgid "no visible binding for '<<-' assignment to '%s'"
msgstr "keine sichtbare Bindung für '<<-' Zuweisung zu '%s'"

#. R/cmp.R: gettextf("no visible binding for global variable '%s'", as.character(var))
#: R/cmp.R:0
msgid "no visible binding for global variable '%s'"
msgstr "keine sichtbare Bindung für globale Variable '%s'"

#. R/cmp.R: gettextf("no visible global function definition for '%s'", as.character(fun))
#: R/cmp.R:0
msgid "no visible global function definition for '%s'"
msgstr "keine sichtbare globale Funktionsdefinition für '%s'"

#. R/cmp.R: gettextf("possible error in '%s': %s", deparse(call, 20)[1], msg)
#: R/cmp.R:0
msgid "possible error in '%s': %s"
msgstr "möglicher Fehler in '%s': %s"

#. R/cmp.R: gettextf("saving to file %s ... ", sQuote(file), domain = "R-compiler")
#. R/cmp.R: gettextf("saving to file %s ... ", sQuote(outfile), domain = "R-compiler")
#: R/cmp.R:0
#, fuzzy
msgid "saving to file %s ..."
msgstr "sichere in Datei \"%s\" ..."

#. R/cmp.R: stop("supplied 'env' argument is not a proper evaluation environment")
#. R/cmp.R: stop("supplied 'env' argument is not a proper evaluation environment")
#: R/cmp.R:0
#, fuzzy
msgid "supplied 'env' argument is not a proper evaluation environment"
msgstr "keine geeignete Evaluationsumgebung"

#. R/cmp.R: gettextf("wrong number of arguments to '%s'", as.character(fun))
#: R/cmp.R:0
msgid "wrong number of arguments to '%s'"
msgstr "falsche Anzahl von Argumenten für '%s'"

#. R/cmp.R: ngettext(sum(rdsf), "local assignment to syntactic function: ", "local assignments to syntactic functions: ",     domain = "R-compiler")
#: R/cmp.R:0
msgid "local assignment to syntactic function: "
msgid_plural "local assignments to syntactic functions: "
msgstr[0] "lokale Zuweisung an syntaktische Funktion:"
msgstr[1] "lokale Zuweisungen an syntaktische Funktionen:"

#~ msgid "expected a single logical value for the S4 state flag"
#~ msgstr "erwartete einen einzelnen logischen Wert für das S4 Status-Flag"
