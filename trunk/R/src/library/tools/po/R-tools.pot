msgid ""
msgstr ""
"Project-Id-Version: tools 3.2.0\n"
"POT-Creation-Date: 2015-01-25 06:40\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"



#: R/install.R: 0
#. R/install.R: gettextf("## package without R code %s", sQuote(namespace))

msgid "## package without R code %s"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("%s argument must be a character string or a file/raw connection", sQuote("file"))

msgid "%s argument must be a character string or a file/raw connection"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("  %s calls:", sQuote(f), domain = "R-tools")
#. R/QC.R: gettextf("  %s calls:", sQuote(f), domain = "R-tools")

msgid "%s calls:"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("%s command is not available", sQuote("pdflatex"))
#. R/utils.R: gettextf("%s command is not available", sQuote("latex"))

msgid "%s command is not available"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("  %s has wrong argument list %s", sQuote(f), sQuote(paste(bad, collapse = ", ")),     domain = "R-tools")
#. R/QC.R: gettextf("  %s has wrong argument list %s", sQuote(f), sQuote(paste(bad, collapse = ", ")),     domain = "R-tools")

msgid "%s has wrong argument list %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("%s in object %s", iconv0(x$unknown[, 1L], "", "ASCII", sub = "byte"), sQuote(x$unknown[,     2L]), domain = "R-tools")

msgid "%s in object %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("%s is neither a file nor directory, skipping\n", sQuote(pkg))

msgid "%s is neither a file nor directory, skipping"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("%s is of class %s", sQuote(name), dQuote(class(sym)), domain = "R-tools")

msgid "%s is of class %s"
msgstr ""


#: R/admin.R: 0
#: R/check.R: 0
#. R/admin.R: gettextf("%s is using %s encoding", sQuote(basename(file)), sQuote(enc), domain = "R-tools")
#. R/check.R: gettextf("%s is using %s encoding", sQuote(basename(file)), sQuote(enc), domain = "R-tools")

msgid "%s is using %s encoding"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("%s registered as %s, but called with %s", sQuote(name), sQuote(".Call"),     sQuote(FF_fun), domain = "R-tools")
#. R/QC.R: gettextf("%s registered as %s, but called with %s", sQuote(name), sQuote(".External"),     sQuote(FF_fun), domain = "R-tools")

msgid "%s registered as %s, but called with %s"
msgstr ""


#: R/license.R: 0
#. R/license.R: gettextf("%s version %s", lab[pos], versions[ind], domain = "R-tools")

msgid "%s version %s"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: gettextf("'%s' argument must be TRUE or FALSE", "ascii", domain = "R-tools")

msgid "'%s' argument must be TRUE or FALSE"
msgstr ""


#: R/Rd.R: 0
#: R/read.00Index.R: 0
#. R/Rd.R: gettextf("'%s' argument must be a character string or connection", "outFile")
#. R/read.00Index.R: gettextf("'%s' argument must be a character string or connection", file)

msgid "'%s' argument must be a character string or connection"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("'%s' argument must be a character vector", "x")

msgid "'%s' argument must be a character vector"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("'%s' argument must be a single character string", "x")

msgid "'%s' argument must be a single character string"
msgstr ""


#: R/QC.R: 0
#: R/Rd.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/pkgDepends.R: 0
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/QC.R: gettextf("'%s' argument must be of length 1", "package")
#. R/Rd.R: gettextf("'%s' argument must be of length 1", "package")
#. R/Vignettes.R: gettextf("'%s' argument must be of length 1", "package")
#. R/Vignettes.R: gettextf("'%s' argument must be of length 1", "vignette")
#. R/pkgDepends.R: gettextf("'%s' argument must be of length 1", "pkg")

msgid "'%s' argument must be of length 1"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "x", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "x", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))
#. R/pdftools.R: gettextf("'%s' argument should be an object of class %s", "doc", dQuote("pdf_doc"))

msgid "'%s' argument should be an object of class %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("'%s' directory", "libs")
#. R/install.R: gettextf("'%s' directory", "R")
#. R/install.R: gettextf("'%s' directory", "data")
#. R/install.R: gettextf("'%s' directory", "demo")
#. R/install.R: gettextf("'%s' directory", "exec")
#. R/install.R: gettextf("'%s' directory", "inst")
#. R/install.R: gettextf("'%s' directory", "tests")
#. R/install.R: gettextf("'%s' directory", "help")

msgid "'%s' directory"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("'%s' must be plain text", "encoding")
#. R/RdConv2.R: gettextf("'%s' must be plain text", "docType")
#. R/RdConv2.R: gettextf("'%s' must be plain text", "docType")

msgid "'%s' must be plain text"
msgstr ""


#: R/check.R: 0
#. R/check.R: message("'--as-cran' turns off '--extra-arch'")

msgid "'--as-cran' turns off '--extra-arch'"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("'--auto-zip' is defunct", call. = FALSE, domain = "R-tools")

msgid "'--auto-zip' is defunct"
msgstr ""


#: R/check.R: 0
#. R/check.R: warning("'--multiarch' specified with only one usable sub-architecture", call. = FALSE,     immediate. = TRUE)

msgid "'--multiarch' specified with only one usable sub-architecture"
msgstr ""


#: R/check.R: 0
#. R/check.R: stop("'--no-latex' is defunct: use '--no-manual' instead", call. = FALSE, domain = "R-tools")

msgid "'--no-latex' is defunct: use '--no-manual' instead"
msgstr ""


#: R/check.R: 0
#. R/check.R: stop("'--no-rebuild-vignettes' is defunct: use '--no-build-vignettes' instead", call. = FALSE,     domain = "R-tools")

msgid "'--no-rebuild-vignettes' is defunct: use '--no-build-vignettes' instead"
msgstr ""


#: R/build.R: 0
#. R/build.R: stop("'--no-vignettes' is defunct:\n  use '--no-build-vignettes' instead", call. = FALSE,     domain = "R-tools")

msgid "'--no-vignettes' is defunct:\n  use '--no-build-vignettes' instead"
msgstr ""


#: R/install.R: 0
#. R/install.R: stop("'DESCRIPTION' file seems to be a bundle -- and they are defunct")

msgid "'DESCRIPTION' file seems to be a bundle -- and they are defunct"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("'DUP' option is no longer supported and will be ignored.", domain = "R-tools")

msgid "'DUP' option is no longer supported and will be ignored."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("'LinkingTo' field is unused: package has no 'src' directory", domain = "R-tools")

msgid "'LinkingTo' field is unused: package has no 'src' directory"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("'NeedsCompilation' field must take value 'yes' or 'no'", domain = "R-tools")

msgid "'NeedsCompilation' field must take value 'yes' or 'no'"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: stop("'R CMD build' failed")

msgid "'R CMD build' failed"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("'Suggests' or 'Enhances' packages are not in mainstream repositories:",     domain = "R-tools")

msgid "'Suggests' or 'Enhances' packages are not in mainstream repositories:"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("'cleanup' file exists but is not executable -- see the 'R Installation and Administration Manual'",     call. = FALSE)

msgid "'cleanup' file exists but is not executable -- see the 'R Installation and Administration Manual'"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("'delim' argument must specify two characters")

msgid "'delim' argument must specify two characters"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  'gs+qpdf' made some significant size reductions:\n%s\n  consider running tools::compactPDF(gs_quality = \"ebook\") on these files\n",     paste("  ", res, collapse = "\n"), domain = "R-tools")

msgid "'gs+qpdf' made some significant size reductions:\n%s\n  consider running tools::compactPDF(gs_quality = \"ebook\") on these files"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: stop("'macros' must be TRUE or must specify existing macros")

msgid "'macros' must be TRUE or must specify existing macros"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("'qpdf' is needed for checks on size reduction of PDFs", domain = "R-tools")

msgid "'qpdf' is needed for checks on size reduction of PDFs"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  'qpdf' made some significant size reductions:\n%s\n  consider running tools::compactPDF() on these files\n",     paste("  ", res, collapse = "\n"), domain = "R-tools")

msgid "'qpdf' made some significant size reductions:\n%s\n  consider running tools::compactPDF() on these files"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: stop("'type' must be one of 'txt', 'html', 'latex' or 'example'", call. = FALSE)

msgid "'type' must be one of 'txt', 'html', 'latex' or 'example'"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("* install options %s", sQuote(INSTALL_opts), domain = "R-tools")

msgid "* install options %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("* loading checks for arch %s\n", sQuote(arch), domain = "R-tools")

msgid "* loading checks for arch %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("** found \\donttest examples: check also with --run-donttest\n", domain = "R-tools")

msgid "** found \\donttest examples: check also with --run-donttest"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("** running examples for arch %s ...", sQuote(arch), domain = "R-tools")

msgid "** running examples for arch %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("** running tests for arch %s", sQuote(arch), domain = "R-tools")

msgid "** running tests for arch %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("*** PDFLaTeX Errors ***", domain = "R-tools")

msgid "*** PDFLaTeX Errors ***"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("*** Source Errors ***", domain = "R-tools")

msgid "*** Source Errors ***"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("*** Tangle Errors ***", domain = "R-tools")

msgid "*** Tangle Errors ***"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("*** Weave Errors ***", domain = "R-tools")

msgid "*** Weave Errors ***"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("*** someone has corrupted the Built field in package %s ***", sQuote(db["Package"]))
#. R/admin.R: gettextf("*** someone has corrupted the Built field in package %s ***", sQuote(db["Package"]))

msgid "*** someone has corrupted the Built field in package %s ***"
msgstr ""


#: R/check.R: 0
#: R/install.R: 0
#. R/check.R: stop("-l option without value", call. = FALSE)
#. R/install.R: stop("-l option without value", call. = FALSE)

msgid "-l option without value"
msgstr ""


#: R/Rd2pdf.R: 0
#: R/check.R: 0
#: R/install.R: 0
#. R/Rd2pdf.R: stop("-o option without value", call. = FALSE)
#. R/Rd2pdf.R: stop("-o option without value", call. = FALSE)
#. R/check.R: stop("-o option without value", call. = FALSE)
#. R/install.R: stop("-o option without value", call. = FALSE)

msgid "-o option without value"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: stop("-t option without value", call. = FALSE)

msgid "-t option without value"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("... [TRUNCATED]", domain = "R-tools")

msgid "... [TRUNCATED]"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("... incomplete output.  Crash?", domain = "R-tools")

msgid "... incomplete output.  Crash?"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("A 'vignettes' directory is required as from R 3.1.0", domain = "R-tools")

msgid "A 'vignettes' directory is required as from R 3.1.0"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("A 'vignettes' directory is required as from R 3.1.0 and these will not be indexed nor checked",     domain = "R-tools")

msgid "A 'vignettes' directory is required as from R 3.1.0 and these will not be indexed nor checked"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nA namespace must be able to be loaded with just the base namespace loaded: otherwise if the namespace gets loaded by a saved object, the session will be unable to start.\n\nProbably some imports need to be declared in the 'NAMESPACE' file.\n",     domain = "R-tools")

msgid "A namespace must be able to be loaded with just the base namespace loaded: otherwise if the namespace gets loaded by a saved object, the session will be unable to start.\n\nProbably some imports need to be declared in the 'NAMESPACE' file."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Adding so many packages to the search path is excessive and importing selectively is preferable.",     domain = "R-tools")

msgid "Adding so many packages to the search path is excessive and importing selectively is preferable."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Additional repositories with no packages:", domain = "R-tools")

msgid "Additional repositories with no packages:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("All field tags must be ASCII.", domain = "R-tools")
#. R/QC.R: gettext("All field tags must be ASCII.", domain = "R-tools")

msgid "All field tags must be ASCII."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("All packages need a namespace as from R 3.0.0.\nR CMD build will produce a suitable starting point, but it is better to handcraft a 'NAMESPACE' file.",     domain = "R-tools")

msgid "All packages need a namespace as from R 3.0.0.\nR CMD build will produce a suitable starting point, but it is better to handcraft a 'NAMESPACE' file."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("All text must be in a section")

msgid "All text must be in a section"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("All user-level objects in a package (including S4 classes and methods) should have documentation entries.\n",     domain = "R-tools")

msgid "All user-level objects in a package (including S4 classes and methods) should have documentation entries."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("All user-level objects in a package should have documentation entries.\n",     domain = "R-tools")

msgid "All user-level objects in a package should have documentation entries."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Apparent non-ASCII contents in second part of \\enc")
#. R/RdConv2.R: gettext("Apparent non-ASCII contents in second part of \\enc")

msgid "Apparent non-ASCII contents in second part of \\enc"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Apparent non-ASCII contents without declared encoding")
#. R/RdConv2.R: gettext("Apparent non-ASCII contents without declared encoding")

msgid "Apparent non-ASCII contents without declared encoding"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Argument %s must be a character vector or NULL and not an object of class %s",     sQuote("pattern"), sQuote(class(pattern)[1L]))

msgid "Argument %s must be a character vector or NULL and not an object of class %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Argument %s must be a function and not an object of class %s", sQuote("weave"),     dQuote(class(weave)[1L]))
#. R/Vignettes.R: gettextf("Argument %s must be a function and not an object of class %s", sQuote("tangle"),     dQuote(class(tangle)[1L]))

msgid "Argument %s must be a function and not an object of class %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Argument items with no description in Rd object %s:", sQuote(nm), domain = "R-tools")

msgid "Argument items with no description in Rd object %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Argument names in code but not in docs:", domain = "R-tools")

msgid "Argument names in code but not in docs:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Argument names in docs but not in code:", domain = "R-tools")

msgid "Argument names in docs but not in code:"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Asserted error: %s", error[[1]]$message)

msgid "Asserted error: %s"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Asserted warning: %s", warning[[1]]$message)

msgid "Asserted warning: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Assignments in \\usage in documentation object %s:", sQuote(nm), domain = "R-tools")

msgid "Assignments in \\usage in documentation object %s:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Author field differs from that derived from Authors@R", domain = "R-tools")

msgid "Author field differs from that derived from Authors@R"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Author:    ", domain = "R-tools")

msgid "Author:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Authors information should be in file inst/AUTHORS\n", domain = "R-tools")

msgid "Authors information should be in file inst/AUTHORS"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Authors@R field gives no person with author role.", domain = "R-tools")

msgid "Authors@R field gives no person with author role."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Authors@R field gives no person with maintainer role and email address.",     domain = "R-tools")

msgid "Authors@R field gives no person with maintainer role and email address."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Authors@R field gives persons with no valid roles:", domain = "R-tools")

msgid "Authors@R field gives persons with no valid roles:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Authors@R field should be a call to person(), or combine such calls.", domain = "R-tools")

msgid "Authors@R field should be a call to person(), or combine such calls."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Authors@R: ", domain = "R-tools")
#. R/check.R: gettext("  Authors@R:  ", domain = "R-tools")

msgid "Authors@R:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Auto-generated content requiring editing in Rd object %s:", sQuote(nm),     domain = "R-tools")

msgid "Auto-generated content requiring editing in Rd object %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Availability using 'Additional_repositories' specification:", domain = "R-tools")

msgid "Availability using 'Additional_repositories' specification:"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettext("Bad \\link option -- must be text")

msgid "Bad \\link option -- must be text"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettext("Bad \\link text")

msgid "Bad \\link text"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Bad \\usage lines found in documentation object %s:", sQuote(nm), domain = "R-tools")

msgid "Bad \\usage lines found in documentation object %s:"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("BibTeX errors:")
#. R/utils.R: gettext("BibTeX errors:")

msgid "BibTeX errors:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("CRAN repository db conflicts: %s", sQuote(y), domain = "R-tools")

msgid "CRAN repository db conflicts: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("CRAN repository db overrides: %s", sQuote(y), domain = "R-tools")

msgid "CRAN repository db overrides: %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nCRAN-pack does not know about following files and directories:\n", domain = "R-tools")

msgid "CRAN-pack does not know about following files and directories:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nCRAN-pack knows about all of these files and directories\n", domain = "R-tools")

msgid "CRAN-pack knows about all of these files and directories"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("Call sequence:", domain = "R-tools")

msgid "Call sequence:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Cannot change the %s engine or use an engine of that name", sQuote("Sweave"))

msgid "Cannot change the %s engine or use an engine of that name"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Cannot extract Author field from Authors@R field:", domain = "R-tools")

msgid "Cannot extract Author field from Authors@R field:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Cannot extract Maintainer field from Authors@R field:", domain = "R-tools")

msgid "Cannot extract Maintainer field from Authors@R field:"
msgstr ""


#: R/news.R: 0
#. R/news.R: warning("Cannot extract version info from the following section titles:", "\n", paste(unique(nms[!ind]),     collapse = "  "), sep = "")

msgid "Cannot extract version info from the following section titles:"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettextf("Cannot process chunk/lines:\n%s", .collapse(x))

msgid "Cannot process chunk/lines:\n%s"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettext("Category")

msgid "Category"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Change to non-FOSS package license.", domain = "R-tools")

msgid "Change to non-FOSS package license."
msgstr ""


#: R/bibstyle.R: 0
#. R/bibstyle.R: stop("Changes require specified 'style'")

msgid "Changes require specified 'style'"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettextf("Check results for packages in dir '%s':", dir, domain = "R-tools")
#. R/checktools.R: gettextf("Check results for packages in dir '%s':", dir, domain = "R-tools")

msgid "Check results for packages in dir '%s':"
msgstr ""


#: R/CRANtools.R: 0
#. R/CRANtools.R: gettextf("Checking %s", m, domain = "R-tools")

msgid "Checking %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Checking URLs failed with message:", domain = "R-tools")

msgid "Checking URLs failed with message:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Checking URLs requires 'libcurl' support in the R build", domain = "R-tools")

msgid "Checking URLs requires 'libcurl' support in the R build"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettextf("\nChunk %s:\n%s", format(seq_along(bad)), bad)

msgid "Chunk %s:\n%s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettext("Code demonstrations:")

msgid "Code demonstrations:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Code: %s", format_args(ffc), domain = "R-tools")
#. R/QC.R: gettextf("Code: %s", format_args(docObj[["code"]]), domain = "R-tools")

msgid "Code: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Codoc mismatches from documentation object %s:", sQuote(fname), domain = "R-tools")

msgid "Codoc mismatches from documentation object %s:"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("  Comparing %s to %s ...", sQuote(outfile), sQuote(savefile), domain = "R-tools")
#. R/testing.R: gettextf("  Comparing %s to %s ...", sQuote(outfile), sQuote(savefile), domain = "R-tools")

msgid "Comparing %s to %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Compiled code should not call entry points which might terminate R nor write to stdout/stderr instead of to the console.\n",     domain = "R-tools")

msgid "Compiled code should not call entry points which might terminate R nor write to stdout/stderr instead of to the console."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Compiled code should not call entry points which might terminate R nor write to stdout/stderr instead of to the console.  The detected symbols are linked into the code but might come from libraries and not actually be called.\n",     domain = "R-tools")

msgid "Compiled code should not call entry points which might terminate R nor write to stdout/stderr instead of to the console.  The detected symbols are linked into the code but might come from libraries and not actually be called."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Compiled code should not call non-API entry points in R.\n", domain = "R-tools")

msgid "Compiled code should not call non-API entry points in R."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Components with restrictions and base license permitting such:", domain = "R-tools")

msgid "Components with restrictions and base license permitting such:"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Condition must be \\Sexpr or plain text")

msgid "Condition must be \\Sexpr or plain text"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Conflicting package names (submitted: %s, existing: %s)", y[[1L]], y[[2L]],     domain = "R-tools")

msgid "Conflicting package names (submitted: %s, existing: %s)"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("\nConsider the use of a .Rinstignore file: see %s,\nor move the vignette sources from %s to %s.\n",     sQuote("Writing R Extensions"), sQuote("inst/doc"), sQuote("vignettes"), domain = "R-tools")

msgid "Consider the use of a .Rinstignore file: see %s,\nor move the vignette sources from %s to %s."
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("Converting Rd files to LaTeX ", appendLF = FALSE, domain = "R-tools")

msgid "Converting Rd files to LaTeX"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("Converting Rd files to LaTeX ...")

msgid "Converting Rd files to LaTeX ..."
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("Converting parsed Rd's to LaTeX ", appendLF = FALSE, domain = "R-tools")

msgid "Converting parsed Rd's to LaTeX"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Copyright information should be in file inst/COPYRIGHTS\n", domain = "R-tools")

msgid "Copyright information should be in file inst/COPYRIGHTS"
msgstr ""


#: R/news.R: 0
#. R/news.R: stop("Could not extract news from the following text chunks:\n", paste(gettextf("\nChunk %s:\n%s",     format(seq_along(bad)), bad), collapse = "\n"))

msgid "Could not extract news from the following text chunks:"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("Creating %s output from LaTeX ...", out_ext, domain = "R-tools")

msgid "Creating %s output from LaTeX ..."
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("  Creating file %s", sQuote(Rfile), domain = "R-tools")
#. R/testing.R: gettextf("  Creating file %s", sQuote(Rfile), domain = "R-tools")

msgid "Creating file %s"
msgstr ""


#: R/packages.R: 0
#. R/packages.R: gettext("Cycle: ", domain = "R-tools")

msgid "Cycle:"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("DBG: 'R CMD INSTALL' now doing do_install()")

msgid "DBG: 'R CMD INSTALL' now doing do_install()"
msgstr ""


#: R/RdHelpers.R: 0
#. R/RdHelpers.R: gettextf("DESCRIPTION file is for package '%s', not '%s'", desc["Package"], pkg)
#. R/RdHelpers.R: gettextf("DESCRIPTION file is for package '%s', not '%s'", desc["Package"], pkg)
#. R/RdHelpers.R: gettextf("DESCRIPTION file is for package '%s', not '%s'", desc["Package"], pkg)
#. R/RdHelpers.R: gettextf("DESCRIPTION file is for package '%s', not '%s'", desc["Package"], pkg)
#. R/RdHelpers.R: gettextf("DESCRIPTION file is for package '%s', not '%s'", desc["Package"], pkg)

msgid "DESCRIPTION file is for package '%s', not '%s'"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("DIFFERED")
#. R/testing.R: message("DIFFERED")

msgid "DIFFERED"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("DONE", domain = "R-tools")

msgid "DONE"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("DONE (%s)", pkg_name)

msgid "DONE (%s)"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Data codoc mismatches from documentation object %s:", sQuote(nm), domain = "R-tools")

msgid "Data codoc mismatches from documentation object %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Data with usage in documentation object %s but not in code:", sQuote(fname),     domain = "R-tools")

msgid "Data with usage in documentation object %s but not in code:"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettext("Date")

msgid "Date"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Days since last update: %d", y, domain = "R-tools")

msgid "Days since last update: %d"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Demos which do not contain valid R code:", domain = "R-tools")

msgid "Demos which do not contain valid R code:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Demos with non-ASCII characters:", domain = "R-tools")

msgid "Demos with non-ASCII characters:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Depends: includes the non-default packages:", domain = "R-tools")

msgid "Depends: includes the non-default packages:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Deprecated functions may be defunct as soon as of the next release of R.\nSee ?Deprecated.\n",     domain = "R-tools")

msgid "Deprecated functions may be defunct as soon as of the next release of R.\nSee ?Deprecated."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Deprecated license: %s", paste(y, collapse = " "), domain = "R-tools")

msgid "Deprecated license: %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Detected vignette source files (%s) with shared names (%s) and therefore risking overwriting each others output files",     paste(sQuote(docs), collapse = ", "), paste(sQuote(names), collapse = ", "))

msgid "Detected vignette source files (%s) with shared names (%s) and therefore risking overwriting each others output files"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Docs: %s", format_args(ffd), domain = "R-tools")
#. R/QC.R: gettextf("Docs: %s", format_args(docObj[["docs"]]), domain = "R-tools")

msgid "Docs: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Documented arguments not in \\usage in documentation object %s:", sQuote(nm),     domain = "R-tools")

msgid "Documented arguments not in \\usage in documentation object %s:"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettext("Done", domain = "R-tools")

msgid "Done"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Dropping empty section %s", tagtitle)

msgid "Dropping empty section %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Duplicated \\argument entries in documentation object %s:", sQuote(nm),     domain = "R-tools")

msgid "Duplicated \\argument entries in documentation object %s:"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("EOF marker was not found")

msgid "EOF marker was not found"
msgstr ""


#: R/build.R: 0
#: R/logging.R: 0
#. R/build.R: gettext("ERROR", domain = "R-tools")
#. R/build.R: gettext("ERROR", domain = "R-tools")
#. R/build.R: gettext("ERROR", domain = "R-tools")
#. R/logging.R: gettext("ERROR", domain = "R-tools")

msgid "ERROR"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: %s is not a legal package name", sQuote(pkg_name))

msgid "ERROR: %s is not a legal package name"
msgstr ""


#: R/install.R: 0
#. R/install.R: stop("ERROR: '--merge-multiarch' applies only to a single tarball", call. = FALSE)

msgid "ERROR: '--merge-multiarch' applies only to a single tarball"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: 'Frontend' packages are Unix-only")

msgid "ERROR: 'Frontend' packages are Unix-only"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: 'Translation' packages are defunct")

msgid "ERROR: 'Translation' packages are defunct"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: 'configure' file exists but is not executable -- see the 'R Installation and Administration Manual'")
#. R/install.R: gettext("ERROR: 'configure' file exists but is not executable -- see the 'R Installation and Administration Manual'")

msgid "ERROR: 'configure' file exists but is not executable -- see the 'R Installation and Administration Manual'"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: Unix-only package")

msgid "ERROR: Unix-only package"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: Windows-only package")

msgid "ERROR: Windows-only package"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: a 'NAMESPACE' file is required")

msgid "ERROR: a 'NAMESPACE' file is required"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("ERROR: cannot create check dir %s", sQuote(pkgoutdir), domain = "R-tools")

msgid "ERROR: cannot create check dir %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: cannot enter to directory %s", sQuote(lib))

msgid "ERROR: cannot enter to directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: cannot extract package from %s", sQuote(pkg))
#. R/install.R: gettextf("ERROR: cannot extract package from %s", sQuote(pkg))
#. R/install.R: gettextf("ERROR: cannot extract package from %s", sQuote(pkg))

msgid "ERROR: cannot extract package from %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: cannot install to source directory for package %s", sQuote(pkg_name))

msgid "ERROR: cannot install to source directory for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: compilation failed for package %s", sQuote(pkg_name))

msgid "ERROR: compilation failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: configuration failed for package %s", sQuote(pkg_name))
#. R/install.R: gettextf("ERROR: configuration failed for package %s", sQuote(pkg_name))
#. R/install.R: gettextf("ERROR: configuration failed for package %s", sQuote(pkg_name))

msgid "ERROR: configuration failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: error unpacking tarball")

msgid "ERROR: error unpacking tarball"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: extracted multiple files from %s", sQuote(pkg))

msgid "ERROR: extracted multiple files from %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: failed to create lock directory %s", sQuote(lockdir))

msgid "ERROR: failed to create lock directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: failed to lock directory %s for modifying\nTry removing lock directory %s",     sQuote(lib), sQuote(lockdir))

msgid "ERROR: failed to lock directory %s for modifying\nTry removing lock directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: installing Rd objects failed for package %s", sQuote(pkg_name))

msgid "ERROR: installing Rd objects failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: installing binary package failed")

msgid "ERROR: installing binary package failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: installing demos failed for package %s", sQuote(pkg_name))

msgid "ERROR: installing demos failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: installing namespace metadata failed")

msgid "ERROR: installing namespace metadata failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: installing package DESCRIPTION file failed for package %s", sQuote(pkg_name))

msgid "ERROR: installing package DESCRIPTION file failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: installing package indices failed")

msgid "ERROR: installing package indices failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: installing vignettes failed")

msgid "ERROR: installing vignettes failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: invalid value of %s field in 'DESCRIPTION' file", sQuote(field))

msgid "ERROR: invalid value of %s field in 'DESCRIPTION' file"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: lazy loading failed for package %s", sQuote(pkg_name))

msgid "ERROR: lazy loading failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: lazydata failed for package %s", sQuote(pkg_name))

msgid "ERROR: lazydata failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: loading failed")

msgid "ERROR: loading failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: loading failed for %s", paste(sQuote(msgs), collapse = ", "))

msgid "ERROR: loading failed for %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: make failed for package %s", sQuote(pkg_name))

msgid "ERROR: make failed for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("ERROR: no 'Package' field in 'DESCRIPTION' file")

msgid "ERROR: no 'Package' field in 'DESCRIPTION' file"
msgstr ""


#: R/install.R: 0
#. R/install.R: stop("ERROR: no packages specified", call. = FALSE)

msgid "ERROR: no packages specified"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: no permission to install to directory %s", sQuote(lib))

msgid "ERROR: no permission to install to directory %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("ERROR: package installation failed\n", domain = "R-tools")

msgid "ERROR: package installation failed"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("ERROR: this R is version %s, package %s requires R %s", current, sQuote(package),     paste(depends$op, depends$version, collapse = " "))

msgid "ERROR: this R is version %s, package %s requires R %s"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("ERROR: this R is version %s, required is R %s", current, paste(depends$op,     depends$version, collapse = " "))

msgid "ERROR: this R is version %s, required is R %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: unable to build sysdata DB for package %s", sQuote(pkg_name))

msgid "ERROR: unable to build sysdata DB for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: unable to collate and parse R files for package %s", sQuote(pkg_name))

msgid "ERROR: unable to collate and parse R files for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("ERROR: unable to create installation directory %s", sQuote(instdir))

msgid "ERROR: unable to create installation directory %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("EXISTS but not correct format", domain = "R-tools")

msgid "EXISTS but not correct format"
msgstr ""


#: R/Rprof.R: 0
#. R/Rprof.R: gettextf("Each sample represents %s seconds.", format(res$sample.interval), domain = "R-tools")

msgid "Each sample represents %s seconds."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Empty file 'INDEX'.", domain = "R-tools")

msgid "Empty file 'INDEX'."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Empty or missing file %s.\n", sQuote(index), domain = "R-tools")

msgid "Empty or missing file %s."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Empty section %s", tagtitle)

msgid "Empty section %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Encoding %s is not portable", sQuote(x$non_portable_encoding), domain = "R-tools")

msgid "Encoding %s is not portable"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Engine name %s and package %s do not match", sQuote(name), sQuote(package))

msgid "Engine name %s and package %s do not match"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Entries must be names of packages optionally followed by '<=' or '>=', white space, and a valid version number in parentheses.",     domain = "R-tools")

msgid "Entries must be names of packages optionally followed by '<=' or '>=', white space, and a valid version number in parentheses."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Entries with infeasible comparison operator:", domain = "R-tools")

msgid "Entries with infeasible comparison operator:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Entries with infeasible version number:", domain = "R-tools")

msgid "Entries with infeasible version number:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Error in %s: ", sQuote(deparse(call)), domain = "R-tools")

msgid "Error in %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Error in file %s:", sQuote(xi$File), domain = "R-tools")

msgid "Error in file %s:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Error in re-building vignettes:", domain = "R-tools")

msgid "Error in re-building vignettes:"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("Error in running tools::texi2pdf()")

msgid "Error in running tools::texi2pdf()"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Error: ", domain = "R-tools")

msgid "Error:"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("Error: cannot rename directory to %s", sQuote(intname))

msgid "Error: cannot rename directory to %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: message("Error: no packages were specified")

msgid "Error: no packages were specified"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Errors in running code in vignettes:", domain = "R-tools")
#. R/check.R: gettext("Errors in running code in vignettes:", domain = "R-tools")

msgid "Errors in running code in vignettes:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Evaluating %s during check gives error\n%s", sQuote(name), sQuote(sym$message),     domain = "R-tools")

msgid "Evaluating %s during check gives error\n%s"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettextf("Example timings for package %s:", sQuote(x), domain = "R-tools")

msgid "Example timings for package %s:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Examples with CPU or elapsed time > 5s\n", domain = "R-tools")

msgid "Examples with CPU or elapsed time > 5s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("  Extracting from parsed Rd's ", appendLF = FALSE, domain = "R-tools")

msgid "Extracting from parsed Rd's"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("FAILED")

msgid "FAILED"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("FOSS licence with BuildVignettes: false", domain = "R-tools")

msgid "FOSS licence with BuildVignettes: false"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Failed to get %s in evaluating %s", .Wanted, .exprString)

msgid "Failed to get %s in evaluating %s"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Failed to get error in evaluating %s", d.expr)

msgid "Failed to get error in evaluating %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Failed to locate the %s output file (by engine %s) for vignette with name %s. The following files exists in directory %s: %s",     sQuote(by), sQuote(sprintf("%s::%s", engine$package, engine$name)), sQuote(name),     sQuote(dir), paste(sQuote(output0), collapse = ", "))
#. R/Vignettes.R: gettextf("Failed to locate the %s output file (by engine %s) for vignette with name %s. The following files exists in directory %s: %s",     sQuote(by), sQuote(sprintf("%s::%s", engine$package, engine$name)), sQuote(name),     sQuote(dir), paste(sQuote(output0), collapse = ", "))

msgid "Failed to locate the %s output file (by engine %s) for vignette with name %s. The following files exists in directory %s: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Fields with non-ASCII tags:", domain = "R-tools")
#. R/QC.R: gettext("Fields with non-ASCII tags:", domain = "R-tools")

msgid "Fields with non-ASCII tags:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Fields with non-ASCII values:", domain = "R-tools")
#. R/QC.R: gettext("Fields with non-ASCII values:", domain = "R-tools")

msgid "Fields with non-ASCII values:"
msgstr ""


#: R/QC.R: 0
#: R/Vignettes.R: 0
#: R/sotools.R: 0
#: R/sotools.R: 0
#. R/QC.R: gettextf("File %s:", sQuote(fname), domain = "R-tools")
#. R/QC.R: gettextf("File %s:", sQuote(f), domain = "R-tools")
#. R/QC.R: gettextf("File %s:", sQuote(f), domain = "R-tools")
#. R/QC.R: gettextf("File %s:", sQuote(f), domain = "R-tools")
#. R/Vignettes.R: gettextf("File %s:", names(y)[k], domain = "R-tools")
#. R/sotools.R: gettextf("File %s:", sQuote(attr(x, "file")), domain = "R-tools")
#. R/sotools.R: gettextf("File %s:", sQuote(attr(x, "file")), domain = "R-tools")

msgid "File %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("File '%s':", e[1L], domain = "R-tools")

msgid "File '%s':"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("File 'DESCRIPTION' is missing.")

msgid "File 'DESCRIPTION' is missing."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("File DESCRIPTION does not exist but there is a case-insensitive match.",     domain = "R-tools")

msgid "File DESCRIPTION does not exist but there is a case-insensitive match."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("File NAMESPACE does not exist but there is a case-insensitive match.", domain = "R-tools")

msgid "File NAMESPACE does not exist but there is a case-insensitive match."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("File README.md cannot be checked without 'pandoc' being installed.\n", domain = "R-tools")

msgid "File README.md cannot be checked without 'pandoc' being installed."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("File names must not differ just by case to be usable on all R platforms.\nPlease rename the files and try again.\nSee section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "File names must not differ just by case to be usable on all R platforms.\nPlease rename the files and try again.\nSee section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing.")

msgid "Files 'DESCRIPTION' and 'DESCRIPTION.in' are missing."
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Files named as vignettes but with no recognized vignette engine: %s\n(Is a VignetteBuilder field missing?)",     paste(sQuote(files), collapse = ", "), domain = "R-toosl")

msgid "Files named as vignettes but with no recognized vignette engine: %s\n(Is a VignetteBuilder field missing?)"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Files not of a type allowed in a 'data' directory:\n%s\nPlease use e.g. 'inst/extdata' for non-R data files\n",     .pretty_format(odd), domain = "R-tools")

msgid "Files not of a type allowed in a 'data' directory:\n%s\nPlease use e.g. 'inst/extdata' for non-R data files"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("First argument to \\href must be verbatim URL")

msgid "First argument to \\href must be verbatim URL"
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettextf("Found %s, possibly from %s", sQuote(v), paste(sprintf("%s (%s)", sQuote(u[,     "ssname"]), u[, "language"]), collapse = ", "), domain = "R-tools")

msgid "Found %s, possibly from %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Found 'R CMD' in Makefile: should be '\"$(R_HOME)/bin/R\" CMD'\n", domain = "R-tools")

msgid "Found 'R CMD' in Makefile: should be '\"$(R_HOME)/bin/R\" CMD'"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Found 'Rscript' in Makefile: should be '\"$(R_HOME)/bin/Rscript\"'\n",     domain = "R-tools")

msgid "Found 'Rscript' in Makefile: should be '\"$(R_HOME)/bin/Rscript\"'"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Found 'inst/doc/makefile': should be 'Makefile' and will be ignored\n",     domain = "R-tools")

msgid "Found 'inst/doc/makefile': should be 'Makefile' and will be ignored"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found Makefile with CR or CRLF line endings:\n", domain = "R-tools")

msgid "Found Makefile with CR or CRLF line endings:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found directory 'R' with no source files.", domain = "R-tools")

msgid "Found directory 'R' with no source files."
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettextf("  Found non-API call to R: %s", sQuote(x), domain = "R-tools")

msgid "Found non-API call to R: %s"
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettextf("Found non-API calls to R: %s", paste(sQuote(x), collapse = ", "), domain = "R-tools")

msgid "Found non-API calls to R: %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found subdirectory 'DATA'.\nMost likely, this should be 'data'.\n", domain = "R-tools")

msgid "Found subdirectory 'DATA'.\nMost likely, this should be 'data'."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found subdirectory 'MAN'.\nMost likely, this should be 'man'.\n", domain = "R-tools")

msgid "Found subdirectory 'MAN'.\nMost likely, this should be 'man'."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found subdirectory 'r'.\nMost likely, this should be 'R'.\n", domain = "R-tools")

msgid "Found subdirectory 'r'.\nMost likely, this should be 'R'."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following Makefile(s) without a final LF:", domain = "R-tools")

msgid "Found the following Makefile(s) without a final LF:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following Makefiles with CR or CRLF line endings:", domain = "R-tools")

msgid "Found the following Makefiles with CR or CRLF line endings:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following additional warnings:\n", domain = "R-tools")

msgid "Found the following additional warnings:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Found the following apparent S3 methods exported but not registered:", domain = "R-tools")

msgid "Found the following apparent S3 methods exported but not registered:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following apparent object files/libraries:", domain = "R-tools")

msgid "Found the following apparent object files/libraries:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Found the following assignments to the global environment:", domain = "R-tools")

msgid "Found the following assignments to the global environment:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Found the following calls passed to 'attach()':", domain = "R-tools")

msgid "Found the following calls passed to 'attach()':"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Found the following calls passed to 'data()' loading into the global environment:",     domain = "R-tools")

msgid "Found the following calls passed to 'data()' loading into the global environment:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following files with duplicate lower-cased file names:\n", domain = "R-tools")

msgid "Found the following files with duplicate lower-cased file names:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following files with insufficient permissions:\n", domain = "R-tools")

msgid "Found the following files with insufficient permissions:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following hidden files and directories:", domain = "R-tools")

msgid "Found the following hidden files and directories:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following non-empty subdirectories of 'inst' also used by R:\n",     domain = "R-tools")

msgid "Found the following non-empty subdirectories of 'inst' also used by R:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following possibly unsafe calls:", domain = "R-tools")

msgid "Found the following possibly unsafe calls:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following significant warnings:\n", domain = "R-tools")
#. R/check.R: gettext("Found the following significant warnings:", domain = "R-tools")
#. R/check.R: gettext("Found the following significant warnings:", domain = "R-tools")
#. R/check.R: gettext("Found the following significant warnings:", domain = "R-tools")

msgid "Found the following significant warnings:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following sources/headers with CR or CRLF line endings:", domain = "R-tools")

msgid "Found the following sources/headers with CR or CRLF line endings:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Found the following warnings:", domain = "R-tools")

msgid "Found the following warnings:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Functions or methods with usage in documentation object %s but not in code:",     sQuote(fname), domain = "R-tools")

msgid "Functions or methods with usage in documentation object %s but not in code:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Functions with \\usage entries need to have the appropriate \\alias entries, and all their arguments documented.\nThe \\usage entries must correspond to syntactically valid R code.\n",     domain = "R-tools")

msgid "Functions with \\usage entries need to have the appropriate \\alias entries, and all their arguments documented.\nThe \\usage entries must correspond to syntactically valid R code."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("GNU make is a SystemRequirements.", domain = "R-tools")

msgid "GNU make is a SystemRequirements."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Generics 'g' in 'env' %s where %s errors: %s\nMay need something like\n\n%s\nin NAMESPACE.",     format(env), sQuote("hasMethods(g, env)"), paste(sQuote(rErr), collapse = ", "),     paste0("  importFrom(", paste(dq(pkgs), dq(rErr), sep = ", "), ")\n"))

msgid "Generics 'g' in 'env' %s where %s errors: %s\nMay need something like\n\n%s\nin NAMESPACE."
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Got %s in evaluating %s; wanted %s", .got, .exprString, .Wanted)

msgid "Got %s in evaluating %s; wanted %s"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("Got warning in evaluating %s, but also an error", d.expr)

msgid "Got warning in evaluating %s, but also an error"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettext("Help pages:")

msgid "Help pages:"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettext("Hmm ... looks like a package", domain = "R-tools")

msgid "Hmm ... looks like a package"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettext("Hmm ... looks like a package from the R distribution", domain = "R-tools")

msgid "Hmm ... looks like a package from the R distribution"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nIn addition to the above warning(s), found the following notes:\n", domain = "R-tools")
#. R/check.R: gettext("In addition to the above warning(s), found the following notes:", domain = "R-tools")

msgid "In addition to the above warning(s), found the following notes:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("In directory %s vignettes %s and %s have the same vignette name", sQuote(basename(dirname(dir))),     sQuote(orig), sQuote(dup))

msgid "In directory %s vignettes %s and %s have the same vignette name"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: gettextf("Inconsistent arg count for %s", sQuote(macro))

msgid "Inconsistent arg count for %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Incorrect (un)loading of package shared object.\n", domain = "R-tools")

msgid "Incorrect (un)loading of package shared object."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Installation failed.", domain = "R-tools")
#. R/check.R: gettext("Installation failed.", domain = "R-tools")

msgid "Installation failed."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Installation with --no-configure' is unlikely to work. If you intended %s to be used on Windows, rename it to %s otherwise remove it.  If %s created %s, you need a %s script.",     sQuote("src/Makevars"), sQuote("src/Makevars.win"), sQuote("configure"), sQuote("src/Makevars"),     sQuote("cleanup"), domain = "R-tools")

msgid "Installation with --no-configure' is unlikely to work. If you intended %s to be used on Windows, rename it to %s otherwise remove it.  If %s created %s, you need a %s script."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Insufficient package version (submitted: %s, existing: %s)", y[[1L]], y[[2L]],     domain = "R-tools")

msgid "Insufficient package version (submitted: %s, existing: %s)"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: stop("Internal error, no tag", domain = "R-tools")

msgid "Internal error, no tag"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: stop("Internal error: NULL tag", domain = "R-tools")

msgid "Internal error: NULL tag"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Invalid 'NAMESPACE' file, parsing gives:\n%s\n", as.character(e), domain = "R-tools")

msgid "Invalid 'NAMESPACE' file, parsing gives:\n%s"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettext("Invalid DESCRIPTION file")

msgid "Invalid DESCRIPTION file"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Invalid NAMESPACE file, parsing gives:", domain = "R-tools")

msgid "Invalid NAMESPACE file, parsing gives:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Invalid Priority field.", domain = "R-tools")

msgid "Invalid Priority field."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Invalid VignetteBuilder field.", domain = "R-tools")

msgid "Invalid VignetteBuilder field."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Invalid citation information in 'inst/CITATION':\n", domain = "R-tools")

msgid "Invalid citation information in 'inst/CITATION':"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Invalid license file pointers: %s", paste(y, collapse = " "), domain = "R-tools")

msgid "Invalid license file pointers: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Invalid package name.", domain = "R-tools")
#. R/QC.R: gettext("Invalid package name.", domain = "R-tools")

msgid "Invalid package name."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("It is recommended not to interfere with package subdirectories used by R.\n",     domain = "R-tools")

msgid "It is recommended not to interfere with package subdirectories used by R."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nIt looks like this package (or one of its dependent packages) has an unstated dependence on a standard package.  All dependencies must be declared in DESCRIPTION.\n",     domain = "R-tools")

msgid "It looks like this package (or one of its dependent packages) has an unstated dependence on a standard package.  All dependencies must be declared in DESCRIPTION."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nIt looks like this package has a loading problem when not on .libPaths: see the messages for details.\n",     domain = "R-tools")

msgid "It looks like this package has a loading problem when not on .libPaths: see the messages for details."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nIt looks like this package has a loading problem: see the messages for details.\n",     domain = "R-tools")

msgid "It looks like this package has a loading problem: see the messages for details."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("LaTeX errors found:\n", domain = "R-tools")

msgid "LaTeX errors found:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("LaTeX errors when creating PDF version.\nThis typically indicates Rd problems.\n",     domain = "R-tools")

msgid "LaTeX errors when creating PDF version.\nThis typically indicates Rd problems."
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("LaTeX errors:")
#. R/utils.R: gettext("LaTeX errors:")

msgid "LaTeX errors:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Last 13 lines of output:\n", domain = "R-tools")

msgid "Last 13 lines of output:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("License components which are templates and need '+ file LICENSE':", domain = "R-tools")

msgid "License components which are templates and need '+ file LICENSE':"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("License components with restrictions not permitted:", domain = "R-tools")

msgid "License components with restrictions not permitted:"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("Link %s in package %s could not be located", mono(helpdoc), mono(pkg))

msgid "Link %s in package %s could not be located"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Loading log:\n%s\n", paste(out, collapse = "\n"), domain = "R-tools")

msgid "Loading log:\n%s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Loading this package had a fatal error status code %s", st, domain = "R-tools")

msgid "Loading this package had a fatal error status code %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Located more than one %s output file (by engine %s) for vignette with name %s: %s",     sQuote(by), sQuote(sprintf("%s::%s", engine$package, engine$name)), sQuote(name),     paste(sQuote(output), collapse = ", "))

msgid "Located more than one %s output file (by engine %s) for vignette with name %s: %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Located more than one %s output file (by engine %s) for vignette with name: %s",     sQuote(by), sQuote(sprintf("%s::%s", engine$package, engine$name)), sQuote(name),     paste(sQuote(output), collapse = ", "))

msgid "Located more than one %s output file (by engine %s) for vignette with name: %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("MD5 sums")

msgid "MD5 sums"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettextf("Macro file '%s' should only contain Rd macro definitions and comments",     file)

msgid "Macro file '%s' should only contain Rd macro definitions and comments"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Maintainer field differs from that derived from Authors@R", domain = "R-tools")

msgid "Maintainer field differs from that derived from Authors@R"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Maintainer: ", domain = "R-tools")

msgid "Maintainer:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Maintainer: %s", sQuote(paste(x$Maintainer, collapse = " ")), domain = "R-tools")

msgid "Maintainer: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Malformed Authors@R field:", domain = "R-tools")

msgid "Malformed Authors@R field:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Malformed Depends or Suggests or Imports or Enhances field.", domain = "R-tools")

msgid "Malformed Depends or Suggests or Imports or Enhances field."
msgstr ""


#: R/news.R: 0
#. R/news.R: gettextf("Malformed NEWS.Rd file:\nChunk starting\n  %s\ncontains more than one \\itemize.\nUsing the first one.",     substring(sub("^[[:space:]]*", "", .Rd_deparse(x)), 1L, 60L))

msgid "Malformed NEWS.Rd file:\nChunk starting\n  %s\ncontains more than one \\itemize.\nUsing the first one."
msgstr ""


#: R/news.R: 0
#. R/news.R: gettextf("Malformed NEWS.Rd file:\nChunk starting\n  %s\ncontains no \\itemize.",     substring(sub("^[[:space:]]*", "", .Rd_deparse(x)), 1L, 60L))

msgid "Malformed NEWS.Rd file:\nChunk starting\n  %s\ncontains no \\itemize."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Malformed maintainer field.", domain = "R-tools")

msgid "Malformed maintainer field."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Malformed package name", domain = "R-tools")

msgid "Malformed package name"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Malformed package version.", domain = "R-tools")

msgid "Malformed package version."
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("Messages:")

msgid "Messages:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Mismatches in argument default values (first 3):", domain = "R-tools")

msgid "Mismatches in argument default values (first 3):"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Mismatches in argument default values:", domain = "R-tools")

msgid "Mismatches in argument default values:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Mismatches in argument names (first 3):", domain = "R-tools")

msgid "Mismatches in argument names (first 3):"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  Mismatches in argument names:", domain = "R-tools")

msgid "Mismatches in argument names:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Missing link or links in documentation object %s:", sQuote(names(xx)[i]),     domain = "R-tools")

msgid "Missing link or links in documentation object %s:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Most likely, these were included erroneously.\n", domain = "R-tools")

msgid "Most likely, these were included erroneously."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Multiple \\docType sections are not supported")

msgid "Multiple \\docType sections are not supported"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Must contain verbatim text")

msgid "Must contain verbatim text"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Must have a tag %s", tag)

msgid "Must have a tag %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("  NB: *.R converted to .rda: other files may need to be removed\n", domain = "R-tools")

msgid "NB: *.R converted to .rda: other files may need to be removed"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("NB: .First.lib is obsolete and will not be used in R >= 3.0.0", domain = "R-tools")

msgid "NB: .First.lib is obsolete and will not be used in R >= 3.0.0"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("NB: .Last.lib will not be used unless it is exported", domain = "R-tools")

msgid "NB: .Last.lib will not be used unless it is exported"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: message("NB: need Internet access to use CRAN incoming checks")

msgid "NB: need Internet access to use CRAN incoming checks"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("NB: this package is only installed for sub-architecture %s\n", sQuote(inst_archs),     domain = "R-tools")

msgid "NB: this package is only installed for sub-architecture %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("NB: this package is only installed for sub-architectures %s\n", paste(sQuote(inst_archs),     collapse = ", "), domain = "R-tools")

msgid "NB: this package is only installed for sub-architectures %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("  NB: this package now depends on R (>= %s)\n", ver, domain = "R-tools")

msgid "NB: this package now depends on R (>= %s)"
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#. R/build.R: gettext("NO", domain = "R-tools")
#. R/build.R: gettext("NO", domain = "R-tools")
#. R/build.R: gettext("NO", domain = "R-tools")
#. R/check.R: gettext("NO", domain = "R-tools")

msgid "NO"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("NONE", domain = "R-tools")

msgid "NONE"
msgstr ""


#: R/logging.R: 0
#. R/logging.R: gettext("NOTE", domain = "R-tools")

msgid "NOTE"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("NOTE: Quitting check on first error.\n", domain = "R-tools")

msgid "NOTE: Quitting check on first error."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("    Name: %s\n    Code: %s\n    Docs: %s", sQuote(nms[i]), cv, dv, domain = "R-tools")

msgid "Name: %s\n    Code: %s\n    Docs: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("    Name: %s Code: %s Docs: %s", sQuote(nms[i]), cv, dv, domain = "R-tools")

msgid "Name: %s Code: %s Docs: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("New license:", domain = "R-tools")

msgid "New license:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("New maintainer:", domain = "R-tools")

msgid "New maintainer:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("New submission", domain = "R-tools")

msgid "New submission"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettextf("No Rd macros in package %s", sQuote(p))

msgid "No Rd macros in package %s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("No docs found for package %s", sQuote(mono(pkg)), domain = "R-tools")

msgid "No docs found for package %s"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("No errors", domain = "R-tools")

msgid "No errors"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("No examples, no tests, no vignettes", domain = "R-tools")

msgid "No examples, no tests, no vignettes"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettext("No files in this directory")

msgid "No files in this directory"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("No help found for package %s", mono(pkg))

msgid "No help found for package %s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("No help found for topic %s in any package.", mono(topic))

msgid "No help found for topic %s in any package."
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettextf("No help on %s found in RdDB %s", sQuote(key), sQuote(filebase))

msgid "No help on %s found in RdDB %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("No maintainer field in DESCRIPTION file", domain = "R-tools")

msgid "No maintainer field in DESCRIPTION file"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("No man pages found in package %s", sQuote(pkg_name), domain = "R-tools")

msgid "No man pages found in package %s"
msgstr ""


#: R/news.R: 0
#. R/news.R: stop("No news found in given file using old-style R-like format.")

msgid "No news found in given file using old-style R-like format."
msgstr ""


#: R/news.R: 0
#. R/news.R: stop("No news found in given file using package default format.")

msgid "No news found in given file using package default format."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("No package encoding and non-ASCII characters in the following R files:",     domain = "R-tools")

msgid "No package encoding and non-ASCII characters in the following R files:"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("No package index found for package %s", mono(pkg))

msgid "No package index found for package %s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("No package named %s could be found", mono(pkg))
#. R/dynamicHelp.R: gettextf("No package named %s could be found", mono(pkg))

msgid "No package named %s could be found"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettext("No packages checked.", domain = "R-tools")
#. R/checktools.R: gettext("No packages checked.", domain = "R-tools")

msgid "No packages checked."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("  No repository set, so cyclic dependency check skipped", domain = "R-tools")

msgid "No repository set, so cyclic dependency check skipped"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettext("No results found")

msgid "No results found"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("No such vignette %s", sQuote(vig_name))

msgid "No such vignette %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: stop("No vignettes available", call. = FALSE, domain = "R-tools")

msgid "No vignettes available"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Non-ASCII contents in second part of \\enc")
#. R/RdConv2.R: gettext("Non-ASCII contents in second part of \\enc")

msgid "Non-ASCII contents in second part of \\enc"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Non-ASCII contents without declared encoding")
#. R/RdConv2.R: gettext("Non-ASCII contents without declared encoding")

msgid "Non-ASCII contents without declared encoding"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Non-FOSS package license (%s)", y, domain = "R-tools")

msgid "Non-FOSS package license (%s)"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Non-portable flags in variable %s:", sQuote(names(x)), domain = "R-tools")

msgid "Non-portable flags in variable %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Non-standard license specification:", domain = "R-tools")

msgid "Non-standard license specification:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("None of packages %s have registered vignette engines", paste(sQuote(package),     collapse = ", "))

msgid "None of packages %s have registered vignette engines"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Note that CRAN packages must never use more than two cores simultaneously during their checks.",     domain = "R-tools")

msgid "Note that CRAN packages must never use more than two cores simultaneously during their checks."
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettext("Note: information on .o files for i386 is not available", domain = "R-tools")

msgid "Note: information on .o files for i386 is not available"
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettext("Note: information on .o files for x64 is not available", domain = "R-tools")

msgid "Note: information on .o files for x64 is not available"
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettext("Note: information on .o files is not available", domain = "R-tools")

msgid "Note: information on .o files is not available"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Note: significantly better compression could be obtained by using R CMD build --resave-data",     domain = "R-tools")

msgid "Note: significantly better compression could be obtained by using R CMD build --resave-data"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Number of updates in past 6 months: %d", y, domain = "R-tools")

msgid "Number of updates in past 6 months: %d"
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/check.R: 0
#: R/checktools.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#. R/build.R: gettext("OK", domain = "R-tools")
#. R/build.R: gettext("OK", domain = "R-tools")
#. R/build.R: gettext("OK")
#. R/build.R: gettext("OK", domain = "R-tools")
#. R/build.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext(" OK\n", domain = "R-tools")
#. R/check.R: gettext(" OK\n", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/check.R: gettext("OK", domain = "R-tools")
#. R/checktools.R: gettext("OK", domain = "R-tools")
#. R/testing.R: message(" OK")
#. R/testing.R: message(" OK")
#. R/testing.R: message(" OK")
#. R/testing.R: gettext(" OK", domain = "R-tools")
#. R/testing.R: gettext(" OK\n", domain = "R-tools")
#. R/testing.R: message(" OK")
#. R/testing.R: message("OK")
#. R/testing.R: message("OK")

msgid "OK"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nObject files/libraries should not be included in a source package.\n",     domain = "R-tools")
#. R/check.R: gettext("Object files/libraries should not be included in a source package.\n", domain = "R-tools")

msgid "Object files/libraries should not be included in a source package."
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettextf("Object: %s", sQuote(w), domain = "R-tools")

msgid "Object: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Objects in \\usage without \\alias in documentation object %s:", sQuote(nm),     domain = "R-tools")

msgid "Objects in \\usage without \\alias in documentation object %s:"
msgstr ""


#: R/sotools.R: 0
#. R/sotools.R: gettextf("Objects: %s", paste(sQuote(w), collapse = ", "), domain = "R-tools")

msgid "Objects: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Offending entries:", domain = "R-tools")

msgid "Offending entries:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Old license:", domain = "R-tools")

msgid "Old license:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Old maintainer(s):", domain = "R-tools")

msgid "Old maintainer(s):"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("One or more packages in %s depend on this package.", x$all_depends, domain = "R-tools")

msgid "One or more packages in %s depend on this package."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Only 'Type = Package' extensions can be checked.\n", domain = "R-tools")

msgid "Only 'Type = Package' extensions can be checked."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Only *source* packages can be checked.\n", domain = "R-tools")

msgid "Only *source* packages can be checked."
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("Only help files, %s, %s and files under %s and %s in a package can be viewed",     mono("NEWS"), mono("DESCRIPTION"), mono("doc/"), mono("demo/"))

msgid "Only help files, %s, %s and files under %s and %s in a package can be viewed"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Only one %s section is allowed: the first will be used", tag)

msgid "Only one %s section is allowed: the first will be used"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Only one Rd section per %s is supported.", "\\Sexpr")

msgid "Only one Rd section per %s is supported."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Only one \\Rdversion declaration is allowed")

msgid "Only one \\Rdversion declaration is allowed"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Only one tag %s is allowed", tag)

msgid "Only one tag %s is allowed"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Only operators '<=' and '>=' are possible.", domain = "R-tools")

msgid "Only operators '<=' and '>=' are possible."
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#. R/build.R: gettext("Output(s) listed in 'build/vignette.rds' but not in package:", domain = "R-tools")
#. R/check.R: gettext("Output(s) listed in 'build/vignette.rds' but not in package:", domain = "R-tools")

msgid "Output(s) listed in 'build/vignette.rds' but not in package:"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("Output:")

msgid "Output:"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("PDF document (file %s, %d bytes, %d objects)", dQuote(x$file), x$size,     x$length)

msgid "PDF document (file %s, %d bytes, %d objects)"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("PDF header was not found")

msgid "PDF header was not found"
msgstr ""


#: R/pkgDepends.R: 0
#. R/pkgDepends.R: gettextf("Package %s had its dependencies reduced to a minimal set.", sQuote(pkgMtrx[1,     ]))

msgid "Package %s had its dependencies reduced to a minimal set."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package CITATION file contains call(s) to:", domain = "R-tools")

msgid "Package CITATION file contains call(s) to:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package detach functions should have one arguments with names starting with %s.",     sQuote("lib"), domain = "R-tools")

msgid "Package detach functions should have one arguments with names starting with %s."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package detach functions should not call %s.", sQuote("library.dynam.unload"),     domain = "R-tools")

msgid "Package detach functions should not call %s."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Package directory %s does not exist.", sQuote(pkg), domain = "R-tools")

msgid "Package directory %s does not exist."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package duplicated from %s", y, domain = "R-tools")

msgid "Package duplicated from %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package has FOSS license, installs .class/.jar but has no 'java' directory.",     domain = "R-tools")

msgid "Package has FOSS license, installs .class/.jar but has no 'java' directory."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package has a VignetteBuilder field but no prebuilt vignette index.", domain = "R-tools")

msgid "Package has a VignetteBuilder field but no prebuilt vignette index."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package has both %s and %s.", sQuote("src/Makevars.in"), sQuote("src/Makevars"),     domain = "R-tools")

msgid "Package has both %s and %s."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package has help file(s) containing build-stage \\Sexpr{} expresssons but no build/partial.rdb.",     domain = "R-tools")

msgid "Package has help file(s) containing build-stage \\Sexpr{} expresssons but no build/partial.rdb."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package has help file(s) containing install/render-stage \\Sexpr{} expresssons but no prebuilt PDF manual.",     domain = "R-tools")

msgid "Package has help file(s) containing install/render-stage \\Sexpr{} expresssons but no prebuilt PDF manual."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: stop("Package has no 'Version' field", call. = FALSE)

msgid "Package has no 'Version' field"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package installs .java files.", domain = "R-tools")

msgid "Package installs .java files."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package license conflicts with %s override", sQuote(paste("License_is_FOSS:",     y)), domain = "R-tools")
#. R/QC.R: gettextf("Package license conflicts with %s override", sQuote(paste("License_restricts_use:",     y)), domain = "R-tools")

msgid "Package license conflicts with %s override"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("  Package name is not portable:\n  It must start with a letter, contain letters, digits or dot\n  have at least 2 characters and not end with a dot.\n",     domain = "R-tools")

msgid "Package name is not portable:\n  It must start with a letter, contain letters, digits or dot\n  have at least 2 characters and not end with a dot."
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettextf("Package sources: %d, Reverse depends: %d", length(attr(x, "pnames")), length(attr(x,     "rnames")), domain = "R-tools")

msgid "Package sources: %d, Reverse depends: %d"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package startup functions should have two arguments with names starting with %s and %s, respectively.",     sQuote("lib"), sQuote("pkg"), domain = "R-tools")

msgid "Package startup functions should have two arguments with names starting with %s and %s, respectively."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package startup functions should not call %s.", sQuote("installed.packages"),     domain = "R-tools")

msgid "Package startup functions should not call %s."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package startup functions should not change the search path.", domain = "R-tools")

msgid "Package startup functions should not change the search path."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Package startup functions should use %s to generate messages.", sQuote("packageStartupMessage"),     domain = "R-tools")

msgid "Package startup functions should use %s to generate messages."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Package was archived on CRAN", domain = "R-tools")

msgid "Package was archived on CRAN"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Packages should not call .Internal(): it is not part of the API, for use only by R itself and subject to change without notice.",     domain = "R-tools")

msgid "Packages should not call .Internal(): it is not part of the API, for use only by R itself and subject to change without notice."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Packages should not make .C/.Call/.External/.Fortran calls to a base package. They are not part of the API, for use only by R itself and subject to change without notice.",     domain = "R-tools")

msgid "Packages should not make .C/.Call/.External/.Fortran calls to a base package. They are not part of the API, for use only by R itself and subject to change without notice."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Packages with priorities 'base' or 'recommended' or 'defunct-base' must already be known to R.",     domain = "R-tools")

msgid "Packages with priorities 'base' or 'recommended' or 'defunct-base' must already be known to R."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Packages without R code can be installed without a 'NAMESPACE' file, but it is cleaner to add an empty one.",     domain = "R-tools")

msgid "Packages without R code can be installed without a 'NAMESPACE' file, but it is cleaner to add an empty one."
msgstr ""


#: R/packages.R: 0
#. R/packages.R: gettext("Path: ", domain = "R-tools")
#. R/packages.R: gettext("Path: ", domain = "R-tools")

msgid "Path:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Permissions should be at least 700 for directories and 400 for files.\nPlease fix permissions and try again.\n",     domain = "R-tools")

msgid "Permissions should be at least 700 for directories and 400 for files.\nPlease fix permissions and try again."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Please fix their permissions\n", domain = "R-tools")

msgid "Please fix their permissions"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Please remove or rename the files.\nSee section 'Package subdirectories' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "Please remove or rename the files.\nSee section 'Package subdirectories' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Portable Makefiles do not use GNU extensions such as +=, :=, $(shell), $(wildcard), ifeq ... endif. See section 'Writing portable packages' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "Portable Makefiles do not use GNU extensions such as +=, :=, $(shell), $(wildcard), ifeq ... endif. See section 'Writing portable packages' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Portable packages must use only ASCII characters in their R code,\nexcept perhaps in comments.\nUse \\uxxxx escapes for other characters.\n",     domain = "R-tools")

msgid "Portable packages must use only ASCII characters in their R code,\nexcept perhaps in comments.\nUse \\uxxxx escapes for other characters."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Portable packages must use only ASCII characters in their demos.\nUse \\uxxxx escapes for other characters.\n",     domain = "R-tools")

msgid "Portable packages must use only ASCII characters in their demos.\nUse \\uxxxx escapes for other characters."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("    Position: %d Code: %s Docs: %s", i, nfc[i], nfd[i], domain = "R-tools")

msgid "Position: %d Code: %s Docs: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Possibly mis-spelled fields in DESCRIPTION:", domain = "R-tools")

msgid "Possibly mis-spelled fields in DESCRIPTION:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Possibly mis-spelled words in DESCRIPTION:", domain = "R-tools")

msgid "Possibly mis-spelled words in DESCRIPTION:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Problems with news in 'inst/NEWS.Rd':\n", domain = "R-tools")

msgid "Problems with news in 'inst/NEWS.Rd':"
msgstr ""


#: R/packages.R: 0
#. R/packages.R: message("Processing packages:")
#. R/packages.R: message("Processing packages:")

msgid "Processing packages:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Prototyped non-primitives:", domain = "R-tools")

msgid "Prototyped non-primitives:"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("R 'include' directory is empty -- perhaps need to install R-devel.rpm or similar",     call. = FALSE)

msgid "R 'include' directory is empty -- perhaps need to install R-devel.rpm or similar"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("R < 3.0.2 had a limit of 500 registered S3 methods: found %d", nS3methods,     domain = "R-tools")

msgid "R < 3.0.2 had a limit of 500 registered S3 methods: found %d"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("R add-on package installer: ", domain = "R-tools")

msgid "R add-on package installer:"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("R shared object builder: ", domain = "R-tools")

msgid "R shared object builder:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Rd conversion errors:", domain = "R-tools")

msgid "Rd conversion errors:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Rd file %s:", sQuote(nm), domain = "R-tools")

msgid "Rd file %s:"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettextf("Rd files must have a non-empty %s.", "\\name", domain = "R-tools")
#. R/Rd.R: gettextf("Rd files must have a non-empty %s.", "\\title", domain = "R-tools")

msgid "Rd files must have a non-empty %s."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Rd files with duplicated alias %s:", sQuote(nm), domain = "R-tools")

msgid "Rd files with duplicated alias %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Rd files with duplicated name %s:", sQuote(nm), domain = "R-tools")

msgid "Rd files with duplicated name %s:"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: stop("Rd object is required")

msgid "Rd object is required"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Re-running with no redirection of stdout/stderr.\n", domain = "R-tools")

msgid "Re-running with no redirection of stdout/stderr."
msgstr ""


#: R/CRANtools.R: 0
#. R/CRANtools.R: gettextf("Reading %s failed with message: %s", path, conditionMessage(db), domain = "R-tools")
#. R/CRANtools.R: gettextf("Reading %s failed with message: %s", path, conditionMessage(ts), domain = "R-tools")

msgid "Reading %s failed with message: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Reading CITATION file fails with\n%s\nwhen package is not installed.",     paste(" ", y), domain = "R-tools")

msgid "Reading CITATION file fails with\n%s\nwhen package is not installed."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("Removed empty directory %s\n", sQuote(d), domain = "R-tools")

msgid "Removed empty directory %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("Run R CMD build without --no-build-vignettes to re-create", domain = "R-tools")

msgid "Run R CMD build without --no-build-vignettes to re-create"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("Run successfully completed", domain = "R-tools")

msgid "Run successfully completed"
msgstr ""


#: R/Vignettes.R: 0
#: R/testing.R: 0
#: R/testing.R: 0
#. R/Vignettes.R: gettextf("  Running %s", sQuote(file), domain = "R-tools")
#. R/testing.R: gettextf("  Running %s", sQuote(f), domain = "R-tools")
#. R/testing.R: gettextf("  Running %s", sQuote(f), domain = "R-tools")

msgid "Running %s"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("Running 'texi2dvi' on file %s failed.", sQuote(file))

msgid "Running 'texi2dvi' on file %s failed."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Running examples in %s failed", sQuote(basename(exfile)), domain = "R-tools")

msgid "Running examples in %s failed"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("  Running file %s", sQuote(f))

msgid "Running file %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Running massageExamples to create %s failed", sQuote(exfile), domain = "R-tools")

msgid "Running massageExamples to create %s failed"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("Running specific tests for package %s", sQuote(pkg))

msgid "Running specific tests for package %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Running the tests in %s failed.\n", sQuote(file), domain = "R-tools")

msgid "Running the tests in %s failed."
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("Running vignettes for package %s", sQuote(pkg))

msgid "Running vignettes for package %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("S3 methods shown with full name in documentation object %s:", sQuote(nm),     domain = "R-tools")

msgid "S3 methods shown with full name in documentation object %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("S4 class codoc mismatches from documentation object %s:", sQuote(nm), domain = "R-tools")

msgid "S4 class codoc mismatches from documentation object %s:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")
#. R/check.R: gettext("SKIPPED", domain = "R-tools")

msgid "SKIPPED"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("Saving output to %s ...", sQuote(output), domain = "R-tools")

msgid "Saving output to %s ..."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Section %s is unrecognized and will be dropped", sections[s])

msgid "Section %s is unrecognized and will be dropped"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("Sections \\title, and \\name must exist and be unique in Rd files")

msgid "Sections \\title, and \\name must exist and be unique in Rd files"
msgstr ""


#: R/logging.R: 0
#. R/logging.R: gettextf("See\n  %s\nfor details.\n", sQuote(Log$filename), domain = "R-tools")

msgid "See\n  %s\nfor details."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("See %s for details.\n", sQuote(outfile), domain = "R-tools")
#. R/check.R: gettextf("See %s for details.\n", sQuote(outfile), domain = "R-tools")
#. R/check.R: gettextf("See %s for details.\n", sQuote(outfile), domain = "R-tools")

msgid "See %s for details."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See 'Writing portable packages' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See 'Writing portable packages' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See chapter 'System and foreign language interfaces' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See chapter 'System and foreign language interfaces' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See chapter 'Writing R documentation files' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See chapter 'Writing R documentation files' in the 'Writing R Extensions' manual."
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettext("See chapter 'Writing R documentation' in manual 'Writing R Extensions'.",     domain = "R-tools")
#. R/Rd.R: gettext("See chapter 'Writing R documentation' in manual 'Writing R Extensions'.",     domain = "R-tools")

msgid "See chapter 'Writing R documentation' in manual 'Writing R Extensions'."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("See section %s in %s.", sQuote("Good practice"), sQuote("?.onAttach"),     domain = "R-tools")
#. R/QC.R: gettextf("See section %s in %s.", sQuote("Good practice"), sQuote("?.Last.lib"),     domain = "R-tools")

msgid "See section %s in %s."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("See section %s in '%s'.", sQuote("Good practice"), "?attach", domain = "R-tools")
#. R/check.R: gettextf("See section %s in '%s'.", sQuote("Good practice"), "?data", domain = "R-tools")

msgid "See section %s in '%s'."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("See section 'Cross-references' in the 'Writing R Extensions' manual.", domain = "R-tools")

msgid "See section 'Cross-references' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See section 'Generic functions and methods' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See section 'Generic functions and methods' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See section 'Package namespaces' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See section 'Package namespaces' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See section 'Registering S3 methods' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See section 'Registering S3 methods' in the 'Writing R Extensions' manual."
msgstr ""


#: R/QC.R: 0
#: R/check.R: 0
#. R/QC.R: gettext("See section 'The DESCRIPTION file' in the 'Writing R Extensions' manual.",     domain = "R-tools")
#. R/QC.R: gettext("See section 'The DESCRIPTION file' in the 'Writing R Extensions' manual.",     domain = "R-tools")
#. R/check.R: gettext("See section 'The DESCRIPTION file' in the 'Writing R Extensions' manual.",     domain = "R-tools")

msgid "See section 'The DESCRIPTION file' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("See sections 'The INDEX file' and 'Package subdirectories' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "See sections 'The INDEX file' and 'Package subdirectories' in the 'Writing R Extensions' manual."
msgstr ""


#: R/Rprof.R: 0
#. R/Rprof.R: gettext("Self seconds: time spent in function alone.", domain = "R-tools")

msgid "Self seconds: time spent in function alone."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Slots for class %s", dQuote(docObj[["name"]]), domain = "R-tools")

msgid "Slots for class %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Some 'make' programs ignore lines not ending in LF.\n", domain = "R-tools")

msgid "Some 'make' programs ignore lines not ending in LF."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Some Unix 'make' programs require LF line endings.\n", domain = "R-tools")

msgid "Some Unix 'make' programs require LF line endings."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Some Unix compilers require LF line endings.\n", domain = "R-tools")

msgid "Some Unix compilers require LF line endings."
msgstr ""


#: R/Rd2latex.R: 0
#. R/Rd2latex.R: gettextf("Some input could not be re-encoded to %s", outputEncoding)

msgid "Some input could not be re-encoded to %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Source packages should not contain undeclared executable files.\nSee section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "Source packages should not contain undeclared executable files.\nSee section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Standardizable: FALSE", domain = "R-tools")

msgid "Standardizable: FALSE"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Standardizable: TRUE", domain = "R-tools")

msgid "Standardizable: TRUE"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Standardized license specification:", domain = "R-tools")

msgid "Standardized license specification:"
msgstr ""


#: R/logging.R: 0
#. R/logging.R: gettextf("Status: %s\n", m, domain = "R-tools")

msgid "Status: %s"
msgstr ""


#: R/logging.R: 0
#. R/logging.R: gettext("Status: OK\n", domain = "R-tools")

msgid "Status: OK"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Strong dependencies not in mainstream repositories:", domain = "R-tools")

msgid "Strong dependencies not in mainstream repositories:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Subdirectory %s contains apparent object files/libraries\n", sQuote(file.path(pkgname,     "src")), domain = "R-tools")

msgid "Subdirectory %s contains apparent object files/libraries"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Subdirectory %s contains invalid file names:", sQuote(tag), domain = "R-tools")

msgid "Subdirectory %s contains invalid file names:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Subdirectory %s contains:", sQuote("src"), domain = "R-tools")

msgid "Subdirectory %s contains:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("Subdirectory %s seems to contain an installed version of the package.\n",     sQuote(dirname(dirname(files[1L]))), domain = "R-tools")

msgid "Subdirectory %s seems to contain an installed version of the package."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Subdirectory 'data' contains no data sets.\n", domain = "R-tools")

msgid "Subdirectory 'data' contains no data sets."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Subdirectory 'demo' contains no demos.\n", domain = "R-tools")

msgid "Subdirectory 'demo' contains no demos."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Subdirectory 'exec' contains no files.\n", domain = "R-tools")

msgid "Subdirectory 'exec' contains no files."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Subdirectory 'inst' contains no files.\n", domain = "R-tools")

msgid "Subdirectory 'inst' contains no files."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Subdirectory 'src' contains no source files.\n", domain = "R-tools")

msgid "Subdirectory 'src' contains no source files."
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s is invalid in a %s block", tag, blocktag)

msgid "Tag %s is invalid in a %s block"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s is invalid in a code block", tag)

msgid "Tag %s is invalid in a code block"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s is only valid in \\examples", tag)

msgid "Tag %s is only valid in \\examples"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s is only valid in \\usage", tag)

msgid "Tag %s is only valid in \\usage"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s must not be empty", tag)

msgid "Tag %s must not be empty"
msgstr ""


#: R/Rd2txt.R: 0
#. R/Rd2txt.R: gettextf("Tag %s not expected in code block", tag, domain = "R-tools")

msgid "Tag %s not expected in code block"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettextf("Tag %s not implemented", tag)

msgid "Tag %s not implemented"
msgstr ""


#: R/Rd2latex.R: 0
#: R/Rd2txt.R: 0
#: R/RdConv2.R: 0
#. R/Rd2latex.R: gettextf("Tag %s not recognized", tag)
#. R/Rd2txt.R: gettextf("Tag %s not recognized", tag, domain = "R-tools")
#. R/RdConv2.R: gettextf("Tag %s not recognized", tag)

msgid "Tag %s not recognized"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Tag %s not valid outside a code block", tag)

msgid "Tag %s not valid outside a code block"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Tarballs are only required to store paths of up to 100 bytes and cannot store those of more than 256 bytes, with restrictions including to 100 bytes for the final component.\nSee section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "Tarballs are only required to store paths of up to 100 bytes and cannot store those of more than 256 bytes, with restrictions including to 100 bytes for the final component.\nSee section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("Testing examples for package %s", sQuote(pkg))

msgid "Testing examples for package %s"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettext("Text")

msgid "Text"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The \\usage entries for S3 methods should use the \\method markup and not their full name.\n",     domain = "R-tools")

msgid "The \\usage entries for S3 methods should use the \\method markup and not their full name."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The argument of a replacement function which corresponds to the right hand side must be named 'value'.\n",     domain = "R-tools")

msgid "The argument of a replacement function which corresponds to the right hand side must be named 'value'."
msgstr ""


#: R/bibstyle.R: 0
#. R/bibstyle.R: stop("The default JSS style may not be modified.")

msgid "The default JSS style may not be modified."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("The display-name part of the maintainer field should be enclosed in \"\"",     domain = "R-tools")

msgid "The display-name part of the maintainer field should be enclosed in \"\""
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The error most likely occurred in:\n\n", domain = "R-tools")

msgid "The error most likely occurred in:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The error occurred in:\n\n", domain = "R-tools")

msgid "The error occurred in:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following directories should probably not be installed:\n%s\n", paste(strwrap(paste(sQuote(badd),     collapse = ", "), indent = 2, exdent = 2), collapse = "\n"), domain = "R-tools")

msgid "The following directories should probably not be installed:\n%s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files are already in R: %s\nPlease remove them from your package.\n",     paste(sQuote(bad), collapse = ", "), domain = "R-tools")
#. R/check.R: gettextf("The following files are already in R: %s\nPlease remove them from your package.",     paste(sQuote(bad), collapse = ", "), domain = "R-tools")

msgid "The following files are already in R: %s\nPlease remove them from your package."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files contain a license that requires\ndistribution of original sources:\n  %s\nPlease ensure that you have complied with it.\n",     paste(sQuote(bad), collapse = ", "), domain = "R-tools")

msgid "The following files contain a license that requires\ndistribution of original sources:\n  %s\nPlease ensure that you have complied with it."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files contain a license that requires distribution of original sources:\n  %s\nPlease ensure that you have complied with it.",     paste(sQuote(bad), collapse = ", "), domain = "R-tools")

msgid "The following files contain a license that requires distribution of original sources:\n  %s\nPlease ensure that you have complied with it."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files look like leftovers/mistakes:\n%s\nPlease remove them from your package.\n",     paste(strwrap(paste(sQuote(files[bad]), collapse = ", "), indent = 2, exdent = 2),         collapse = "\n"), domain = "R-tools")
#. R/check.R: gettextf("The following files look like leftovers/mistakes:\n%s\nPlease remove them from your package.",     paste(strwrap(paste(sQuote(files[bad]), collapse = ", "), indent = 2, exdent = 2),         collapse = "\n"), domain = "R-tools")

msgid "The following files look like leftovers/mistakes:\n%s\nPlease remove them from your package."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files look like leftovers:\n%s\nPlease remove them from your package.\n",     paste(strwrap(paste(sQuote(bad), collapse = ", "), indent = 2, exdent = 2), collapse = "\n"),     domain = "R-tools")

msgid "The following files look like leftovers:\n%s\nPlease remove them from your package."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The following files should most likely be executable (for the owner):\n",     domain = "R-tools")

msgid "The following files should most likely be executable (for the owner):"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("The following files should probably not be installed:\n%s\n", paste(strwrap(paste(sQuote(badf),     collapse = ", "), indent = 2, exdent = 2), collapse = "\n"), domain = "R-tools")

msgid "The following files should probably not be installed:\n%s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("The maintainer field lacks a name", domain = "R-tools")

msgid "The maintainer field lacks a name"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("The package contains no vignette meta-information.")

msgid "The package contains no vignette meta-information."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The suggested packages are required for a complete check.\nChecking can be attempted without them by setting the environment variable _R_CHECK_FORCE_SUGGESTS_ to a false value.\n\n",     domain = "R-tools")

msgid "The suggested packages are required for a complete check.\nChecking can be attempted without them by setting the environment variable _R_CHECK_FORCE_SUGGESTS_ to a false value."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("The system-specific extension for shared objects must not be added.\nSee ?library.dynam.\n",     domain = "R-tools")

msgid "The system-specific extension for shared objects must not be added.\nSee ?library.dynam."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("There are ::: calls to the package's namespace in its code. A package almost never needs to use ::: for its own objects: %s",     .pretty_format(sort(x$imp3selfcalls)), domain = "R-tools")

msgid "There are ::: calls to the package's namespace in its code. A package almost never needs to use ::: for its own objects: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("There is circular dependency in the installation order:", domain = "R-tools")

msgid "There is circular dependency in the installation order:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These are not fully portable file names.\nSee section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "These are not fully portable file names.\nSee section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These are not valid file names on all R platforms.\nPlease rename the files and try again.\nSee section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "These are not valid file names on all R platforms.\nPlease rename the files and try again.\nSee section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These are unlikely file names for src files.", domain = "R-tools")

msgid "These are unlikely file names for src files."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("These fields must have ASCII values.", domain = "R-tools")

msgid "These fields must have ASCII values."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These files and directories were most likely included in error. See section 'Package structure' in the 'Writing R Extensions' manual.\n",     domain = "R-tools")

msgid "These files and directories were most likely included in error. See section 'Package structure' in the 'Writing R Extensions' manual."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These files are defunct. See manual 'Writing R Extensions'.\n", domain = "R-tools")

msgid "These files are defunct. See manual 'Writing R Extensions'."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("These lines will be truncated in the PDF manual.\n", domain = "R-tools")

msgid "These lines will be truncated in the PDF manual."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("This field must contain one or more packages (and no version requirement).",     domain = "R-tools")

msgid "This field must contain one or more packages (and no version requirement)."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("This is the name of a base package.", domain = "R-tools")

msgid "This is the name of a base package."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("This name was used for a base package and is remapped by library().", domain = "R-tools")

msgid "This name was used for a base package and is remapped by library()."
msgstr ""


#: R/Rprof.R: 0
#. R/Rprof.R: gettextf("Total run time: %s seconds.", format(res$sampling.time), domain = "R-tools")

msgid "Total run time: %s seconds."
msgstr ""


#: R/Rprof.R: 0
#. R/Rprof.R: gettext("Total seconds: time spent in function and callees.", domain = "R-tools")

msgid "Total seconds: time spent in function and callees."
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("URL %s was not found", mono(path))

msgid "URL %s was not found"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("URL '%s' was not found", mono(path), domain = "R-tools")

msgid "URL '%s' was not found"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Unable to find GhostScript executable to run checks on size reduction\n",     domain = "R-tools")

msgid "Unable to find GhostScript executable to run checks on size reduction"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Undocumented %s:", tag, domain = "R-tools")

msgid "Undocumented %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Undocumented S4 classes:", domain = "R-tools")

msgid "Undocumented S4 classes:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Undocumented S4 methods:", domain = "R-tools")

msgid "Undocumented S4 methods:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Undocumented arguments in documentation object %s", sQuote(nm), domain = "R-tools")

msgid "Undocumented arguments in documentation object %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Undocumented code objects:", domain = "R-tools")

msgid "Undocumented code objects:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Undocumented data sets:", domain = "R-tools")

msgid "Undocumented data sets:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Unknown encoding", domain = "R-tools")

msgid "Unknown encoding"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Unknown encoding with non-ASCII data", domain = "R-tools")

msgid "Unknown encoding with non-ASCII data"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettext("Unknown encoding with non-ASCII data: converting to ASCII")

msgid "Unknown encoding with non-ASCII data: converting to ASCII"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Unnecessary braces at %s", deparse)
#. R/RdConv2.R: gettextf("Unnecessary braces at %s", deparse)

msgid "Unnecessary braces at %s"
msgstr ""


#: R/Rd2HTML.R: 0
#: R/RdConv2.R: 0
#. R/Rd2HTML.R: gettextf("Unrecognized \\tabular format: %s", table[[1L]][[1L]])
#. R/RdConv2.R: gettextf("Unrecognized \\tabular format: %s", table[[1L]][[1L]])

msgid "Unrecognized \\tabular format: %s"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Unrecognized format: %s", unknown)

msgid "Unrecognized format: %s"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("Unrecognized macro %s", block[[1L]])
#. R/RdConv2.R: gettextf("Unrecognized macro %s", block[[1L]])

msgid "Unrecognized macro %s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: warning("Unrecognized search field: ", names(query)[i], domain = "R-tools")

msgid "Unrecognized search field:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Unsupported engine name %s", sQuote(name))

msgid "Unsupported engine name %s"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettext("Use 'summary()' for more information.", domain = "R-tools")

msgid "Use 'summary()' for more information."
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettext("\nUse 'summary(full = TRUE)' for details.", domain = "R-tools")

msgid "Use 'summary(full = TRUE)' for details."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Using 'Additional_repositories specification' failed with packages:", domain = "R-tools")

msgid "Using 'Additional_repositories specification' failed with packages:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Variables in data frame %s", sQuote(docObj[["name"]]), domain = "R-tools")

msgid "Variables in data frame %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Variables overriding user/site settings:", domain = "R-tools")

msgid "Variables overriding user/site settings:"
msgstr ""


#: R/news.R: 0
#. R/news.R: gettext("Version")

msgid "Version"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Version contains leading zeroes (%s)", y, domain = "R-tools")

msgid "Version contains leading zeroes (%s)"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Version jumps in minor (submitted: %s, existing: %s)", y[[1L]], y[[2L]],     domain = "R-tools")

msgid "Version jumps in minor (submitted: %s, existing: %s)"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Version numbers must be sequences of at least two non-negative integers, separated by single '.' or '-'.",     domain = "R-tools")

msgid "Version numbers must be sequences of at least two non-negative integers, separated by single '.' or '-'."
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignette %s overwrites the following %s output by vignette %s:", sQuote(basename(names(resultsT)[j])),     sQuote(name), sQuote(basename(names(resultsT)[i])), domain = "R-tools")

msgid "Vignette %s overwrites the following %s output by vignette %s:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignette '%s' is non-ASCII but has no declared encoding", name)
#. R/Vignettes.R: gettextf("Vignette '%s' is non-ASCII but has no declared encoding", file)
#. R/Vignettes.R: gettextf("Vignette '%s' is non-ASCII but has no declared encoding", name)

msgid "Vignette '%s' is non-ASCII but has no declared encoding"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("Vignette dependencies (%s entries) must be contained in the DESCRIPTION Depends/Suggests/Imports entries.",     sQuote("\\VignetteDepends{}"), domain = "R-tools")

msgid "Vignette dependencies (%s entries) must be contained in the DESCRIPTION Depends/Suggests/Imports entries."
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignette engine %s is not registered", sQuote(name))

msgid "Vignette engine %s is not registered"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignette engine %s is not registered by any of the packages %s", sQuote(name),     paste(sQuote(package), collapse = ", "))
#. R/Vignettes.R: gettextf("Vignette engine %s is not registered by any of the packages %s", sQuote(name),     paste(sQuote(package), collapse = ", "))

msgid "Vignette engine %s is not registered by any of the packages %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: stop("Vignette engine package was not specified.", call. = FALSE)

msgid "Vignette engine package was not specified."
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignette product %s does not have a known filename extension (%s)", sQuote(file),     paste(sQuote(names(type)), collapse = ", "))

msgid "Vignette product %s does not have a known filename extension (%s)"
msgstr ""


#: R/QC.R: 0
#: R/check.R: 0
#. R/QC.R: gettext("Vignette sources in 'inst/doc' missing from the 'vignettes' directory:",     domain = "R-tools")
#. R/check.R: gettext("Vignette sources in 'inst/doc' missing from the 'vignettes' directory:",     domain = "R-tools")

msgid "Vignette sources in 'inst/doc' missing from the 'vignettes' directory:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Vignette sources in 'inst/doc' with no 'vignettes' directory:", domain = "R-tools")

msgid "Vignette sources in 'inst/doc' with no 'vignettes' directory:"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Vignette sources only in 'inst/doc':", domain = "R-tools")

msgid "Vignette sources only in 'inst/doc':"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("Vignette(s) without any output listed in 'build/vignette.rds'", domain = "R-tools")

msgid "Vignette(s) without any output listed in 'build/vignette.rds'"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("Vignettes and other documentation")

msgid "Vignettes and other documentation"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("Vignettes from package %s", sQuote(pkg))

msgid "Vignettes from package %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettext("Vignettes with missing or empty '\\VignetteIndexEntry':")

msgid "Vignettes with missing or empty '\\VignetteIndexEntry':"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettext("Vignettes:")

msgid "Vignettes:"
msgstr ""


#: R/logging.R: 0
#. R/logging.R: gettext("WARNING", domain = "R-tools")

msgid "WARNING"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("WARNING: Removing directory %s which should only occur in an installed package",     sQuote(d), domain = "R-tools")

msgid "WARNING: Removing directory %s which should only occur in an installed package"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("WARNING: directory %s is empty\n", sQuote(d), domain = "R-tools")

msgid "WARNING: directory %s is empty"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: message("WARNING: malformed 'Depends' field in 'DESCRIPTION'")

msgid "WARNING: malformed 'Depends' field in 'DESCRIPTION'"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: message("WARNING: omitting pointless dependence on 'R' without a version requirement")

msgid "WARNING: omitting pointless dependence on 'R' without a version requirement"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("   WARNING: this package has a configure script\n         It probably needs manual configuration\n",     domain = "R-tools")

msgid "WARNING: this package has a configure script\n         It probably needs manual configuration"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("\nWarning: --install=check... specified without --library\n", domain = "R-tools")

msgid "Warning: --install=check... specified without --library"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("Warning: creation of %s failed", sQuote(Rfile), domain = "R-tools")

msgid "Warning: creation of %s failed"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("Warning: package needs dependence on R (>= 2.10)", domain = "R-tools")
#. R/QC.R: gettext("Warning: package needs dependence on R (>= 2.10)", domain = "R-tools")

msgid "Warning: package needs dependence on R (>= 2.10)"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("Warning: unknown option ", sQuote(a))

msgid "Warning: unknown option"
msgstr ""


#: R/Rd2pdf.R: 0
#: R/build.R: 0
#: R/check.R: 0
#: R/install.R: 0
#. R/Rd2pdf.R: gettextf("Warning: unknown option %s", sQuote(a))
#. R/build.R: gettextf("Warning: unknown option %s", sQuote(a))
#. R/check.R: gettextf("Warning: unknown option %s", sQuote(a))
#. R/install.R: gettextf("Warning: unknown option %s", sQuote(a))

msgid "Warning: unknown option %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("When running vignette %s:", sQuote(vig_name), domain = "R-tools")
#. R/Vignettes.R: gettextf("When running vignette %s:", sQuote(vig_name), domain = "R-tools")

msgid "When running vignette %s:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("When sourcing %s:", sQuote(output), domain = "R-tools")

msgid "When sourcing %s:"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("When tangling %s:", sQuote(file), domain = "R-tools")

msgid "When tangling %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("[TRUNCATED]", domain = "R-tools")

msgid "[TRUNCATED]"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("\\arguments, description of item %s", sQuote(tab[ind, 1L]), domain = "R-tools")

msgid "\\arguments, description of item %s"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("\\name must only contain simple text")

msgid "\\name must only contain simple text"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("\\name should not contain !, | or @")

msgid "\\name should not contain !, | or @"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("\\synopsis was removed in R 3.1.0")

msgid "\\synopsis was removed in R 3.1.0"
msgstr ""


#: R/Rd2HTML.R: 0
#: R/Rd2latex.R: 0
#: R/Rd2txt.R: 0
#: R/RdConv2.R: 0
#. R/Rd2HTML.R: gettext("\\tabular format must be simple text")
#. R/Rd2latex.R: gettext("\\tabular format must be simple text")
#. R/Rd2txt.R: gettext("\\tabular format must be simple text", domain = "R-tools")
#. R/RdConv2.R: gettext("\\tabular format must be simple text")

msgid "\\tabular format must be simple text"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettext("_not_ indexing 'base' package", domain = "R-tools")

msgid "_not_ indexing 'base' package"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("a directory", domain = "R-tools")

msgid "a directory"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("a file", domain = "R-tools")

msgid "a file"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("a zip file", domain = "R-tools")

msgid "a zip file"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("about to run command %s", sQuote(paste("R CMD SHLIB", args, collapse = " ")))
#. R/install.R: gettextf("about to run command %s", sQuote(cmd))
#. R/install.R: gettextf("about to run command %s", sQuote(cmd))

msgid "about to run command %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("adding MD5 file", domain = "R-tools")

msgid "adding MD5 file"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("all packages should have a 'NAMESPACE' file")

msgid "all packages should have a 'NAMESPACE' file"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  apparently PKG_LIBS is missing $(FLIBS) in %s\n", sQuote(f), domain = "R-tools")

msgid "apparently PKG_LIBS is missing $(FLIBS) in %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  apparently using $(LAPACK_LIBS) without $(BLAS_LIBS) in %s\n", sQuote(f),     domain = "R-tools")

msgid "apparently using $(LAPACK_LIBS) without $(BLAS_LIBS) in %s"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: gettext("argument for %s was not found", sQuote(c(a)))

msgid "argument for %s was not found"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: gettextf("assertCondition: caught %s", paste(dQuote(found), collapse = ", "))

msgid "assertCondition: caught %s"
msgstr ""


#: R/assertCondition.R: 0
#. R/assertCondition.R: message("assertConditon: Successfully caught a condition\n")

msgid "assertConditon: Successfully caught a condition"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("attempting to select less than one element")

msgid "attempting to select less than one element"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("attempting to select more than one element")

msgid "attempting to select more than one element"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("backing up earlier installation")

msgid "backing up earlier installation"
msgstr ""


#: R/pkgDepends.R: 0
#. R/pkgDepends.R: stop("bad operand")

msgid "bad operand"
msgstr ""


#: R/bibstyle.R: 0
#. R/bibstyle.R: gettextf("bibtype %s is not implemented", sQuote(attr(paper, "bibtype")))

msgid "bibtype %s is not implemented"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("building %s", sQuote(filename))

msgid "building %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: stop("building a fake installation is disallowed")

msgid "building a fake installation is disallowed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("building package indices")

msgid "building package indices"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("building the PDF package manual", domain = "R-tools")

msgid "building the PDF package manual"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("byte-compile and prepare package for lazy loading")

msgid "byte-compile and prepare package for lazy loading"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("cannot change to directory %s", sQuote(pkg), domain = "R-tools")

msgid "cannot change to directory %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: warning("cannot check R code installed as image")

msgid "cannot check R code installed as image"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("cannot coerce %s to logical", sQuote(val))

msgid "cannot coerce %s to logical"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("cannot copy file %s to directory %s", sQuote(output), sQuote(outVignetteDir))

msgid "cannot copy file %s to directory %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("cannot create %s", sQuote(dir), domain = "R-tools")

msgid "cannot create %s"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("cannot create directory %s", sQuote(buildDir))

msgid "cannot create directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: stop("cannot create temporary directory")

msgid "cannot create temporary directory"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: stop("cannot deal with Rd objects with missing/empty names")

msgid "cannot deal with Rd objects with missing/empty names"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot find 'startxref' keyword")

msgid "cannot find 'startxref' keyword"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot find 'xref' table")

msgid "cannot find 'xref' table"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("cannot find object header at 'xrefed' position %d", pos)

msgid "cannot find object header at 'xrefed' position %d"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("cannot link from %s", sQuote(from))

msgid "cannot link from %s"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outMetaDir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(meta_dir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outDir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outCodeDir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outMetaDir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outVignetteDir))
#. R/admin.R: gettextf("cannot open directory %s", sQuote(outMetaDir))

msgid "cannot open directory %s"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read 'xref' table")

msgid "cannot read 'xref' table"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read array object")

msgid "cannot read array object"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read dictionary object")

msgid "cannot read dictionary object"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read hexadecimal string object")

msgid "cannot read hexadecimal string object"
msgstr ""


#: R/index.R: 0
#. R/index.R: gettextf("cannot read index information in file '%s'", INDEX)
#. R/index.R: gettextf("cannot read index information in file '%s'", file.path(demoDir, "00Index"))

msgid "cannot read index information in file '%s'"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read indirect reference object")

msgid "cannot read indirect reference object"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read literal string object")

msgid "cannot read literal string object"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read name object")

msgid "cannot read name object"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read stream data")
#. R/pdftools.R: stop("cannot read stream data")

msgid "cannot read stream data"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("cannot read stream object")
#. R/pdftools.R: stop("cannot read stream object")
#. R/pdftools.R: stop("cannot read stream object")

msgid "cannot read stream object"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("cannot source package code", "\n", conditionMessage(e), call. = FALSE)

msgid "cannot source package code"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: warning("cannot turn off locale-specific sorting via LC_COLLATE")

msgid "cannot turn off locale-specific sorting via LC_COLLATE"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("cannot unpack %s", sQuote(pkg), domain = "R-tools")

msgid "cannot unpack %s"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettext("cannot write to build dir", domain = "R-tools")

msgid "cannot write to build dir"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking 'build' directory ...", domain = "R-tools")

msgid "checking 'build' directory ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking CRAN incoming feasibility ...", domain = "R-tools")

msgid "checking CRAN incoming feasibility ..."
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#. R/build.R: gettext("checking DESCRIPTION meta-information ...", domain = "R-tools")
#. R/check.R: gettext("checking DESCRIPTION meta-information ...", domain = "R-tools")

msgid "checking DESCRIPTION meta-information ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking PDF version of manual ...", domain = "R-tools")

msgid "checking PDF version of manual ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking PDF version of manual without hyperrefs or index ...", domain = "R-tools")

msgid "checking PDF version of manual without hyperrefs or index ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking R code for possible problems ...", domain = "R-tools")

msgid "checking R code for possible problems ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking R files for non-ASCII characters ...", domain = "R-tools")

msgid "checking R files for non-ASCII characters ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking R files for syntax errors ...", domain = "R-tools")

msgid "checking R files for syntax errors ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking R/sysdata.rda ...", domain = "R-tools")

msgid "checking R/sysdata.rda ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking Rd \\usage sections ...", domain = "R-tools")

msgid "checking Rd \\usage sections ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking Rd contents ...", domain = "R-tools")

msgid "checking Rd contents ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking Rd cross-references ...", domain = "R-tools")

msgid "checking Rd cross-references ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking Rd files ...", domain = "R-tools")

msgid "checking Rd files ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking Rd metadata ..", domain = "R-tools")

msgid "checking Rd metadata .."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking S3 generic/method consistency ...", domain = "R-tools")

msgid "checking S3 generic/method consistency ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking a package with encoding %s in an ASCII locale", sQuote(e), domain = "R-tools")

msgid "checking a package with encoding %s in an ASCII locale"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking compilation flags in Makevars", domain = "R-tools")

msgid "checking compilation flags in Makevars"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking compiled code ...", domain = "R-tools")

msgid "checking compiled code ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking contents of 'data' directory ...", domain = "R-tools")

msgid "checking contents of 'data' directory ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking data for ASCII and uncompressed saves ...", domain = "R-tools")

msgid "checking data for ASCII and uncompressed saves ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking data for non-ASCII characters ...", domain = "R-tools")

msgid "checking data for non-ASCII characters ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking dependencies in R code ...", domain = "R-tools")

msgid "checking dependencies in R code ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking differences from %s to %s ...", sQuote(basename(exout)), sQuote(basename(exsave)),     domain = "R-tools")

msgid "checking differences from %s to %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking examples ...", domain = "R-tools")
#. R/check.R: gettext("checking examples ...", domain = "R-tools")

msgid "checking examples ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking extension type ...", domain = "R-tools")

msgid "checking extension type ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking files in 'vignettes' ...", domain = "R-tools")

msgid "checking files in 'vignettes' ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for .dll and .exe files ...", domain = "R-tools")

msgid "checking for .dll and .exe files ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for GNU extensions in Makefiles ...", domain = "R-tools")

msgid "checking for GNU extensions in Makefiles ..."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("checking for LF line-endings in source and make files", domain = "R-tools")

msgid "checking for LF line-endings in source and make files"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for code which exercises the package ...", domain = "R-tools")

msgid "checking for code which exercises the package ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for code/documentation mismatches ...", domain = "R-tools")

msgid "checking for code/documentation mismatches ..."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("checking for empty or unneeded directories", domain = "R-tools")

msgid "checking for empty or unneeded directories"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for executable files ...", domain = "R-tools")

msgid "checking for executable files ..."
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#. R/build.R: gettextf("checking for file %s ...", sQuote(file.path(pkg, "DESCRIPTION")), domain = "R-tools")
#. R/check.R: gettextf("checking for file %s ...", sQuote(file.path(pkgname0, "DESCRIPTION")),     domain = "R-tools")

msgid "checking for file %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for hidden files and directories ...", domain = "R-tools")

msgid "checking for hidden files and directories ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for left-over files ...", domain = "R-tools")

msgid "checking for left-over files ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for left-overs from vignette generation ...", domain = "R-tools")

msgid "checking for left-overs from vignette generation ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for missing documentation entries ...", domain = "R-tools")

msgid "checking for missing documentation entries ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for old-style vignette sources ...", domain = "R-tools")

msgid "checking for old-style vignette sources ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for portable file names ...", domain = "R-tools")

msgid "checking for portable file names ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ...", domain = "R-tools")

msgid "checking for portable use of $(BLAS_LIBS) and $(LAPACK_LIBS) ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for sufficient/correct file permissions ...", domain = "R-tools")

msgid "checking for sufficient/correct file permissions ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking for unstated dependencies in %s directory ...", sQuote(test_dir),     domain = "R-tools")

msgid "checking for unstated dependencies in %s directory ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for unstated dependencies in examples ...", domain = "R-tools")

msgid "checking for unstated dependencies in examples ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking for unstated dependencies in vignettes ...", domain = "R-tools")

msgid "checking for unstated dependencies in vignettes ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking foreign function calls ...", domain = "R-tools")

msgid "checking foreign function calls ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking if there is a namespace ...", domain = "R-tools")

msgid "checking if there is a namespace ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking if this is a source package ...", domain = "R-tools")

msgid "checking if this is a source package ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking index information ...", domain = "R-tools")

msgid "checking index information ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking installed files from 'inst/doc' ...", domain = "R-tools")

msgid "checking installed files from 'inst/doc' ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking installed package size ...", domain = "R-tools")

msgid "checking installed package size ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking line endings in C/C++/Fortran sources/headers ...", domain = "R-tools")

msgid "checking line endings in C/C++/Fortran sources/headers ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking line endings in Makefiles ...", domain = "R-tools")

msgid "checking line endings in Makefiles ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking loading without being on the library search path ...", domain = "R-tools")

msgid "checking loading without being on the library search path ..."
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: sprintf("checking package %s ...", sQuote(pfile))

msgid "checking package %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking package dependencies ...", domain = "R-tools")

msgid "checking package dependencies ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking package directory ...", domain = "R-tools")

msgid "checking package directory ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking package namespace information ...", domain = "R-tools")

msgid "checking package namespace information ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking package subdirectories ...", domain = "R-tools")

msgid "checking package subdirectories ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking package vignettes in %s ...", sQuote("inst/doc"), domain = "R-tools")

msgid "checking package vignettes in %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking re-building of vignette outputs ...", domain = "R-tools")
#. R/check.R: gettext("checking re-building of vignette outputs ...", domain = "R-tools")
#. R/check.R: gettext("checking re-building of vignette outputs ...", domain = "R-tools")

msgid "checking re-building of vignette outputs ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking replacement functions ...", domain = "R-tools")

msgid "checking replacement functions ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking running R code from vignettes ...", domain = "R-tools")
#. R/check.R: gettext("checking running R code from vignettes ...", domain = "R-tools")

msgid "checking running R code from vignettes ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking sizes of PDF files under 'inst/doc' ...", domain = "R-tools")

msgid "checking sizes of PDF files under 'inst/doc' ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking tests ...", domain = "R-tools")

msgid "checking tests ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking tests in %s directory ...", sQuote(test_dir), domain = "R-tools")

msgid "checking tests in %s directory ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking top-level files ...", domain = "R-tools")

msgid "checking top-level files ..."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("checking vignette meta-information ...", domain = "R-tools")

msgid "checking vignette meta-information ..."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("checking whether %s is up-to-date ...", sQuote(oldindex), domain = "R-tools")

msgid "checking whether %s is up-to-date ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("checking whether package %s can be installed ...", sQuote(desc["Package"]),     domain = "R-tools")

msgid "checking whether package %s can be installed ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking whether the namespace can be loaded with stated dependencies ...",     domain = "R-tools")

msgid "checking whether the namespace can be loaded with stated dependencies ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking whether the namespace can be unloaded cleanly ...", domain = "R-tools")

msgid "checking whether the namespace can be unloaded cleanly ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking whether the package can be loaded ...", domain = "R-tools")

msgid "checking whether the package can be loaded ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking whether the package can be loaded with stated dependencies ...",     domain = "R-tools")

msgid "checking whether the package can be loaded with stated dependencies ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("checking whether the package can be unloaded cleanly ...", domain = "R-tools")

msgid "checking whether the package can be unloaded cleanly ..."
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("cleaning 'src' directory", domain = "R-tools")

msgid "cleaning 'src' directory"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("  compacted %s from %s to %s", sQuote(basename(row.names(y))), z[, 1L],     z[, 2L], domain = "R-tools")

msgid "compacted %s from %s to %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("compacting vignettes and other PDF files", domain = "R-tools")

msgid "compacting vignettes and other PDF files"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote(outfile), sQuote(basename(savefile)))
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote(outfile), sQuote(basename(prevfile)))
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote(outfile), sQuote(savefile))
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote(outfile), sQuote(savefile))
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote("reg-plot.pdf"), sQuote("reg-plot.pdf.save"))
#. R/testing.R: gettextf("  comparing %s to %s ...", sQuote("reg-plot-latin1.pdf"), sQuote("reg-plot-latin1.pdf.save"))

msgid "comparing %s to %s ..."
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("compiling TeX file %s failed with message:\n%s", sQuote(output), conditionMessage(e))

msgid "compiling TeX file %s failed with message:\n%s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("computing Rd index failed", domain = "R-tools")

msgid "computing Rd index failed"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettext("condition must be plain text")

msgid "condition must be plain text"
msgstr ""


#: R/check.R: 0
#. R/check.R: warning("configuration files are not supported as from R 2.12.0")

msgid "configuration files are not supported as from R 2.12.0"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("configure command: %s", sQuote(cmd))

msgid "configure command: %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("  converting help for package %s", sQuote(pkg), domain = "R-tools")

msgid "converting help for package %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("copying figures")

msgid "copying figures"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("copying to build directory failed", domain = "R-tools")
#. R/build.R: gettext("copying to build directory failed", domain = "R-tools")

msgid "copying to build directory failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("created lock directory %s", sQuote(lockdir))

msgid "created lock directory %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("creating default NAMESPACE file", domain = "R-tools")

msgid "creating default NAMESPACE file"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("creating file %s", sQuote(f))

msgid "creating file %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("creating new %s", sQuote(oldindex), domain = "R-tools")

msgid "creating new %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("creating tarball")

msgid "creating tarball"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("creating vignettes ...", domain = "R-tools")

msgid "creating vignettes ..."
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("creation of %s failed", sQuote(Rfile))
#. R/testing.R: gettextf("creation of %s failed", sQuote(f))

msgid "creation of %s failed"
msgstr ""


#: R/Rd2pdf.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/admin.R: 0
#: R/admin.R: 0
#: R/build.R: 0
#: R/check.R: 0
#: R/install.R: 0
#: R/md5.R: 0
#: R/md5.R: 0
#: R/packages.R: 0
#. R/Rd2pdf.R: stop("current working directory cannot be ascertained")
#. R/Vignettes.R: stop("current working directory cannot be ascertained")
#. R/Vignettes.R: stop("current working directory cannot be ascertained")
#. R/Vignettes.R: stop("current working directory cannot be ascertained")
#. R/admin.R: stop("current working directory cannot be ascertained")
#. R/admin.R: stop("current working directory cannot be ascertained")
#. R/build.R: stop("current working directory cannot be ascertained", domain = "R-tools")
#. R/check.R: stop("current working directory cannot be ascertained")
#. R/install.R: stop("current working directory cannot be ascertained")
#. R/md5.R: stop("current working directory cannot be ascertained")
#. R/md5.R: stop("current working directory cannot be ascertained")
#. R/packages.R: stop("current working directory cannot be ascertained")

msgid "current working directory cannot be ascertained"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("currently only Rd syntax is supported")

msgid "currently only Rd syntax is supported"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("declared S3 method %s not found", sQuote(m))

msgid "declared S3 method %s not found"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("dev.new() is the preferred way to open a new device, in the unlikely event one is needed.",     domain = "R-tools")

msgid "dev.new() is the preferred way to open a new device, in the unlikely event one is needed."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("differences from %s", sQuote(basename(savefile)), domain = "R-tools")

msgid "differences from %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain R code", sQuote(dir))

msgid "directory %s does not contain R code"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("directory %s does not contain Rd objects", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain Rd objects", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain Rd objects", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain Rd objects", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not contain Rd objects", sQuote(dir))

msgid "directory %s does not contain Rd objects"
msgstr ""


#: R/QC.R: 0
#: R/Rd.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/Vignettes.R: 0
#: R/admin.R: 0
#: R/admin.R: 0
#: R/admin.R: 0
#: R/index.R: 0
#: R/index.R: 0
#: R/index.R: 0
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/QC.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/Rd.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/Vignettes.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/Vignettes.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/Vignettes.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/Vignettes.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/admin.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/admin.R: gettextf("directory %s does not exist", sQuote(dir))
#. R/admin.R: gettextf("directory %s does not exist", sQuote(outDir))
#. R/index.R: gettextf("directory %s does not exist", sQuote(dataDir))
#. R/index.R: gettextf("directory %s does not exist", sQuote(demoDir))
#. R/index.R: gettextf("directory %s does not exist", sQuote(demoDir))

msgid "directory %s does not exist"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("directory %s was not found\n", sQuote(test_dir), domain = "R-tools")

msgid "directory %s was not found"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("docType %s is unrecognized", sQuote(docTypes[i]))

msgid "docType %s is unrecognized"
msgstr ""


#: R/dynamicHelp.R: 0
#: R/install.R: 0
#: R/install.R: 0
#: R/packages.R: 0
#: R/packages.R: 0
#. R/dynamicHelp.R: message(" done")
#. R/install.R: message(" done")
#. R/install.R: message(" done", domain = "R-tools")
#. R/packages.R: message("done")
#. R/packages.R: message("done")

msgid "done"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: sprintf("downloading file %s ... ", sQuote(rfiles[i]))

msgid "downloading file %s ..."
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: message("downloading reverse dependencies ...")

msgid "downloading reverse dependencies ..."
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("\nduplicated files in %s field:", sQuote(collationField))

msgid "duplicated files in %s field:"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("empty 'data' directory", call. = FALSE)

msgid "empty 'data' directory"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("entry %d (%s): missing required field(s) %s", pos, db$Entry[pos], paste(sQuote(bad[pos]),     collapse = ", "), domain = "R-tools")

msgid "entry %d (%s): missing required field(s) %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("entry %d: invalid type %s", pos, sQuote(entries), domain = "R-tools")

msgid "entry %d: invalid type %s"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: gettextf("entry for %s=%s already defined to be %s", codepoint, paste(index[1L:i],     collapse = ", "), entry)

msgid "entry for %s=%s already defined to be %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("error reading file %s", sQuote(fd))

msgid "error reading file %s"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: stop("exactly one Rd file must be specified", call. = FALSE)

msgid "exactly one Rd file must be specified"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("excluding invalid files", domain = "R-tools")

msgid "excluding invalid files"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("expanding %s", sQuote(format(kid)))

msgid "expanding %s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("  expect failure or some differences if not in a Latin or UTF-8 locale",     domain = "R-tools")

msgid "expect failure or some differences if not in a Latin or UTF-8 locale"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext(" failed\n", domain = "R-tools")

msgid "failed"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext(" failed to complete the test", domain = "R-tools")

msgid "failed to complete the test"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: warning("failed to start the httpd server", immediate. = TRUE)

msgid "failed to start the httpd server"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("file %s cannot be opened", sQuote(file))

msgid "file %s cannot be opened"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("file %s contains a blank line", sQuote(dfile))

msgid "file %s contains a blank line"
msgstr ""


#: R/QC.R: 0
#: R/utils.R: 0
#: R/utils.R: 0
#. R/QC.R: gettextf("file %s does not exist", sQuote(file))
#. R/QC.R: gettextf("file %s does not exist", sQuote(file))
#. R/utils.R: gettextf("file %s does not exist", sQuote(x))
#. R/utils.R: gettextf("file %s does not exist", sQuote(dfile))

msgid "file %s does not exist"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("file %s exists; please remove it first", sQuote(output), domain = "R-tools")

msgid "file %s exists; please remove it first"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("file %s is not in valid DCF format", sQuote(dfile))

msgid "file %s is not in valid DCF format"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("file %s lacks a header: skipping", sQuote(f), domain = "R-tools")

msgid "file %s lacks a header: skipping"
msgstr ""


#: R/Vignettes.R: 0
#: R/testing.R: 0
#. R/Vignettes.R: gettextf("file %s was not found", sQuote(file))
#. R/Vignettes.R: gettextf("file %s was not found", sQuote(vignette))
#. R/testing.R: gettextf("file %s was not found", sQuote(f))

msgid "file %s was not found"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  file %s will not be installed: please remove it\n", paste(sQuote(miss[f]),     collapse = ", "), domain = "R-tools")

msgid "file %s will not be installed: please remove it"
msgstr ""


#: R/parseRd.R: 0
#. R/parseRd.R: gettextf("file %s: multiple \\encoding lines, using the first", sQuote(file0))

msgid "file %s: multiple \\encoding lines, using the first"
msgstr ""


#: R/parseRd.R: 0
#. R/parseRd.R: gettextf("file %s: non-ASCII input and no declared encoding", sQuote(file0))

msgid "file %s: non-ASCII input and no declared encoding"
msgstr ""


#: R/build.R: 0
#: R/check.R: 0
#. R/build.R: gettext("file EXISTS but is not of correct format", domain = "R-tools")
#. R/check.R: gettext("file EXISTS but is not of correct format", domain = "R-tools")

msgid "file EXISTS but is not of correct format"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettextf("file link %s in package %s does not exist and so has been treated as a topic",     sQuote(parts$targetfile), sQuote(parts$pkg))

msgid "file link %s in package %s does not exist and so has been treated as a topic"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettext("files differ in number of lines", domain = "R-tools")

msgid "files differ in number of lines"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettext("files differ in number of lines:", domain = "R-tools")

msgid "files differ in number of lines:"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("\nfiles in %s field missing from %s:", sQuote(collationField), sQuote(codeDir))

msgid "files in %s field missing from %s:"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("\nfiles in %s missing from %s field:", sQuote(codeDir), sQuote(collationField))

msgid "files in %s missing from %s field:"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("    finding HTML links ...", appendLF = FALSE, domain = "R-tools")

msgid "finding HTML links ..."
msgstr ""


#: R/install.R: 0
#. R/install.R: message("\n    finding level-2 HTML links ...", appendLF = FALSE, domain = "R-tools")

msgid "finding level-2 HTML links ..."
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("found T/F in %s", paste(deparse(xfname[[i]]), collapse = ""), domain = "R-tools")

msgid "found T/F in %s"
msgstr ""


#: R/parseRd.R: 0
#. R/parseRd.R: gettextf("found encoding %s", sQuote(enc))

msgid "found encoding %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("generating debug symbols (%s)", "dSYM")

msgid "generating debug symbols (%s)"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: warning("httpd server disabled by R_DISABLE_HTTPD", immediate. = TRUE)

msgid "httpd server disabled by R_DISABLE_HTTPD"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("install for architecture %s", arch)
#. R/install.R: gettextf("install for architecture %s", arch)

msgid "install for architecture %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("install log %s does not exist", sQuote(thislog), domain = "R-tools")

msgid "install log %s does not exist"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  installed size is %4.1fMb\n", total/1024, domain = "R-tools")

msgid "installed size is %4.1fMb"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing *Frontend* package %s ...", sQuote(pkg_name))

msgid "installing *Frontend* package %s ..."
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing *binary* package %s ...", sQuote(pkg))

msgid "installing *binary* package %s ..."
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing *source* package %s ...", sQuote(pkg_name))

msgid "installing *source* package %s ..."
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: gettext("installing dependencies %s", domain = "R-tools")

msgid "installing dependencies %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("installing help indices")

msgid "installing help indices"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("installing the package to build vignettes", domain = "R-tools")

msgid "installing the package to build vignettes"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("installing the package to process help pages", domain = "R-tools")

msgid "installing the package to process help pages"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing to directory %s", sQuote(dest))

msgid "installing to directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing to library %s", sQuote(lib))

msgid "installing to library %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("installing via 'install.libs.R' to installation directory %s", sQuote(instdir))

msgid "installing via 'install.libs.R' to installation directory %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("installing vignettes")

msgid "installing vignettes"
msgstr ""


#: R/parseLatex.R: 0
#. R/parseLatex.R: stop("internal error", domain = "R-tools")

msgid "internal error"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: stop("invalid index in object stream lookup")

msgid "invalid index in object stream lookup"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("invalid package %s", sQuote(pkg))

msgid "invalid package %s"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("invalid package layout")

msgid "invalid package layout"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("invalid value for '%s' : %s", opt, oldval)

msgid "invalid value for '%s' : %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("invalid value for '--compact-vignettes', assuming %s", "\"qpdf\"")

msgid "invalid value for '--compact-vignettes', assuming %s"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("invalid value for 'compress': should be FALSE, TRUE, 2 or 3")

msgid "invalid value for 'compress': should be FALSE, TRUE, 2 or 3"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: stop("loading package failed", call. = FALSE)

msgid "loading package failed"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: sprintf("looking at %s", sQuote(deparse(intToUtf8(bytes))))

msgid "looking at %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("looking to see if a 'data/datalist' file should be added", domain = "R-tools")

msgid "looking to see if a 'data/datalist' file should be added"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("looks like %s is a base package", sQuote(pkgname0), domain = "R-tools")

msgid "looks like %s is a base package"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("looks like %s is a package bundle -- they are defunct", sQuote(pkgname0),     domain = "R-tools")

msgid "looks like %s is a package bundle -- they are defunct"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("looks like a binary bundle", domain = "R-tools")

msgid "looks like a binary bundle"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("make cmd is\n  %s\n\nmake would use:\n", cmd, domain = "R-tools")

msgid "make cmd is\n  %s\n\nmake would use:"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("mismatch in generation numbers (given: %d, found: %d)", gen, hdr["gen"])

msgid "mismatch in generation numbers (given: %d, found: %d)"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("mismatch in object numbers (given: %d, found: %d)", num, hdr["num"])

msgid "mismatch in object numbers (given: %d, found: %d)"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettextf("missing file link %s", sQuote(parts$targetfile))

msgid "missing file link %s"
msgstr ""


#: R/Rd2HTML.R: 0
#. R/Rd2HTML.R: gettextf("missing link %s", sQuote(topic))

msgid "missing link %s"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: gettextf("missing/empty %s field in '%s'", "\\name", description, domain = "R-tools")
#. R/Rd.R: gettextf("missing/empty %s field in '%s'", "\\title", description, domain = "R-tools")

msgid "missing/empty %s field in '%s'"
msgstr ""


#: R/Rd2ex.R: 0
#. R/Rd2ex.R: warning("more than one \\examples section, using the first")

msgid "more than one \\examples section, using the first"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("moving datasets to lazyload DB")

msgid "moving datasets to lazyload DB"
msgstr ""


#: R/RdConv2.R: 0
#. R/RdConv2.R: gettextf("multiple sections named '%s' are not allowed", tag)

msgid "multiple sections named '%s' are not allowed"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("namespace must not be already loaded")

msgid "namespace must not be already loaded"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: message("neither code nor data objects found")

msgid "neither code nor data objects found"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: stop("no 'type' specified", call. = FALSE)

msgid "no 'type' specified"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("no DLL was created")

msgid "no DLL was created"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: stop("no Rd sections specified")

msgid "no Rd sections specified"
msgstr ""


#: R/Rd2txt.R: 0
#. R/Rd2txt.R: gettextf("no comma in argument list following %s", blocktag)

msgid "no comma in argument list following %s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("no examples found for package %s", sQuote(pkg))

msgid "no examples found for package %s"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: message("no inputs")

msgid "no inputs"
msgstr ""


#: R/checktools.R: 0
#. R/checktools.R: message("no packages to check")

msgid "no packages to check"
msgstr ""


#: R/Rd2txt.R: 0
#. R/Rd2txt.R: gettextf("no parenthesis following %s", blocktag)

msgid "no parenthesis following %s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("no parsed files found")

msgid "no parsed files found"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: stop("no running server to stop")

msgid "no running server to stop"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("no source files found", call. = FALSE)

msgid "no source files found"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("no validly-named files in the %s directory", sQuote("latex"))

msgid "no validly-named files in the %s directory"
msgstr ""


#: R/citation.R: 0
#. R/citation.R: stop("non-ASCII input in a 'CITATION' file without a declared encoding")

msgid "non-ASCII input in a 'CITATION' file without a declared encoding"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: gettextf("not installing file %s", sQuote(f))
#. R/translations.R: gettextf("not installing file %s", sQuote(f))

msgid "not installing file %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("only one architecture so ignoring '--merge-multiarch'", domain = "R-tools")

msgid "only one architecture so ignoring '--merge-multiarch'"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("package %s %s was found, but %s %s is required by %s", sQuote(p), current,     z$op, target, sQuote(pkgname))

msgid "package %s %s was found, but %s %s is required by %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("package %s exists but was not installed under R >= 2.10.0 so xrefs cannot be checked",     sQuote(pkg))

msgid "package %s exists but was not installed under R >= 2.10.0 so xrefs cannot be checked"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("package %s successfully unpacked and MD5 sums checked", sQuote(pkg_name))

msgid "package %s successfully unpacked and MD5 sums checked"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("package %s was already a binary package and will not be rebuilt", sQuote(pkg))

msgid "package %s was already a binary package and will not be rebuilt"
msgstr ""


#: R/pkgDepends.R: 0
#. R/pkgDepends.R: gettextf("package '%s' was not found", pkg)

msgid "package '%s' was not found"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettext("package 'methods' is used but not declared", domain = "R-tools")

msgid "package 'methods' is used but not declared"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: warning("package contains no R code")

msgid "package contains no R code"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("package directory %s does not exist", sQuote(pkg))

msgid "package directory %s does not exist"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("package encoding: %s", encoding, domain = "R-tools")

msgid "package encoding: %s"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: stop("package must be loaded", domain = "R-tools")

msgid "package must be loaded"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("package name %s seems invalid; using directory name %s instead", sQuote(package_name),     sQuote(dir_name))

msgid "package name %s seems invalid; using directory name %s instead"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: warning("package seems to be using lazy loading already")

msgid "package seems to be using lazy loading already"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: warning("package seems to be using lazy loading for data already")

msgid "package seems to be using lazy loading for data already"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("packaged installation of %s as %s", sQuote(pkg_name), sQuote(paste0(filename,     ".gz")))

msgid "packaged installation of %s as %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("packaged installation of package %s as file %s", sQuote(pkg_name), filename)

msgid "packaged installation of package %s as file %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("packaging into %s failed", sQuote(filename), domain = "R-tools")

msgid "packaging into %s failed"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("packaging into .tar.gz failed", domain = "R-tools")

msgid "packaging into .tar.gz failed"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("parse error in examples from file %s:\n", sQuote(file), conditionMessage(e))

msgid "parse error in examples from file %s:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("parse error in file %s:", sQuote(file))
#. R/QC.R: gettextf("parse error in file %s:\n", sQuote(file), .massage_file_parse_error_message(conditionMessage(e)))
#. R/QC.R: gettextf("parse error in file %s:", sQuote(file))
#. R/QC.R: gettextf("parse error in file %s:", sQuote(f))
#. R/QC.R: gettextf("parse error in file %s:", sQuote(summary(files)$description))

msgid "parse error in file %s:"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettextf("parsing file %s", sQuote(f))
#. R/xgettext.R: gettextf("parsing file %s", sQuote(f))

msgid "parsing file %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("preparing %s:", sQuote(pkgname))

msgid "preparing %s:"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("preparing package for lazy loading")

msgid "preparing package for lazy loading"
msgstr ""


#: R/pdftools.R: 0
#: R/urltools.R: 0
#: R/urltools.R: 0
#. R/pdftools.R: gettextf("processing %s", sQuote(paste(names(entry), entry, collapse = " ")))
#. R/urltools.R: gettextf("processing %s", p)
#. R/urltools.R: sprintf("processing %s", u)

msgid "processing %s"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("processing directory %s", sQuote(basename(dir)))

msgid "processing directory %s"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("processing file %s", sQuote(basename(file)))

msgid "processing file %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("processing package %s", sQuote(pkg))

msgid "processing package %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("processing vignette %s failed with diagnostics:", sQuote(file))

msgid "processing vignette %s failed with diagnostics:"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("re-saving .R files as .rda", domain = "R-tools")

msgid "re-saving .R files as .rda"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("re-saving image files", domain = "R-tools")
#. R/build.R: gettext("re-saving image files", domain = "R-tools")

msgid "re-saving image files"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("re-saving sysdata.rda", domain = "R-tools")

msgid "re-saving sysdata.rda"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("re-saving tabular files", domain = "R-tools")

msgid "re-saving tabular files"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("removing %s as '--force' was given", sQuote(oldindex), domain = "R-tools")

msgid "removing %s as '--force' was given"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("removing package directory %s", sQuote(pkgdir))

msgid "removing package directory %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("renaming 'inst/doc/makefile' to 'inst/doc/Makefile'", domain = "R-tools")

msgid "renaming 'inst/doc/makefile' to 'inst/doc/Makefile'"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("resaving rda files")

msgid "resaving rda files"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettextf("restoring previous package directory %s", sQuote(pkgdir))

msgid "restoring previous package directory %s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: stop("  results differ from reference results")

msgid "results differ from reference results"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("running %s on vignette %s failed with message:\n%s", engine[["name"]],     sQuote(file), conditionMessage(e))

msgid "running %s on vignette %s failed with message:\n%s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("running '.check_package_description()' failed", domain = "R-tools")

msgid "running '.check_package_description()' failed"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("running 'cleanup'", domain = "R-tools")

msgid "running 'cleanup'"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("running 'cleanup.win'", domain = "R-tools")

msgid "running 'cleanup.win'"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: stop("running 'make' failed")

msgid "running 'make' failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: stop("running 'msgconv' failed", domain = "R-tools")

msgid "running 'msgconv' failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: gettextf("running 'msgfmt' on file %s failed", basename(f))
#. R/translations.R: gettextf("running 'msgfmt' on file %s failed", basename(f))
#. R/translations.R: sprintf("running 'msgfmt' on file %s failed", basename(f))
#. R/translations.R: sprintf("running 'msgfmt' on file %s failed", basename(f))
#. R/translations.R: sprintf("running 'msgfmt' on file %s failed", basename(f))

msgid "running 'msgfmt' on file %s failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: stop("running 'msginit' failed", domain = "R-tools")

msgid "running 'msginit' failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: warning("running 'msgmerge' failed", domain = "R-tools")

msgid "running 'msgmerge' failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: gettextf("running 'msgmerge' on file %s failed", sQuote(f))
#. R/translations.R: gettextf("running 'msgmerge' on file %s failed", sQuote(f))

msgid "running 'msgmerge' on file %s failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("  running 'src/Makefile.win' ...", domain = "R-tools")

msgid "running 'src/Makefile.win' ..."
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("running 'texi2dvi' on file %s failed", sQuote(file))

msgid "running 'texi2dvi' on file %s failed"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: stop("running 'xgettext' failed", domain = "R-tools")

msgid "running 'xgettext' failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("running 'zip' failed", domain = "R-tools")

msgid "running 'zip' failed"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("  running code in %s", sQuote(f))

msgid "running code in %s"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running regexp regression tests", domain = "R-tools")

msgid "running regexp regression tests"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running regression tests", domain = "R-tools")

msgid "running regression tests"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running sloppy specific tests", domain = "R-tools")

msgid "running sloppy specific tests"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running strict specific tests", domain = "R-tools")

msgid "running strict specific tests"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running tests of consistency of as/is.*", domain = "R-tools")

msgid "running tests of consistency of as/is.*"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running tests of plotting Latin-1", domain = "R-tools")

msgid "running tests of plotting Latin-1"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running tests of primitives", domain = "R-tools")

msgid "running tests of primitives"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running tests of random deviate generation -- fails occasionally")

msgid "running tests of random deviate generation -- fails occasionally"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: message("running tests to possibly trigger segfaults", domain = "R-tools")

msgid "running tests to possibly trigger segfaults"
msgstr ""


#: R/translations.R: 0
#. R/translations.R: stop("running xgettext failed", domain = "R-tools")

msgid "running xgettext failed"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("saving partial Rd database", domain = "R-tools")

msgid "saving partial Rd database"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("section 'Methods', description of item %s", sQuote(tab[ind, 1L]), domain = "R-tools")

msgid "section 'Methods', description of item %s"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: stop("server already running")

msgid "server already running"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: stop("server could not be started on an earlier attempt")

msgid "server could not be started on an earlier attempt"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("skipping installation test", domain = "R-tools")
#. R/check.R: gettext("skipping installation test", domain = "R-tools")

msgid "skipping installation test"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("some Unix 'make' programs require LF line endings.\n", domain = "R-tools")

msgid "some Unix 'make' programs require LF line endings."
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("source list must have names for all elements")

msgid "source list must have names for all elements"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("source must be an environment or a list")

msgid "source must be an environment or a list"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: message("starting httpd help server ...", appendLF = FALSE)

msgid "starting httpd help server ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("  sub-directories of 1Mb or more:\n", domain = "R-tools")

msgid "sub-directories of 1Mb or more:"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("symbol %s in the local frame", sQuote(name), domain = "R-tools")

msgid "symbol %s in the local frame"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: gettextf("symbol %s not in namespace", sQuote(name), domain = "R-tools")

msgid "symbol %s not in namespace"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("tangling vignette %s failed with diagnostics:", sQuote(file))

msgid "tangling vignette %s failed with diagnostics:"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("test %s is not available", sQuote(op))

msgid "test %s is not available"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("testing '%s' failed", pkgs[i])

msgid "testing '%s' failed"
msgstr ""


#: R/install.R: 0
#. R/install.R: gettext("testing if installed package can be loaded")

msgid "testing if installed package can be loaded"
msgstr ""


#: R/testing.R: 0
#. R/testing.R: gettextf("testing package %s failed", sQuote(pkg))

msgid "testing package %s failed"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: gettextf("there is no package called %s", sQuote(package))
#. R/makeLazyLoad.R: gettextf("there is no package called %s", sQuote(package))
#. R/makeLazyLoad.R: gettextf("there is no package called %s", sQuote(package))
#. R/makeLazyLoad.R: gettextf("there is no package called %s", sQuote(package))

msgid "there is no package called %s"
msgstr ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: stop("this cannot be used for package 'base'")

msgid "this cannot be used for package 'base'"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("this is a Windows-only package, skipping installation", domain = "R-tools")

msgid "this is a Windows-only package, skipping installation"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("this is package %s version %s", sQuote(desc["Package"]), sQuote(desc["Version"]),     domain = "R-tools")

msgid "this is package %s version %s"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("this package does not have either a %s or a (source) %s directory", sQuote("latex"),     sQuote("man"))

msgid "this package does not have either a %s or a (source) %s directory"
msgstr ""


#: R/Rd2pdf.R: 0
#. R/Rd2pdf.R: gettextf("this package has a %s directory but no .Rd files", sQuote("man"))

msgid "this package has a %s directory but no .Rd files"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("this package has a non-empty 'configure.win' file,\nso building only the main architecture\n",     call. = FALSE, domain = "R-tools")

msgid "this package has a non-empty 'configure.win' file,\nso building only the main architecture"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("too few entries")

msgid "too few entries"
msgstr ""


#: R/Rd2txt.R: 0
#. R/Rd2txt.R: gettextf("too many columns for format '%s'", table[[1L]], domain = "R-tools")

msgid "too many columns for format '%s'"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("too many entries")

msgid "too many entries"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("translation contains arabic percent sign U+066A", domain = "R-tools")

msgid "translation contains arabic percent sign U+066A"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("translation contains small percent sign U+FE6A", domain = "R-tools")

msgid "translation contains small percent sign U+FE6A"
msgstr ""


#: R/xgettext.R: 0
#. R/xgettext.R: gettext("translation contains wide percent sign U+FF05", domain = "R-tools")

msgid "translation contains wide percent sign U+FF05"
msgstr ""


#: R/admin.R: 0
#. R/admin.R: gettextf("unable to copy INDEX to %s", sQuote(file.path(outDir, "INDEX")))

msgid "unable to copy INDEX to %s"
msgstr ""


#: R/QC.R: 0
#: R/check.R: 0
#. R/QC.R: gettext("unable to create %s", file)
#. R/check.R: gettextf("unable to create %s", sQuote(testdir), domain = "R-tools")

msgid "unable to create %s"
msgstr ""


#: R/packages.R: 0
#. R/packages.R: gettext("unable to create %s directory", sQuote(td))

msgid "unable to create %s directory"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("unable to create 'vign_test'", domain = "R-tools")

msgid "unable to create 'vign_test'"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettext("  unable to create a 'datalist' file: may need the package to be installed\n",     domain = "R-tools")

msgid "unable to create a 'datalist' file: may need the package to be installed"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("unable to create examples directory", domain = "R-tools")

msgid "unable to create examples directory"
msgstr ""


#: R/QC.R: 0
#: R/admin.R: 0
#: R/utils.R: 0
#. R/QC.R: gettextf("unable to create file %s", sQuote(file))
#. R/admin.R: gettextf("unable to create file %s", sQuote(outFile))
#. R/utils.R: gettextf("unable to create file %s", con)

msgid "unable to create file %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("unable to create temp directory %s", sQuote(tmpd))

msgid "unable to create temp directory %s"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: gettextf("unable to run %s command on file %s", sQuote(latex), sQuote(file))
#. R/utils.R: gettextf("unable to run %s command on file %s", sQuote(makeindex), sQuote(idxfile))
#. R/utils.R: gettextf("unable to run %s command on file %s", sQuote(latex), sQuote(file))

msgid "unable to run %s command on file %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: warning("unable to run 'make clean' in 'src'", domain = "R-tools")
#. R/build.R: warning("unable to run 'make clean' in 'src'", domain = "R-tools")

msgid "unable to run 'make clean' in 'src'"
msgstr ""


#: R/QC.R: 0
#: R/admin.R: 0
#: R/utils.R: 0
#. R/QC.R: stop("unable to write code files", domain = "R-tools")
#. R/QC.R: stop("unable to write code files")
#. R/admin.R: stop("unable to write code files")
#. R/utils.R: stop("unable to write code files")

msgid "unable to write code files"
msgstr ""


#: R/recode.R: 0
#. R/recode.R: stop("unimplemented encoding")

msgid "unimplemented encoding"
msgstr ""


#: R/install.R: 0
#. R/install.R: message("unknown package layout", domain = "R-tools")

msgid "unknown package layout"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("unsupported %s predictor %d", sQuote("flatedecode"), predictor)

msgid "unsupported %s predictor %d"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("unsupported PNG filter %d", fb)

msgid "unsupported PNG filter %d"
msgstr ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: gettextf("unsupported URL %s", mono(path))

msgid "unsupported URL %s"
msgstr ""


#: R/pdftools.R: 0
#. R/pdftools.R: gettextf("unsupported filter %s", sQuote(filter))

msgid "unsupported filter %s"
msgstr ""


#: R/build.R: 0
#. R/build.R: gettextf("use '--force' to remove the existing %s", sQuote(oldindex), domain = "R-tools")

msgid "use '--force' to remove the existing %s"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("use of '--use-zip-data' is defunct", call. = FALSE, domain = "R-tools")

msgid "use of '--use-zip-data' is defunct"
msgstr ""


#: R/install.R: 0
#. R/install.R: warning("use of '--use-zip-data' is deprecated", call. = FALSE, domain = "R-tools")

msgid "use of '--use-zip-data' is deprecated"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using %s", R.version.string, domain = "R-tools")

msgid "using %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using log directory %s", sQuote(pkgoutdir), domain = "R-tools")

msgid "using log directory %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using option %s", sQuote(opts), domain = "R-tools")

msgid "using option %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using options %s", sQuote(paste(opts, collapse = " ")), domain = "R-tools")

msgid "using options %s"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using platform: %s (%s-bit)", R.version$platform, 8 * .Machine$sizeof.pointer,     domain = "R-tools")

msgid "using platform: %s (%s-bit)"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("using session charset: %s", charset, domain = "R-tools")

msgid "using session charset: %s"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("vignette builder '%s' not found", pkg)

msgid "vignette builder '%s' not found"
msgstr ""


#: R/Vignettes.R: 0
#. R/Vignettes.R: gettextf("vignette filename %s does not match any of the %s filename patterns", sQuote(file),     sQuote(paste(engine$package, engine$name, sep = "::")))

msgid "vignette filename %s does not match any of the %s filename patterns"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("warning: control may reach end of non-void function", domain = "R-tools")

msgid "warning: control may reach end of non-void function"
msgstr ""


#: R/check.R: 0
#. R/check.R: gettextf("when running code in %s ...", sQuote(basename(file)), domain = "R-tools")
#. R/check.R: gettextf("when running code in %s ...", sQuote(basename(file)), domain = "R-tools")

msgid "when running code in %s ..."
msgstr ""


#: R/check.R: 0
#. R/check.R: gettext("will not attempt to install this package on Windows", domain = "R-tools")

msgid "will not attempt to install this package on Windows"
msgstr ""


#: R/Rd.R: 0
#. R/Rd.R: stop("you must specify 'dir' or 'files' argument")

msgid "you must specify 'dir' or 'files' argument"
msgstr ""


#: R/QC.R: 0
#: R/Rd.R: 0
#: R/Vignettes.R: 0
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/QC.R: stop("you must specify 'package' or 'dir' argument")
#. R/Rd.R: stop("you must specify 'package' or 'dir' argument")
#. R/Vignettes.R: stop("you must specify 'package' or 'dir' argument")

msgid "you must specify 'package' or 'dir' argument"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: stop("you must specify 'package', 'dir' or 'file'")

msgid "you must specify 'package', 'dir' or 'file'"
msgstr ""


#: R/QC.R: 0
#. R/QC.R: stop("you must specify 'package', 'dir' or 'file' argument")

msgid "you must specify 'package', 'dir' or 'file' argument"
msgstr ""


#: R/check.R: 0
#. R/check.R: ngettext(length(bad), "  Namespace with empty importFrom: %s", "  Namespaces with empty importFrom: %s",     domain = "R-tools")

msgid        "  Namespace with empty importFrom: %s"
msgid_plural "  Namespaces with empty importFrom: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(limit[s], "  \\%s lines wider than %d character:", "  \\%s lines wider than %d characters:",     domain = "R-tools")

msgid        "  \\%s lines wider than %d character:"
msgid_plural "  \\%s lines wider than %d characters:"
msgstr[0]    ""
msgstr[1]    ""


#: R/logging.R: 0
#. R/logging.R: ngettext(counts["ERROR"], "%d ERROR", "%d ERRORS", domain = "R-tools")

msgid        "%d ERROR"
msgid_plural "%d ERRORS"
msgstr[0]    ""
msgstr[1]    ""


#: R/logging.R: 0
#. R/logging.R: ngettext(counts["NOTE"], "%d NOTE", "%d NOTES", domain = "R-tools")

msgid        "%d NOTE"
msgid_plural "%d NOTES"
msgstr[0]    ""
msgstr[1]    ""


#: R/logging.R: 0
#. R/logging.R: ngettext(counts["WARNING"], "%d WARNING", "%d WARNINGS", domain = "R-tools")

msgid        "%d WARNING"
msgid_plural "%d WARNINGS"
msgstr[0]    ""
msgstr[1]    ""


#: R/pdftools.R: 0
#. R/pdftools.R: ngettext(doc$size, "%d byte", "%d bytes", domain = "R-tools")
#. R/pdftools.R: ngettext(length(bytes), "%d byte", "%d bytes")

msgid        "%d byte"
msgid_plural "%d bytes"
msgstr[0]    ""
msgstr[1]    ""


#: R/testing.R: 0
#. R/testing.R: ngettext(sum(res), "%d of the package tests failed", "%d of the package tests failed",     domain = "R-tools")

msgid        "%d of the package tests failed"
msgid_plural "%d of the package tests failed"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'::' or ':::' import not declared from: %s", "'::' or ':::' imports not declared from: %s",     domain = "R-tools")

msgid        "'::' or ':::' import not declared from: %s"
msgid_plural "'::' or ':::' imports not declared from: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "':::' call which should be '::': %s\nSee the note in ?`:::` about the use of this operator.",     "':::' calls which should be '::': %s\nSee the note in ?`:::` about the use of this operator.",     domain = "R-tools")

msgid        "':::' call which should be '::': %s\nSee the note in ?`:::` about the use of this operator."
msgid_plural "':::' calls which should be '::': %s\nSee the note in ?`:::` about the use of this operator."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'LinkingTo' for %s is unused as it has no 'include' directory",     "'LinkingTo' for %s are unused as they have no 'include' directory")

msgid        "'LinkingTo' for %s is unused as it has no 'include' directory"
msgid_plural "'LinkingTo' for %s are unused as they have no 'include' directory"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'data(package=)' call not declared from: %s", "'data(package=)' calls not declared from: %s",     domain = "R-tools")

msgid        "'data(package=)' call not declared from: %s"
msgid_plural "'data(package=)' calls not declared from: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'library' or 'require' call in package code: %s\n  Please use :: or requireNamespace() instead.\n  See section 'Suggested packages' in the 'Writing R Extensions' manual.",     "'library' or 'require' calls in package code: %s\n  Please use :: or requireNamespace() instead.\n  See section 'Suggested packages' in the 'Writing R Extensions' manual.",     domain = "R-tools")

msgid        "'library' or 'require' call in package code: %s\n  Please use :: or requireNamespace() instead.\n  See section 'Suggested packages' in the 'Writing R Extensions' manual."
msgid_plural "'library' or 'require' calls in package code: %s\n  Please use :: or requireNamespace() instead.\n  See section 'Suggested packages' in the 'Writing R Extensions' manual."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'library' or 'require' call not declared from: %s", "'library' or 'require' calls not declared from: %s",     domain = "R-tools")

msgid        "'library' or 'require' call not declared from: %s"
msgid_plural "'library' or 'require' calls not declared from: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "'library' or 'require' call to package %s which was already attached by Depends. Please remove these calls from your code.",     "'library' or 'require' call to packages %s which were already attached by Depends. Please remove these calls from your code.",     domain = "R-tools")

msgid        "'library' or 'require' call to package %s which was already attached by Depends. Please remove these calls from your code."
msgid_plural "'library' or 'require' call to packages %s which were already attached by Depends. Please remove these calls from your code."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(z3), "Call with 'DUP':", "Calls with 'DUP':", domain = "R-tools")

msgid        "Call with 'DUP':"
msgid_plural "Calls with 'DUP':"
msgstr[0]    ""
msgstr[1]    ""


#: R/install.R: 0
#. R/install.R: ngettext(length(miss), "ERROR: dependency %s is not available for package %s", "ERROR: dependencies %s are not available for package %s",     domain = "R-tools")

msgid        "ERROR: dependency %s is not available for package %s"
msgid_plural "ERROR: dependencies %s are not available for package %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(topfiles), "File\n%s\nwill install at top-level and is not mentioned in the 'DESCRIPTION' file.\n",     "Files\n%s\nwill install at top-level and are not mentioned in the 'DESCRIPTION' file.\n",     domain = "R-tools")

msgid        "File\n%s\nwill install at top-level and is not mentioned in the 'DESCRIPTION' file.\n"
msgid_plural "Files\n%s\nwill install at top-level and are not mentioned in the 'DESCRIPTION' file.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(topfiles), "File %s is not mentioned in the DESCRIPTION file.\n",     "Files %s are not mentioned in the DESCRIPTION file.\n", domain = "R-tools")

msgid        "File %s is not mentioned in the DESCRIPTION file.\n"
msgid_plural "Files %s are not mentioned in the DESCRIPTION file.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Foreign function call to a base package:", "Foreign function calls to a base package:",     domain = "R-tools")

msgid        "Foreign function call to a base package:"
msgid_plural "Foreign function calls to a base package:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Foreign function call to a different package:", "Foreign function calls to a different package:",     domain = "R-tools")

msgid        "Foreign function call to a different package:"
msgid_plural "Foreign function calls to a different package:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x), "Foreign function call with empty 'PACKAGE' argument:", "Foreign function calls with empty 'PACKAGE' argument:",     domain = "R-tools")

msgid        "Foreign function call with empty 'PACKAGE' argument:"
msgid_plural "Foreign function calls with empty 'PACKAGE' argument:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x), "Foreign function call without 'PACKAGE' argument:", "Foreign function calls without 'PACKAGE' argument:",     domain = "R-tools")

msgid        "Foreign function call without 'PACKAGE' argument:"
msgid_plural "Foreign function calls without 'PACKAGE' argument:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Former standard package required but now defunct:", "Former standard packages required but now defunct:",     domain = "R-tools")

msgid        "Former standard package required but now defunct:"
msgid_plural "Former standard packages required but now defunct:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_S4methods), "Found an .Internal call in methods for the following S4 generic:",     "Found .Internal calls in methods for the following S4 generics:", domain = "R-tools")

msgid        "Found an .Internal call in methods for the following S4 generic:"
msgid_plural "Found .Internal calls in methods for the following S4 generics:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_refs), "Found an .Internal call in methods for the following reference class:",     "Found .Internal calls in methods for the following reference classes:", domain = "R-tools")

msgid        "Found an .Internal call in methods for the following reference class:"
msgid_plural "Found .Internal calls in methods for the following reference classes:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_closures), "Found an .Internal call in the following function:",     "Found .Internal calls in the following functions:", domain = "R-tools")

msgid        "Found an .Internal call in the following function:"
msgid_plural "Found .Internal calls in the following functions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_closures), "Found an .Internal call in the following function:\n%s\nwith calls to .Internal functions:\n%s",     "Found .Internal calls in the following functions:\n%s\nwith calls to .Internal functions:\n%s",     domain = "R-tools")

msgid        "Found an .Internal call in the following function:\n%s\nwith calls to .Internal functions:\n%s"
msgid_plural "Found .Internal calls in the following functions:\n%s\nwith calls to .Internal functions:\n%s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_S4methods), "Found an obsolete/platform-specific call in methods for the following S4 generic:",     "Found an obsolete/platform-specific call in methods for the following S4 generics:",     domain = "R-tools")

msgid        "Found an obsolete/platform-specific call in methods for the following S4 generic:"
msgid_plural "Found an obsolete/platform-specific call in methods for the following S4 generics:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_refs), "Found an obsolete/platform-specific call in methods for the following reference class:",     "Found an obsolete/platform-specific call in methods for the following reference classes:",     domain = "R-tools")

msgid        "Found an obsolete/platform-specific call in methods for the following reference class:"
msgid_plural "Found an obsolete/platform-specific call in methods for the following reference classes:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_closures), "Found an obsolete/platform-specific call in the following function:",     "Found an obsolete/platform-specific call in the following functions:", domain = "R-tools")

msgid        "Found an obsolete/platform-specific call in the following function:"
msgid_plural "Found an obsolete/platform-specific call in the following functions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_examples), "Found possibly global 'T' or 'F' in the examples of the following Rd file:",     "Found possibly global 'T' or 'F' in the examples of the following Rd files:",     domain = "R-tools")

msgid        "Found possibly global 'T' or 'F' in the examples of the following Rd file:"
msgid_plural "Found possibly global 'T' or 'F' in the examples of the following Rd files:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$bad_closures), "Found possibly global 'T' or 'F' in the following function:",     "Found possibly global 'T' or 'F' in the following functions:", domain = "R-tools")

msgid        "Found possibly global 'T' or 'F' in the following function:"
msgid_plural "Found possibly global 'T' or 'F' in the following functions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$defunct), "Found the defunct/removed function:", "Found the defunct/removed functions:",     domain = "R-tools")

msgid        "Found the defunct/removed function:"
msgid_plural "Found the defunct/removed functions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$deprecated), "Found the deprecated function:", "Found the deprecated functions:",     domain = "R-tools")

msgid        "Found the deprecated function:"
msgid_plural "Found the deprecated functions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(y), "Found the following (possibly) invalid URL:", "Found the following (possibly) invalid URLs:",     domain = "R-tools")

msgid        "Found the following (possibly) invalid URL:"
msgid_plural "Found the following (possibly) invalid URLs:"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(files), "Found the following CITATION file in a non-standard place:\n%s\nMost likely 'inst/CITATION' should be used instead.\n",     "Found the following CITATION files in a non-standard place:\n%s\nMost likely 'inst/CITATION' should be used instead.\n",     domain = "R-tools")

msgid        "Found the following CITATION file in a non-standard place:\n%s\nMost likely 'inst/CITATION' should be used instead.\n"
msgid_plural "Found the following CITATION files in a non-standard place:\n%s\nMost likely 'inst/CITATION' should be used instead.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(sum(ind), "Found the following directory with a name of a multi-arch build directory:\n",     "Found the following directories with names of multi-arch build directories:\n",     domain = "R-tools")

msgid        "Found the following directory with a name of a multi-arch build directory:\n"
msgid_plural "Found the following directories with names of multi-arch build directories:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(sum(ind), "Found the following directory with the name of a Rd2pdf directory:\n%s\nMost likely, these were included erroneously.\n",     "Found the following directories with names of Rd2pdf directories:\n%s\nMost likely, these were included erroneously.\n",     domain = "R-tools")

msgid        "Found the following directory with the name of a Rd2pdf directory:\n%s\nMost likely, these were included erroneously.\n"
msgid_plural "Found the following directories with names of Rd2pdf directories:\n%s\nMost likely, these were included erroneously.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(sum(ind), "Found the following directory with the name of a check directory:\n%s\nMost likely, these were included erroneously.\n",     "Found the following directories with names of check directories:\n%s\nMost likely, these were included erroneously.\n",     domain = "R-tools")

msgid        "Found the following directory with the name of a check directory:\n%s\nMost likely, these were included erroneously.\n"
msgid_plural "Found the following directories with names of check directories:\n%s\nMost likely, these were included erroneously.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(sum(ind), "Found the following directory with the name of a version control directory:\n%s\nThese should not be in a package tarball.\n",     "Found the following directories with names of version control directories:\n%s\nThese should not be in a package tarball.\n",     domain = "R-tools")

msgid        "Found the following directory with the name of a version control directory:\n%s\nThese should not be in a package tarball.\n"
msgid_plural "Found the following directories with names of version control directories:\n%s\nThese should not be in a package tarball.\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nb, "Found the following executable file:", "Found the following executable files:",     domain = "R-tools")

msgid        "Found the following executable file:"
msgid_plural "Found the following executable files:"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(bad_files), "Found the following file containing GNU extensions:",     "Found the following files containing GNU extensions:", domain = "R-tools")

msgid        "Found the following file containing GNU extensions:"
msgid_plural "Found the following files containing GNU extensions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nb, "Found the following file with a non-portable file name:\n", "Found the following files with non-portable file names:\n",     domain = "R-tools")
#. R/check.R: ngettext(nb, "Found the following file with a non-portable file name:\n", "Found the following files with non-portable file names:\n",     domain = "R-tools")

msgid        "Found the following file with a non-portable file name:\n"
msgid_plural "Found the following files with non-portable file names:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(out), "Found the following file with non-ASCII characters:\n", "Found the following files with non-ASCII characters:\n",     domain = "R-tools")

msgid        "Found the following file with non-ASCII characters:\n"
msgid_plural "Found the following files with non-ASCII characters:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(bad_files), "Found the following non-portable file path:\n", "Found the following non-portable file paths:\n",     domain = "R-tools")

msgid        "Found the following non-portable file path:\n"
msgid_plural "Found the following non-portable file paths:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(x$devices), "Found the platform-specific device:", "Found the platform-specific devices:",     domain = "R-tools")

msgid        "Found the platform-specific device:"
msgid_plural "Found the platform-specific devices:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(sum(!ok), "Generic without any methods in %s: %s", "Generics without any methods in %s: %s",     domain = "R-tools")

msgid        "Generic without any methods in %s: %s"
msgid_plural "Generics without any methods in %s: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/dynamicHelp.R: 0
#. R/dynamicHelp.R: ngettext(length(paths), "Help on topic '%s' was found in the following package:",     "Help on topic '%s' was found in the following packages:")

msgid        "Help on topic '%s' was found in the following package:"
msgid_plural "Help on topic '%s' was found in the following packages:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Missing object imported by a ':::' call: %s", "Missing objects imported by a ':::' calls: %s",     domain = "R-tools")

msgid        "Missing object imported by a ':::' call: %s"
msgid_plural "Missing objects imported by a ':::' calls: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Missing or unexported object: %s", "Missing or unexported objects: %s",     domain = "R-tools")

msgid        "Missing or unexported object: %s"
msgid_plural "Missing or unexported objects: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Namespace dependency not required:", "Namespace dependencies not required:",     domain = "R-tools")

msgid        "Namespace dependency not required:"
msgid_plural "Namespace dependencies not required:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Namespace in Imports field not imported from: %s\nAll declared Imports should be used.",     "Namespaces in Imports field not imported from: %s\nAll declared Imports should be used.",     domain = "R-tools")

msgid        "Namespace in Imports field not imported from: %s\nAll declared Imports should be used."
msgid_plural "Namespaces in Imports field not imported from: %s\nAll declared Imports should be used."
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nb, "Non-ASCII package vignette without specified encoding:\n", "Non-ASCII package vignettes without specified encoding:\n",     domain = "R-tools")

msgid        "Non-ASCII package vignette without specified encoding:\n"
msgid_plural "Non-ASCII package vignettes without specified encoding:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(lt, "Non-standard file/directory found at top level:\n", "Non-standard files/directories found at top level:\n",     domain = "R-tools")

msgid        "Non-standard file/directory found at top level:\n"
msgid_plural "Non-standard files/directories found at top level:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(n, "Note: found %d marked Latin-1 string", "Note: found %d marked Latin-1 strings",     domain = "R-tools")

msgid        "Note: found %d marked Latin-1 string"
msgid_plural "Note: found %d marked Latin-1 strings"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(n, "Note: found %d marked UTF-8 string", "Note: found %d marked UTF-8 strings",     domain = "R-tools")

msgid        "Note: found %d marked UTF-8 string"
msgid_plural "Note: found %d marked UTF-8 strings"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(n, "Note: found %d string marked as \"bytes\"", "Note: found %d strings marked as \"bytes\"",     domain = "R-tools")

msgid        "Note: found %d string marked as \"bytes\""
msgid_plural "Note: found %d strings marked as \"bytes\""
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(sum(obsolete), "Obsolete package %s in Rd xrefs", "Obsolete packages %s in Rd xrefs",     domain = "R-tools")

msgid        "Obsolete package %s in Rd xrefs"
msgid_plural "Obsolete packages %s in Rd xrefs"
msgstr[0]    ""
msgstr[1]    ""


#: R/Rd2HTML.R: 0
#: R/RdConv2.R: 0
#. R/Rd2HTML.R: ngettext(length(format), "Only %d column allowed in this table", "Only %d columns allowed in this table",     domain = "R-tools")
#. R/RdConv2.R: ngettext(length(format), "Only %d column allowed in this table", "Only %d columns allowed in this table",     domain = "R-tools")

msgid        "Only %d column allowed in this table"
msgid_plural "Only %d columns allowed in this table"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(y), "Package has a FOSS license but eventually depends on the following package which may restrict use:",     "Package has a FOSS license but eventually depends on the following packages which may restrict use:",     domain = "R-tools")

msgid        "Package has a FOSS license but eventually depends on the following package which may restrict use:"
msgid_plural "Package has a FOSS license but eventually depends on the following packages which may restrict use:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(y), "Package has a FOSS license but eventually depends on the following package which restricts use:",     "Package has a FOSS license but eventually depends on the following packages which restrict use:",     domain = "R-tools")

msgid        "Package has a FOSS license but eventually depends on the following package which restricts use:"
msgid_plural "Package has a FOSS license but eventually depends on the following packages which restrict use:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package in 'Depends/Imports' which should probably only be in 'LinkingTo': %s",     "Packages in 'Depends/Imports' which should probably only be in 'LinkingTo': %s",     domain = "R-tools")

msgid        "Package in 'Depends/Imports' which should probably only be in 'LinkingTo': %s"
msgid_plural "Packages in 'Depends/Imports' which should probably only be in 'LinkingTo': %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Package in Depends field not imported from: %s\nThese packages needs to imported from for the case when this namespace is loaded but not attached.",     "Packages in Depends field not imported from: %s\nThese packages needs to imported from for the case when this namespace is loaded but not attached.",     domain = "R-tools")

msgid        "Package in Depends field not imported from: %s\nThese packages needs to imported from for the case when this namespace is loaded but not attached."
msgid_plural "Packages in Depends field not imported from: %s\nThese packages needs to imported from for the case when this namespace is loaded but not attached."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Package listed in more than one of Depends, Imports, Suggests, Enhances: %s\nA package should be listed in only one of these fields.",     "Packages listed in more than one of Depends, Imports, Suggests, Enhances: %s\nA package should be listed in only one of these fields.",     domain = "R-tools")

msgid        "Package listed in more than one of Depends, Imports, Suggests, Enhances: %s\nA package should be listed in only one of these fields."
msgid_plural "Packages listed in more than one of Depends, Imports, Suggests, Enhances: %s\nA package should be listed in only one of these fields."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package required and available but unsuitable version:", "Packages required and available but unsuitable versions:",     domain = "R-tools")

msgid        "Package required and available but unsuitable version:"
msgid_plural "Packages required and available but unsuitable versions:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package required but not available:", "Packages required but not available:",     domain = "R-tools")

msgid        "Package required but not available:"
msgid_plural "Packages required but not available:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package suggested but not available for checking:", "Packages suggested but not available for checking:",     domain = "R-tools")

msgid        "Package suggested but not available for checking:"
msgid_plural "Packages suggested but not available for checking:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package suggested but not available:", "Packages suggested but not available:",     domain = "R-tools")

msgid        "Package suggested but not available:"
msgid_plural "Packages suggested but not available:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(sum(miss), "Package unavailable to check Rd xrefs: %s", "Packages unavailable to check Rd xrefs: %s",     domain = "R-tools")

msgid        "Package unavailable to check Rd xrefs: %s"
msgid_plural "Packages unavailable to check Rd xrefs: %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nb, "Package vignette which is not in its specified encoding:\n", "Package vignettes which are not in their specified encoding:\n",     domain = "R-tools")

msgid        "Package vignette which is not in its specified encoding:\n"
msgid_plural "Package vignettes which are not in their specified encoding:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nb, "Package vignette without corresponding PDF/HTML:\n", "Package vignettes without corresponding PDF/HTML:\n",     domain = "R-tools")

msgid        "Package vignette without corresponding PDF/HTML:\n"
msgid_plural "Package vignettes without corresponding PDF/HTML:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Package which this enhances but not available for checking:",     "Packages which this enhances but not available for checking:", domain = "R-tools")

msgid        "Package which this enhances but not available for checking:"
msgid_plural "Packages which this enhances but not available for checking:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(other_problem), "Registration problem:", "Registration problems:",     domain = "R-tools")

msgid        "Registration problem:"
msgid_plural "Registration problems:"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(length(fail), "Required field missing or empty:", "Required fields missing or empty:",     domain = "R-tools")

msgid        "Required field missing or empty:"
msgid_plural "Required fields missing or empty:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Unavailable namespace imported from by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator.",     "Unavailable namespaces imported from by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator.",     domain = "R-tools")

msgid        "Unavailable namespace imported from by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator."
msgid_plural "Unavailable namespaces imported from by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(zz), "Undeclared package in foreign function calls:", "Undeclared packages in foreign function calls:",     domain = "R-tools")

msgid        "Undeclared package in foreign function calls:"
msgid_plural "Undeclared packages in foreign function calls:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xxx), "Unexported object imported by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator.",     "Unexported objects imported by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator.",     domain = "R-tools")

msgid        "Unexported object imported by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator."
msgid_plural "Unexported objects imported by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator."
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xxx), "Unexported object imported by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator.\nIncluding base/recommended package(s): %s",     "Unexported objects imported by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator.\nIncluding base/recommended package(s): %s",     domain = "R-tools")

msgid        "Unexported object imported by a ':::' call: %s\nSee the note in ?`:::` about the use of this operator.\nIncluding base/recommended package(s): %s"
msgid_plural "Unexported objects imported by ':::' calls: %s\nSee the note in ?`:::` about the use of this operator.\nIncluding base/recommended package(s): %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(sum(!miss), "Unknown package %s in Rd xrefs", "Unknown packages %s in Rd xrefs",     domain = "R-tools")

msgid        "Unknown package %s in Rd xrefs"
msgid_plural "Unknown packages %s in Rd xrefs"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(y), "Uses the non-portable package:", "Uses the non-portable packages:",     domain = "R-tools")

msgid        "Uses the non-portable package:"
msgid_plural "Uses the non-portable packages:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(y), "Uses the superseded package:", "Uses the superseded packages:",     domain = "R-tools")

msgid        "Uses the superseded package:"
msgid_plural "Uses the superseded packages:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(xx), "Versioned 'LinkingTo' value for %s is only usable in R >= 3.0.2",     "Versioned 'LinkingTo' values for %s are only usable in R >= 3.0.2", domain = "R-tools")

msgid        "Versioned 'LinkingTo' value for %s is only usable in R >= 3.0.2"
msgid_plural "Versioned 'LinkingTo' values for %s are only usable in R >= 3.0.2"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "Vignette dependency not required:", "Vignette dependencies not required:",     domain = "R-tools")

msgid        "Vignette dependency not required:"
msgid_plural "Vignette dependencies not required:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "VignetteBuilder package required for checking but not available:",     "VignetteBuilder packages required for checking but not available:", domain = "R-tools")

msgid        "VignetteBuilder package required for checking but not available:"
msgid_plural "VignetteBuilder packages required for checking but not available:"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(len, "Warning in file %s:", "Warnings in file %s:", domain = "R-tools")

msgid        "Warning in file %s:"
msgid_plural "Warnings in file %s:"
msgstr[0]    ""
msgstr[1]    ""


#: R/check.R: 0
#. R/check.R: ngettext(nw, "Warning in re-building vignettes:\n", "Warnings in re-building vignettes:\n",     domain = "R-tools")

msgid        "Warning in re-building vignettes:\n"
msgid_plural "Warnings in re-building vignettes:\n"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(nr, "Warning: found non-ASCII string", "Warning: found non-ASCII strings",     domain = "R-tools")

msgid        "Warning: found non-ASCII string"
msgid_plural "Warning: found non-ASCII strings"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(nr, "Warning: large data file saved inefficiently:", "Warning: large data files saved inefficiently:",     domain = "R-tools")

msgid        "Warning: large data file saved inefficiently:"
msgid_plural "Warning: large data files saved inefficiently:"
msgstr[0]    ""
msgstr[1]    ""


#: R/utils.R: 0
#. R/utils.R: ngettext(len, "argument %s", "arguments %s")

msgid        "argument %s"
msgid_plural "arguments %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(numparms, "call includes '...', expected %d parameter", "call includes '...', expected %d parameters",     domain = "R-tools")

msgid        "call includes '...', expected %d parameter"
msgid_plural "call includes '...', expected %d parameters"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(callparms, "call to %s with %d parameter, expected %d", "call to %s with %d parameters, expected %d",     domain = "R-tools")

msgid        "call to %s with %d parameter, expected %d"
msgid_plural "call to %s with %d parameters, expected %d"
msgstr[0]    ""
msgstr[1]    ""


#: R/xgettext.R: 0
#. R/xgettext.R: ngettext(length(diffs), "difference in entry %s", "differences in entries %s", domain = "R-tools")
#. R/xgettext.R: ngettext(length(diffs), "difference in entry %s", "differences in entries %s", domain = "R-tools")

msgid        "difference in entry %s"
msgid_plural "differences in entries %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/md5.R: 0
#. R/md5.R: ngettext(length(files), "file %s has the wrong MD5 checksums", "files %s have the wrong MD5 checksums",     domain = "R-tools")

msgid        "file %s has the wrong MD5 checksums"
msgid_plural "files %s have the wrong MD5 checksums"
msgstr[0]    ""
msgstr[1]    ""


#: R/md5.R: 0
#. R/md5.R: ngettext(sum(not.here), "file %s is missing", "files %s are missing", domain = "R-tools")

msgid        "file %s is missing"
msgid_plural "files %s are missing"
msgstr[0]    ""
msgstr[1]    ""


#: R/Rd.R: 0
#. R/Rd.R: ngettext(sum(idx), "missing/empty \\name field in Rd file\n%s", "missing/empty \\name field in Rd files\n%s",     domain = "R-tools")

msgid        "missing/empty \\name field in Rd file\n%s"
msgid_plural "missing/empty \\name field in Rd files\n%s"
msgstr[0]    ""
msgstr[1]    ""


#: R/makeLazyLoad.R: 0
#. R/makeLazyLoad.R: ngettext(sum(dup), "object %s is created by more than one data call", "objects %s are created by more than one data call",     domain = "R-tools")

msgid        "object %s is created by more than one data call"
msgid_plural "objects %s are created by more than one data call"
msgstr[0]    ""
msgstr[1]    ""


#: R/QC.R: 0
#. R/QC.R: ngettext(length(bad), "problem found in %s", "problems found in %s", domain = "R-tools")

msgid        "problem found in %s"
msgid_plural "problems found in %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/admin.R: 0
#. R/admin.R: ngettext(length(bad), "unable to re-encode %s line %s", "unable to re-encode %s lines %s",     domain = "R-tools")

msgid        "unable to re-encode %s line %s"
msgid_plural "unable to re-encode %s lines %s"
msgstr[0]    ""
msgstr[1]    ""
