msgid ""
msgstr ""
"Project-Id-Version: spatial 7.3-8\n"
"POT-Creation-Date: 2015-01-18 21:31\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"



#: R/kr.R: 0
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "obj",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "obj",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "obj",     dQuote("trgls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "obj",     dQuote("trgls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "fit",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "object",     dQuote("trls"))
#. R/kr.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("trls"))

msgid "'%s' argument is not an object of class %s"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: stop("'n' argument is too large")
#. R/kr.R: stop("'n' argument is too large")

msgid "'n' argument is too large"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: stop("'np' argument exceeds 6")
#. R/kr.R: stop("'np' argument exceeds 6")

msgid "'np' argument exceeds 6"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: stop("'x' and 'y' differ in length")

msgid "'x' and 'y' differ in length"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: stop("'x' does not have columns 'x', 'y' and 'z'")
#. R/kr.R: stop("'x' does not have columns 'x', 'y' and 'z'")

msgid "'x' does not have columns 'x', 'y' and 'z'"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettextf("AIC: (df = %s) %s", AIC[1L], round(AIC[2L], 4), domain = "R-spatial")

msgid "AIC: (df = %s) %s"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Adjusted R-squared:", domain = "R-spatial")

msgid "Adjusted R-squared:"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Analysis of Variance Table", domain = "R-spatial")
#. R/kr.R: gettext("Analysis of Variance Table")

msgid "Analysis of Variance Table"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: warning("Device is not active")
#. R/kr.R: warning("Device is not active")

msgid "Device is not active"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Fitted:", domain = "R-spatial")

msgid "Fitted:"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettextf("Model %s: %s", format(1L:nmodels), models)

msgid "Model %s: %s"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Model: ", domain = "R-spatial")

msgid "Model:"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Multiple R-Squared:", domain = "R-spatial")

msgid "Multiple R-Squared:"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: gettext("Residuals:", domain = "R-spatial")

msgid "Residuals:"
msgstr ""


#: R/pp.R: 0
#. R/pp.R: stop("invalid input")
#. R/pp.R: stop("invalid input")
#. R/pp.R: stop("invalid input")

msgid "invalid input"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: stop("rank failure in Choleski decomposition")

msgid "rank failure in Choleski decomposition"
msgstr ""


#: R/kr.R: 0
#. R/kr.R: warning("some of '...' do not match")

msgid "some of '...' do not match"
msgstr ""


#: R/pp.R: 0
#. R/pp.R: stop("some points outside region")

msgid "some points outside region"
msgstr ""
