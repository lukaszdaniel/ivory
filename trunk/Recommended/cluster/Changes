diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/agnes.q Recommended/cluster/R/agnes.q
8a9
>    dataname <- sQuote(deparse(substitute(x)))
47c48
< 	if(any(is.na(x))) stop("NA-values in the dissimilarity matrix not allowed.")
---
> 	if(any(is.na(x))) stop("NA values in the dissimilarity matrix not allowed.")
54c55
< 		    stop("'x' is not and cannot be converted to class \"dissimilarity\"")
---
> 		    stop(gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname))
72c73
< 	if(!is.numeric(x)) stop("x is not a numeric dataframe or matrix.")
---
> 	if(!is.numeric(x)) stop(gettextf("%s is not a numeric dataframe or matrix.", dataname))
112c113
< 	    stop("No clustering performed, NA-values in the dissimilarity matrix.\n" )
---
> 	    stop("No clustering performed, NA values in the dissimilarity matrix.", "\n", sep = "" )
155,157c156,158
<     cat("Call:	", deparse(x$call),
< 	"\nAgglomerative coefficient: ", format(x$ac, ...),
< 	"\nOrder of objects:\n")
---
> 	cat(gettext("Call: ", domain = "R-cluster"), deparse(x$call), "\n", sep = "")
> 	cat(gettext("Agglomerative coefficient: ", domain = "R-cluster"), format(x$ac, ...), "\n", sep = "")
> 	cat(gettext("Order of objects:", domain = "R-cluster"), "\n", sep = "")
160,161c161,162
<     cat("Height (summary):\n");		print(summary(x$height), ...)
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat(gettext("Height (summary):", domain = "R-cluster"), "\n", sep = "");		print(summary(x$height), ...)
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
168,170c169,171
<     cat("Object of class 'agnes' from call:\n", deparse(x$call),
< 	"\nAgglomerative coefficient: ", format(x$ac, ...),
< 	"\nOrder of objects:\n")
---
> 	cat(gettext("Object of class 'agnes' from call:", domain = "R-cluster"), "\n", deparse(x$call), "\n", sep = "")
> 	cat(gettext("Agglomerative coefficient: ", domain = "R-cluster"), format(x$ac, ...), "\n", sep = "")
> 	cat(gettext("Order of objects:", domain = "R-cluster"), "\n", sep = "")
173,174c174,175
<     cat("Merge:\n");			print(x$merge, ...)
<     cat("Height:\n");			print(x$height, ...)
---
>     cat(gettext("Merge:", domain = "R-cluster"), "\n", sep = "");			print(x$merge, ...)
>     cat(gettext("Height:", domain = "R-cluster"), "\n", sep = "");			print(x$height, ...)
178c179
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/clara.q Recommended/cluster/R/clara.q
9a10
>     dataname <- sQuote(deparse(substitute(x)))
12c13
< 	stop("'x' is a \"dist\" object, but should be a data matrix or frame")
---
> 	stop(gettextf("%s is a \"dist\" object, but should be a data matrix or frame", dataname))
14c15
<     if(!is.numeric(x)) stop("x is not a numeric dataframe or matrix.")
---
>     if(!is.numeric(x)) stop(gettextf("%s is not a numeric dataframe or matrix.", dataname))
19,20c20
< 	stop(gettextf("'sampsize' should be at least %d = max(2, 1+ number of clusters)",
<                       max(2,k+1)), domain=NA)
---
> 	stop(gettextf("'sampsize' should be at least %d = max(2, 1+ number of clusters)", max(2,k+1)), domain = "R-cluster")
22,23c22
< 	stop(gettextf("'sampsize' = %d should not be larger than the number of objects, %d",
<                       sampsize, n), domain=NA)
---
> 	stop(gettextf("'sampsize' = %d should not be larger than the number of objects, %d", sampsize, n), domain = "R-cluster")
89,92c88
< 		stop(sprintf(ngettext(nNA,
< 			      "Observation %s has *only* NAs --> omit it for clustering",
< 			      "Observations %s have *only* NAs --> omit them for clustering!"),
< 			     pasteC(i)), domain = NA)
---
> 	     stop(sprintf(ngettext(nNA, "Observation %s has *only* NAs --> omit it for clustering", "Observations %s have *only* NAs --> omit them for clustering!", domain = "R-cluster"), pasteC(i)), domain = NA)
94,97c90
< 		stop(sprintf(ngettext(nNA,
< 			      "%d observation (%s) has *only* NAs --> omit them for clustering!",
< 			      "%d observations (%s ...) have *only* NAs --> omit them for clustering!"),
< 			     nNA, pasteC(i[1:12])), domain = NA)
---
> 	     stop(sprintf(ngettext(nNA, "%d observation (%s) has *only* NAs --> omit them for clustering!", "%d observations (%s ...) have *only* NAs --> omit them for clustering!", domain = "R-cluster"), nNA, pasteC(i[1:12])), domain = NA)
104c97
< 	stop("invalid 'jstop' from .C(cl_clara,.): ", res$jstop)
---
> 	stop(gettextf("invalid 'jstop' from .C(cl_clara,.): %s", res$jstop))
107c100
<     res$clu <- as.integer(res$clu[1:n])
---
>     res$clu <- as.integer(res$clu[seq_len(n)])
145,151c138,144
<     cat("Call:	", deparse(x$call),
< 	"\nMedoids:\n");		print(x$medoids, ...)
<     cat("Objective function:\t ", format(x$objective, ...),"\n",
< 	"Clustering vector: \t", sep=""); str(x$clustering, vec.len = 7)
<     cat("Cluster sizes:	    \t", x$clusinfo[,1],
< 	"\nBest sample:\n");		print(x$sample, quote = FALSE, ...)
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat(gettext("Call: ", domain = "R-cluster"), deparse(x$call), "\n", sep = "")
> 	cat(gettext("Medoids:", domain = "R-cluster"), "\n", sep = "");		print(x$medoids, ...)
>     cat(gettext("Objective function:", domain = "R-cluster"), "\t", format(x$objective, ...), "\n", sep = "")
> 	cat(gettext("Clustering vector:", domain = "R-cluster"), "\t", sep = ""); str(x$clustering, vec.len = 7)
>     cat(gettext("Cluster sizes:", domain = "R-cluster"), "	    \t", x$clusinfo[,1], "\n", sep = "")
> 	cat(gettext("Best sample:", domain = "R-cluster"), "\n", sep = "");		print(x$sample, quote = FALSE, ...)
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
163,166c156,159
<     cat("Object of class 'clara' from call:\n", deparse(x$call),
< 	"\nMedoids:\n");		print(x$medoids, ...)
<     cat("Objective function:\t ", format(x$objective, ...),
< 	"\nNumerical information per cluster:\n")
---
>     cat(gettext("Object of class 'clara' from call:", domain = "R-cluster"), "\n", deparse(x$call), "\n", sep = "")
> 	cat(gettext("Medoids:", domain = "R-cluster"), "\n", sep = "");		print(x$medoids, ...)
>     cat(gettext("Objective function:", domain = "R-cluster"), "\t", format(x$objective, ...), "\n", sep = "")
> 	cat(gettext("Numerical information per cluster:", domain = "R-cluster"), "\n", sep = "")
169c162
< 	cat("Average silhouette width per cluster:\n")
---
> 	cat(gettext("Average silhouette width per cluster:", domain = "R-cluster"), "\n", sep = "")
171,172c164,165
< 	cat("Average silhouette width of best sample:",
< 	    format(x$silinfo[[3]], ...), "\n")
---
> 	cat(gettext("Average silhouette width of best sample: ", domain = "R-cluster"),
> 	    format(x$silinfo[[3]], ...), "\n", sep = "")
174,175c167,168
<     cat("\nBest sample:\n");		print(x$sample, quote = FALSE, ...)
<     cat("Clustering vector:\n");	print(x$clustering, ...)
---
>     cat("\n", gettext("Best sample:", domain = "R-cluster"), "\n");		print(x$sample, quote = FALSE, ...)
>     cat(gettext("Clustering vector:", domain = "R-cluster"), "\n");	print(x$clustering, ...)
177c170
< 	cat("\nSilhouette plot information for best sample:\n")
---
> 	cat("\n", gettext("Silhouette plot information for best sample:", domain = "R-cluster"), "\n")
183c176
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/clusGap.R Recommended/cluster/R/clusGap.R
33,34c33,34
<     if(verbose) cat("Clustering k = 1,2,..., K.max (= ",K.max,"): .. ", sep='')
<     for(k in 1:K.max)
---
>     if(verbose) cat(gettextf("Clustering k = 1,2,..., K.max (= %d): .. ", K.max, domain = "R-cluster"), sep = "")
>     for(k in seq_len(K.max))
36c36
<     if(verbose) cat("done\n")
---
>     if(verbose) cat(gettext("done", domain = "R-cluster"), "\n", sep = "")
46,48c46,47
<     if(verbose) cat("Bootstrapping, b = 1,2,..., B (= ", B,
<                     ")  [one \".\" per sample]:\n", sep="")
<     for (b in 1:B) {
---
>     if(verbose) cat(gettextf("Bootstrapping, b = 1,2,..., B (= %d)  [one \".\" per sample]:", B, domain = "R-cluster"), "\n", sep = "")
>     for (b in seq_len(B)) {
54c53
<         for(k in 1:K.max) {
---
>         for(k in seq_len(K.max)) {
128,129c127,128
<     cat("Clustering Gap statistic [\"clusGap\"].\n",
<         sprintf("B=%d simulated reference sets, k = 1..%d\n",x$B, K), sep="")
---
>     cat(gettext("Clustering Gap statistic [\"clusGap\"].", domain = "R-cluster"), "\n",
>         gettextf("B=%d simulated reference sets, k = 1..%d", x$B, K, domain = "R-cluster"), "\n", sep = "")
132,134c131,134
<     cat(sprintf(" --> Number of clusters (method '%s'%s): %d\n",
< 		method, if(grepl("SE", method))
< 		sprintf(", SE.factor=%g",SE.factor) else "", nc))
---
> 	if(grepl("SE", method))
>     cat(gettextf(" --> Number of clusters (method '%s', SE.factor=%g): %d", method, SE.factor, nc, domain = "R-cluster"), "\n", sep = "")
> 	else
> 	cat(gettextf(" --> Number of clusters (method '%s'): %d", method, nc, domain = "R-cluster"), "\n", sep = "")
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/coef.R Recommended/cluster/R/coef.R
23c23
<     ## stopifnot(all.equal(1:n, sort(-mrg[mrg < 0])))
---
>     ## stopifnot(all.equal(seq_len(n), sort(-mrg[mrg < 0])))
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/daisy.q Recommended/cluster/R/daisy.q
4a5
>     dataname <- sQuote(deparse(substitute(x)))
7c8
< 	stop("x is not a dataframe or a numeric matrix.")
---
> 	stop(gettextf("%s is not a dataframe or a numeric matrix.", dataname))
69,73c70,72
<     if(n > 9 && any(tI) &&
<        any(iBin <- apply(x[, tI, drop = FALSE], 2,
< 			 function(v) length(table(v)) == 2)))
< 	warning(gettextf("binary variable(s) %s treated as interval scaled",
< 			 pColl(which(tI)[iBin])))
---
>     if(n > 9 && any(tI) && any(iBin <- apply(x[, tI, drop = FALSE], 2, function(v) length(table(v)) == 2)))
> 	#warning(sprintf(ngettext(as.integer(length(which(tI))), "binary variable %s treated as interval scaled", "binary variables %s treated as interval scaled"), pColl(which(tI)[iBin])))
> 	warning(gettextf("binary variable(s) %s treated as interval scaled", pColl(which(tI)[iBin])))
80c79
< 				 "setting 'logical' variables %s to type 'asymm'"),
---
> 				 "setting 'logical' variables %s to type 'asymm'", domain = "R-cluster"),
94,96c93
< 		warning(gettextf(
< 		    "%s has constant columns %s; these are standardized to 0",
< 		    sQuote("x"), pColl(which(sx == 0))))
---
> 		warning(gettextf("%s has constant columns %s; these are standardized to 0", sQuote("x"), pColl(which(sx == 0))))
129,130c126
< 	stop(gettextf("invalid type %s for column numbers %s",
< 		      type2[ina], pColl(which(is.na))))
---
> 	stop(gettextf("invalid type %s for column numbers %s", type2[ina], pColl(which(is.na))))
162c158
< 	"NA-values in the dissimilarity matrix !"
---
> 	gettext("NA values in the dissimilarity matrix!")
176c172
<     cat("Dissimilarities :\n")
---
>     cat(gettext("Dissimilarities:", domain = "R-cluster"), "\n", sep = "")
180,181c176,177
< 	cat("Warning : ", attr(x, "NA.message"), "\n")
<     cat("Metric : ", attr(x, "Metric"),
---
> 	cat(gettext("Warning: ", domain = "R-cluster"), attr(x, "NA.message"), "\n", sep = "")
>     cat(gettext("Metric: ", domain = "R-cluster"), attr(x, "Metric"), sep = "")
183,184c179,181
< 	paste(";  Types =", paste(aT, collapse=", ")), "\n")
<     cat("Number of objects : ", attr(x, "Size"), "\n", sep="")
---
> 	cat(";  ", gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster"), sep = "")
>     cat("\n")
>     cat(gettext("Number of objects:", domain = "R-cluster"), " ", attr(x, "Size"), "\n", sep = "")
201c198
<     cat(x$n, "dissimilarities, summarized :\n")
---
>     cat(sprintf(ngettext(x$n, "%d dissimilarity, summarized:", "%d dissimilarities, summarized:", domain = "R-cluster"), x$n), "\n", sep = "")
203c200
<     cat("Metric : ", x $ Metric,
---
>     cat(gettext("Metric: ", domain = "R-cluster"), x$Metric, sep = "")
205,206c202,204
< 	paste(";  Types =", paste(aT, collapse=", ")), "\n")
<     cat("Number of objects : ", x $ Size, "\n", sep="")
---
> 	cat(";  ", gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster"), sep = "")
>     cat("\n")
>     cat(gettext("Number of objects:", domain = "R-cluster"), " ", x$Size, "\n", sep = "")
208c206
< 	cat("Warning : ", x $ NA.message, "\n")
---
> 	cat(gettext("Warning: ", domain = "R-cluster"), x$NA.message, "\n", sep = "")
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/diana.q Recommended/cluster/R/diana.q
7a8
>     dataname <- sQuote(deparse(substitute(x)))
17c18
< 		    stop("'x' is not and cannot be converted to class \"dissimilarity\"")
---
> 		    stop(gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname))
35c36
< 	if(!is.numeric(x)) stop("x is not a numeric dataframe or matrix.")
---
> 	if(!is.numeric(x)) stop(gettextf("%s is not a numeric dataframe or matrix.", dataname))
112c113
<     cat("Merge:\n")
---
>     cat(gettext("Merge:", domain = "R-cluster"), "\n", sep = "")
114c115
<     cat("Order of objects:\n")
---
>     cat(gettext("Order of objects:", domain = "R-cluster"), "\n", sep = "")
117c118
<     cat("Height:\n")
---
>     cat(gettext("Height:", domain = "R-cluster"), "\n", sep = "")
119c120
<     cat("Divisive coefficient:\n")
---
>     cat(gettext("Divisive coefficient:", domain = "R-cluster"), "\n", sep = "")
121c122
<     cat("\nAvailable components:\n")
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "")
134,135c135,136
<     cat("Merge:\n");			print(x$merge, ...)
<     cat("Order of objects:\n")
---
>     cat(gettext("Merge:", domain = "R-cluster"), "\n", sep = "");			print(x$merge, ...)
>     cat(gettext("Order of objects:", domain = "R-cluster"), "\n", sep = "")
137,138c138,139
<     cat("Height:\n");			print(x$height, ...)
<     cat("Divisive coefficient:\n");	print(x$dc, ...)
---
>     cat(gettext("Height:", domain = "R-cluster"), "\n", sep = "");			print(x$height, ...)
>     cat(gettext("Divisive coefficient:", domain = "R-cluster"), "\n", sep = "");	print(x$dc, ...)
142c143
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/ellipsoidhull.R Recommended/cluster/R/ellipsoidhull.R
37,38c37
<         cat("Error in Fortran routine computing the spanning ellipsoid,",
<             "\n probably collinear data\n", sep="")
---
>         cat(gettext("Error in Fortran routine computing the spanning ellipsoid. Probably collinear data", domain = "R-cluster"), "\n", sep="")
68,71c67
<     cat("'ellipsoid' in", d, "dimensions:\n center = (",
<         format(x$loc, digits=digits),
<         "); squared ave.radius d^2 = ", format(x$d2, digits=digits),
<         "\n and shape matrix =\n")
---
>     cat(gettextf("ellipsoid in %d dimensions:\n center = (%s); squared ave.radius d^2 = %s\n and shape matrix =\n", d, paste(format(x$loc, digits=digits), collapse = " "), format(x$d2, digits=digits), domain = "R-cluster"))
73,74c69,70
<     cat("  hence,",if(d==2)"area" else "volume"," = ",
<         format(volume(x), digits=digits),"\n")
---
>     if(d==2) cat(gettextf("  ellipsoid's area = %s", format(volume(x), digits=digits), domain = "R-cluster"), "\n", sep = "")
> 	else cat(gettextf("  ellipsoid's volume = %s", format(volume(x), digits=digits), domain = "R-cluster"), "\n", sep = "")
76,78c72,75
<         cat("\n** Warning: ** the algorithm did not terminate reliably!\n  ",
<             if(x$ierr) "most probably because of collinear data"
<             else "(in the available number of iterations)", "\n")
---
>         if(x$ierr)
>           cat("\n", gettext("** Warning: ** the algorithm did not terminate reliably!\n  most probably because of collinear data", domain = "R-cluster"), "\n", sep = "")
>         else
> 	  cat("\n", gettext("** Warning: ** the algorithm did not terminate reliably!\n  (in the available number of iterations)", domain = "R-cluster"), "\n", sep = "")
90c87
< ##   Return (x[i],y[i]) points, i = 1:n, on boundary of ellipse, given
---
> ##   Return (x[i],y[i]) points, i = seq_len(n), on boundary of ellipse, given
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/fanny.q Recommended/cluster/R/fanny.q
8a9
>     dataname <- sQuote(deparse(substitute(x)))
18c19
< 		    stop("'x' is not and cannot be converted to class \"dissimilarity\"")
---
> 		    stop(gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname))
36c37
< 	if(!is.numeric(x)) stop("x is not a numeric dataframe or matrix.")
---
> 	if(!is.numeric(x)) stop(gettextf("%s is not a numeric dataframe or matrix.", dataname))
118c119
< 	    stop("No clustering performed, NA-values in the dissimilarity matrix.")
---
> 	    stop("No clustering performed, NA values in the dissimilarity matrix.")
157c158
<                           clus.avg.widths = res$avsil[1:k],
---
>                           clus.avg.widths = res$avsil[seq_len(k)],
170c171
<     cat("Fuzzy Clustering object of class 'fanny' :")
---
>     cat(gettext("Fuzzy Clustering object of class 'fanny': ", domain = "R-cluster"))
177,179c178,180
<     cat("Membership coefficients (in %, rounded):\n"); print(round(100 * x$membership), ...)
<     cat("Fuzzyness coefficients:\n");	print(x$coeff, digits = digits, ...)
<     cat("Closest hard clustering:\n");	print(x$clustering, ...)
---
>     cat(gettext("Membership coefficients (in percent, rounded):", domain = "R-cluster"), "\n", sep = ""); print(round(100 * x$membership), ...)
>     cat(gettext("Fuzzyness coefficients:", domain = "R-cluster"), "\n", sep = "");	print(x$coeff, digits = digits, ...)
>     cat(gettext("Closest hard clustering:", domain = "R-cluster"), "\n", sep = "");	print(x$clustering, ...)
181c182
< 	cat(sprintf("k_crisp (= %d) < k !!\n", x$k.crisp))
---
> 	cat(gettextf("k_crisp (= %d) < k !!", x$k.crisp, domain = "R-cluster"), "\n", sep = "")
187c188
<     cat("\nAvailable components:\n")
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "")
202c203
< 	cat("\nSilhouette plot information:\n")
---
> 	cat("\n", gettext("Silhouette plot information:", domain = "R-cluster"), "\n", sep = "")
204c205
< 	cat("Average silhouette width per cluster:\n")
---
> 	cat(gettext("Average silhouette width per cluster:", domain = "R-cluster"), "\n", sep = "")
206c207
< 	cat("Average silhouette width of total data set:\n")
---
> 	cat(gettext("Average silhouette width of total data set:", domain = "R-cluster"), "\n", sep = "")
212c213
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
227,228c228,229
<     if(any(u != 1:k)) clustering <- match(clustering, u)
<     r[cbind(1:n, clustering)] <- 1L
---
>     if(any(u != seq_len(k))) clustering <- match(clustering, u)
>     r[cbind(seq_len(n), clustering)] <- 1L
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/internal.R Recommended/cluster/R/internal.R
25c25
<     if(n1 < 1) stop("'n' must be >= 2")
---
>     if(n1 < 1) stop("'n' argument must be >= 2")
33c33
<     if((n2 <- as.integer(n - 2L)) < 0) stop("'n' must be >= 2")
---
>     if((n2 <- as.integer(n - 2L)) < 0) stop("'n' argument must be >= 2")
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/mona.q Recommended/cluster/R/mona.q
6c6
<         stop("x must be a matrix or data frame.")
---
>         stop("'x' must be a matrix or data frame.")
51c51
<     ##O                                      1:nchar(res$x2), 1:nchar(res$x2))),
---
>     ##O                                      seq_len(nchar(res$x2)), seq_len(nchar(res$x2)))),
74c74
<     cat("Revised data:\n")
---
>     cat(gettext("Revised data:", domain = "R-cluster"), "\n", sep = "")
76c76
<     cat("Order of objects:\n")
---
>     cat(gettext("Order of objects:", domain = "R-cluster"), "\n", sep = "")
79c79
<     cat("Variable used:\n")
---
>     cat(gettext("Variable used:", domain = "R-cluster"), "\n", sep = "")
81c81
<     cat("Separation step:\n")
---
>     cat(gettext("Separation step:", domain = "R-cluster"), "\n", sep = "")
83c83
<     cat("\nAvailable components:\n")
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "")
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/pam.q Recommended/cluster/R/pam.q
24c24
< 		    stop("'x' is not and cannot be converted to class \"dissimilarity\"")
---
> 		    stop(gettextf("'%s' argument is not and cannot be converted to class \"dissimilarity\"", "x"))
47c47
< 	if(!is.numeric(x)) stop("x is not a numeric dataframe or matrix.")
---
> 	if(!is.numeric(x)) stop(gettextf("'%s' argument is not a numeric dataframe or matrix.", "x"))
76,78c76
< 	    stop(gettextf(
< 		"'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d",
< 		k, n))
---
> 	    stop(gettextf("'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d", k, n))
128c126
< 	stop("No clustering performed, NAs in the computed dissimilarity matrix.")
---
> 	stop("No clustering performed, NA values in the computed dissimilarity matrix.")
170c168
<     names(r.isol) <- 1:k
---
>     names(r.isol) <- seq_len(k)
184c182
< 		      clus.avg.widths = res$avsil[1:k],
---
> 		      clus.avg.widths = res$avsil[seq_len(k)],
199,201c197,199
<     cat("Medoids:\n");		print(cbind(ID = x$id.med, x$medoids), ...)
<     cat("Clustering vector:\n");	print(x$clustering, ...)
<     cat("Objective function:\n");	print(x$objective, ...)
---
>     cat(gettext("Medoids:", domain = "R-cluster"), "\n", sep = "");		print(cbind(ID = x$id.med, x$medoids), ...)
>     cat(gettext("Clustering vector:", domain = "R-cluster"), "\n", sep = "");	print(x$clustering, ...)
>     cat(gettext("Objective function:", domain = "R-cluster"), "\n", sep = "");	print(x$objective, ...)
207c205
<     cat("\nAvailable components:\n")
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "")
221,222c219,220
<     cat("\nNumerical information per cluster:\n"); print(x$clusinfo, ...)
<     cat("\nIsolated clusters:\n L-clusters: ")
---
>     cat("\n", gettext("Numerical information per cluster:", domain = "R-cluster"), "\n", sep = ""); print(x$clusinfo, ...)
>     cat("\n", gettext("Isolated clusters:", domain = "R-cluster"), "\n ", gettext("L-clusters: ", domain = "R-cluster"), sep = "")
224c222
<     cat(" L*-clusters: ")
---
>     cat(gettext(" L*-clusters: ", domain = "R-cluster"))
227c225
< 	cat("\nSilhouette plot information:\n")
---
> 	cat("\n", gettext("Silhouette plot information:", domain = "R-cluster"), "\n", sep = "")
229c227
< 	cat("Average silhouette width per cluster:\n")
---
> 	cat(gettext("Average silhouette width per cluster:", domain = "R-cluster"), "\n", sep = "")
231c229
< 	cat("Average silhouette width of total data set:\n")
---
> 	cat(gettext("Average silhouette width of total data set:", domain = "R-cluster"), "\n", sep = "")
237c235
<     cat("\nAvailable components:\n");	print(names(x), ...)
---
>     cat("\n", gettext("Available components:", domain = "R-cluster"), "\n", sep = "");	print(names(x), ...)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/plothier.q Recommended/cluster/R/plothier.q
6,7c6,7
< pltree.twins <- function(x, main = paste("Dendrogram of ", deparse(x$call)),
< 			 labels = NULL, ylab = "Height", ...)
---
> pltree.twins <- function(x, main = gettextf("Dendrogram of %s", paste(deparse(x$call), collapse = ""), domain = "R-cluster"),
> 			 labels = NULL, ylab = gettext("Height", domain = "R-cluster"), ...)
24c24
<          xlab = "Height", adj = 0, col = c(2, 0), border = 0,
---
>          xlab = gettext("Height", domain = "R-cluster"), adj = 0, col = c(2, 0), border = 0,
91c91
< 	 sub = paste("Agglomerative Coefficient = ", round(x$ac, digits = 2)),
---
> 	 sub = gettextf("Agglomerative Coefficient = %s", round(x$ac, digits = 2), domain = "R-cluster"),
98,99c98,99
< 	main1 <- paste("Banner of ", cl)
< 	main2 <- paste("Dendrogram of ", cl)
---
> 	main1 <- gettextf("Banner of %s", cl, domain = "R-cluster")
> 	main2 <- gettextf("Dendrogram of %s", cl, domain = "R-cluster")
114c114
< 			     "\nMake a plot selection (or 0 to exit):\n") + 1
---
> 			     paste("\n", gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster"), "\n", sep = "")) + 1
147c147
< 	 sub  = paste("Divisive Coefficient = ", round(x$dc, digits = 2)),
---
> 	 sub  = gettextf("Divisive Coefficient = %s", round(x$dc, digits = 2), domain = "R-cluster"),
154,155c154,155
< 	main1 <- paste("Banner of ", cl)
< 	main2 <- paste("Dendrogram of ", cl)
---
> 	main1 <- gettextf("Banner of %s", cl, domain = "R-cluster")
> 	main2 <- gettextf("Dendrogram of %s", cl, domain = "R-cluster")
170c170
< 			     "\nMake a plot selection (or 0 to exit):\n") + 1
---
> 			     paste("\n", gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster"), "\n", sep = "")) + 1
200,201c200,201
< plot.mona <- function(x, main = paste("Banner of ", deparse(x$call)),
< 		      sub = NULL, xlab = "Separation step",
---
> plot.mona <- function(x, main = gettextf("Banner of %s", deparse(x$call), domain = "R-cluster"),
> 		      sub = NULL, xlab = gettext("Separation step", domain = "R-cluster"),
215c215
<     text(w, 1:length(names) - 0.5, names, adj = 0, col = col[1], ...)
---
>     text(w, seq_len(length(names)) - 0.5, names, adj = 0, col = col[1], ...)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/plotpart.q Recommended/cluster/R/plotpart.q
20,21c20,21
< 	tmenu <- paste("plot ", ## choices :
< 		       c("All", "Clusplot", "Silhouette Plot"))
---
> 	tmenu <- c("plot All", "plot Clusplot", "plot Silhouette Plot") ## choices
> 
26c26
< 			     "\nMake a plot selection (or 0 to exit):\n") + 1
---
> 			     paste("\n", gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster"), "\n", sep = "")) + 1
70c70
< 	    stop("NA-values are not allowed in dist-like 'x'.")
---
> 	    stop("NA values are not allowed in dist-like 'x'.")
97c97
< 			    labs <- 1:sizeDiss(x)
---
> 			    labs <- seq_len(sizeDiss(x))
103c103
< 		    labs <- 1:n
---
> 		    labs <- seq_len(n)
107c107
< 	if(is.null(labs)) labs <- 1:n
---
> 	if(is.null(labs)) labs <- seq_len(n)
116c116
< 	if(!is.matrix(x)) stop("x is not a data matrix")
---
> 	if(!is.matrix(x)) stop("'x' is not a data matrix")
130c130
< 	if(is.null(labs)) labs <- 1:n
---
> 	if(is.null(labs)) labs <- seq_len(n)
154,157c154,156
< 	 main = paste("CLUSPLOT(", deparse(substitute(x)),")"),
< 	 sub = paste("These two components explain",
< 	       round(100 * var.dec, digits = 2), "% of the point variability."),
< 	 xlab = "Component 1", ylab = "Component 2",
---
> 	 main = gettextf("CLUSPLOT(%s)", deparse(substitute(x))),
> 	 sub = gettextf("These two components explain %s percent of the point variability.", round(100 * var.dec, digits = 2)),
> 	 xlab = gettext("Component 1", domain = "R-cluster"), ylab = gettext("Component 2", domain = "R-cluster"),
165c164
< 	stop("x is not numeric")
---
> 	stop("'x' is not numeric")
178c177
< 	stop("NA-values are not allowed in clustering vector")
---
> 	stop("NA values are not allowed in clustering vector")
194c193
<     for(i in 1:nC) { ##-------------  i-th cluster  --------------
---
>     for(i in seq_len(nC)) { ##-------------  i-th cluster  --------------
199c198
< 			 cat("cluster",i," has only one observation ..\n")
---
> 			 cat(gettextf("cluster %d  has only one observation ..", i, domain = "R-cluster"), "\n", sep = "")
287c286
< 		    cat("span & rank2 : calling \"spannel\" ..\n")
---
> 		    cat(gettext("span & rank2 : calling \"spannel\" ..", domain = "R-cluster"), "\n", sep = "")
313,315c312
< 		    cat("ellipse( A= (", format(cov[1,]),"*", format(cov[2,2]),
< 			"),\n\td2=", format(d2[i]),
< 			", loc[]=", format(loc[i, ]), ")\n")
---
> 		    cat(sprintf("ellipse( A= (%s*%s),\n\td2=%s, loc[]=%s)", format(cov[1,]), format(cov[2,2]), format(d2[i]), format(loc[i, ])), "\n", sep = "")
356c353
< 	    stop("'col.clus' should have length 4 when color is TRUE")
---
> 	    stop("'col.clus' argument should have length 4 when color is TRUE")
358,359c355,356
< 	jInd <- if(nC > 4) pam(verhoud[i.verh], 4)$clustering else 1:nC
< 	for(i in 1:nC) {
---
> 	jInd <- if(nC > 4) pam(verhoud[i.verh], 4)$clustering else seq_len(nC)
> 	for(i in seq_len(nC)) {
367c364
< 	for(i in 1:nC)
---
> 	for(i in seq_len(nC))
375c372
< 	for(i in 1:nC) {
---
> 	for(i in seq_len(nC)) {
405c402
< 	for(i in 1:(nC - 1)) {
---
> 	for(i in seq_len(nC - 1)) {
464c461
< 	    for(i in 1:nC) { ## add cluster border points
---
> 	    for(i in seq_len(nC)) { ## add cluster border points
511,512c508
< 		stop(gettextf("no diss nor data found, nor the original argument of %s",
< 			      deparse(x$call)))
---
> 		stop(gettextf("no diss nor data found, nor the original argument of %s", deparse(x$call)))
518c514
< 	else stop("no diss nor data found for clusplot()'")
---
> 	else stop("no diss nor data found for 'clusplot()' function")
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/R/silhouette.R Recommended/cluster/R/silhouette.R
53c53
<     for(j in 1:k) { # j-th cluster:
---
>     for(j in seq_len(k)) { # j-th cluster:
88c88
< 	x <- as.integer(fx <- factor(x)) # now *has* values in 1:k
---
> 	x <- as.integer(fx <- factor(x)) # now *has* values in seq_len(k)
136c136
< 	    attr(object, "iOrd") <- 1:n
---
> 	    attr(object, "iOrd") <- seq_len(n)
141c141
<         rownames(object) <- as.character(1:n)
---
>         rownames(object) <- as.character(seq_len(n))
174c174,182
<     cls <- paste("Cluster sizes",
---
> 
>     if(!is.null(x$call)) {
>      if(!is.null(x$codes))
>     cat(gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz), k, deparse(x$call), domain = "R-cluster"), "\n",
>         gettextf("Cluster sizes, ids = (%s), and average silhouette widths:", paste(x$codes, collapse=", "), domain = "R-cluster"), "\n", sep = "")
>      else
>     cat(gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz), k, deparse(x$call), domain = "R-cluster"), "\n",
>         gettextf("Cluster sizes and average silhouette widths:", domain = "R-cluster"), "\n", sep = "")
>     } else {
176,180c184,189
<                  paste(", ids = (",paste(x$codes, collapse=", "),"),", sep=""),
<                  sep="")
<     cat("Silhouette of", sum(csiz), "units in", k, "clusters",
<         if(!is.null(x$call)) paste("from", deparse(x$call)), ":\n",
<         cls, "and average silhouette widths:\n")
---
>     cat(gettextf("Silhouette of %d units in %d clusters:", sum(csiz), k, domain = "R-cluster"), "\n",
>         gettextf("Cluster sizes, ids = (%s), and average silhouette widths:", paste(x$codes, collapse=", "), domain = "R-cluster"), "\n", sep = "")
>      else
>     cat(gettextf("Silhouette of %d units in %d clusters:", sum(csiz), k, domain = "R-cluster"), "\n",
>         gettext("Cluster sizes and average silhouette widths:", domain = "R-cluster"), "\n", sep = "")
>     }
184c193
<     cat("Individual silhouette widths:\n")
---
>     cat(gettext("Individual silhouette widths:", domain = "R-cluster"), "\n", sep = "")
210c219
< 	main <- "Silhouette plot"
---
> 	main <- gettext("Silhouette plot", domain = "R-cluster")
214c223
< 	    main <-  paste(main, "of", sub("^FF","", deparse(cll)))
---
> 	    main <-  gettextf("Silhouette plot of %s", sub("^FF","", deparse(cll)), domain = "R-cluster")
220c229
< 	sub <- paste("Average silhouette width : ",
---
> 	sub <- paste(gettext("Average silhouette width:", domain = "R-cluster"),
245c254
< 	for(j in 1:k) {
---
> 	for(j in seq_len(k)) {
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/man/bannerplot.Rd Recommended/cluster/man/bannerplot.Rd
11c11
<            main=NULL, sub=NULL, xlab = "Height",  adj = 0,
---
>            main=NULL, sub=NULL, xlab = gettext("Height", domain = "R-cluster"),  adj = 0,
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/man/pltree.Rd Recommended/cluster/man/pltree.Rd
13,14c13,14
< \method{pltree}{twins}(x, main = paste("Dendrogram of ", deparse(x$call)),
<              labels = NULL, ylab = "Height", \dots)
---
> \method{pltree}{twins}(x, main = gettextf("Dendrogram of \%s", paste(deparse(x$call), collapse = ""), domain = "R-cluster"),
>              labels = NULL, ylab = gettext("Height", domain = "R-cluster"), \dots)
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/src/clara.c Recommended/cluster/src/clara.c
19a20
> #include "localization.h"
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/src/cluster.h Recommended/cluster/src/cluster.h
7,12d6
< #ifdef ENABLE_NLS
< #include <libintl.h>
< #define _(String) dgettext ("cluster", String)
< #else
< #define _(String) (String)
< #endif
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/src/fanny.c Recommended/cluster/src/fanny.c
11a12
> #include "localization.h"
250c251
< 	if(trace_lev >= 2) Rprintf("  not converged: it = %d\n", it);
---
> 	if(trace_lev >= 2) Rprintf(_("  not converged: it = %d\n"), it);
258,259c259,265
< 	Rprintf("%s%sonverged after %d iterations,  obj = %#20.*g\n",
< 		trace_lev >=2 ? "\n" : "", (converged) ? "C" : "NOT c",
---
>      if(converged)
> 	Rprintf(_("%sConverged after %d iterations,  obj = %#20.*g\n"),
> 		trace_lev >=2 ? "\n" : "",
> 		it, (int)((trace_lev >= 2)? 20 : 7), cryt);
>      else
> 	Rprintf(_("%sNOT converged after %d iterations,  obj = %#20.*g\n"),
> 		trace_lev >=2 ? "\n" : "",
Only in Recommended/cluster/src: localization.h
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/src/pam.c Recommended/cluster/src/pam.c
17a18
> #include "localization.h"
312c313
< 	if(trace_lev) Rprintf("medoids given\n");
---
> 	if(trace_lev) Rprintf(_("medoids given\n"));
328c329
< 	if(trace_lev) Rprintf("build %d medoids:\n", kk);
---
> 	if(trace_lev) Rprintf(_("build %d medoids:\n"), kk);
359c360
< 		Rprintf("    new repr. %d\n", nmax);
---
> 		Rprintf(_("    new representative. %d\n"), nmax);
373c374
< 	Rprintf("  after build: medoids are");
---
> 	Rprintf(_("  after build: medoids are"));
377c378
< 	    Rprintf("\n  and min.dist dysma[1:n] are\n");
---
> 	    Rprintf(_("\n  and min.dist dysma[1:n] are\n"));
551c552
< 		Rprintf( "   swp new %*d <-> %*d old; decreasing diss. %7g by %g\n",
---
> 		Rprintf(_("   swp new %*d <-> %*d old; decreasing diss. %7g by %g\n"),
diff -rEZbwB '--exclude=*.[lo,d,pdf,mo,po,tgz,gz,save]*' '--exclude=MD5' '--exclude=Makefile*' '--exclude=all.R' '--exclude=Changes' R-recommended/cluster/src/twins.c Recommended/cluster/src/twins.c
14a15
> #include "localization.h"
