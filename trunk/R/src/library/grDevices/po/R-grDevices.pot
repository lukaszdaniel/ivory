msgid ""
msgstr ""
"Project-Id-Version: grDevices 3.2.0\n"
"POT-Creation-Date: 2014-08-10 17:28\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"



#: R/windows/windows.R: 0
#. R/windows/windows.R: gettext("  #plot calls are:", domain = "R-grDevices")

msgid "#plot calls are:"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: gettextf("'%s' argument disagrees with definition of '%s'", "from.ref.white", from$name)
#. R/convertColor.R: gettextf("'%s' argument disagrees with definition of '%s'", "to.ref.white", to$name)

msgid "'%s' argument disagrees with definition of '%s'"
msgstr ""


#: R/postscript.R: 0
#: R/recordplot.R: 0
#: R/windows/windows.R: 0
#. R/postscript.R: gettextf("'%s' argument is not an object of class %s", "font", dQuote("CIDFont"))
#. R/recordplot.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("recordedplot"))
#. R/windows/windows.R: gettextf("'%s' argument is not an object of class %s", "x", dQuote("SavedPlots"),     domain = "R-grDevices")

msgid "'%s' argument is not an object of class %s"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: gettextf("'%s' argument must be an object of class %s or a string", "from", dQuote("colorConverter"))
#. R/convertColor.R: gettextf("'%s' argument must be an object of class %s or a string", "to", dQuote("colorConverter"))

msgid "'%s' argument must be an object of class %s or a string"
msgstr ""


#: R/smooth2d.R: 0
#. R/smooth2d.R: gettextf("'%s' argument must be numeric", "bandwidth")

msgid "'%s' argument must be numeric"
msgstr ""


#: R/colorRamp.R: 0
#: R/smooth2d.R: 0
#. R/colorRamp.R: gettextf("'%s' argument must be positive", "bias")
#. R/smooth2d.R: gettextf("'%s' argument must be positive", "bandwidth")

msgid "'%s' argument must be positive"
msgstr ""


#: R/device.R: 0
#. R/device.R: gettextf("'%s' function called without an open graphics device", "dev.control()")
#. R/device.R: gettextf("'%s' function called without an open graphics device", "dev.displaylist()")

msgid "'%s' function called without an open graphics device"
msgstr ""


#: R/colorRamp.R: 0
#. R/colorRamp.R: stop("'alpha' must be false if 'space' is specified")

msgid "'alpha' must be false if 'space' is specified"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("'coef' must not be negative")

msgid "'coef' must not be negative"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("'device' should be a function")

msgid "'device' should be a function"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: warning("'drop' is always implicitly FALSE in '[.raster'")

msgid "'drop' is always implicitly FALSE in '[.raster'"
msgstr ""


#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/unix/dev2bitmap.R: stop("'file' argument is missing with no default")
#. R/unix/dev2bitmap.R: stop("'file' argument is missing with no default")
#. R/windows/dev2bitmap.R: stop("'file' argument is missing with no default")
#. R/windows/dev2bitmap.R: stop("'file' argument is missing with no default")

msgid "'file' argument is missing with no default"
msgstr ""


#: R/postscript.R: 0
#: R/unix/dev2bitmap.R: 0
#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/postscript.R: stop("'file' argument must be a non-empty character string")
#. R/unix/dev2bitmap.R: stop("'file' argument must be a non-empty character string")
#. R/unix/dev2bitmap.R: stop("'file' argument must be a non-empty character string")
#. R/windows/dev2bitmap.R: stop("'file' argument must be a non-empty character string")
#. R/windows/dev2bitmap.R: stop("'file' argument must be a non-empty character string")

msgid "'file' argument must be a non-empty character string"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: stop("'gamma' argument must be a scalar or 'sRGB' value")

msgid "'gamma' argument must be a scalar or 'sRGB' value"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("'name' must be a character vector")

msgid "'name' must be a character vector"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("'name.opt' argument must be character, name of an existing list")

msgid "'name.opt' argument must be character, name of an existing list"
msgstr ""


#: R/smooth2d.R: 0
#. R/smooth2d.R: stop("'nbin' argument must be numeric of length 1 or 2")

msgid "'nbin' argument must be numeric of length 1 or 2"
msgstr ""


#: R/utils.R: 0
#. R/utils.R: stop("'r' must be a 'range()' result, hence of length 2")

msgid "'r' must be a 'range()' result, hence of length 2"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("'r', 'g', and 'b' arguments must be in [0, maxColorValue]")

msgid "'r', 'g', and 'b' arguments must be in [0, maxColorValue]"
msgstr ""


#: R/unix/png.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/png.R: 0
#. R/unix/png.R: stop("'res' must be specified unless 'units = \"px\"'")
#. R/windows/cairo.R: stop("'res' must be specified unless 'units = \"px\"'")
#. R/windows/cairo.R: stop("'res' must be specified unless 'units = \"px\"'")
#. R/windows/cairo.R: stop("'res' must be specified unless 'units = \"px\"'")
#. R/windows/cairo.R: stop("'res' must be specified unless 'units = \"px\"'")
#. R/windows/png.R: stop("'res' must be specified unless 'units = \"px\"'")

msgid "'res' must be specified unless 'units = \"px\"'"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("'start' and 'end' must be distinct and in [0, 1].")

msgid "'start' and 'end' must be distinct and in [0, 1]."
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("'type' not applicable to the R console")

msgid "'type' not applicable to the R console"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("'x' and 'y' lengths differ")

msgid "'x' and 'y' lengths differ"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("'x' is a list, but does not have components 'x' and 'y'")

msgid "'x' is a list, but does not have components 'x' and 'y'"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("'x' is a list, but does not have components 'x', 'y'  and 'z'")

msgid "'x' is a list, but does not have components 'x', 'y'  and 'z'"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("'x', 'y' and 'z' lengths differ")

msgid "'x', 'y' and 'z' lengths differ"
msgstr ""


#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/unix/dev2bitmap.R: gettextf("Available devices are:\n%s", paste(gsdevs, collapse = "\n"))
#. R/windows/dev2bitmap.R: gettextf("Available devices are:\n%s", paste(gsdevs, collapse = "\n"))

msgid "Available devices are:\n%s"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: gettextf("Color space converter: %s", x$name, domain = "R-grDevices")

msgid "Color space converter: %s"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: gettextf("  Contains %d out of a maximum %d plots", x[[2L]], x[[3L]], domain = "R-grDevices")

msgid "Contains %d out of a maximum %d plots"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: gettextf("  Current position is plot %d", 1L + x[[4L]], domain = "R-grDevices")

msgid "Current position is plot %d"
msgstr ""


#: R/postscript.R: 0
#: R/unix/dev2bitmap.R: 0
#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/postscript.R: stop("GhostScript was not found")
#. R/unix/dev2bitmap.R: stop("GhostScript was not found")
#. R/unix/dev2bitmap.R: stop("GhostScript was not found")
#. R/windows/dev2bitmap.R: stop("GhostScript was not found")
#. R/windows/dev2bitmap.R: stop("GhostScript was not found")

msgid "GhostScript was not found"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("Invalid font database name")

msgid "Invalid font database name"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("Invalid font type")

msgid "Invalid font type"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: gettextf("Reference white: %s", x$reference.white, domain = "R-grDevices")

msgid "Reference white: %s"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: gettext("Saved Plots from R version 1.4.0 or later", domain = "R-grDevices")

msgid "Saved Plots from R version 1.4.0 or later"
msgstr ""


#: R/gevents.R: 0
#. R/gevents.R: gettext("Waiting for input", domain = "R-grDevices")

msgid "Waiting for input"
msgstr ""


#: R/unix/x11.R: 0
#. R/unix/x11.R: stop("X11 library is missing: install XQuartz from xquartz.macosforge.org", domain = "R-utils")

msgid "X11 library is missing: install XQuartz from xquartz.macosforge.org"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("a raster array must be numeric")

msgid "a raster array must be numeric"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("a raster array must have exactly 3 dimensions")

msgid "a raster array must have exactly 3 dimensions"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("a raster array must have exactly 3 or 4 planes")

msgid "a raster array must have exactly 3 or 4 planes"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("a raster matrix must be character, or numeric, or logical")

msgid "a raster matrix must be character, or numeric, or logical"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: warning("argument 'append' is for back-compatibility and will be ignored", immediate. = TRUE)

msgid "argument 'append' is for back-compatibility and will be ignored"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("argument is missing with no default")

msgid "argument is missing with no default"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("at least 2 columns are needed")

msgid "at least 2 columns are needed"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("at least 3 columns are needed")

msgid "at least 3 columns are needed"
msgstr ""


#: R/unix/x11.R: 0
#. R/unix/x11.R: warning("cairo-based types are not supported on this build - using \"Xlib\"")

msgid "cairo-based types are not supported on this build - using \"Xlib\""
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("can only bring windows devices to the front")

msgid "can only bring windows devices to the front"
msgstr ""


#: R/unix/x11.R: 0
#. R/unix/x11.R: stop("can only copy from 'X11(type=\"*cairo\")' devices")

msgid "can only copy from 'X11(type=\"*cairo\")' devices"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("can only copy from 'windows' devices")

msgid "can only copy from 'windows' devices"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("can only manipulate windows devices")

msgid "can only manipulate windows devices"
msgstr ""


#: R/device.R: 0
#: R/unix/quartz.R: 0
#. R/device.R: stop("can only print from a screen device")
#. R/device.R: stop("can only print from a screen device")
#. R/device.R: stop("can only print from a screen device")
#. R/unix/quartz.R: stop("can only print from a screen device")

msgid "can only print from a screen device"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("cannot copy device to itself")

msgid "cannot copy device to itself"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("cannot copy from the null device")

msgid "cannot copy from the null device"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("cannot copy to the null device")

msgid "cannot copy to the null device"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("cannot reset non-existent '%s'", name.opt)

msgid "cannot reset non-existent '%s'"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("cannot shut down device 1 (the null device)")

msgid "cannot shut down device 1 (the null device)"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("cannot supply 'which' and 'device' at the same time")

msgid "cannot supply 'which' and 'device' at the same time"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: warning("color spaces use different reference whites")

msgid "color spaces use different reference whites"
msgstr ""


#: R/device.R: 0
#. R/device.R: gettextf("dev.new(): using '%s'", paste("pdf(file=\"", tmp[!fe][1L], "\")", collapse = ""))
#. R/device.R: gettextf("dev.new(): using '%s'", paste("postscript(file=\"", tmp[!fe][1L], "\")",     collapse = ""))

msgid "dev.new(): using '%s'"
msgstr ""


#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/unix/dev2bitmap.R: gettextf("device '%s' is not available\n", type)
#. R/windows/dev2bitmap.R: gettextf("device '%s' is not available\n", type)

msgid "device '%s' is not available"
msgstr ""


#: R/device.R: 0
#. R/device.R: gettextf("device '%s' was not found", dev)

msgid "device '%s' was not found"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("dimensions of 'x', 'y' and 'z' do not match")

msgid "dimensions of 'x', 'y' and 'z' do not match"
msgstr ""


#: R/convertColor.R: 0
#. R/convertColor.R: gettextf("display gamma = %s", format(x$gamma), domain = "R-grDevices")

msgid "display gamma = %s"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("finite coordinates are required")

msgid "finite coordinates are required"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("font %s already in use", sQuote(i))

msgid "font %s already in use"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("font encoding mismatch '%s'/'%s'", font$encoding, encoding)

msgid "font encoding mismatch '%s'/'%s'"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("increasing 'x' and 'y' values expected")

msgid "increasing 'x' and 'y' values expected"
msgstr ""


#: R/cairo.R: 0
#: R/postscript.R: 0
#: R/postscript.R: 0
#: R/unix/png.R: 0
#: R/unix/png.R: 0
#: R/unix/png.R: 0
#: R/unix/png.R: 0
#: R/unix/quartz.R: 0
#: R/unix/quartz.R: 0
#: R/unix/x11.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/cairo.R: 0
#: R/windows/png.R: 0
#: R/windows/png.R: 0
#: R/windows/png.R: 0
#: R/windows/png.R: 0
#: R/windows/windows.R: 0
#. R/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/postscript.R: gettextf("invalid '%s' argument", "family")
#. R/postscript.R: gettextf("invalid '%s' argument", "family")
#. R/unix/png.R: gettextf("invalid '%s' argument", "filename")
#. R/unix/png.R: gettextf("invalid '%s' argument", "filename")
#. R/unix/png.R: gettextf("invalid '%s' argument", "filename")
#. R/unix/png.R: gettextf("invalid '%s' argument", "filename")
#. R/unix/quartz.R: gettextf("invalid '%s' argument", "title")
#. R/unix/quartz.R: gettextf("invalid '%s' argument", "file")
#. R/unix/x11.R: gettextf("invalid '%s' argument", "title")
#. R/windows/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/cairo.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/png.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/png.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/png.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/png.R: gettextf("invalid '%s' argument", "filename")
#. R/windows/windows.R: gettextf("invalid '%s' argument", "filename")

msgid "invalid '%s' argument"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid 'cmapEncoding' in font specification")

msgid "invalid 'cmapEncoding' in font specification"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("invalid 'file' argument '%s'", file)
#. R/postscript.R: gettextf("invalid 'file' argument '%s'", file)
#. R/postscript.R: gettextf("invalid 'file' argument '%s'", file)

msgid "invalid 'file' argument '%s'"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid CMap name in font specification")

msgid "invalid CMap name in font specification"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid PDF resource in font specification")

msgid "invalid PDF resource in font specification"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid PDF version")

msgid "invalid PDF version"
msgstr ""


#: R/unix/quartz.R: 0
#. R/unix/quartz.R: stop("invalid Quartz font:  must be 4 strings")

msgid "invalid Quartz font:  must be 4 strings"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("invalid Windows font:  must be a single font family name")

msgid "invalid Windows font:  must be a single font family name"
msgstr ""


#: R/unix/x11.R: 0
#. R/unix/x11.R: stop("invalid X11 font specification: ", errDesc)

msgid "invalid X11 font specification:"
msgstr ""


#: R/postscript.R: 0
#: R/unix/quartz.R: 0
#: R/unix/x11.R: 0
#: R/windows/windows.R: 0
#. R/postscript.R: gettext("invalid arguments in %s (must be font names)", domain = "R-grDevices")
#. R/postscript.R: gettext("invalid arguments in %s (must be font names)", domain = "R-grDevices")
#. R/unix/quartz.R: gettextf("invalid arguments in %s (must be font names)", sQuote("quartzFonts"))
#. R/unix/x11.R: gettextf("invalid arguments in %s (must be font names)", sQuote("X11Fonts"))
#. R/windows/windows.R: gettextf("invalid arguments in %s (must be font names)", sQuote("windowsFonts"))

msgid "invalid arguments in %s (must be font names)"
msgstr ""


#: R/postscript.R: 0
#: R/unix/quartz.R: 0
#: R/unix/x11.R: 0
#: R/windows/windows.R: 0
#. R/postscript.R: gettextf("invalid arguments in %s (need named args)", sQuote(deparse(sys.call(sys.parent()))))
#. R/postscript.R: gettext("invalid arguments in %s (need named args)", domain = "R-grDevices")
#. R/postscript.R: gettext("invalid arguments in %s (need named args)", domain = "R-grDevices")
#. R/unix/quartz.R: gettextf("invalid arguments in %s (need named args)", sQuote("quartzFonts"))
#. R/unix/x11.R: gettextf("invalid arguments in %s (need named args)", sQuote("X11Fonts"))
#. R/windows/windows.R: gettextf("invalid arguments in %s (need named args)", sQuote("windowsFonts"))

msgid "invalid arguments in %s (need named args)"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid encoding in font specification")

msgid "invalid encoding in font specification"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid family name in font specification")
#. R/postscript.R: stop("invalid family name in font specification")

msgid "invalid family name in font specification"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("invalid first argument")

msgid "invalid first argument"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: stop("invalid first argument [bad language object]")

msgid "invalid first argument [bad language object]"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid metric information in font specification")
#. R/postscript.R: stop("invalid metric information in font specification")

msgid "invalid metric information in font specification"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("invalid options in '%s'", name.opt)

msgid "invalid options in '%s'"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("invalid output format")

msgid "invalid output format"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("invalid raster subassignment")

msgid "invalid raster subassignment"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("invalid raster subsetting")

msgid "invalid raster subsetting"
msgstr ""


#: R/device.R: 0
#. R/device.R: stop("invalid setting for 'getOption(\"device\")'")

msgid "invalid setting for 'getOption(\"device\")'"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("invalid value for 'rescale'")

msgid "invalid value for 'rescale'"
msgstr ""


#: R/recordplot.R: 0
#. R/recordplot.R: stop("loading snapshot from a different session")

msgid "loading snapshot from a different session"
msgstr ""


#: R/device.R: 0
#. R/device.R: warning("need to specify one of 'width' and 'height'")

msgid "need to specify one of 'width' and 'height'"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("no 'z' matrix specified")

msgid "no 'z' matrix specified"
msgstr ""


#: R/recordplot.R: 0
#. R/recordplot.R: stop("no current device to record from")

msgid "no current device to record from"
msgstr ""


#: R/device.R: 0
#: R/unix/quartz.R: 0
#. R/device.R: stop("no device to print from")
#. R/device.R: stop("no device to print from")
#. R/device.R: stop("no device to print from")
#. R/unix/quartz.R: stop("no device to print from")

msgid "no device to print from"
msgstr ""


#: R/calc.R: 0
#. R/calc.R: stop("no proper 'z' matrix specified")

msgid "no proper 'z' matrix specified"
msgstr ""


#: R/unix/x11.R: 0
#: R/windows/windows.R: 0
#. R/unix/x11.R: stop("no such device")
#. R/windows/windows.R: stop("no such device")

msgid "no such device"
msgstr ""


#: R/device.R: 0
#. R/device.R: gettextf("no suitable unused file name for '%s'", "pdf()")
#. R/device.R: gettextf("no suitable unused file name for '%s'", "postscript()")

msgid "no suitable unused file name for '%s'"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("numerical color values must be positive")

msgid "numerical color values must be positive"
msgstr ""


#: R/raster.R: 0
#. R/raster.R: stop("operator not meaningful for raster objects")

msgid "operator not meaningful for raster objects"
msgstr ""


#: R/prettyDate.R: 0
#. R/prettyDate.R: stop("range too small for 'min.n'")

msgid "range too small for 'min.n'"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("rgb matrix must be numeric")

msgid "rgb matrix must be numeric"
msgstr ""


#: R/colorstuff.R: 0
#. R/colorstuff.R: stop("rgb matrix must have 3 rows")

msgid "rgb matrix must have 3 rows"
msgstr ""


#: R/unix/quartz.R: 0
#: R/unix/x11.R: 0
#: R/unix/x11.R: 0
#: R/windows/windows.R: 0
#: R/windows/windows.R: 0
#. R/unix/quartz.R: stop("screen devices should not be used in examples etc", domain = "R-grDevices")
#. R/unix/quartz.R: warning("screen devices should not be used in examples etc", immediate. = TRUE, noBreaks. = TRUE,     domain = "R-grDevices")
#. R/unix/x11.R: stop("screen devices should not be used in examples etc", domain = "R-grDevices")
#. R/unix/x11.R: warning("screen devices should not be used in examples etc", immediate. = TRUE, noBreaks. = TRUE,     domain = "R-grDevices")
#. R/windows/windows.R: stop("screen devices should not be used in examples etc", domain = "R-grDevices")
#. R/windows/windows.R: warning("screen devices should not be used in examples etc", immediate. = TRUE, noBreaks. = TRUE,     domain = "R-grDevices")

msgid "screen devices should not be used in examples etc"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("status %d in running command '%s'", ret, cmd)

msgid "status %d in running command '%s'"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("subscript is out of range")

msgid "subscript is out of range"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: gettextf("unknown family '%s'", family)
#. R/postscript.R: gettextf("unknown family '%s'", family)

msgid "unknown family '%s'"
msgstr ""


#: R/unix/x11.R: 0
#. R/unix/x11.R: stop("unknown family for 'X11(type = \"XLib\")'")

msgid "unknown family for 'X11(type = \"XLib\")'"
msgstr ""


#: R/postscript.R: 0
#. R/postscript.R: stop("unknown font")

msgid "unknown font"
msgstr ""


#: R/unix/dev2bitmap.R: 0
#: R/windows/dev2bitmap.R: 0
#. R/unix/dev2bitmap.R: warning("unrecognized format of gs -help")
#. R/windows/dev2bitmap.R: warning("unrecognized format of gs -help")

msgid "unrecognized format of gs -help"
msgstr ""


#: R/windows/windows.R: 0
#. R/windows/windows.R: stop("windows devices should not be used in examples etc", domain = "R-grDevices")
#. R/windows/windows.R: stop("windows devices should not be used in examples etc", domain = "R-grDevices")

msgid "windows devices should not be used in examples etc"
msgstr ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: ngettext(n, "%d x value <= 0 omitted from logarithmic plot", "%d x values <= 0 omitted from logarithmic plot",     domain = "R-grDevices")
#. R/xyz.coords.R: ngettext(n, "%d x value <= 0 omitted from logarithmic plot", "%d x values <= 0 omitted from logarithmic plot",     domain = "R-grDevices")

msgid        "%d x value <= 0 omitted from logarithmic plot"
msgid_plural "%d x values <= 0 omitted from logarithmic plot"
msgstr[0]    ""
msgstr[1]    ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: ngettext(n, "%d y value <= 0 omitted from logarithmic plot", "%d y values <= 0 omitted from logarithmic plot",     domain = "R-grDevices")
#. R/xyz.coords.R: ngettext(n, "%d y value <= 0 omitted from logarithmic plot", "%d y values <= 0 omitted from logarithmic plot",     domain = "R-grDevices")

msgid        "%d y value <= 0 omitted from logarithmic plot"
msgid_plural "%d y values <= 0 omitted from logarithmic plot"
msgstr[0]    ""
msgstr[1]    ""


#: R/xyz.coords.R: 0
#. R/xyz.coords.R: ngettext(n, "%d z value <= 0 omitted from logarithmic plot", "%d z values <= 0 omitted from logarithmic plot",     domain = "R-grDevices")

msgid        "%d z value <= 0 omitted from logarithmic plot"
msgid_plural "%d z values <= 0 omitted from logarithmic plot"
msgstr[0]    ""
msgstr[1]    ""


#: R/postscript.R: 0
#. R/postscript.R: ngettext(as.integer(sum(ii)), "%s differs between new and previous", "%s differ between new and previous",     domain = "R-grDevices")

msgid        "%s differs between new and previous"
msgid_plural "%s differ between new and previous"
msgstr[0]    ""
msgstr[1]    ""


#: R/postscript.R: 0
#. R/postscript.R: ngettext(as.integer(sum(ii)), "%s differs between new and previous\n\t ==> NOT changing %s",     "%s differ between new and previous\n\t ==> NOT changing %s", domain = "R-grDevices")

msgid        "%s differs between new and previous\n\t ==> NOT changing %s"
msgid_plural "%s differ between new and previous\n\t ==> NOT changing %s"
msgstr[0]    ""
msgstr[1]    ""


#: R/postscript.R: 0
#. R/postscript.R: ngettext(as.integer(sum(is.na(matches))), "invalid argument name %s in '%s'", "invalid argument names %s in '%s'",     domain = "R-grDevices")

msgid        "invalid argument name %s in '%s'"
msgid_plural "invalid argument names %s in '%s'"
msgstr[0]    ""
msgstr[1]    ""
