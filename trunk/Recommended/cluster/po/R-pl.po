msgid ""
msgstr ""
"Project-Id-Version: cluster 1.14.2\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2014-07-13 09:15\n"
"PO-Revision-Date: 2014-06-28 13:21+0100\n"
"Last-Translator: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language-Team: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language: pl_PL\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n==1 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 "
"|| n%100>=20) ? 1 : 2);\n"
"X-Poedit-SourceCharset: iso-8859-1\n"
"X-Generator: Poedit 1.5.4\n"

#. R/daisy.q: gettextf("%s has constant columns %s; these are standardized to 0", sQuote("x"),     pColl(which(sx == 0)))
#: R/daisy.q:0
msgid "%s has constant columns %s; these are standardized to 0"
msgstr "%s posiada stałe kolumny %s; zostały one ustandaryzowane do zera"

#. R/daisy.q: gettextf("%s has invalid column names", ct)
#: R/daisy.q:0
msgid "%s has invalid column names"
msgstr "%s posiada niepoprawne nazwy kolumn"

#. R/clara.q: gettextf("%s is a \"dist\" object, but should be a data matrix or frame", dataname)
#: R/clara.q:0
msgid "%s is a \"dist\" object, but should be a data matrix or frame"
msgstr "%s jest obiektem klasy \"dist\", ale powinien być macierzą lub ramką"

#. R/daisy.q: gettextf("%s is not a dataframe or a numeric matrix.", dataname)
#: R/daisy.q:0
msgid "%s is not a dataframe or a numeric matrix."
msgstr "%s nie jest ramką danych ani też macierzą liczbową"

#. R/agnes.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/clara.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/diana.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/fanny.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/pam.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#: R/agnes.q:0 R/clara.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
msgid "%s is not a numeric dataframe or matrix."
msgstr "%s nie jest ramką liczbową ani też macierzą"

#. R/agnes.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname)
#. R/diana.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname)
#. R/fanny.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname)
#. R/pam.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"", dataname)
#: R/agnes.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
msgid "%s is not and cannot be converted to class \"dissimilarity\""
msgstr ""
"%s nie jest obiektem klasy \"dissimilarity\" ani nie może być w taki obiekt "
"przekształcony"

#. R/daisy.q: gettextf("%s must be in 1:ncol(x)", ct)
#: R/daisy.q:0
msgid "%s must be in 1:ncol(x)"
msgstr "%s musi być w przedziale 1:ncol(x)"

#. R/daisy.q: gettextf("%s must contain column names or numbers", ct)
#: R/daisy.q:0
msgid "%s must contain column names or numbers"
msgstr "%s musi zawierać nazwy kolumn lub liczby"

#. R/ellipsoidhull.R: stop("'A' must be p x p  cov-matrix defining an ellipsoid")
#: R/ellipsoidhull.R:0
msgid "'A' must be p x p  cov-matrix defining an ellipsoid"
msgstr "'A' musi być macierzą kowariancji p x p określającą elipsoidę"

#. R/clusGap.R: stop("'B' has to be a positive integer")
#: R/clusGap.R:0
msgid "'B' has to be a positive integer"
msgstr "'B' musi być dodatnią liczbą całkowitą"

#. R/plotpart.q: stop("'col.clus' argument should have length 4 when color is TRUE")
#: R/plotpart.q:0
msgid "'col.clus' argument should have length 4 when color is TRUE"
msgstr ""
"argument 'col.clus' powinien mieć długość 4, gdy 'color' ma wartość TRUE"

#. R/silhouette.R: stop("'dmatrix' is not a dissimilarity matrix compatible to 'x'")
#. R/silhouette.R: stop("'dmatrix' is not a dissimilarity matrix compatible to 'x'")
#: R/silhouette.R:0
msgid "'dmatrix' is not a dissimilarity matrix compatible to 'x'"
msgstr "'dmatrix' nie jest macierzą różnic kompatybilną z 'x'"

#. R/fanny.q: stop("'iniMem.p' must be a nonnegative n * k matrix with rowSums == 1")
#: R/fanny.q:0
msgid "'iniMem.p' must be a nonnegative n * k matrix with rowSums == 1"
msgstr "'iniMem.p' musi być nieujemną maceirzą n x k z rowSums == 1"

#. R/fanny.q: stop("'k' (number of clusters) must be in {1,2, .., n/2 -1}")
#: R/fanny.q:0
msgid "'k' (number of clusters) must be in {1,2, .., n/2 -1}"
msgstr "'k' (liczba grup) musi mieścić się w przedziale {1,2, .., n/2 -1}"

#. R/fanny.q: stop("'m', a membership matrix, must be nonnegative with rowSums == 1")
#: R/fanny.q:0
msgid "'m', a membership matrix, must be nonnegative with rowSums == 1"
msgstr "macierz przynależności 'm' musi być nieujemna z rowSums == 1"

#. R/fanny.q: stop("'maxit' must be non-negative integer")
#: R/fanny.q:0
msgid "'maxit' must be non-negative integer"
msgstr "'maxit' musi być nieujemną liczbą całkowitą"

#. R/pam.q: gettextf("'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d",     k, n)
#: R/pam.q:0
msgid ""
"'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d"
msgstr ""
"'medoids' musi być wartością NULL lub wektorem %d różnych indeksów w "
"{1,2, .., n}, n=%d"

#. R/fanny.q: stop("'memb.exp' must be a finite number > 1")
#: R/fanny.q:0
msgid "'memb.exp' must be a finite number > 1"
msgstr "'memb.exp' musi być skończoną liczbą > 1"

#. R/internal.R: stop("'n' argument must be >= 2")
#. R/internal.R: stop("'n' argument must be >= 2")
#: R/internal.R:0
msgid "'n' argument must be >= 2"
msgstr "argument 'n' musi być >= 2"

#. R/agnes.q: stop("'par.method' must be of length 1, 3, or 4")
#. R/agnes.q: stop("'par.method' must be of length 1, 3, or 4")
#: R/agnes.q:0
msgid "'par.method' must be of length 1, 3, or 4"
msgstr "'par.method' musi być długości 1, 3, lub 4"

#. R/clara.q: stop("'samples' should be at least 1")
#: R/clara.q:0
msgid "'samples' should be at least 1"
msgstr "'samples' powinno wynosić przynajmniej 1"

#. R/clara.q: gettextf("'sampsize' = %d should not be larger than the number of objects, %d", sampsize,     n)
#: R/clara.q:0
msgid "'sampsize' = %d should not be larger than the number of objects, %d"
msgstr "'sampsize' = %d nie powinien być większy niż liczba obiektów, %d"

#. R/clara.q: gettextf("'sampsize' should be at least %d = max(2, 1+ number of clusters)", max(2,     k + 1))
#: R/clara.q:0
msgid "'sampsize' should be at least %d = max(2, 1+ number of clusters)"
msgstr "'sampsize' powinien być co najmniej %d = max(2, 1+ liczba grup)"

#. R/daisy.q: stop("'weights' must be of length p (or 1)")
#: R/daisy.q:0
msgid "'weights' must be of length p (or 1)"
msgstr "'weights' musi być o długości 'p' (lub 1)"

#. R/plotpart.q: stop("'x' is not a data matrix")
#: R/plotpart.q:0
msgid "'x' is not a data matrix"
msgstr "'x' nie jest macierzą danych"

#. R/plotpart.q: stop("'x' is not numeric")
#: R/plotpart.q:0
msgid "'x' is not numeric"
msgstr "'x' nie jest liczbą"

#. R/mona.q: stop("'x' must be a matrix or data frame.")
#: R/mona.q:0
msgid "'x' must be a matrix or data frame."
msgstr "'x' musi być macierzą lub ramką danych."

#. R/ellipsoidhull.R: stop("'x' must be numeric  n x p matrix")
#: R/ellipsoidhull.R:0
msgid "'x' must be numeric  n x p matrix"
msgstr "'x' musi być liczbową macierzą n x p"

#. R/silhouette.R: stop("'x' must only have integer codes")
#. R/silhouette.R: stop("'x' must only have integer codes")
#: R/silhouette.R:0
msgid "'x' must only have integer codes"
msgstr "'x' musi posiadać tylko kody będące liczbami całkowitymi"

#. R/ellipsoidhull.R: gettext("** Warning: ** the algorithm did not terminate reliably!\n  (in the available number of iterations)",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"** Warning: ** the algorithm did not terminate reliably!\n"
"  (in the available number of iterations)"
msgstr ""
"** Ostrzeżenie: ** algorytm nie zakończył się w sposób wiarygodny!\n"
" (w dostępnej liczbie iteracji)"

#. R/ellipsoidhull.R: gettext("** Warning: ** the algorithm did not terminate reliably!\n  most probably because of collinear data",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"** Warning: ** the algorithm did not terminate reliably!\n"
"  most probably because of collinear data"
msgstr ""
"** Ostrzeżenie: ** algorytm nie zakończył się w sposób wiarygodny!\n"
" prawdopodobnie z powodu wspóliniowych danych"

#. R/clusGap.R: gettextf(" --> Number of clusters (method '%s'): %d", method, nc, domain = "R-cluster")
#: R/clusGap.R:0
msgid "--> Number of clusters (method '%s'): %d"
msgstr "--> Liczba grup (metoda '%s'): %d"

#. R/clusGap.R: gettextf(" --> Number of clusters (method '%s', SE.factor=%g): %d", method, SE.factor,     nc, domain = "R-cluster")
#: R/clusGap.R:0
msgid "--> Number of clusters (method '%s', SE.factor=%g): %d"
msgstr "--> Liczba grup (metoda '%s', SE.factor=%g): %d"

#. R/plotpart.q: warning(">>>>> funny case in clusplot.default() -- please report!\n")
#: R/plotpart.q:0
msgid ">>>>> funny case in clusplot.default() -- please report!"
msgstr ""
">>>>> zabawny przypadek w 'clusplot.default()' -- proszę zgłosić raport!"

#. R/plothier.q: gettextf("Agglomerative Coefficient = %s", round(x$ac, digits = 2), domain = "R-cluster")
#: R/plothier.q:0
msgid "Agglomerative Coefficient = %s"
msgstr "Współczynnik aglomeracyjny = %s"

#. R/agnes.q: gettext("Agglomerative coefficient: ", domain = "R-cluster")
#. R/agnes.q: gettext("Agglomerative coefficient: ", domain = "R-cluster")
#: R/agnes.q:0
msgid "Agglomerative coefficient:"
msgstr "Współczynnik aglomeracyjny:"

#. R/mona.q: stop("All variables must be binary (e.g., factor with 2 levels).")
#: R/mona.q:0
msgid "All variables must be binary (e.g., factor with 2 levels)."
msgstr "Wszystkie zmienne muszą być binarne (czynnik z dwoma poziomami)"

#. R/agnes.q: gettext("Available components:", domain = "R-cluster")
#. R/agnes.q: gettext("Available components:", domain = "R-cluster")
#. R/clara.q: gettext("Available components:", domain = "R-cluster")
#. R/clara.q: gettext("Available components:", domain = "R-cluster")
#. R/diana.q: gettext("Available components:", domain = "R-cluster")
#. R/diana.q: gettext("Available components:", domain = "R-cluster")
#. R/fanny.q: gettext("Available components:", domain = "R-cluster")
#. R/fanny.q: gettext("Available components:", domain = "R-cluster")
#. R/mona.q: gettext("Available components:", domain = "R-cluster")
#. R/pam.q: gettext("Available components:", domain = "R-cluster")
#. R/pam.q: gettext("Available components:", domain = "R-cluster")
#: R/agnes.q:0 R/clara.q:0 R/diana.q:0 R/fanny.q:0 R/mona.q:0 R/pam.q:0
msgid "Available components:"
msgstr "Dostępne komponenty:"

#. R/clara.q: gettext("Average silhouette width of best sample: ", domain = "R-cluster")
#: R/clara.q:0
msgid "Average silhouette width of best sample:"
msgstr "Przeciętna szerokość sylwetki dla najlepszej próbki:"

#. R/fanny.q: gettext("Average silhouette width of total data set:", domain = "R-cluster")
#. R/pam.q: gettext("Average silhouette width of total data set:", domain = "R-cluster")
#: R/fanny.q:0 R/pam.q:0
msgid "Average silhouette width of total data set:"
msgstr "Przeciętna szerokość sylwetki pełnego zbioru danych:"

#. R/clara.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#. R/fanny.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#. R/pam.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#: R/clara.q:0 R/fanny.q:0 R/pam.q:0
msgid "Average silhouette width per cluster:"
msgstr "Przeciętna szerokość sylwetki na grupę:"

#. R/silhouette.R: gettext("Average silhouette width:", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Average silhouette width:"
msgstr "Przeciętna szerokość sylwetki:"

#. R/clusGap.R: gettextf("B=%d simulated reference sets, k = 1..%d", x$B, K, domain = "R-cluster")
#: R/clusGap.R:0
msgid "B=%d simulated reference sets, k = 1..%d"
msgstr "B=%d symulowane zbiory referencyjne, k = 1..%d"

#. R/plothier.q: gettextf("Banner of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Banner of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Banner of %s", deparse(x$call), domain = "R-cluster")
#: R/plothier.q:0
msgid "Banner of %s"
msgstr "Baner %s"

#. R/clara.q: gettext("Best sample:", domain = "R-cluster")
#. R/clara.q: gettext("Best sample:", domain = "R-cluster")
#: R/clara.q:0
msgid "Best sample:"
msgstr "Najlepsza próbka:"

#. R/clusGap.R: gettextf("Bootstrapping, b = 1,2,..., B (= %d)  [one \".\" per sample]:", B, domain = "R-cluster")
#: R/clusGap.R:0
msgid "Bootstrapping, b = 1,2,..., B (= %d)  [one \".\" per sample]:"
msgstr "Bootstrapowanie, b = 1,2,..., B (= %d)  [jeden \".\" na próbkę]:"

#. R/plotpart.q: gettextf("CLUSPLOT(%s)", deparse(substitute(x)))
#: R/plotpart.q:0
msgid "CLUSPLOT(%s)"
msgstr "CLUSPLOT(%s)"

#. R/agnes.q: gettext("Call: ", domain = "R-cluster")
#. R/clara.q: gettext("Call: ", domain = "R-cluster")
#: R/agnes.q:0 R/clara.q:0
msgid "Call:"
msgstr "Wywołanie:"

#. R/fanny.q: gettext("Closest hard clustering:", domain = "R-cluster")
#: R/fanny.q:0
msgid "Closest hard clustering:"
msgstr "Najbliższe twarde grupowanie:"

#. R/silhouette.R: gettextf("Cluster sizes and average silhouette widths:", domain = "R-cluster")
#. R/silhouette.R: gettext("Cluster sizes and average silhouette widths:", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Cluster sizes and average silhouette widths:"
msgstr "Rozmiary grup oraz przeciętne szerokości sylwetek:"

#. R/silhouette.R: gettextf("Cluster sizes, ids = (%s), and average silhouette widths:", paste(x$codes,     collapse = ", "), domain = "R-cluster")
#. R/silhouette.R: gettextf("Cluster sizes, ids = (%s), and average silhouette widths:", paste(x$codes,     collapse = ", "), domain = "R-cluster")
#: R/silhouette.R:0
msgid "Cluster sizes, ids = (%s), and average silhouette widths:"
msgstr "Rozmiary grup, ids = (%s), oraz przeciętne szerokości sylwetek:"

#. R/clara.q: gettext("Cluster sizes:", domain = "R-cluster")
#: R/clara.q:0
msgid "Cluster sizes:"
msgstr "Rozmiary grup:"

#. R/clusGap.R: gettext("Clustering Gap statistic [\"clusGap\"].", domain = "R-cluster")
#: R/clusGap.R:0
msgid "Clustering Gap statistic [\"clusGap\"]."
msgstr "Statystyka przerwy grupowania [\"clusGap\"]."

#. R/clusGap.R: gettextf("Clustering k = 1,2,..., K.max (= %d): .. ", K.max, domain = "R-cluster")
#: R/clusGap.R:0
msgid "Clustering k = 1,2,..., K.max (= %d): .."
msgstr "Grupowanie k = 1,2,..., K.max (= %d): .."

#. R/clara.q: gettext("Clustering vector:", domain = "R-cluster")
#. R/clara.q: gettext("Clustering vector:", domain = "R-cluster")
#. R/pam.q: gettext("Clustering vector:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Clustering vector:"
msgstr "Wektor grupujący:"

#. R/plotpart.q: gettext("Component 1", domain = "R-cluster")
#: R/plotpart.q:0
msgid "Component 1"
msgstr "Komponent 1"

#. R/plotpart.q: gettext("Component 2", domain = "R-cluster")
#: R/plotpart.q:0
msgid "Component 2"
msgstr "Komponent 2"

#. R/plothier.q: gettextf("Dendrogram of %s", paste(deparse(x$call), collapse = ""), domain = "R-cluster")
#. R/plothier.q: gettextf("Dendrogram of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Dendrogram of %s", cl, domain = "R-cluster")
#: R/plothier.q:0
msgid "Dendrogram of %s"
msgstr "Dendrogram %s"

#. R/daisy.q: gettext("Dissimilarities:", domain = "R-cluster")
#: R/daisy.q:0
msgid "Dissimilarities:"
msgstr "Odmienności:"

#. R/plotpart.q: stop("Distances must be result of dist or a square matrix.")
#: R/plotpart.q:0
msgid "Distances must be result of dist or a square matrix."
msgstr "Odległości muszą być wynikiem 'dist' lub macierzy kwadratowej."

#. R/plothier.q: gettextf("Divisive Coefficient = %s", round(x$dc, digits = 2), domain = "R-cluster")
#: R/plothier.q:0
msgid "Divisive Coefficient = %s"
msgstr "Współczynnik podziału = %s"

#. R/diana.q: gettext("Divisive coefficient:", domain = "R-cluster")
#. R/diana.q: gettext("Divisive coefficient:", domain = "R-cluster")
#: R/diana.q:0
msgid "Divisive coefficient:"
msgstr "Współczynnik podziału:"

#. R/clara.q: stop("Each of the random samples contains objects between which no distance can be computed.")
#: R/clara.q:0
msgid ""
"Each of the random samples contains objects between which no distance can be "
"computed."
msgstr ""
"Każda z losowych próbek zawiera obiekty pomiędzy którymi nie można obliczyć "
"odległości."

#. R/ellipsoidhull.R: gettext("Error in Fortran routine computing the spanning ellipsoid. Probably collinear data",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"Error in Fortran routine computing the spanning ellipsoid. Probably "
"collinear data"
msgstr ""
"Błąd w procedurze Fortran dla elipsoidy obejmującej, prawdopodobnie "
"współliniowe dane"

#. R/plotpart.q: warning("Error in Fortran routine for the spanning ellipsoid,\n rank problem??")
#: R/plotpart.q:0
msgid ""
"Error in Fortran routine for the spanning ellipsoid,\n"
" rank problem??"
msgstr ""
"Błąd w procedurze Fortran dla elipsoidy obejmującej,\n"
"problem rang?"

#. R/fanny.q: gettextf("FANNY algorithm has not converged in 'maxit' = %d iterations", maxit)
#: R/fanny.q:0
msgid "FANNY algorithm has not converged in 'maxit' = %d iterations"
msgstr "algorytm FANNY nie uzbieżnił się w 'maxit' = %d iteracjach"

#. R/clara.q: gettextf("For each of the %d samples, at least one object was found which could not be assigned to a cluster (because of missing values).",     samples)
#: R/clara.q:0
msgid ""
"For each of the %d samples, at least one object was found which could not be "
"assigned to a cluster (because of missing values)."
msgstr ""
"Dla każdej z %d próbek, co najmniej jeden obiekt został znaleziony, który "
"nie mógł być przypisany do grupy (z uwagi na brakujące wartości)."

#. R/fanny.q: gettext("Fuzzy Clustering object of class 'fanny': ", domain = "R-cluster")
#: R/fanny.q:0
msgid "Fuzzy Clustering object of class 'fanny':"
msgstr "Obiekt rozmytego grupowania klasy \"fanny\":"

#. R/fanny.q: gettext("Fuzzyness coefficients:", domain = "R-cluster")
#: R/fanny.q:0
msgid "Fuzzyness coefficients:"
msgstr "Współczynniki rozmycia:"

#. R/plothier.q: gettext("Height", domain = "R-cluster")
#. R/plothier.q: gettext("Height", domain = "R-cluster")
#: R/plothier.q:0
msgid "Height"
msgstr "Wysokość"

#. R/agnes.q: gettext("Height (summary):", domain = "R-cluster")
#: R/agnes.q:0
msgid "Height (summary):"
msgstr "Wysokość (podsumowanie):"

#. R/agnes.q: gettext("Height:", domain = "R-cluster")
#. R/diana.q: gettext("Height:", domain = "R-cluster")
#. R/diana.q: gettext("Height:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0
msgid "Height:"
msgstr "Wysokość:"

#. R/silhouette.R: gettext("Individual silhouette widths:", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Individual silhouette widths:"
msgstr "Indywidualne szerokości sylwetki:"

#. R/pam.q: gettext("Isolated clusters:", domain = "R-cluster")
#: R/pam.q:0
msgid "Isolated clusters:"
msgstr "Izolowane grupy:"

#. R/pam.q: gettext(" L*-clusters: ", domain = "R-cluster")
#: R/pam.q:0
msgid "L*-clusters:"
msgstr "L*-grupy:"

#. R/pam.q: gettext("L-clusters: ", domain = "R-cluster")
#: R/pam.q:0
msgid "L-clusters:"
msgstr "L-grupy:"

#. R/plothier.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#. R/plothier.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#. R/plotpart.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#: R/plothier.q:0 R/plotpart.q:0
msgid "Make a plot selection (or 0 to exit):"
msgstr "Wybierz wykres (lub 0 aby wyjść):"

#. R/clara.q: gettext("Medoids:", domain = "R-cluster")
#. R/clara.q: gettext("Medoids:", domain = "R-cluster")
#. R/pam.q: gettext("Medoids:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Medoids:"
msgstr "Medoidy:"

#. R/fanny.q: gettext("Membership coefficients (in percent, rounded):", domain = "R-cluster")
#: R/fanny.q:0
msgid "Membership coefficients (in percent, rounded):"
msgstr "Współczynnik członkostwa (w procentach, zaokrąglony):"

#. R/agnes.q: gettext("Merge:", domain = "R-cluster")
#. R/diana.q: gettext("Merge:", domain = "R-cluster")
#. R/diana.q: gettext("Merge:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0
msgid "Merge:"
msgstr "Złączenie:"

#. R/daisy.q: gettext("Metric: ", domain = "R-cluster")
#. R/daisy.q: gettext("Metric: ", domain = "R-cluster")
#: R/daisy.q:0
msgid "Metric:"
msgstr "Metryka:"

#. R/plotpart.q: message("Missing values were displaced by the median of the corresponding variable(s)")
#: R/plotpart.q:0
msgid ""
"Missing values were displaced by the median of the corresponding variable(s)"
msgstr ""
"Brakujące wartości zostały zastąpione przez medianę odpowiednich zmiennych"

#. R/plotpart.q: stop("NA values are not allowed in clustering vector")
#: R/plotpart.q:0
msgid "NA values are not allowed in clustering vector"
msgstr "wartości NA są niedozwolone w wektorze grupującym"

#. R/plotpart.q: stop("NA values are not allowed in dist-like 'x'.")
#: R/plotpart.q:0
msgid "NA values are not allowed in dist-like 'x'."
msgstr "wartości NA nie są dozwolone w 'x' typu odległości."

#. R/agnes.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/diana.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/fanny.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/pam.q: stop("NA values in the dissimilarity matrix not allowed.")
#: R/agnes.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
msgid "NA values in the dissimilarity matrix not allowed."
msgstr "wartości NA w macierzy różnic nie są dozwolone."

#. R/daisy.q: gettext("NA values in the dissimilarity matrix!")
#: R/daisy.q:0
msgid "NA values in the dissimilarity matrix!"
msgstr "Wartości NA w macierzy odmienności!"

#. R/silhouette.R: stop("Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'")
#. R/silhouette.R: stop("Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'")
#: R/silhouette.R:0
msgid "Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'"
msgstr "Potrzeba albo różnic 'dist' lub diss.matrix 'dmatrix'"

#. R/agnes.q: stop("No clustering performed, NA values in the dissimilarity matrix.", "\n", sep = "")
#. R/fanny.q: stop("No clustering performed, NA values in the dissimilarity matrix.")
#: R/agnes.q:0 R/fanny.q:0
msgid "No clustering performed, NA values in the dissimilarity matrix."
msgstr "Nie wykonano grupowania, wartości NA w macierzy różnic."

#. R/diana.q: stop("No clustering performed, NA's in dissimilarity matrix.\n")
#: R/diana.q:0
msgid "No clustering performed, NA's in dissimilarity matrix."
msgstr "Nie wykonano grupowania, wartości NA w macierzy różnic"

#. R/pam.q: stop("No clustering performed, NAs in the computed dissimilarity matrix.")
#: R/pam.q:0
msgid "No clustering performed, NAs in the computed dissimilarity matrix."
msgstr "Nie wykonano grupowania, wyliczono wartości NA w macierzy różnic."

#. R/mona.q: stop("No clustering performed, a variable was found with all non missing values identical.")
#: R/mona.q:0
msgid ""
"No clustering performed, a variable was found with all non missing values "
"identical."
msgstr ""
"Nie wykonano grupowania, znaleziono zmienną z identycznymi niebrakującymi "
"wartościami."

#. R/mona.q: stop("No clustering performed, all variables have at least one missing value.")
#: R/mona.q:0
msgid "No clustering performed, all variables have at least one missing value."
msgstr ""
"Nie wykonano grupowania, wszystkie zmienne mają co najmniej jedną brakującą "
"wartość."

#. R/mona.q: stop("No clustering performed, an object was found with all values missing.")
#: R/mona.q:0
msgid "No clustering performed, an object was found with all values missing."
msgstr ""
"Nie wykonano grupowania, znaleziono obiekt któremu brakowało wszystkich "
"wartości."

#. R/mona.q: stop("No clustering performed, found variable with more than half values missing.")
#: R/mona.q:0
msgid ""
"No clustering performed, found variable with more than half values missing."
msgstr ""
"Nie wykonano grupowania, znaleziono obiekt któremu brakowało wszystkich "
"wartości."

#. R/silhouette.R: stop("No valid silhouette information (#{clusters} =? 1)")
#: R/silhouette.R:0
msgid "No valid silhouette information (#{clusters} =? 1)"
msgstr "Brak poprawnej informacji o sylwetce (czy liczba grup =? 1)"

#. R/pam.q: stop("Number of clusters 'k' must be in {1,2, .., n-1}; hence n >= 2")
#: R/pam.q:0
msgid "Number of clusters 'k' must be in {1,2, .., n-1}; hence n >= 2"
msgstr ""
"Liczba grup 'k' musi zawierać się w zbiorze {1,2, .., n-1}; tak więc n >= 2"

#. R/daisy.q: gettext("Number of objects:", domain = "R-cluster")
#. R/daisy.q: gettext("Number of objects:", domain = "R-cluster")
#: R/daisy.q:0
msgid "Number of objects:"
msgstr "Liczba obiektów:"

#. R/clara.q: gettext("Numerical information per cluster:", domain = "R-cluster")
#. R/pam.q: gettext("Numerical information per cluster:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Numerical information per cluster:"
msgstr "Numeryczna informacja na grupę:"

#. R/agnes.q: gettext("Object of class 'agnes' from call:", domain = "R-cluster")
#: R/agnes.q:0
msgid "Object of class 'agnes' from call:"
msgstr "Obiekt klasy \"agnes\" z wywołania:"

#. R/clara.q: gettext("Object of class 'clara' from call:", domain = "R-cluster")
#: R/clara.q:0
msgid "Object of class 'clara' from call:"
msgstr "Obiekt klasy \"clara\" z wywołania:"

#. R/clara.q: gettext("Objective function:", domain = "R-cluster")
#. R/clara.q: gettext("Objective function:", domain = "R-cluster")
#. R/pam.q: gettext("Objective function:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Objective function:"
msgstr "Funkcja celu:"

#. R/agnes.q: gettext("Order of objects:", domain = "R-cluster")
#. R/agnes.q: gettext("Order of objects:", domain = "R-cluster")
#. R/diana.q: gettext("Order of objects:", domain = "R-cluster")
#. R/diana.q: gettext("Order of objects:", domain = "R-cluster")
#. R/mona.q: gettext("Order of objects:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0 R/mona.q:0
msgid "Order of objects:"
msgstr "Kolejność (rząd) obiektów:"

#. R/mona.q: gettext("Revised data:", domain = "R-cluster")
#: R/mona.q:0
msgid "Revised data:"
msgstr "Przeglądnięte dane:"

#. R/plothier.q: gettext("Separation step", domain = "R-cluster")
#: R/plothier.q:0
msgid "Separation step"
msgstr "Krok separacji:"

#. R/mona.q: gettext("Separation step:", domain = "R-cluster")
#: R/mona.q:0
msgid "Separation step:"
msgstr "Krok separacji:"

#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz), k, deparse(x$call),     domain = "R-cluster")
#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz), k, deparse(x$call),     domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette of %d units in %d clusters from %s:"
msgstr "Sylwetka %d jednostek w %d klastrach z %s:"

#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters:", sum(csiz), k, domain = "R-cluster")
#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters:", sum(csiz), k, domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette of %d units in %d clusters:"
msgstr "Sylwetka %d jednostek w %d klastrach:"

#. R/silhouette.R: gettext("Silhouette plot", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette plot"
msgstr "Wykres sylwetki"

#. R/clara.q: gettext("Silhouette plot information for best sample:", domain = "R-cluster")
#: R/clara.q:0
msgid "Silhouette plot information for best sample:"
msgstr "Informacja o wykresie sylwetki dla najlepszej próbki:"

#. R/fanny.q: gettext("Silhouette plot information:", domain = "R-cluster")
#. R/pam.q: gettext("Silhouette plot information:", domain = "R-cluster")
#: R/fanny.q:0 R/pam.q:0
msgid "Silhouette plot information:"
msgstr "Informacje o wykresie sylwetek:"

#. R/silhouette.R: gettextf("Silhouette plot of %s", sub("^FF", "", deparse(cll)), domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette plot of %s"
msgstr "Wykres sylwetki %s"

#. R/plotpart.q: stop("The clustering vector is of incorrect length")
#: R/plotpart.q:0
msgid "The clustering vector is of incorrect length"
msgstr "Wektor grupujący posiada niepoprawną długość"

#. R/clara.q: stop("The number of cluster should be at least 1 and at most n-1.")
#: R/clara.q:0
msgid "The number of cluster should be at least 1 and at most n-1."
msgstr "Liczba grup powinna wynosić conajmniej 1 oraz co najwyżej n-1."

#. R/plotpart.q: gettextf("These two components explain %s percent of the point variability.", round(100 *     var.dec, digits = 2))
#: R/plotpart.q:0
msgid "These two components explain %s percent of the point variability."
msgstr "Te dwa komponenty wyjaśniają %s procent zmienności punktu."

#. R/daisy.q: gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster")
#. R/daisy.q: gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster")
#: R/daisy.q:0
msgid "Types = %s"
msgstr "Typy = %s"

#. R/mona.q: gettext("Variable used:", domain = "R-cluster")
#: R/mona.q:0
msgid "Variable used:"
msgstr "Użyte zmienne:"

#. R/daisy.q: gettext("Warning: ", domain = "R-cluster")
#. R/daisy.q: gettext("Warning: ", domain = "R-cluster")
#: R/daisy.q:0
msgid "Warning:"
msgstr "Ostrzeżenie:"

#. R/ellipsoidhull.R: gettextf("algorithm possibly not converged in %d iterations", maxit)
#: R/ellipsoidhull.R:0
msgid "algorithm possibly not converged in %d iterations"
msgstr "algorytm prawdopodobnie nie uzbieżnił się w %d iteracjach"

#. R/agnes.q: stop("ambiguous clustering method")
#: R/agnes.q:0
msgid "ambiguous clustering method"
msgstr "niejednoznaczna metoda grupowania"

#. R/daisy.q: stop("at least one binary variable has more than 2 levels.")
#: R/daisy.q:0
msgid "at least one binary variable has more than 2 levels."
msgstr "przynajmniej jedna zmienna binarna posiada więcej niż 2 poziomy."

#. R/daisy.q: warning("at least one binary variable has not 2 different levels.")
#: R/daisy.q:0
msgid "at least one binary variable has not 2 different levels."
msgstr "przynajmniej jedna zmienna binarna nie posiada 2 różnych poziomów."

#. R/daisy.q: stop("at least one binary variable has values not in {0,1,NA}")
#: R/daisy.q:0
msgid "at least one binary variable has values not in {0,1,NA}"
msgstr "przynajmniej jedna zmienna binarna posiada wartości poza {0, 1, NA}"

#. R/daisy.q: gettextf("binary variable(s) %s treated as interval scaled", pColl(which(tI)[iBin]))
#: R/daisy.q:0
msgid "binary variable(s) %s treated as interval scaled"
msgstr "zmienne binarne %s traktowane jako interwał zostały przeskalowane"

#. R/clara.q: gettextf("calling .C(cl_clara, ..., DUP = %s):", doDUP, domain = "R-cluster")
#: R/clara.q:0
msgid "calling .C(cl_clara, ..., DUP = %s):"
msgstr "wywoływanie .C(cl_clara, ..., DUP = %s):"

#. R/plotpart.q: gettextf("cluster %d  has only one observation ..", i, domain = "R-cluster")
#: R/plotpart.q:0
msgid "cluster %d  has only one observation .."
msgstr "grupa %d ma tylko jedną obserwację .."

#. R/silhouette.R: stop("clustering 'x' and dissimilarity 'dist' are incompatible")
#. R/silhouette.R: stop("clustering 'x' and dissimilarity 'dist' are incompatible")
#: R/silhouette.R:0
msgid "clustering 'x' and dissimilarity 'dist' are incompatible"
msgstr "grupowane 'x' oraz różnice 'dist' nie są kompatybilne"

#. R/ellipsoidhull.R: stop("computed some negative or all 0 probabilities")
#: R/ellipsoidhull.R:0
msgid "computed some negative or all 0 probabilities"
msgstr ""
"niektóre wyliczone prawdopodobieństwa są ujemne lub wszystkie są zerami"

#. R/clusGap.R: gettext("done", domain = "R-cluster")
#: R/clusGap.R:0
msgid "done"
msgstr "wykonano"

#. R/ellipsoidhull.R: gettextf("ellipsoid in %d dimensions:\n center = (%s); squared ave.radius d^2 = %s\n and shape matrix =\n",     d, paste(format(x$loc, digits = digits), collapse = " "), format(x$d2, digits = digits),     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"ellipsoid in %d dimensions:\n"
" center = (%s); squared ave.radius d^2 = %s\n"
" and shape matrix ="
msgstr ""
"elipsoida w %d wymiarach:\n"
" centrum = (%s); kwadrat przeciętnego promienia d^2 = %s\n"
" oraz macierz kształtu ="

#. R/ellipsoidhull.R: gettextf("  ellipsoid's area = %s", format(volume(x), digits = digits), domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid "ellipsoid's area = %s"
msgstr "powierzchnia elipsoidy = %s"

#. R/ellipsoidhull.R: gettextf("  ellipsoid's volume = %s", format(volume(x), digits = digits), domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid "ellipsoid's volume = %s"
msgstr "objętość elipsoidy = %s"

#. R/ellipsoidhull.R: stop("ellipsoidPoints() not yet implemented for p >= 3 dim.")
#: R/ellipsoidhull.R:0
msgid "ellipsoidPoints() not yet implemented for p >= 3 dim."
msgstr ""
"'ellipsoidPoints()' nie została jeszcze zaimplementowana dla p >= 3 wymiary."

#. R/pam.q: stop("error from .C(cl_pam, *): invalid medID's")
#: R/pam.q:0
msgid "error from .C(cl_pam, *): invalid medID's"
msgstr "błąd w '.C(cl_pam, *)': niepoprawne 'medID'"

#. R/silhouette.R: stop("full silhouette is only available for results of 'clara(*, keep.data = TRUE)'")
#: R/silhouette.R:0
msgid ""
"full silhouette is only available for results of 'clara(*, keep.data = TRUE)'"
msgstr ""
"pełna sylwetka jest dostępna jedynie dla wyników 'clara(*, keep.data = TRUE)'"

#. R/daisy.q: gettextf("invalid %s; must be named list", sQuote("type"))
#: R/daisy.q:0
msgid "invalid %s; must be named list"
msgstr "Niepoprawne %s; musi być nazwaną listą"

#. R/clara.q: gettextf("invalid 'jstop' from .C(cl_clara,.): %s", res$jstop)
#: R/clara.q:0
msgid "invalid 'jstop' from .C(cl_clara,.): %s"
msgstr "niepoprawny 'jstop' z '.C(cl_clara,.)': %s"

#. R/silhouette.R: stop("invalid 'silhouette' object")
#: R/silhouette.R:0
msgid "invalid 'silhouette' object"
msgstr "niepoprawny obiekt 'silhouette'"

#. R/coef.R: stop("invalid 'twins' object")
#: R/coef.R:0
msgid "invalid 'twins' object"
msgstr "niepoprawny obiekt 'twins'"

#. R/agnes.q: stop("invalid clustering method")
#: R/agnes.q:0
msgid "invalid clustering method"
msgstr "niepoprawna metoda grupowania"

#. R/silhouette.R: stop("invalid partition object")
#: R/silhouette.R:0
msgid "invalid partition object"
msgstr "niepoprawny obiekt podziału"

#. R/silhouette.R: stop("invalid silhouette structure")
#: R/silhouette.R:0
msgid "invalid silhouette structure"
msgstr "niepoprana struktura 'silhouette'"

#. R/daisy.q: gettextf("invalid type %s for column numbers %s", type2[ina], pColl(which(is.na)))
#: R/daisy.q:0
msgid "invalid type %s for column numbers %s"
msgstr "niepoprawny typ %s dla liczb kolumn %s"

#. R/fanny.q: gettextf("k_crisp (= %d) < k !!", x$k.crisp, domain = "R-cluster")
#: R/fanny.q:0
msgid "k_crisp (= %d) < k !!"
msgstr "k_crisp (= %d) < k !!"

#. R/agnes.q: stop("need at least 2 objects to cluster")
#: R/agnes.q:0
msgid "need at least 2 objects to cluster"
msgstr "potrzeba co najmniej 2 obiektów do grupowania"

#. R/plotpart.q: stop("no diss nor data found for 'clusplot()' function")
#: R/plotpart.q:0
msgid "no diss nor data found for 'clusplot()' function"
msgstr "nie znaleziono różnic ani danych dla funkcji 'clusplot()'"

#. R/plotpart.q: gettextf("no diss nor data found, nor the original argument of %s", deparse(x$call))
#: R/plotpart.q:0
msgid "no diss nor data found, nor the original argument of %s"
msgstr "nie znaleziono różnic ani danych, ani oryginalnego argumentu %s"

#. R/ellipsoidhull.R: stop("no points without missing values")
#: R/ellipsoidhull.R:0
msgid "no points without missing values"
msgstr "brak punktów bez brakujących wartości"

#. R/ellipsoidhull.R: warning("omitting NAs")
#: R/ellipsoidhull.R:0
msgid "omitting NAs"
msgstr "pomijanie wartości NA"

#. R/plotpart.q: stop("one or more objects contain only missing values")
#: R/plotpart.q:0
msgid "one or more objects contain only missing values"
msgstr "jeden lub więcej obiektów zawierają jedynie wartości brakujące"

#. R/plotpart.q: stop("one or more variables contain only missing values")
#: R/plotpart.q:0
msgid "one or more variables contain only missing values"
msgstr "jeden lub więcej zmiennych zawiera jedynie wartości brakujące"

#. R/plotpart.q: gettext("span & rank2 : calling \"spannel\" ..", domain = "R-cluster")
#: R/plotpart.q:0
msgid "span & rank2 : calling \"spannel\" .."
msgstr "span & rank2 : wywoływanie \"spannel\" .."

#. R/fanny.q: warning("the memberships are all very close to 1/k. Maybe decrease 'memb.exp' ?")
#: R/fanny.q:0
msgid "the memberships are all very close to 1/k. Maybe decrease 'memb.exp' ?"
msgstr "przynależności są bardzo bliskie 1/k. Może zmniejszyć 'memb.exp'?"

#. R/plotpart.q: stop("the square matrix is not symmetric.")
#: R/plotpart.q:0
msgid "the square matrix is not symmetric."
msgstr "macierz kwadratowa nie jest symetryczna."

#. R/clara.q: stop("when 'medoids.x' is FALSE, 'keep.data' must be too")
#: R/clara.q:0
msgid "when 'medoids.x' is FALSE, 'keep.data' must be too"
msgstr "kiedy 'medoids.x' jest FALSE, 'keep.data' musi być również FALSE"

#. R/daisy.q: warning("with mixed variables, metric \"gower\" is used automatically")
#: R/daisy.q:0
msgid "with mixed variables, metric \"gower\" is used automatically"
msgstr "z mieszanymi zmiennymi, metryka 'gower' jest używana automatycznie"

#. R/daisy.q: ngettext(x$n, "%d dissimilarity, summarized:", "%d dissimilarities, summarized:",     domain = "R-cluster")
#: R/daisy.q:0
msgid "%d dissimilarity, summarized:"
msgid_plural "%d dissimilarities, summarized:"
msgstr[0] "%d odmienność, podsumowanie:"
msgstr[1] "%d odmienności, podsumowanie:"
msgstr[2] "%d odmienności, podsumowanie:"

#. R/clara.q: ngettext(nNA, "%d observation (%s) has *only* NAs --> omit them for clustering!",     "%d observations (%s ...) have *only* NAs --> omit them for clustering!", domain = "R-cluster")
#: R/clara.q:0
msgid "%d observation (%s) has *only* NAs --> omit them for clustering!"
msgid_plural ""
"%d observations (%s ...) have *only* NAs --> omit them for clustering!"
msgstr[0] ""
"%d obserwacja (%s) posiada *tylko* wartości NA --> pomijanie jej w grupowaniu"
msgstr[1] ""
"%d obserwacje (%s ...) posiadają *tylko* wartości NA --> pomijanie ich w "
"grupowaniu"
msgstr[2] ""
"%d obserwacji (%s ...) posiadają *tylko* wartości NA --> pomijanie ich w "
"grupowaniu"

#. R/clara.q: ngettext(nNA, "Observation %s has *only* NAs --> omit it for clustering", "Observations %s have *only* NAs --> omit them for clustering!",     domain = "R-cluster")
#: R/clara.q:0
msgid "Observation %s has *only* NAs --> omit it for clustering"
msgid_plural "Observations %s have *only* NAs --> omit them for clustering!"
msgstr[0] ""
"Obserwacja %s posiada *tylko* wartości NA --> pomijanie jej w grupowaniu"
msgstr[1] ""
"Obserwacje %s posiadają *tylko* wartości NA --> pomijanie ich w grupowaniu"
msgstr[2] ""
"Obserwacje %s posiadają *tylko* wartości NA --> pomijanie ich w grupowaniu"

#. R/daisy.q: ngettext(sum(ilog), "setting 'logical' variable %s to type 'asymm'", "setting 'logical' variables %s to type 'asymm'",     domain = "R-cluster")
#: R/daisy.q:0
msgid "setting 'logical' variable %s to type 'asymm'"
msgid_plural "setting 'logical' variables %s to type 'asymm'"
msgstr[0] "ustawianie zmiennej 'logical' %s na tym 'asymm'"
msgstr[1] "ustawianie zmiennych 'logical' %s na tym 'asymm'"
msgstr[2] "ustawianie zmiennych 'logical' %s na tym 'asymm'"

#~ msgid ""
#~ "No clustering performed, a variable was found with at least 50 percent "
#~ "missing values."
#~ msgstr ""
#~ "Nie wykonano grupowania, znaleziono zmienną z co najmniej 50 procent "
#~ "brakujących wartości."

#~ msgid ""
#~ "%d observations (%s ...)\n"
#~ "\thave *only* NAs --> na.omit() them for clustering!"
#~ msgstr ""
#~ "%d obserwacji (%s ...)\n"
#~ "\tmają *tylko* wartości NA --> pomijanie ich w grupowaniu"

#~ msgid "hence, area = %s"
#~ msgstr "tak więc powierzchnia = %s"

#, fuzzy
#~ msgid "R-cluster"
#~ msgstr "L-grupy:"
