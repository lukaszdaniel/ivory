# Translation of src/library/Recommended/cluster/po/R-cluster.pot to German
# Copyright (C) 2011 The R Foundation
# This file is distributed under the same license as the R package.
# Detlef Steuer <detlef.steuer@hsu-hh.de>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: R 2.14.0\n"
"Report-Msgid-Bugs-To: bugs.r-project.org\n"
"POT-Creation-Date: 2015-01-18 21:31\n"
"PO-Revision-Date: 2015-01-17 16:03+0100\n"
"Last-Translator: Łukasz Daniel <lukasz.daniel@gmail.com>\n"
"Language-Team: R Core Team <r-core@r-project.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n == 1 ? 0 : 1;\n"
"X-Generator: Poedit 1.5.4\n"
"X-Poedit-SourceCharset: UTF-8\n"

#. R/daisy.q: gettextf("%s has constant columns %s; these are standardized to 0",     sQuote("x"), pColl(which(sx == 0)))
#: R/daisy.q:0
#, fuzzy
msgid "%s has constant columns %s; these are standardized to 0"
msgstr "; diese sind standardisiert auf 0"

#. R/daisy.q: gettextf("%s has invalid column names", ct)
#: R/daisy.q:0
#, fuzzy
msgid "%s has invalid column names"
msgstr "hat unzulässige Spaltennamen"

#. R/clara.q: gettextf("%s is a \"dist\" object, but should be a data matrix or frame",     dataname)
#: R/clara.q:0
#, fuzzy
msgid "%s is a \"dist\" object, but should be a data matrix or frame"
msgstr "'x' ist ein \"dist\"-Objekt, sollte aber Datenmatrix oder -frame sein"

#. R/daisy.q: gettextf("%s is not a dataframe or a numeric matrix.", dataname)
#: R/daisy.q:0
#, fuzzy
msgid "%s is not a dataframe or a numeric matrix."
msgstr "x ist weder Dataframe noch numerische Matrix"

#. R/agnes.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/clara.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/diana.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/fanny.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#. R/pam.q: gettextf("%s is not a numeric dataframe or matrix.", dataname)
#: R/agnes.q:0 R/clara.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
#, fuzzy
msgid "%s is not a numeric dataframe or matrix."
msgstr "x ist weder numerischer Dataframe noch Matrix"

#. R/agnes.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"",     dataname)
#. R/diana.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"",     dataname)
#. R/fanny.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"",     dataname)
#. R/pam.q: gettextf("%s is not and cannot be converted to class \"dissimilarity\"",     dataname)
#: R/agnes.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
msgid "%s is not and cannot be converted to class \"dissimilarity\""
msgstr ""

#. R/daisy.q: gettextf("%s must be in 1:ncol(x)", ct)
#: R/daisy.q:0
#, fuzzy
msgid "%s must be in 1:ncol(x)"
msgstr "muss aus 1:ncol(x) sein"

#. R/daisy.q: gettextf("%s must contain column names or numbers", ct)
#: R/daisy.q:0
#, fuzzy
msgid "%s must contain column names or numbers"
msgstr "muss Spaltennummern oder Zahlen enthalten"

#. R/ellipsoidhull.R: stop("'A' must be p x p  cov-matrix defining an ellipsoid")
#: R/ellipsoidhull.R:0
msgid "'A' must be p x p  cov-matrix defining an ellipsoid"
msgstr ""
"'A' muss eine p x p Kovarianzmatrix sein, die einen Ellipsoid definiert"

#. R/clusGap.R: stop("'B' has to be a positive integer")
#: R/clusGap.R:0
msgid "'B' has to be a positive integer"
msgstr "'B' muss eine positive Ganzzahl sein"

#. R/plotpart.q: stop("'col.clus' argument should have length 4 when color is TRUE")
#: R/plotpart.q:0
#, fuzzy
msgid "'col.clus' argument should have length 4 when color is TRUE"
msgstr "'col.clus' sollte Länge 4 haben, wenn color auf TRUE gesetzt ist"

#. R/silhouette.R: stop("'dmatrix' is not a dissimilarity matrix compatible to 'x'")
#. R/silhouette.R: stop("'dmatrix' is not a dissimilarity matrix compatible to 'x'")
#: R/silhouette.R:0
msgid "'dmatrix' is not a dissimilarity matrix compatible to 'x'"
msgstr "'dmatrix' ist keine zu 'x' kompatible Unähnlichkeitsmatrix "

#. R/fanny.q: stop("'iniMem.p' must be a nonnegative n * k matrix with rowSums == 1")
#: R/fanny.q:0
#, fuzzy
msgid "'iniMem.p' must be a nonnegative n * k matrix with rowSums == 1"
msgstr ""
"'iniMem.p' muss eine nicht-negative n x k Matrix mit Zeilensummen == 1 sein"

#. R/fanny.q: stop("'k' (number of clusters) must be in {1,2, .., n/2 -1}")
#: R/fanny.q:0
msgid "'k' (number of clusters) must be in {1,2, .., n/2 -1}"
msgstr "'k' (Anzahl Cluster) muss aus {1, 2, ..., n/2 -1} sein"

#. R/fanny.q: stop("'m', a membership matrix, must be nonnegative with rowSums == 1")
#: R/fanny.q:0
#, fuzzy
msgid "'m', a membership matrix, must be nonnegative with rowSums == 1"
msgstr ""
"'m' ist eine Mitgleidswertmatrix, muss nichtnegative sein mit Zeilensummen "
"== 1"

#. R/fanny.q: stop("'maxit' must be non-negative integer")
#: R/fanny.q:0
msgid "'maxit' must be non-negative integer"
msgstr "'maxit' muss nicht-negative Zahl sein"

#. R/pam.q: gettextf("'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d",     k, n)
#: R/pam.q:0
#, fuzzy
msgid ""
"'medoids' must be NULL or vector of %d distinct indices in {1,2, .., n}, n=%d"
msgstr "verschiedenen Indizes aus {1, 2,..., n}, n="

#. R/fanny.q: stop("'memb.exp' must be a finite number > 1")
#: R/fanny.q:0
#, fuzzy
msgid "'memb.exp' must be a finite number > 1"
msgstr "'memb.exp' muss endliche Zahl > 1 sein"

#. R/internal.R: stop("'n' argument must be >= 2")
#. R/internal.R: stop("'n' argument must be >= 2")
#: R/internal.R:0
#, fuzzy
msgid "'n' argument must be >= 2"
msgstr "'n' muss >= 2 sein"

#. R/agnes.q: stop("'par.method' must be of length 1, 3, or 4")
#. R/agnes.q: stop("'par.method' must be of length 1, 3, or 4")
#: R/agnes.q:0
#, fuzzy
msgid "'par.method' must be of length 1, 3, or 4"
msgstr "'par.method' muss Länge 1, 3 oder 4 haben"

#. R/clara.q: stop("'samples' should be at least 1")
#: R/clara.q:0
#, fuzzy
msgid "'samples' should be at least 1"
msgstr "'samples' sollte mindestens 1 sein"

#. R/clara.q: gettextf("'sampsize' = %d should not be larger than the number of objects, %d",     sampsize, n)
#: R/clara.q:0
msgid "'sampsize' = %d should not be larger than the number of objects, %d"
msgstr "'sampsize' = %d; sollte nicht größer sein als die Zahl der Objekte %d"

#. R/clara.q: gettextf("'sampsize' should be at least %d = max(2, 1+ number of clusters)",     max(2, k + 1))
#: R/clara.q:0
msgid "'sampsize' should be at least %d = max(2, 1+ number of clusters)"
msgstr "'sampsize' sollte mindestens %d = max(2, 1+ Anzahl Cluster sein)"

#. R/daisy.q: stop("'weights' must be of length p (or 1)")
#: R/daisy.q:0
msgid "'weights' must be of length p (or 1)"
msgstr "'weights' muss von Länge p (oder 1) sein"

#. R/plotpart.q: stop("'x' is not a data matrix")
#: R/plotpart.q:0
#, fuzzy
msgid "'x' is not a data matrix"
msgstr "x ist keine Datenmatrix"

#. R/plotpart.q: stop("'x' is not numeric")
#: R/plotpart.q:0
#, fuzzy
msgid "'x' is not numeric"
msgstr "x ist nicht numerisch"

#. R/mona.q: stop("'x' must be a matrix or data frame.")
#: R/mona.q:0
#, fuzzy
msgid "'x' must be a matrix or data frame."
msgstr "x muss eine Matrix oder Datafram sein"

#. R/ellipsoidhull.R: stop("'x' must be numeric  n x p matrix")
#: R/ellipsoidhull.R:0
msgid "'x' must be numeric  n x p matrix"
msgstr "'x' muss numerische n x p - Matrix sein"

#. R/silhouette.R: stop("'x' must only have integer codes")
#. R/silhouette.R: stop("'x' must only have integer codes")
#: R/silhouette.R:0
msgid "'x' must only have integer codes"
msgstr "'x' darf nur ganzahlige Kodes enthalten"

#. R/ellipsoidhull.R: gettext("** Warning: ** the algorithm did not terminate reliably!\n  (in the available number of iterations)",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"** Warning: ** the algorithm did not terminate reliably!\n"
"  (in the available number of iterations)"
msgstr ""

#. R/ellipsoidhull.R: gettext("** Warning: ** the algorithm did not terminate reliably!\n  most probably because of collinear data",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"** Warning: ** the algorithm did not terminate reliably!\n"
"  most probably because of collinear data"
msgstr ""

#. R/clusGap.R: gettextf(" --> Number of clusters (method '%s'): %d", method,     nc, domain = "R-cluster")
#: R/clusGap.R:0
msgid "--> Number of clusters (method '%s'): %d"
msgstr ""

#. R/clusGap.R: gettextf(" --> Number of clusters (method '%s', SE.factor=%g): %d",     method, SE.factor, nc, domain = "R-cluster")
#: R/clusGap.R:0
msgid "--> Number of clusters (method '%s', SE.factor=%g): %d"
msgstr ""

#. R/plotpart.q: warning(">>>>> funny case in clusplot.default() -- please report!\n")
#: R/plotpart.q:0
msgid ">>>>> funny case in clusplot.default() -- please report!"
msgstr ""
">>>>> lustige Sache in clusplot.default() -- bitte an den Entwickler senden!"

#. R/plothier.q: gettextf("Agglomerative Coefficient = %s", round(x$ac, digits = 2),     domain = "R-cluster")
#: R/plothier.q:0
msgid "Agglomerative Coefficient = %s"
msgstr ""

#. R/agnes.q: gettext("Agglomerative coefficient: ", domain = "R-cluster")
#. R/agnes.q: gettext("Agglomerative coefficient: ", domain = "R-cluster")
#: R/agnes.q:0
msgid "Agglomerative coefficient:"
msgstr ""

#. R/mona.q: stop("All variables must be binary (e.g., factor with 2 levels).")
#: R/mona.q:0
#, fuzzy
msgid "All variables must be binary (e.g., factor with 2 levels)."
msgstr "Alle Variablen müssen binär sein (Faktor mit 2 Stufen)"

#. R/agnes.q: gettext("Available components:", domain = "R-cluster")
#. R/agnes.q: gettext("Available components:", domain = "R-cluster")
#. R/clara.q: gettext("Available components:", domain = "R-cluster")
#. R/clara.q: gettext("Available components:", domain = "R-cluster")
#. R/diana.q: gettext("Available components:", domain = "R-cluster")
#. R/diana.q: gettext("Available components:", domain = "R-cluster")
#. R/fanny.q: gettext("Available components:", domain = "R-cluster")
#. R/fanny.q: gettext("Available components:", domain = "R-cluster")
#. R/mona.q: gettext("Available components:", domain = "R-cluster")
#. R/pam.q: gettext("Available components:", domain = "R-cluster")
#. R/pam.q: gettext("Available components:", domain = "R-cluster")
#: R/agnes.q:0 R/clara.q:0 R/diana.q:0 R/fanny.q:0 R/mona.q:0 R/pam.q:0
msgid "Available components:"
msgstr ""

#. R/clara.q: gettext("Average silhouette width of best sample: ", domain = "R-cluster")
#: R/clara.q:0
msgid "Average silhouette width of best sample:"
msgstr ""

#. R/fanny.q: gettext("Average silhouette width of total data set:", domain = "R-cluster")
#. R/pam.q: gettext("Average silhouette width of total data set:", domain = "R-cluster")
#: R/fanny.q:0 R/pam.q:0
msgid "Average silhouette width of total data set:"
msgstr ""

#. R/clara.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#. R/fanny.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#. R/pam.q: gettext("Average silhouette width per cluster:", domain = "R-cluster")
#: R/clara.q:0 R/fanny.q:0 R/pam.q:0
msgid "Average silhouette width per cluster:"
msgstr ""

#. R/silhouette.R: gettext("Average silhouette width:", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Average silhouette width:"
msgstr ""

#. R/clusGap.R: gettextf("B=%d simulated reference sets, k = 1..%d", x$B, K,     domain = "R-cluster")
#: R/clusGap.R:0
msgid "B=%d simulated reference sets, k = 1..%d"
msgstr ""

#. R/plothier.q: gettextf("Banner of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Banner of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Banner of %s", deparse(x$call), domain = "R-cluster")
#: R/plothier.q:0
msgid "Banner of %s"
msgstr ""

#. R/clara.q: gettext("Best sample:", domain = "R-cluster")
#. R/clara.q: gettext("Best sample:", domain = "R-cluster")
#: R/clara.q:0
msgid "Best sample:"
msgstr ""

#. R/clusGap.R: gettextf("Bootstrapping, b = 1,2,..., B (= %d)  [one \".\" per sample]:",     B, domain = "R-cluster")
#: R/clusGap.R:0
msgid "Bootstrapping, b = 1,2,..., B (= %d)  [one \".\" per sample]:"
msgstr ""

#. R/plotpart.q: gettextf("CLUSPLOT(%s)", deparse(substitute(x)))
#: R/plotpart.q:0
msgid "CLUSPLOT(%s)"
msgstr ""

#. R/agnes.q: gettext("Call: ", domain = "R-cluster")
#. R/clara.q: gettext("Call: ", domain = "R-cluster")
#: R/agnes.q:0 R/clara.q:0
msgid "Call:"
msgstr ""

#. R/fanny.q: gettext("Closest hard clustering:", domain = "R-cluster")
#: R/fanny.q:0
msgid "Closest hard clustering:"
msgstr ""

#. R/silhouette.R: gettextf("Cluster sizes and average silhouette widths:", domain = "R-cluster")
#. R/silhouette.R: gettext("Cluster sizes and average silhouette widths:", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Cluster sizes and average silhouette widths:"
msgstr ""

#. R/silhouette.R: gettextf("Cluster sizes, ids = (%s), and average silhouette widths:",     paste(x$codes, collapse = ", "), domain = "R-cluster")
#. R/silhouette.R: gettextf("Cluster sizes, ids = (%s), and average silhouette widths:",     paste(x$codes, collapse = ", "), domain = "R-cluster")
#: R/silhouette.R:0
msgid "Cluster sizes, ids = (%s), and average silhouette widths:"
msgstr ""

#. R/clara.q: gettext("Cluster sizes:", domain = "R-cluster")
#: R/clara.q:0
msgid "Cluster sizes:"
msgstr ""

#. R/clusGap.R: gettext("Clustering Gap statistic [\"clusGap\"].", domain = "R-cluster")
#: R/clusGap.R:0
msgid "Clustering Gap statistic [\"clusGap\"]."
msgstr ""

#. R/clusGap.R: gettextf("Clustering k = 1,2,..., K.max (= %d): .. ", K.max,     domain = "R-cluster")
#: R/clusGap.R:0
msgid "Clustering k = 1,2,..., K.max (= %d): .."
msgstr ""

#. R/clara.q: gettext("Clustering vector:", domain = "R-cluster")
#. R/clara.q: gettext("Clustering vector:", domain = "R-cluster")
#. R/pam.q: gettext("Clustering vector:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
#, fuzzy
msgid "Clustering vector:"
msgstr "zweideutige Clustermethode"

#. R/plotpart.q: gettext("Component 1", domain = "R-cluster")
#: R/plotpart.q:0
msgid "Component 1"
msgstr ""

#. R/plotpart.q: gettext("Component 2", domain = "R-cluster")
#: R/plotpart.q:0
msgid "Component 2"
msgstr ""

#. R/plothier.q: gettextf("Dendrogram of %s", paste(deparse(x$call), collapse = ""),     domain = "R-cluster")
#. R/plothier.q: gettextf("Dendrogram of %s", cl, domain = "R-cluster")
#. R/plothier.q: gettextf("Dendrogram of %s", cl, domain = "R-cluster")
#: R/plothier.q:0
msgid "Dendrogram of %s"
msgstr ""

#. R/daisy.q: gettext("Dissimilarities:", domain = "R-cluster")
#: R/daisy.q:0
msgid "Dissimilarities:"
msgstr ""

#. R/plotpart.q: stop("Distances must be result of dist or a square matrix.")
#: R/plotpart.q:0
msgid "Distances must be result of dist or a square matrix."
msgstr ""
"Distanzen müssen ein Ergebnis von dist oder eine quadratische Matrix sein."

#. R/plothier.q: gettextf("Divisive Coefficient = %s", round(x$dc, digits = 2),     domain = "R-cluster")
#: R/plothier.q:0
msgid "Divisive Coefficient = %s"
msgstr ""

#. R/diana.q: gettext("Divisive coefficient:", domain = "R-cluster")
#. R/diana.q: gettext("Divisive coefficient:", domain = "R-cluster")
#: R/diana.q:0
msgid "Divisive coefficient:"
msgstr ""

#. R/clara.q: stop("Each of the random samples contains objects between which no distance can be computed.")
#: R/clara.q:0
#, fuzzy
msgid ""
"Each of the random samples contains objects between which no distance can be "
"computed."
msgstr "Jede der Zufallsstichproben enthält Objekte, zwischen denen"

#. R/ellipsoidhull.R: gettext("Error in Fortran routine computing the spanning ellipsoid. Probably collinear data",     domain = "R-cluster")
#: R/ellipsoidhull.R:0
#, fuzzy
msgid ""
"Error in Fortran routine computing the spanning ellipsoid. Probably "
"collinear data"
msgstr "Fehler im Fortran-Kode für den aufspannenden Ellipsoiden,"

#. R/plotpart.q: warning("Error in Fortran routine for the spanning ellipsoid,\n rank problem??")
#: R/plotpart.q:0
#, fuzzy
msgid ""
"Error in Fortran routine for the spanning ellipsoid,\n"
" rank problem??"
msgstr "Fehler im Fortran-Kode für den aufspannenden Ellipsoiden,"

#. R/fanny.q: gettextf("FANNY algorithm has not converged in 'maxit' = %d iterations",     maxit)
#: R/fanny.q:0
msgid "FANNY algorithm has not converged in 'maxit' = %d iterations"
msgstr "FANNY Algorithmus ist in 'maxit' = %d Iterationen nicht konvergiert"

#. R/clara.q: gettextf("For each of the %d samples, at least one object was found which could not be assigned to a cluster (because of missing values).",     samples)
#: R/clara.q:0
#, fuzzy
msgid ""
"For each of the %d samples, at least one object was found which could not be "
"assigned to a cluster (because of missing values)."
msgstr "Stichproben wurde mindestens ein Objekt gefunden, das nicht"

#. R/fanny.q: gettext("Fuzzy Clustering object of class 'fanny': ", domain = "R-cluster")
#: R/fanny.q:0
msgid "Fuzzy Clustering object of class 'fanny':"
msgstr ""

#. R/fanny.q: gettext("Fuzzyness coefficients:", domain = "R-cluster")
#: R/fanny.q:0
msgid "Fuzzyness coefficients:"
msgstr ""

#. R/plothier.q: gettext("Height", domain = "R-cluster")
#. R/plothier.q: gettext("Height", domain = "R-cluster")
#: R/plothier.q:0
msgid "Height"
msgstr ""

#. R/agnes.q: gettext("Height (summary):", domain = "R-cluster")
#: R/agnes.q:0
msgid "Height (summary):"
msgstr ""

#. R/agnes.q: gettext("Height:", domain = "R-cluster")
#. R/diana.q: gettext("Height:", domain = "R-cluster")
#. R/diana.q: gettext("Height:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0
msgid "Height:"
msgstr ""

#. R/silhouette.R: gettext("Individual silhouette widths:", domain = "R-cluster")
#: R/silhouette.R:0
#, fuzzy
msgid "Individual silhouette widths:"
msgstr "unzulässiges 'silhouette' Objekt"

#. R/pam.q: gettext("Isolated clusters:", domain = "R-cluster")
#: R/pam.q:0
msgid "Isolated clusters:"
msgstr ""

#. R/pam.q: gettext(" L*-clusters: ", domain = "R-cluster")
#: R/pam.q:0
msgid "L*-clusters:"
msgstr ""

#. R/pam.q: gettext("L-clusters: ", domain = "R-cluster")
#: R/pam.q:0
msgid "L-clusters:"
msgstr ""

#. R/plothier.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#. R/plothier.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#. R/plotpart.q: gettext("Make a plot selection (or 0 to exit):", domain = "R-cluster")
#: R/plothier.q:0 R/plotpart.q:0
msgid "Make a plot selection (or 0 to exit):"
msgstr ""

#. R/clara.q: gettext("Medoids:", domain = "R-cluster")
#. R/clara.q: gettext("Medoids:", domain = "R-cluster")
#. R/pam.q: gettext("Medoids:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Medoids:"
msgstr ""

#. R/fanny.q: gettext("Membership coefficients (in percent, rounded):", domain = "R-cluster")
#: R/fanny.q:0
msgid "Membership coefficients (in percent, rounded):"
msgstr ""

#. R/agnes.q: gettext("Merge:", domain = "R-cluster")
#. R/diana.q: gettext("Merge:", domain = "R-cluster")
#. R/diana.q: gettext("Merge:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0
msgid "Merge:"
msgstr ""

#. R/daisy.q: gettext("Metric: ", domain = "R-cluster")
#. R/daisy.q: gettext("Metric: ", domain = "R-cluster")
#: R/daisy.q:0
msgid "Metric:"
msgstr ""

#. R/plotpart.q: message("Missing values were displaced by the median of the corresponding variable(s)")
#: R/plotpart.q:0
msgid ""
"Missing values were displaced by the median of the corresponding variable(s)"
msgstr ""
"Fehlende Werte wurden durch den Median der korrespondierenden Variable(n) "
"ersetzt"

#. R/plotpart.q: stop("NA values are not allowed in clustering vector")
#: R/plotpart.q:0
#, fuzzy
msgid "NA values are not allowed in clustering vector"
msgstr "NAs im Clustervektor nicht erlaubt"

#. R/plotpart.q: stop("NA values are not allowed in dist-like 'x'.")
#: R/plotpart.q:0
#, fuzzy
msgid "NA values are not allowed in dist-like 'x'."
msgstr "NAs nicht erlaubt in dist-ähnlichem 'x'."

#. R/agnes.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/diana.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/fanny.q: stop("NA values in the dissimilarity matrix not allowed.")
#. R/pam.q: stop("NA values in the dissimilarity matrix not allowed.")
#: R/agnes.q:0 R/diana.q:0 R/fanny.q:0 R/pam.q:0
#, fuzzy
msgid "NA values in the dissimilarity matrix not allowed."
msgstr "Keine Clusterung durchgeführt. NAs in der Unähnlichkeitsmatrix."

#. R/daisy.q: gettext("NA values in the dissimilarity matrix!")
#: R/daisy.q:0
#, fuzzy
msgid "NA values in the dissimilarity matrix!"
msgstr "Keine Clusterung durchgeführt. NAs in der Unähnlichkeitsmatrix."

#. R/silhouette.R: stop("Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'")
#. R/silhouette.R: stop("Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'")
#: R/silhouette.R:0
msgid "Need either a dissimilarity 'dist' or diss.matrix 'dmatrix'"
msgstr ""
"Benötige entweder Unähnlichkeitsmatrix 'dist' oder diss.matrix 'dmatrix'"

#. R/agnes.q: stop("No clustering performed, NA values in the dissimilarity matrix.",     "\n", sep = "")
#. R/fanny.q: stop("No clustering performed, NA values in the dissimilarity matrix.")
#: R/agnes.q:0 R/fanny.q:0
#, fuzzy
msgid "No clustering performed, NA values in the dissimilarity matrix."
msgstr "Keine Clusterung durchgeführt. NAs in der Unähnlichkeitsmatrix."

#. R/diana.q: stop("No clustering performed, NA's in dissimilarity matrix.\n")
#: R/diana.q:0
msgid "No clustering performed, NA's in dissimilarity matrix."
msgstr "Keine Clusterung durchgeführt, NAs in Unähnlichkeitsmatrix."

#. R/pam.q: stop("No clustering performed, NAs in the computed dissimilarity matrix.")
#: R/pam.q:0
msgid "No clustering performed, NAs in the computed dissimilarity matrix."
msgstr ""
"Keine Clusterung durchgeführt, NAs in der berechnenten Unähnlichkeitsmatrix."

#. R/mona.q: stop("No clustering performed, a variable was found with all non missing values identical.")
#: R/mona.q:0
#, fuzzy
msgid ""
"No clustering performed, a variable was found with all non missing values "
"identical."
msgstr "Variable gefunden, bei der alle nicht fehlenden Werten identisch sind."

#. R/mona.q: stop("No clustering performed, all variables have at least one missing value.")
#: R/mona.q:0
#, fuzzy
msgid "No clustering performed, all variables have at least one missing value."
msgstr "Alle Variablen haben mindestens einen fehlenden Wert."

#. R/mona.q: stop("No clustering performed, an object was found with all values missing.")
#: R/mona.q:0
#, fuzzy
msgid "No clustering performed, an object was found with all values missing."
msgstr "Objekt gefunden  bei dem alle Werte fehlend sind"

#. R/mona.q: stop("No clustering performed, found variable with more than half values missing.")
#: R/mona.q:0
#, fuzzy
msgid ""
"No clustering performed, found variable with more than half values missing."
msgstr "Objekt gefunden  bei dem alle Werte fehlend sind"

#. R/silhouette.R: stop("No valid silhouette information (#{clusters} =? 1)")
#: R/silhouette.R:0
msgid "No valid silhouette information (#{clusters} =? 1)"
msgstr "keine gültige Silhouetteninformation (#{clusters} =? 1)"

#. R/pam.q: stop("Number of clusters 'k' must be in {1,2, .., n-1}; hence n >= 2")
#: R/pam.q:0
#, fuzzy
msgid "Number of clusters 'k' must be in {1,2, .., n-1}; hence n >= 2"
msgstr "Anzahl der Cluster 'k' muss auch {1, 2, ..., n-1} sein; deshalb n >= 2"

#. R/daisy.q: gettext("Number of objects:", domain = "R-cluster")
#. R/daisy.q: gettext("Number of objects:", domain = "R-cluster")
#: R/daisy.q:0
msgid "Number of objects:"
msgstr ""

#. R/clara.q: gettext("Numerical information per cluster:", domain = "R-cluster")
#. R/pam.q: gettext("Numerical information per cluster:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Numerical information per cluster:"
msgstr ""

#. R/agnes.q: gettext("Object of class 'agnes' from call:", domain = "R-cluster")
#: R/agnes.q:0
msgid "Object of class 'agnes' from call:"
msgstr ""

#. R/clara.q: gettext("Object of class 'clara' from call:", domain = "R-cluster")
#: R/clara.q:0
msgid "Object of class 'clara' from call:"
msgstr ""

#. R/clara.q: gettext("Objective function:", domain = "R-cluster")
#. R/clara.q: gettext("Objective function:", domain = "R-cluster")
#. R/pam.q: gettext("Objective function:", domain = "R-cluster")
#: R/clara.q:0 R/pam.q:0
msgid "Objective function:"
msgstr ""

#. R/agnes.q: gettext("Order of objects:", domain = "R-cluster")
#. R/agnes.q: gettext("Order of objects:", domain = "R-cluster")
#. R/diana.q: gettext("Order of objects:", domain = "R-cluster")
#. R/diana.q: gettext("Order of objects:", domain = "R-cluster")
#. R/mona.q: gettext("Order of objects:", domain = "R-cluster")
#: R/agnes.q:0 R/diana.q:0 R/mona.q:0
msgid "Order of objects:"
msgstr ""

#. R/mona.q: gettext("Revised data:", domain = "R-cluster")
#: R/mona.q:0
msgid "Revised data:"
msgstr ""

#. R/plothier.q: gettext("Separation step", domain = "R-cluster")
#: R/plothier.q:0
#, fuzzy
msgid "Separation step"
msgstr "Iterationen"

#. R/mona.q: gettext("Separation step:", domain = "R-cluster")
#: R/mona.q:0
#, fuzzy
msgid "Separation step:"
msgstr "Iterationen"

#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz),     k, deparse(x$call), domain = "R-cluster")
#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters from %s:", sum(csiz),     k, deparse(x$call), domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette of %d units in %d clusters from %s:"
msgstr ""

#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters:", sum(csiz),     k, domain = "R-cluster")
#. R/silhouette.R: gettextf("Silhouette of %d units in %d clusters:", sum(csiz),     k, domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette of %d units in %d clusters:"
msgstr ""

#. R/silhouette.R: gettext("Silhouette plot", domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette plot"
msgstr ""

#. R/clara.q: gettext("Silhouette plot information for best sample:", domain = "R-cluster")
#: R/clara.q:0
msgid "Silhouette plot information for best sample:"
msgstr ""

#. R/fanny.q: gettext("Silhouette plot information:", domain = "R-cluster")
#. R/pam.q: gettext("Silhouette plot information:", domain = "R-cluster")
#: R/fanny.q:0 R/pam.q:0
msgid "Silhouette plot information:"
msgstr ""

#. R/silhouette.R: gettextf("Silhouette plot of %s", sub("^FF", "", deparse(cll)),     domain = "R-cluster")
#: R/silhouette.R:0
msgid "Silhouette plot of %s"
msgstr ""

#. R/plotpart.q: stop("The clustering vector is of incorrect length")
#: R/plotpart.q:0
msgid "The clustering vector is of incorrect length"
msgstr "Der Clustervektor hat eine falsche Länge"

#. R/clara.q: stop("The number of cluster should be at least 1 and at most n-1.")
#: R/clara.q:0
msgid "The number of cluster should be at least 1 and at most n-1."
msgstr "Die Anzhal der Cluster sollte mindestens 1, hächstens n-1 sein."

#. R/plotpart.q: gettextf("These two components explain %s percent of the point variability.",     round(100 * var.dec, digits = 2))
#: R/plotpart.q:0
msgid "These two components explain %s percent of the point variability."
msgstr ""

#. R/daisy.q: gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster")
#. R/daisy.q: gettextf("Types = %s", paste(aT, collapse = ", "), domain = "R-cluster")
#: R/daisy.q:0
msgid "Types = %s"
msgstr ""

#. R/mona.q: gettext("Variable used:", domain = "R-cluster")
#: R/mona.q:0
msgid "Variable used:"
msgstr ""

#. R/daisy.q: gettext("Warning: ", domain = "R-cluster")
#. R/daisy.q: gettext("Warning: ", domain = "R-cluster")
#: R/daisy.q:0
msgid "Warning:"
msgstr ""

#. R/ellipsoidhull.R: gettextf("algorithm possibly not converged in %d iterations",     maxit)
#: R/ellipsoidhull.R:0
#, fuzzy
msgid "algorithm possibly not converged in %d iterations"
msgstr "evtl nicht konvergiert in "

#. R/agnes.q: stop("ambiguous clustering method")
#: R/agnes.q:0
msgid "ambiguous clustering method"
msgstr "zweideutige Clustermethode"

#. R/daisy.q: stop("at least one binary variable has more than 2 levels.")
#: R/daisy.q:0
msgid "at least one binary variable has more than 2 levels."
msgstr "mindestens eine binäre Variable hat mehr als 2 Stufen."

#. R/daisy.q: warning("at least one binary variable has not 2 different levels.")
#: R/daisy.q:0
msgid "at least one binary variable has not 2 different levels."
msgstr "mindestens eine binäre Variable hat keine 2 verschiedenen Stufen."

#. R/daisy.q: stop("at least one binary variable has values not in {0,1,NA}")
#: R/daisy.q:0
msgid "at least one binary variable has values not in {0,1,NA}"
msgstr "mindestens eine binäre Variable hat Werte nicht aus {0, 1, NA}"

#. R/daisy.q: gettextf("binary variable(s) %s treated as interval scaled",     pColl(which(tI)[iBin]))
#: R/daisy.q:0
#, fuzzy
msgid "binary variable(s) %s treated as interval scaled"
msgstr "als intervallskaliert behandelt"

#. R/clara.q: gettextf("calling .C(cl_clara, ..., DUP = %s):", doDUP, domain = "R-cluster")
#: R/clara.q:0
msgid "calling .C(cl_clara, ..., DUP = %s):"
msgstr ""

#. R/plotpart.q: gettextf("cluster %d  has only one observation ..", i, domain = "R-cluster")
#: R/plotpart.q:0
msgid "cluster %d  has only one observation .."
msgstr ""

#. R/silhouette.R: stop("clustering 'x' and dissimilarity 'dist' are incompatible")
#. R/silhouette.R: stop("clustering 'x' and dissimilarity 'dist' are incompatible")
#: R/silhouette.R:0
msgid "clustering 'x' and dissimilarity 'dist' are incompatible"
msgstr "Clusterung 'x' und Unähnlichkeitsmatrix 'dist' sind inkompatibel"

#. R/ellipsoidhull.R: stop("computed some negative or all 0 probabilities")
#: R/ellipsoidhull.R:0
#, fuzzy
msgid "computed some negative or all 0 probabilities"
msgstr ""
"einige negative Wahrscheinlichkeiten oder alle zu 0 berechnet in 'prob'"

#. R/clusGap.R: gettext("done", domain = "R-cluster")
#: R/clusGap.R:0
msgid "done"
msgstr ""

#. R/ellipsoidhull.R: gettextf("ellipsoid in %d dimensions:\n center = (%s); squared ave.radius d^2 = %s\n and shape matrix =\n",     d, paste(format(x$loc, digits = digits), collapse = " "),     format(x$d2, digits = digits), domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid ""
"ellipsoid in %d dimensions:\n"
" center = (%s); squared ave.radius d^2 = %s\n"
" and shape matrix ="
msgstr ""

#. R/ellipsoidhull.R: gettextf("  ellipsoid's area = %s", format(volume(x), digits = digits),     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid "ellipsoid's area = %s"
msgstr ""

#. R/ellipsoidhull.R: gettextf("  ellipsoid's volume = %s", format(volume(x), digits = digits),     domain = "R-cluster")
#: R/ellipsoidhull.R:0
msgid "ellipsoid's volume = %s"
msgstr ""

#. R/ellipsoidhull.R: stop("ellipsoidPoints() not yet implemented for p >= 3 dim.")
#: R/ellipsoidhull.R:0
msgid "ellipsoidPoints() not yet implemented for p >= 3 dim."
msgstr "ellipsoidPoints() noch nicht für Dimensionen p>=3 implementiert"

#. R/pam.q: stop("error from .C(cl_pam, *): invalid medID's")
#: R/pam.q:0
msgid "error from .C(cl_pam, *): invalid medID's"
msgstr "Fehler aus .C(cl_pam, *): unzulässige medID's"

#. R/silhouette.R: stop("full silhouette is only available for results of 'clara(*, keep.data = TRUE)'")
#: R/silhouette.R:0
#, fuzzy
msgid ""
"full silhouette is only available for results of 'clara(*, keep.data = TRUE)'"
msgstr "die volle Silhoutte ist nur verfügbar für Resultate von"

#. R/daisy.q: gettextf("invalid %s; must be named list", sQuote("type"))
#: R/daisy.q:0
#, fuzzy
msgid "invalid %s; must be named list"
msgstr "; muss eine benannte Liste sein"

#. R/clara.q: gettextf("invalid 'jstop' from .C(cl_clara,.): %s", res$jstop)
#: R/clara.q:0
#, fuzzy
msgid "invalid 'jstop' from .C(cl_clara,.): %s"
msgstr "unzulässiger 'jstop' aus .C(cl_clara,.):"

#. R/silhouette.R: stop("invalid 'silhouette' object")
#: R/silhouette.R:0
msgid "invalid 'silhouette' object"
msgstr "unzulässiges 'silhouette' Objekt"

#. R/coef.R: stop("invalid 'twins' object")
#: R/coef.R:0
msgid "invalid 'twins' object"
msgstr "unzulässiges 'twins'-Objekt"

#. R/agnes.q: stop("invalid clustering method")
#: R/agnes.q:0
msgid "invalid clustering method"
msgstr "unzulässige Clustermethode"

#. R/silhouette.R: stop("invalid partition object")
#: R/silhouette.R:0
msgid "invalid partition object"
msgstr "unzulässiges Partitionsobjekt"

#. R/silhouette.R: stop("invalid silhouette structure")
#: R/silhouette.R:0
msgid "invalid silhouette structure"
msgstr "unzulässige Silhouttenstruktur"

#. R/daisy.q: gettextf("invalid type %s for column numbers %s", type2[ina],     pColl(which(is.na)))
#: R/daisy.q:0
#, fuzzy
msgid "invalid type %s for column numbers %s"
msgstr "für Spaltenzahlen"

#. R/fanny.q: gettextf("k_crisp (= %d) < k !!", x$k.crisp, domain = "R-cluster")
#: R/fanny.q:0
msgid "k_crisp (= %d) < k !!"
msgstr ""

#. R/agnes.q: stop("need at least 2 objects to cluster")
#: R/agnes.q:0
msgid "need at least 2 objects to cluster"
msgstr "benötige zum Clustern mindestens 2 Objekte"

#. R/plotpart.q: stop("no diss nor data found for 'clusplot()' function")
#: R/plotpart.q:0
#, fuzzy
msgid "no diss nor data found for 'clusplot()' function"
msgstr "weder diss noch data für 'clusplot()' gefunden"

#. R/plotpart.q: gettextf("no diss nor data found, nor the original argument of %s",     deparse(x$call))
#: R/plotpart.q:0
#, fuzzy
msgid "no diss nor data found, nor the original argument of %s"
msgstr ""
"weder diss noch data gefunden, ebensowenig das ursprüngliche Argument von"

#. R/ellipsoidhull.R: stop("no points without missing values")
#: R/ellipsoidhull.R:0
msgid "no points without missing values"
msgstr "keine Punkte ohne fehlende Werte"

#. R/ellipsoidhull.R: warning("omitting NAs")
#: R/ellipsoidhull.R:0
msgid "omitting NAs"
msgstr "NAs ausgelassen"

#. R/plotpart.q: stop("one or more objects contain only missing values")
#: R/plotpart.q:0
msgid "one or more objects contain only missing values"
msgstr "eins oder mehrere Objekte enthalten nur fehlende Werte"

#. R/plotpart.q: stop("one or more variables contain only missing values")
#: R/plotpart.q:0
msgid "one or more variables contain only missing values"
msgstr "eine oder mehrere Variablen enthalten nur fehlende Werte"

#. R/plotpart.q: gettext("span & rank2 : calling \"spannel\" ..", domain = "R-cluster")
#: R/plotpart.q:0
msgid "span & rank2 : calling \"spannel\" .."
msgstr ""

#. R/fanny.q: warning("the memberships are all very close to 1/k. Maybe decrease 'memb.exp' ?")
#: R/fanny.q:0
msgid "the memberships are all very close to 1/k. Maybe decrease 'memb.exp' ?"
msgstr ""
"die Mitgliedswerte sind alle sehr nah an 1/k. Evtl. 'memb.exp' reduzieren?"

#. R/plotpart.q: stop("the square matrix is not symmetric.")
#: R/plotpart.q:0
msgid "the square matrix is not symmetric."
msgstr "Die quadratische Matrix ist nicht symmetrisch."

#. R/clara.q: stop("when 'medoids.x' is FALSE, 'keep.data' must be too")
#: R/clara.q:0
msgid "when 'medoids.x' is FALSE, 'keep.data' must be too"
msgstr "wenn 'medoids.x' FALSE ist, dann muss es auch 'keep.data' sein"

#. R/daisy.q: warning("with mixed variables, metric \"gower\" is used automatically")
#: R/daisy.q:0
msgid "with mixed variables, metric \"gower\" is used automatically"
msgstr "mit gemischten Variablen wird automatisch \"gower\" genutzt"

#. R/daisy.q: ngettext(x$n, "%d dissimilarity, summarized:", "%d dissimilarities, summarized:",     domain = "R-cluster")
#: R/daisy.q:0
msgid "%d dissimilarity, summarized:"
msgid_plural "%d dissimilarities, summarized:"
msgstr[0] ""
msgstr[1] ""

#. R/clara.q: ngettext(nNA, "%d observation (%s) has *only* NAs --> omit them for clustering!",     "%d observations (%s ...) have *only* NAs --> omit them for clustering!",     domain = "R-cluster")
#: R/clara.q:0
#, fuzzy
msgid "%d observation (%s) has *only* NAs --> omit them for clustering!"
msgid_plural ""
"%d observations (%s ...) have *only* NAs --> omit them for clustering!"
msgstr[0] "Beobachtung %d hat *nur* NAs --> ausgelassen für Clustering"
msgstr[1] "Beobachtung %d hat *nur* NAs --> ausgelassen für Clustering"

#. R/clara.q: ngettext(nNA, "Observation %s has *only* NAs --> omit it for clustering",     "Observations %s have *only* NAs --> omit them for clustering!",     domain = "R-cluster")
#: R/clara.q:0
#, fuzzy
msgid "Observation %s has *only* NAs --> omit it for clustering"
msgid_plural "Observations %s have *only* NAs --> omit them for clustering!"
msgstr[0] "Beobachtung %d hat *nur* NAs --> ausgelassen für Clustering"
msgstr[1] "Beobachtung %d hat *nur* NAs --> ausgelassen für Clustering"

#. R/daisy.q: ngettext(sum(ilog), "setting 'logical' variable %s to type 'asymm'",     "setting 'logical' variables %s to type 'asymm'", domain = "R-cluster")
#: R/daisy.q:0
#, fuzzy
msgid "setting 'logical' variable %s to type 'asymm'"
msgid_plural "setting 'logical' variables %s to type 'asymm'"
msgstr[0] "setze 'logical' Variable"
msgstr[1] "setze 'logical' Variable"

#, fuzzy
#~ msgid ""
#~ "No clustering performed, a variable was found with at least 50 percent "
#~ "missing values."
#~ msgstr "Variable mit mindestens 50% fehlenden Werten gefunden."

#, fuzzy
#~ msgid ""
#~ "%d observations (%s ...)\n"
#~ "\thave *only* NAs --> na.omit() them for clustering!"
#~ msgstr "haben *nur* NAs --> na.omit() diese für das Clustern"
