
Ivory Under development (unstable) (2015-02-23 r260) -- "Internationalized Version of R"
Copyright (C) 2013-2015 Lukasz Daniel (lukasz.daniel@gmail.com)
See README-IVORY file for details.

R Under development (unstable) (2015-02-23 r67884) -- "Unsuffered Consequences"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

Ivory is not part of the R project, so please do not report bugs
via r-bugs or the R website - instead refer to the author.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(survival)
Loading required package: 'splines'
> aeq <- function(x,y) all.equal(as.vector(x), as.vector(y))
> options(na.action=na.exclude)
> #
> # More tests of factors in prediction, using a new data set
> #
> fit <- coxph(Surv(time, status) ~  factor(ph.ecog), lung)
> 
> tdata <- data.frame(ph.ecog = factor(0:3))
> p1 <- predict(fit, newdata=tdata, type='lp')
> p2 <- predict(fit, type='lp')
> aeq(p1, p2[match(0:3, lung$ph.ecog)])
[1] TRUE
> 
> fit2 <- coxph(Surv(time, status) ~ factor(ph.ecog) + factor(sex), lung)
> tdata <- expand.grid(ph.ecog = factor(0:3), sex=factor(1:2))
> p1 <- predict(fit2, newdata=tdata, type='risk')
> 
> xdata <- expand.grid(ph.ecog=factor(1:3), sex=factor(1:2))
> p2 <- predict(fit2, newdata=xdata, type='risk')
> all.equal(p2, p1[c(2:4, 6:8)], check.attributes=FALSE)
[1] TRUE
> 
> 
> fit3 <- survreg(Surv(time, status) ~ factor(ph.ecog) + age, lung)
> tdata <- data.frame(ph.ecog=factor(0:3), age=50)
> predict(fit, type='lp', newdata=tdata)
          1           2           3           4 
-0.39518177 -0.02634168  0.52120527  1.81279848 
> predict(fit3, type='lp', newdata=tdata)
       1        2        3        4 
6.399571 6.142938 5.770523 4.916993 
> 
> proc.time()
   user  system elapsed 
  0.335   0.060   0.385 
